{
  "schemas": {
    "GoogleCloudDataplexV1ListJobsResponse": {
      "description": "List jobs response.",
      "type": "object",
      "id": "GoogleCloudDataplexV1ListJobsResponse",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "jobs": {
          "description": "Jobs under a given task.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDataplexV1Job"
          }
        }
      }
    },
    "GoogleCloudDataplexV1Job": {
      "description": "A job represents an instance of a task.",
      "id": "GoogleCloudDataplexV1Job",
      "type": "object",
      "properties": {
        "service": {
          "type": "string",
          "enum": [
            "SERVICE_UNSPECIFIED",
            "DATAPROC"
          ],
          "enumDescriptions": [
            "Service used to run the job is unspecified.",
            "Dataproc service is used to run this job."
          ],
          "readOnly": true,
          "description": "Output only. The underlying service running a job."
        },
        "startTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time when the job was started.",
          "readOnly": true
        },
        "serviceJob": {
          "readOnly": true,
          "description": "Output only. The full resource name for the job run under a particular service.",
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "The job state is unknown.",
            "The job is running.",
            "The job is cancelling.",
            "The job cancellation was successful.",
            "The job completed successfully.",
            "The job is no longer running due to an error.",
            "The job was cancelled outside of Dataplex."
          ],
          "description": "Output only. Execution state for the job.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "CANCELLING",
            "CANCELLED",
            "SUCCEEDED",
            "FAILED",
            "ABORTED"
          ]
        },
        "uid": {
          "readOnly": true,
          "description": "Output only. System generated globally unique ID for the job.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Output only. The relative resource name of the job, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/tasks/{task_id}/jobs/{job_id}.",
          "readOnly": true
        },
        "retryCount": {
          "description": "Output only. The number of times the job has been retried (excluding the initial attempt).",
          "format": "uint32",
          "readOnly": true,
          "type": "integer"
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time when the job ended.",
          "readOnly": true
        },
        "message": {
          "description": "Output only. Additional information about the current state.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "GoogleCloudDataplexV1Session": {
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "description": "Output only. Session start time.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/environment/{environment_id}/sessions/{session_id}"
        },
        "userId": {
          "type": "string",
          "description": "Output only. Email of user running the session.",
          "readOnly": true
        },
        "state": {
          "readOnly": true,
          "enumDescriptions": [
            "State is not specified.",
            "Resource is active, i.e., ready to use.",
            "Resource is under creation.",
            "Resource is under deletion.",
            "Resource is active but has unresolved actions."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CREATING",
            "DELETING",
            "ACTION_REQUIRED"
          ]
        }
      },
      "description": "Represents an active analyze session running for a user.",
      "id": "GoogleCloudDataplexV1Session"
    },
    "GoogleCloudDataplexV1StorageFormatCsvOptions": {
      "id": "GoogleCloudDataplexV1StorageFormatCsvOptions",
      "description": "Describes CSV and similar semi-structured data formats.",
      "type": "object",
      "properties": {
        "delimiter": {
          "description": "Optional. The delimiter used to separate values. Defaults to ','.",
          "type": "string"
        },
        "encoding": {
          "type": "string",
          "description": "Optional. The character encoding of the data. Accepts \"US-ASCII\", \"UTF-8\", and \"ISO-8859-1\". Defaults to UTF-8 if unspecified."
        },
        "quote": {
          "type": "string",
          "description": "Optional. The character used to quote column values. Accepts '\"' (double quotation mark) or ''' (single quotation mark). Defaults to '\"' (double quotation mark) if unspecified."
        },
        "headerRows": {
          "description": "Optional. The number of rows to interpret as header rows that should be skipped when reading data rows. Defaults to 0.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Empty": {
      "type": "object",
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } ",
      "properties": {}
    },
    "GoogleCloudLocationListLocationsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudLocationLocation"
          }
        }
      },
      "type": "object",
      "description": "The response message for Locations.ListLocations.",
      "id": "GoogleCloudLocationListLocationsResponse"
    },
    "GoogleCloudDataplexV1Content": {
      "properties": {
        "sqlScript": {
          "description": "Sql Script related configurations.",
          "$ref": "GoogleCloudDataplexV1ContentSqlScript"
        },
        "notebook": {
          "description": "Notebook related configurations.",
          "$ref": "GoogleCloudDataplexV1ContentNotebook"
        },
        "path": {
          "type": "string",
          "description": "Required. The path for the Content file, represented as directory structure. Unique within a lake. Limited to alphanumerics, hyphens, underscores, dots and slashes."
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the content."
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. The time when the content was last updated.",
          "type": "string",
          "readOnly": true
        },
        "uid": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. System generated globally unique ID for the content. This ID will be different if the content is deleted and re-created with the same name."
        },
        "name": {
          "description": "Output only. The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}",
          "readOnly": true,
          "type": "string"
        },
        "labels": {
          "type": "object",
          "description": "Optional. User defined labels for the content.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "dataText": {
          "description": "Required. Content data in string format.",
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. Content creation time.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDataplexV1Content",
      "description": "Content represents a user-visible notebook or a sql script"
    },
    "GoogleCloudDataplexV1Lake": {
      "description": "A lake is a centralized repository for managing enterprise data across the organization distributed across many cloud projects, and stored in a variety of storage services such as Google Cloud Storage and BigQuery. The resources attached to a lake are referred to as managed resources. Data within these managed resources can be structured or unstructured. A lake provides data admins with tools to organize, secure and manage their data at scale, and provides data scientists and data engineers an integrated experience to easily search, discover, analyze and transform data and associated metadata.",
      "properties": {
        "metastoreStatus": {
          "readOnly": true,
          "description": "Output only. Metastore status of the lake.",
          "$ref": "GoogleCloudDataplexV1LakeMetastoreStatus"
        },
        "serviceAccount": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Service account associated with this lake. This service account must be authorized to access or operate on resources managed by the lake."
        },
        "assetStatus": {
          "description": "Output only. Aggregated status of the underlying assets of the lake.",
          "readOnly": true,
          "$ref": "GoogleCloudDataplexV1AssetStatus"
        },
        "description": {
          "description": "Optional. Description of the lake.",
          "type": "string"
        },
        "displayName": {
          "description": "Optional. User friendly display name.",
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CREATING",
            "DELETING",
            "ACTION_REQUIRED"
          ],
          "enumDescriptions": [
            "State is not specified.",
            "Resource is active, i.e., ready to use.",
            "Resource is under creation.",
            "Resource is under deletion.",
            "Resource is active but has unresolved actions."
          ],
          "description": "Output only. Current state of the lake.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "Output only. The relative resource name of the lake, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}.",
          "readOnly": true,
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. The time when the lake was last updated.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The time when the lake was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "uid": {
          "readOnly": true,
          "description": "Output only. System generated globally unique ID for the lake. This ID will be different if the lake is deleted and re-created with the same name.",
          "type": "string"
        },
        "metastore": {
          "description": "Optional. Settings to manage lake and Dataproc Metastore service instance association.",
          "$ref": "GoogleCloudDataplexV1LakeMetastore"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Optional. User-defined labels for the lake."
        }
      },
      "type": "object",
      "id": "GoogleCloudDataplexV1Lake"
    },
    "GoogleCloudDataplexV1SchemaPartitionField": {
      "type": "object",
      "description": "Represents a key field within the entity's partition structure. You could have up to 20 partition fields, but only the first 10 partitions have the filtering ability due to performance consideration. Note: Partition fields are immutable.",
      "properties": {
        "name": {
          "description": "Required. Partition field name must consist of letters, numbers, and underscores only, with a maximum of length of 256 characters, and must begin with a letter or underscore..",
          "type": "string"
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "SchemaType unspecified.",
            "Boolean field.",
            "Single byte numeric field.",
            "16-bit numeric field.",
            "32-bit numeric field.",
            "64-bit numeric field.",
            "Floating point numeric field.",
            "Double precision numeric field.",
            "Real value numeric field.",
            "Sequence of characters field.",
            "Sequence of bytes field.",
            "Date and time field.",
            "Date field.",
            "Time field.",
            "Structured field. Nested fields that define the structure of the map. If all nested fields are nullable, this field represents a union.",
            "Null field that does not have values."
          ],
          "description": "Required. Immutable. The type of field.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "BOOLEAN",
            "BYTE",
            "INT16",
            "INT32",
            "INT64",
            "FLOAT",
            "DOUBLE",
            "DECIMAL",
            "STRING",
            "BINARY",
            "TIMESTAMP",
            "DATE",
            "TIME",
            "RECORD",
            "NULL"
          ]
        }
      },
      "id": "GoogleCloudDataplexV1SchemaPartitionField"
    },
    "GoogleCloudDataplexV1SessionEventQueryDetail": {
      "description": "Execution details of the query.",
      "id": "GoogleCloudDataplexV1SessionEventQueryDetail",
      "type": "object",
      "properties": {
        "dataProcessedBytes": {
          "type": "string",
          "format": "int64",
          "description": "The data processed by the query."
        },
        "queryId": {
          "type": "string",
          "description": "The unique Query id identifying the query."
        },
        "resultSizeBytes": {
          "description": "The size of results the query produced.",
          "format": "int64",
          "type": "string"
        },
        "queryText": {
          "type": "string",
          "description": "The query text executed."
        },
        "duration": {
          "description": "Time taken for execution of the query.",
          "type": "string",
          "format": "google-duration"
        },
        "engine": {
          "description": "Query Execution engine.",
          "enum": [
            "ENGINE_UNSPECIFIED",
            "SPARK_SQL",
            "BIGQUERY"
          ],
          "enumDescriptions": [
            "An unspecified Engine type.",
            "Spark-sql engine is specified in Query.",
            "BigQuery engine is specified in Query."
          ],
          "type": "string"
        }
      }
    },
    "GoogleCloudDataplexV1EntityCompatibilityStatus": {
      "properties": {
        "hiveMetastore": {
          "readOnly": true,
          "$ref": "GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility",
          "description": "Output only. Whether this entity is compatible with Hive Metastore."
        },
        "bigquery": {
          "readOnly": true,
          "$ref": "GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility",
          "description": "Output only. Whether this entity is compatible with BigQuery."
        }
      },
      "description": "Provides compatibility information for various metadata stores.",
      "id": "GoogleCloudDataplexV1EntityCompatibilityStatus",
      "type": "object"
    },
    "GoogleCloudDataplexV1TaskTriggerSpec": {
      "id": "GoogleCloudDataplexV1TaskTriggerSpec",
      "description": "Task scheduling and trigger settings.",
      "properties": {
        "startTime": {
          "description": "Optional. The first run of the task will be after this time. If not specified, the task will run shortly after being submitted if ON_DEMAND and based on the schedule if RECURRING.",
          "format": "google-datetime",
          "type": "string"
        },
        "maxRetries": {
          "format": "int32",
          "description": "Optional. Number of retry attempts before aborting. Set to zero to never attempt to retry a failed task.",
          "type": "integer"
        },
        "disabled": {
          "type": "boolean",
          "description": "Optional. Prevent the task from executing. This does not cancel already running tasks. It is intended to temporarily disable RECURRING tasks."
        },
        "schedule": {
          "description": "Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running tasks periodically. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: \"CRON_TZ=${IANA_TIME_ZONE}\" or \"TZ=${IANA_TIME_ZONE}\". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, \"CRON_TZ=America/New_York 1 * * * *\", or \"TZ=America/New_York 1 * * * *\". This field is required for RECURRING tasks.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified trigger type.",
            "The task runs one-time shortly after Task Creation.",
            "The task is scheduled to run periodically."
          ],
          "description": "Required. Immutable. Trigger type of the user-specified Task.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "ON_DEMAND",
            "RECURRING"
          ]
        }
      },
      "type": "object"
    },
    "GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources": {
      "id": "GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources",
      "description": "Compute resources associated with the analyze interactive workloads.",
      "properties": {
        "diskSizeGb": {
          "format": "int32",
          "description": "Optional. Size in GB of the disk. Default is 100 GB.",
          "type": "integer"
        },
        "nodeCount": {
          "description": "Optional. Total number of nodes in the sessions created for this environment.",
          "type": "integer",
          "format": "int32"
        },
        "maxNodeCount": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. Max configurable nodes. If max_node_count \u003e node_count, then auto-scaling is enabled."
        }
      },
      "type": "object"
    },
    "GoogleCloudDataplexV1ZoneResourceSpec": {
      "properties": {
        "locationType": {
          "type": "string",
          "description": "Required. Immutable. The location type of the resources that are allowed to be attached to the assets within this zone.",
          "enum": [
            "LOCATION_TYPE_UNSPECIFIED",
            "SINGLE_REGION",
            "MULTI_REGION"
          ],
          "enumDescriptions": [
            "Unspecified location type.",
            "Resources that are associated with a single region.",
            "Resources that are associated with a multi-region location."
          ]
        }
      },
      "id": "GoogleCloudDataplexV1ZoneResourceSpec",
      "type": "object",
      "description": "Settings for resources attached as assets within a zone."
    },
    "GoogleLongrunningListOperationsResponse": {
      "id": "GoogleLongrunningListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "items": {
            "$ref": "GoogleLongrunningOperation"
          },
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "GoogleIamV1Binding": {
      "description": "Associates members, or principals, with a role.",
      "type": "object",
      "id": "GoogleIamV1Binding",
      "properties": {
        "members": {
          "description": "Specifies the principals requesting access for a Google Cloud resource. members can have the following values: allUsers: A special identifier that represents anyone who is on the internet; with or without a Google account. allAuthenticatedUsers: A special identifier that represents anyone who is authenticated with a Google account or a service account. user:{emailid}: An email address that represents a specific Google account. For example, alice@example.com . serviceAccount:{emailid}: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com. group:{emailid}: An email address that represents a Google group. For example, admins@example.com. deleted:user:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a user that has been recently deleted. For example, alice@example.com?uid=123456789012345678901. If the user is recovered, this value reverts to user:{emailid} and the recovered user retains the role in the binding. deleted:serviceAccount:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901. If the service account is undeleted, this value reverts to serviceAccount:{emailid} and the undeleted service account retains the role in the binding. deleted:group:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, admins@example.com?uid=123456789012345678901. If the group is recovered, this value reverts to group:{emailid} and the recovered group retains the role in the binding. domain:{domain}: The G Suite domain (primary) that represents all the users of that domain. For example, google.com or example.com.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "role": {
          "description": "Role that is assigned to the list of members, or principals. For example, roles/viewer, roles/editor, or roles/owner.",
          "type": "string"
        },
        "condition": {
          "$ref": "GoogleTypeExpr",
          "description": "The condition that is associated with this binding.If the condition evaluates to true, then this binding applies to the current request.If the condition evaluates to false, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies)."
        }
      }
    },
    "GoogleCloudDataplexV1ListLakesResponse": {
      "type": "object",
      "description": "List lakes response.",
      "properties": {
        "lakes": {
          "items": {
            "$ref": "GoogleCloudDataplexV1Lake"
          },
          "description": "Lakes under the given parent location.",
          "type": "array"
        },
        "unreachableLocations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "id": "GoogleCloudDataplexV1ListLakesResponse"
    },
    "GoogleCloudDataplexV1CancelJobRequest": {
      "description": "Cancel task jobs.",
      "id": "GoogleCloudDataplexV1CancelJobRequest",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudDataplexV1ActionFailedSecurityPolicyApply": {
      "id": "GoogleCloudDataplexV1ActionFailedSecurityPolicyApply",
      "description": "Failed to apply security policy to the managed resource(s) under a lake, zone or an asset. For a lake or zone resource, one or more underlying assets has a failure applying security policy to the associated managed resource.",
      "properties": {
        "asset": {
          "description": "Resource name of one of the assets with failing security policy application. Populated for a lake or zone resource only.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDataplexV1DiscoveryEvent": {
      "description": "The payload associated with Discovery data processing.",
      "properties": {
        "config": {
          "$ref": "GoogleCloudDataplexV1DiscoveryEventConfigDetails",
          "description": "Details about discovery configuration in effect."
        },
        "assetId": {
          "type": "string",
          "description": "The id of the associated asset."
        },
        "zoneId": {
          "type": "string",
          "description": "The id of the associated zone."
        },
        "partition": {
          "$ref": "GoogleCloudDataplexV1DiscoveryEventPartitionDetails",
          "description": "Details about the partition associated with the event."
        },
        "dataLocation": {
          "description": "The data location associated with the event.",
          "type": "string"
        },
        "message": {
          "description": "The log message.",
          "type": "string"
        },
        "entity": {
          "description": "Details about the entity associated with the event.",
          "$ref": "GoogleCloudDataplexV1DiscoveryEventEntityDetails"
        },
        "lakeId": {
          "type": "string",
          "description": "The id of the associated lake."
        },
        "action": {
          "$ref": "GoogleCloudDataplexV1DiscoveryEventActionDetails",
          "description": "Details about the action associated with the event."
        },
        "type": {
          "enum": [
            "EVENT_TYPE_UNSPECIFIED",
            "CONFIG",
            "ENTITY_CREATED",
            "ENTITY_UPDATED",
            "ENTITY_DELETED",
            "PARTITION_CREATED",
            "PARTITION_UPDATED",
            "PARTITION_DELETED"
          ],
          "enumDescriptions": [
            "An unspecified event type.",
            "An event representing discovery configuration in effect.",
            "An event representing a metadata entity being created.",
            "An event representing a metadata entity being updated.",
            "An event representing a metadata entity being deleted.",
            "An event representing a partition being created.",
            "An event representing a partition being updated.",
            "An event representing a partition being deleted."
          ],
          "description": "The type of the event being logged.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDataplexV1DiscoveryEvent",
      "type": "object"
    },
    "GoogleCloudDataplexV1DiscoveryEventPartitionDetails": {
      "type": "object",
      "properties": {
        "entity": {
          "description": "The name to the containing entity resource. The name is the fully-qualified resource name.",
          "type": "string"
        },
        "partition": {
          "description": "The name to the partition resource. The name is the fully-qualified resource name.",
          "type": "string"
        },
        "type": {
          "enumDescriptions": [
            "An unspecified event type.",
            "Entities representing structured data.",
            "Entities representing unstructured data."
          ],
          "enum": [
            "ENTITY_TYPE_UNSPECIFIED",
            "TABLE",
            "FILESET"
          ],
          "description": "The type of the containing entity resource.",
          "type": "string"
        },
        "sampledDataLocations": {
          "type": "array",
          "description": "The locations of the data items (e.g., a Cloud Storage objects) sampled for metadata inference.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Details about the partition.",
      "id": "GoogleCloudDataplexV1DiscoveryEventPartitionDetails"
    },
    "GoogleCloudDataplexV1SchemaSchemaField": {
      "description": "Represents a column field within a table schema.",
      "id": "GoogleCloudDataplexV1SchemaSchemaField",
      "properties": {
        "name": {
          "description": "Required. The name of the field. Must contain only letters, numbers and underscores, with a maximum length of 767 characters, and must begin with a letter or underscore.",
          "type": "string"
        },
        "mode": {
          "description": "Required. Additional field semantics.",
          "enumDescriptions": [
            "Mode unspecified.",
            "The field has required semantics.",
            "The field has optional semantics, and may be null.",
            "The field has repeated (0 or more) semantics, and is a list of values."
          ],
          "type": "string",
          "enum": [
            "MODE_UNSPECIFIED",
            "REQUIRED",
            "NULLABLE",
            "REPEATED"
          ]
        },
        "fields": {
          "description": "Optional. Any nested field for complex types.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDataplexV1SchemaSchemaField"
          }
        },
        "description": {
          "description": "Optional. User friendly field description. Must be less than or equal to 1024 characters.",
          "type": "string"
        },
        "type": {
          "description": "Required. The type of field.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "BOOLEAN",
            "BYTE",
            "INT16",
            "INT32",
            "INT64",
            "FLOAT",
            "DOUBLE",
            "DECIMAL",
            "STRING",
            "BINARY",
            "TIMESTAMP",
            "DATE",
            "TIME",
            "RECORD",
            "NULL"
          ],
          "enumDescriptions": [
            "SchemaType unspecified.",
            "Boolean field.",
            "Single byte numeric field.",
            "16-bit numeric field.",
            "32-bit numeric field.",
            "64-bit numeric field.",
            "Floating point numeric field.",
            "Double precision numeric field.",
            "Real value numeric field.",
            "Sequence of characters field.",
            "Sequence of bytes field.",
            "Date and time field.",
            "Date field.",
            "Time field.",
            "Structured field. Nested fields that define the structure of the map. If all nested fields are nullable, this field represents a union.",
            "Null field that does not have values."
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDataplexV1TaskExecutionSpec": {
      "properties": {
        "args": {
          "type": "object",
          "description": "Optional. The arguments to pass to the task. The args can use placeholders of the format ${placeholder} as part of key/value string. These will be interpolated before passing the args to the driver. Currently supported placeholders: - ${task_id} - ${job_time} To pass positional args, set the key as TASK_ARGS. The value should be a comma-separated string of all the positional arguments. To use a delimiter other than comma, refer to https://cloud.google.com/sdk/gcloud/reference/topic/escaping. In case of other keys being present in the args, then TASK_ARGS will be passed as the last argument.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "serviceAccount": {
          "description": "Required. Service account to use to execute a task. If not provided, the default Compute service account for the project is used.",
          "type": "string"
        },
        "maxJobExecutionLifetime": {
          "type": "string",
          "format": "google-duration",
          "description": "Optional. The maximum duration after which the job execution is expired."
        },
        "project": {
          "type": "string",
          "description": "Optional. The project in which jobs are run. By default, the project containing the Lake is used. If a project is provided, the ExecutionSpec.service_account must belong to this project."
        },
        "kmsKey": {
          "type": "string",
          "description": "Optional. The Cloud KMS key to use for encryption, of the form: projects/{project_number}/locations/{location_id}/keyRings/{key-ring-name}/cryptoKeys/{key-name}."
        }
      },
      "id": "GoogleCloudDataplexV1TaskExecutionSpec",
      "type": "object",
      "description": "Execution related settings, like retry and service_account."
    },
    "GoogleIamV1AuditLogConfig": {
      "id": "GoogleIamV1AuditLogConfig",
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "type": "object",
      "properties": {
        "exemptedMembers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
        },
        "logType": {
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "description": "The log type that this config enables.",
          "type": "string",
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        }
      }
    },
    "GoogleCloudDataplexV1TaskSparkTaskConfig": {
      "type": "object",
      "description": "User-specified config for running a Spark task.",
      "id": "GoogleCloudDataplexV1TaskSparkTaskConfig",
      "properties": {
        "sqlScript": {
          "description": "The query text. The execution args are used to declare a set of script variables (set key=\"value\";).",
          "type": "string"
        },
        "fileUris": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. Cloud Storage URIs of files to be placed in the working directory of each executor."
        },
        "pythonScriptFile": {
          "description": "The Gcloud Storage URI of the main Python file to use as the driver. Must be a .py file. The execution args are passed in as a sequence of named process arguments (--key=value).",
          "type": "string"
        },
        "infrastructureSpec": {
          "description": "Optional. Infrastructure specification for the execution.",
          "$ref": "GoogleCloudDataplexV1TaskInfrastructureSpec"
        },
        "archiveUris": {
          "description": "Optional. Cloud Storage URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "mainClass": {
          "description": "The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in jar_file_uris. The execution args are passed in as a sequence of named process arguments (--key=value).",
          "type": "string"
        },
        "sqlScriptFile": {
          "type": "string",
          "description": "A reference to a query file. This can be the Cloud Storage URI of the query file or it can the path to a SqlScript Content. The execution args are used to declare a set of script variables (set key=\"value\";)."
        },
        "mainJarFileUri": {
          "type": "string",
          "description": "The Cloud Storage URI of the jar file that contains the main class. The execution args are passed in as a sequence of named process arguments (--key=value)."
        }
      }
    },
    "GoogleCloudDataplexV1ActionIncompatibleDataSchema": {
      "type": "object",
      "id": "GoogleCloudDataplexV1ActionIncompatibleDataSchema",
      "description": "Action details for incompatible schemas detected by discovery.",
      "properties": {
        "existingSchema": {
          "description": "The existing and expected schema of the table. The schema is provided as a JSON formatted structure listing columns and data types.",
          "type": "string"
        },
        "newSchema": {
          "type": "string",
          "description": "The new and incompatible schema within the table. The schema is provided as a JSON formatted structured listing columns and data types."
        },
        "sampledDataLocations": {
          "description": "The list of data locations sampled and used for format/schema inference.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "schemaChange": {
          "type": "string",
          "enumDescriptions": [
            "Schema change unspecified.",
            "Newly discovered schema is incompatible with existing schema.",
            "Newly discovered schema has changed from existing schema for data in a curated zone."
          ],
          "enum": [
            "SCHEMA_CHANGE_UNSPECIFIED",
            "INCOMPATIBLE",
            "MODIFIED"
          ],
          "description": "Whether the action relates to a schema that is incompatible or modified."
        },
        "table": {
          "type": "string",
          "description": "The name of the table containing invalid data."
        }
      }
    },
    "GoogleCloudDataplexV1ListEnvironmentsResponse": {
      "type": "object",
      "description": "List environments response.",
      "id": "GoogleCloudDataplexV1ListEnvironmentsResponse",
      "properties": {
        "environments": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDataplexV1Environment"
          },
          "description": "Environments under the given parent lake."
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      }
    },
    "GoogleCloudLocationLocation": {
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "id": "GoogleCloudLocationLocation",
      "properties": {
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: \"us-east1\"."
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: \"projects/example-project/locations/us-east1\""
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"} ",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      }
    },
    "GoogleCloudDataplexV1DiscoveryEventConfigDetails": {
      "type": "object",
      "id": "GoogleCloudDataplexV1DiscoveryEventConfigDetails",
      "description": "Details about configuration events.",
      "properties": {
        "parameters": {
          "description": "A list of discovery configuration parameters in effect. The keys are the field paths within DiscoverySpec. Eg. includePatterns, excludePatterns, csvOptions.disableTypeInference, etc.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudDataplexV1TaskInfrastructureSpec": {
      "type": "object",
      "properties": {
        "batch": {
          "description": "Compute resources needed for a Task when using Dataproc Serverless.",
          "$ref": "GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources"
        },
        "containerImage": {
          "description": "Container Image Runtime Configuration.",
          "$ref": "GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime"
        },
        "vpcNetwork": {
          "description": "Vpc network.",
          "$ref": "GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork"
        }
      },
      "description": "Configuration for the underlying infrastructure used to run workloads.",
      "id": "GoogleCloudDataplexV1TaskInfrastructureSpec"
    },
    "GoogleCloudDataplexV1EnvironmentEndpoints": {
      "type": "object",
      "id": "GoogleCloudDataplexV1EnvironmentEndpoints",
      "properties": {
        "sql": {
          "type": "string",
          "description": "Output only. URI to serve SQL APIs",
          "readOnly": true
        },
        "notebooks": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. URI to serve notebook APIs"
        }
      }
    },
    "GoogleCloudDataplexV1ActionMissingResource": {
      "id": "GoogleCloudDataplexV1ActionMissingResource",
      "type": "object",
      "description": "Action details for resource references in assets that cannot be located.",
      "properties": {}
    },
    "GoogleCloudDataplexV1ActionUnauthorizedResource": {
      "description": "Action details for unauthorized resource issues raised to indicate that the service account associated with the lake instance is not authorized to access or manage the resource associated with an asset.",
      "id": "GoogleCloudDataplexV1ActionUnauthorizedResource",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudDataplexV1AssetDiscoveryStatus": {
      "properties": {
        "lastRunDuration": {
          "type": "string",
          "format": "google-duration",
          "description": "The duration of the last discovery run."
        },
        "message": {
          "type": "string",
          "description": "Additional information about the current state."
        },
        "stats": {
          "description": "Data Stats of the asset reported by discovery.",
          "$ref": "GoogleCloudDataplexV1AssetDiscoveryStatusStats"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Last update time of the status."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "SCHEDULED",
            "IN_PROGRESS",
            "PAUSED",
            "DISABLED"
          ],
          "type": "string",
          "description": "The current status of the discovery feature.",
          "enumDescriptions": [
            "State is unspecified.",
            "Discovery for the asset is scheduled.",
            "Discovery for the asset is running.",
            "Discovery for the asset is currently paused (e.g. due to a lack of available resources). It will be automatically resumed.",
            "Discovery for the asset is disabled."
          ]
        },
        "lastRunTime": {
          "description": "The start time of the last discovery run.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "GoogleCloudDataplexV1AssetDiscoveryStatus",
      "type": "object",
      "description": "Status of discovery for an asset."
    },
    "GoogleCloudDataplexV1Schema": {
      "type": "object",
      "description": "Schema information describing the structure and layout of the data.",
      "id": "GoogleCloudDataplexV1Schema",
      "properties": {
        "userManaged": {
          "description": "Required. Set to true if user-managed or false if managed by Dataplex. The default is false (managed by Dataplex). Set to falseto enable Dataplex discovery to update the schema. including new data discovery, schema inference, and schema evolution. Users retain the ability to input and edit the schema. Dataplex treats schema input by the user as though produced by a previous Dataplex discovery operation, and it will evolve the schema and take action based on that treatment. Set to true to fully manage the entity schema. This setting guarantees that Dataplex will not change schema fields.",
          "type": "boolean"
        },
        "partitionStyle": {
          "enumDescriptions": [
            "PartitionStyle unspecified",
            "Partitions are hive-compatible. Examples: gs://bucket/path/to/table/dt=2019-10-31/lang=en, gs://bucket/path/to/table/dt=2019-10-31/lang=en/late."
          ],
          "description": "Optional. The structure of paths containing partition data within the entity.",
          "type": "string",
          "enum": [
            "PARTITION_STYLE_UNSPECIFIED",
            "HIVE_COMPATIBLE"
          ]
        },
        "partitionFields": {
          "items": {
            "$ref": "GoogleCloudDataplexV1SchemaPartitionField"
          },
          "description": "Optional. The sequence of fields describing the partition structure in entities. If this field is empty, there are no partitions within the data.",
          "type": "array"
        },
        "fields": {
          "description": "Optional. The sequence of fields describing data in table entities. Note: BigQuery SchemaFields are immutable.",
          "items": {
            "$ref": "GoogleCloudDataplexV1SchemaSchemaField"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudDataplexV1Entity": {
      "properties": {
        "dataPath": {
          "type": "string",
          "description": "Required. Immutable. The storage path of the entity data. For Cloud Storage data, this is the fully-qualified path to the entity, such as gs://bucket/path/to/data. For BigQuery data, this is the name of the table resource, such as projects/project_id/datasets/dataset_id/tables/table_id."
        },
        "catalogEntry": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the associated Data Catalog entry."
        },
        "type": {
          "enumDescriptions": [
            "Type unspecified.",
            "Structured and semi-structured data.",
            "Unstructured data."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "TABLE",
            "FILESET"
          ],
          "description": "Required. Immutable. The type of entity.",
          "type": "string"
        },
        "format": {
          "$ref": "GoogleCloudDataplexV1StorageFormat",
          "description": "Required. Identifies the storage format of the entity data. It does not apply to entities with data stored in BigQuery."
        },
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time when the entity was last updated."
        },
        "compatibility": {
          "readOnly": true,
          "description": "Output only. Metadata stores that the entity is compatible with.",
          "$ref": "GoogleCloudDataplexV1EntityCompatibilityStatus"
        },
        "description": {
          "description": "Optional. User friendly longer description text. Must be shorter than or equal to 1024 characters.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Optional. Display name must be shorter than or equal to 256 characters."
        },
        "etag": {
          "type": "string",
          "description": "Optional. The etag associated with the entity, which can be retrieved with a GetEntity request. Required for update and delete requests."
        },
        "id": {
          "type": "string",
          "description": "Required. A user-provided entity ID. It is mutable, and will be used as the published table name. Specifying a new ID in an update entity request will override the existing value. The ID must contain only letters (a-z, A-Z), numbers (0-9), and underscores. Must begin with a letter and consist of 256 or fewer characters."
        },
        "asset": {
          "description": "Required. Immutable. The ID of the asset associated with the storage location containing the entity data. The entity must be with in the same zone with the asset.",
          "type": "string"
        },
        "dataPathPattern": {
          "type": "string",
          "description": "Optional. The set of items within the data path constituting the data in the entity, represented as a glob path. Example: gs://bucket/path/to/data/**/*.csv."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The resource name of the entity, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{id}."
        },
        "schema": {
          "description": "Required. The description of the data structure and layout. The schema is not included in list responses. It is only included in SCHEMA and FULL entity views of a GetEntity response.",
          "$ref": "GoogleCloudDataplexV1Schema"
        },
        "system": {
          "type": "string",
          "enum": [
            "STORAGE_SYSTEM_UNSPECIFIED",
            "CLOUD_STORAGE",
            "BIGQUERY"
          ],
          "enumDescriptions": [
            "Storage system unspecified.",
            "The entity data is contained within a Cloud Storage bucket.",
            "The entity data is contained within a BigQuery dataset."
          ],
          "description": "Required. Immutable. Identifies the storage system of the entity data."
        },
        "createTime": {
          "description": "Output only. The time when the entity was created.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "Represents tables and fileset metadata contained within a zone.",
      "id": "GoogleCloudDataplexV1Entity"
    },
    "GoogleCloudDataplexV1AssetResourceStatus": {
      "properties": {
        "updateTime": {
          "format": "google-datetime",
          "description": "Last update time of the status.",
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "State unspecified.",
            "Resource does not have any errors.",
            "Resource has errors."
          ],
          "description": "The current state of the managed resource.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "READY",
            "ERROR"
          ]
        },
        "message": {
          "description": "Additional information about the current state.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDataplexV1AssetResourceStatus",
      "type": "object",
      "description": "Status of the resource referenced by an asset."
    },
    "GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources": {
      "id": "GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources",
      "description": "Batch compute resources associated with the task.",
      "type": "object",
      "properties": {
        "executorsCount": {
          "description": "Optional. Total number of job executors. Executor Count should be between 2 and 100. Default=2",
          "format": "int32",
          "type": "integer"
        },
        "maxExecutorsCount": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. Max configurable executors. If max_executors_count \u003e executors_count, then auto-scaling is enabled. Max Executor Count should be between 2 and 1000. Default=1000"
        }
      }
    },
    "GoogleCloudDataplexV1Action": {
      "id": "GoogleCloudDataplexV1Action",
      "description": "Action represents an issue requiring administrator action for resolution.",
      "properties": {
        "dataLocations": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The list of data locations associated with this action. Cloud Storage locations are represented as URI paths(E.g. gs://bucket/table1/year=2020/month=Jan/). BigQuery locations refer to resource names(E.g. bigquery.googleapis.com/projects/project-id/datasets/dataset-id)."
        },
        "invalidDataOrganization": {
          "$ref": "GoogleCloudDataplexV1ActionInvalidDataOrganization",
          "description": "Details for issues related to invalid data arrangement."
        },
        "issue": {
          "type": "string",
          "description": "Detailed description of the issue requiring action."
        },
        "missingResource": {
          "$ref": "GoogleCloudDataplexV1ActionMissingResource",
          "description": "Details for issues related to absence of a managed resource."
        },
        "detectTime": {
          "description": "The time that the issue was detected.",
          "format": "google-datetime",
          "type": "string"
        },
        "invalidDataFormat": {
          "$ref": "GoogleCloudDataplexV1ActionInvalidDataFormat",
          "description": "Details for issues related to invalid or unsupported data formats."
        },
        "category": {
          "description": "The category of issue associated with the action.",
          "enum": [
            "CATEGORY_UNSPECIFIED",
            "RESOURCE_MANAGEMENT",
            "SECURITY_POLICY",
            "DATA_DISCOVERY"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified category.",
            "Resource management related issues.",
            "Security policy related issues.",
            "Data and discovery related issues."
          ]
        },
        "lake": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The relative resource name of the lake, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}."
        },
        "incompatibleDataSchema": {
          "$ref": "GoogleCloudDataplexV1ActionIncompatibleDataSchema",
          "description": "Details for issues related to incompatible schemas detected within data."
        },
        "failedSecurityPolicyApply": {
          "$ref": "GoogleCloudDataplexV1ActionFailedSecurityPolicyApply",
          "description": "Details for issues related to applying security policy."
        },
        "zone": {
          "description": "Output only. The relative resource name of the zone, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The relative resource name of the action, of the form: projects/{project}/locations/{location}/lakes/{lake}/actions/{action} projects/{project}/locations/{location}/lakes/{lake}/zones/{zone}/actions/{action} projects/{project}/locations/{location}/lakes/{lake}/zones/{zone}/assets/{asset}/actions/{action}."
        },
        "unauthorizedResource": {
          "$ref": "GoogleCloudDataplexV1ActionUnauthorizedResource",
          "description": "Details for issues related to lack of permissions to access data resources."
        },
        "invalidDataPartition": {
          "$ref": "GoogleCloudDataplexV1ActionInvalidDataPartition",
          "description": "Details for issues related to invalid or unsupported data partition structure."
        },
        "missingData": {
          "$ref": "GoogleCloudDataplexV1ActionMissingData",
          "description": "Details for issues related to absence of data within managed resources."
        },
        "asset": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The relative resource name of the asset, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/assets/{asset_id}."
        }
      },
      "type": "object"
    },
    "GoogleIamV1AuditConfig": {
      "type": "object",
      "id": "GoogleIamV1AuditConfig",
      "properties": {
        "service": {
          "type": "string",
          "description": "Specifies a service that will be enabled for audit logging. For example, storage.googleapis.com, cloudsql.googleapis.com. allServices is a special value that covers all services."
        },
        "auditLogConfigs": {
          "items": {
            "$ref": "GoogleIamV1AuditLogConfig"
          },
          "description": "The configuration for logging of each type of permission.",
          "type": "array"
        }
      },
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs.If there are AuditConfigs for both allServices and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted.Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
    },
    "GoogleCloudDataplexV1AssetDiscoveryStatusStats": {
      "properties": {
        "filesets": {
          "description": "The count of fileset entities within the referenced resource.",
          "format": "int64",
          "type": "string"
        },
        "tables": {
          "format": "int64",
          "description": "The count of table entities within the referenced resource.",
          "type": "string"
        },
        "dataSize": {
          "type": "string",
          "format": "int64",
          "description": "The number of stored data bytes within the referenced resource."
        },
        "dataItems": {
          "format": "int64",
          "description": "The count of data items within the referenced resource.",
          "type": "string"
        }
      },
      "description": "The aggregated data statistics for the asset reported by discovery.",
      "id": "GoogleCloudDataplexV1AssetDiscoveryStatusStats",
      "type": "object"
    },
    "GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility": {
      "id": "GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility",
      "description": "Provides compatibility information for a specific metadata store.",
      "properties": {
        "reason": {
          "type": "string",
          "description": "Output only. Provides additional detail if the entity is incompatible with the metadata store.",
          "readOnly": true
        },
        "compatible": {
          "description": "Output only. Whether the entity is compatible and can be represented in the metadata store.",
          "type": "boolean",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions": {
      "description": "Describe JSON data format.",
      "properties": {
        "encoding": {
          "description": "Optional. The character encoding of the data. The default is UTF-8.",
          "type": "string"
        },
        "disableTypeInference": {
          "description": "Optional. Whether to disable the inference of data type for Json data. If true, all columns will be registered as their primitive types (strings, number or boolean).",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions",
      "type": "object"
    },
    "GoogleCloudDataplexV1StorageFormatJsonOptions": {
      "id": "GoogleCloudDataplexV1StorageFormatJsonOptions",
      "description": "Describes JSON data format.",
      "type": "object",
      "properties": {
        "encoding": {
          "description": "Optional. The character encoding of the data. Accepts \"US-ASCII\", \"UTF-8\" and \"ISO-8859-1\". Defaults to UTF-8 if not specified.",
          "type": "string"
        }
      }
    },
    "GoogleLongrunningOperation": {
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "GoogleLongrunningOperation",
      "properties": {
        "done": {
          "type": "boolean",
          "description": "If the value is false, it means the operation is still in progress. If true, the operation is completed, and either error or response is available."
        },
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the name should be a resource name ending with operations/{unique_id}."
        },
        "response": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as Delete, the response is google.protobuf.Empty. If the original method is standard Get/Create/Update, the response should be the resource. For other methods, the response should have the type XxxResponse, where Xxx is the original method name. For example, if the original method name is TakeSnapshot(), the inferred response type is TakeSnapshotResponse."
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        }
      }
    },
    "GoogleCloudDataplexV1ListZonesResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "zones": {
          "type": "array",
          "description": "Zones under the given parent lake.",
          "items": {
            "$ref": "GoogleCloudDataplexV1Zone"
          }
        }
      },
      "description": "List zones response.",
      "id": "GoogleCloudDataplexV1ListZonesResponse",
      "type": "object"
    },
    "GoogleCloudDataplexV1StorageFormat": {
      "description": "Describes the format of the data within its storage location.",
      "id": "GoogleCloudDataplexV1StorageFormat",
      "type": "object",
      "properties": {
        "csv": {
          "description": "Optional. Additional information about CSV formatted data.",
          "$ref": "GoogleCloudDataplexV1StorageFormatCsvOptions"
        },
        "format": {
          "enum": [
            "FORMAT_UNSPECIFIED",
            "PARQUET",
            "AVRO",
            "ORC",
            "CSV",
            "JSON",
            "IMAGE",
            "AUDIO",
            "VIDEO",
            "TEXT",
            "TFRECORD",
            "OTHER",
            "UNKNOWN"
          ],
          "enumDescriptions": [
            "Format unspecified.",
            "Parquet-formatted structured data.",
            "Avro-formatted structured data.",
            "Orc-formatted structured data.",
            "Csv-formatted semi-structured data.",
            "Json-formatted semi-structured data.",
            "Image data formats (such as jpg and png).",
            "Audio data formats (such as mp3, and wav).",
            "Video data formats (such as mp4 and mpg).",
            "Textual data formats (such as txt and xml).",
            "TensorFlow record format.",
            "Data that doesn't match a specific format.",
            "Data of an unknown format."
          ],
          "description": "Output only. The data format associated with the stored data, which represents content type values. The value is inferred from mime type.",
          "readOnly": true,
          "type": "string"
        },
        "compressionFormat": {
          "enum": [
            "COMPRESSION_FORMAT_UNSPECIFIED",
            "GZIP",
            "BZIP2"
          ],
          "type": "string",
          "description": "Optional. The compression type associated with the stored data. If unspecified, the data is uncompressed.",
          "enumDescriptions": [
            "CompressionFormat unspecified. Implies uncompressed data.",
            "GZip compressed set of files.",
            "BZip2 compressed set of files."
          ]
        },
        "json": {
          "$ref": "GoogleCloudDataplexV1StorageFormatJsonOptions",
          "description": "Optional. Additional information about CSV formatted data."
        },
        "mimeType": {
          "description": "Required. The mime type descriptor for the data. Must match the pattern {type}/{subtype}. Supported values: application/x-parquet application/x-avro application/x-orc application/x-tfrecord application/json application/{subtypes} text/csv text/ image/{image subtype} video/{video subtype} audio/{audio subtype}",
          "type": "string"
        }
      }
    },
    "GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork": {
      "id": "GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork",
      "type": "object",
      "description": "Cloud VPC Network used to run the infrastructure.",
      "properties": {
        "network": {
          "type": "string",
          "description": "Optional. The Cloud VPC network in which the job is run. By default, the Cloud VPC network named Default within the project is used."
        },
        "subNetwork": {
          "type": "string",
          "description": "Optional. The Cloud VPC sub-network in which the job is run."
        },
        "networkTags": {
          "items": {
            "type": "string"
          },
          "description": "Optional. List of network tags to apply to the job.",
          "type": "array"
        }
      }
    },
    "GoogleCloudDataplexV1EnvironmentSessionSpec": {
      "type": "object",
      "id": "GoogleCloudDataplexV1EnvironmentSessionSpec",
      "properties": {
        "enableFastStartup": {
          "description": "Optional. If True, this causes sessions to be pre-created and available for faster startup to enable interactive exploration use-cases. This defaults to False to avoid additional billed charges. These can only be set to True for the environment with name set to \"default\", and with default configuration.",
          "type": "boolean"
        },
        "maxIdleDuration": {
          "type": "string",
          "description": "Optional. The idle time configuration of the session. The session will be auto-terminated at the end of this period.",
          "format": "google-duration"
        }
      }
    },
    "GoogleCloudDataplexV1LakeMetastoreStatus": {
      "type": "object",
      "description": "Status of Lake and Dataproc Metastore service instance association.",
      "id": "GoogleCloudDataplexV1LakeMetastoreStatus",
      "properties": {
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Last update time of the metastore status of the lake."
        },
        "state": {
          "type": "string",
          "description": "Current state of association.",
          "enumDescriptions": [
            "Unspecified.",
            "A Metastore service instance is not associated with the lake.",
            "A Metastore service instance is attached to the lake.",
            "Attach/detach is in progress.",
            "Attach/detach could not be done due to errors."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "NONE",
            "READY",
            "UPDATING",
            "ERROR"
          ]
        },
        "endpoint": {
          "type": "string",
          "description": "The URI of the endpoint used to access the Metastore service."
        },
        "message": {
          "type": "string",
          "description": "Additional information about the current status."
        }
      }
    },
    "GoogleCloudDataplexV1AssetDiscoverySpec": {
      "id": "GoogleCloudDataplexV1AssetDiscoverySpec",
      "properties": {
        "csvOptions": {
          "description": "Optional. Configuration for CSV data.",
          "$ref": "GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions"
        },
        "schedule": {
          "description": "Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running discovery periodically. Successive discovery runs must be scheduled at least 60 minutes apart. The default value is to run discovery every 60 minutes. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: \"CRON_TZ=${IANA_TIME_ZONE}\" or TZ=${IANA_TIME_ZONE}\". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, \"CRON_TZ=America/New_York 1 * * * *\", or \"TZ=America/New_York 1 * * * *\".",
          "type": "string"
        },
        "includePatterns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional. The list of patterns to apply for selecting data to include during discovery if only a subset of the data should considered. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names."
        },
        "jsonOptions": {
          "description": "Optional. Configuration for Json data.",
          "$ref": "GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions"
        },
        "enabled": {
          "description": "Optional. Whether discovery is enabled.",
          "type": "boolean"
        },
        "excludePatterns": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. The list of patterns to apply for selecting data to exclude during discovery. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names."
        }
      },
      "type": "object",
      "description": "Settings to manage the metadata discovery and publishing for an asset."
    },
    "GoogleCloudDataplexV1ListEntitiesResponse": {
      "type": "object",
      "properties": {
        "entities": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDataplexV1Entity"
          },
          "description": "Entities in the specified parent zone."
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no remaining results in the list.",
          "type": "string"
        }
      },
      "description": "List metadata entities response.",
      "id": "GoogleCloudDataplexV1ListEntitiesResponse"
    },
    "GoogleCloudDataplexV1AssetStatus": {
      "description": "Aggregated status of the underlying assets of a lake or zone.",
      "type": "object",
      "properties": {
        "activeAssets": {
          "type": "integer",
          "format": "int32",
          "description": "Number of active assets."
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Last update time of the status."
        },
        "securityPolicyApplyingAssets": {
          "type": "integer",
          "format": "int32",
          "description": "Number of assets that are in process of updating the security policy on attached resources."
        }
      },
      "id": "GoogleCloudDataplexV1AssetStatus"
    },
    "GoogleCloudDataplexV1ActionMissingData": {
      "properties": {},
      "type": "object",
      "description": "Action details for absence of data detected by discovery.",
      "id": "GoogleCloudDataplexV1ActionMissingData"
    },
    "GoogleCloudDataplexV1ListTasksResponse": {
      "id": "GoogleCloudDataplexV1ListTasksResponse",
      "description": "List tasks response.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "tasks": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDataplexV1Task"
          },
          "description": "Tasks under the given parent lake."
        },
        "unreachableLocations": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "GoogleCloudDataplexV1Zone": {
      "id": "GoogleCloudDataplexV1Zone",
      "description": "A zone represents a logical group of related assets within a lake. A zone can be used to map to organizational structure or represent stages of data readiness from raw to curated. It provides managing behavior that is shared or inherited by all contained assets.",
      "properties": {
        "type": {
          "enumDescriptions": [
            "Zone type not specified.",
            "A zone that contains data that needs further processing before it is considered generally ready for consumption and analytics workloads.",
            "A zone that contains data that is considered to be ready for broader consumption and analytics workloads. Curated structured data stored in Cloud Storage must conform to certain file formats (parquet, avro and orc) and organized in a hive-compatible directory layout."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "RAW",
            "CURATED"
          ],
          "description": "Required. Immutable. The type of the zone.",
          "type": "string"
        },
        "resourceSpec": {
          "$ref": "GoogleCloudDataplexV1ZoneResourceSpec",
          "description": "Required. Specification of the resources that are referenced by the assets within this zone."
        },
        "labels": {
          "description": "Optional. User defined labels for the zone.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The relative resource name of the zone, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}."
        },
        "uid": {
          "readOnly": true,
          "description": "Output only. System generated globally unique ID for the zone. This ID will be different if the zone is deleted and re-created with the same name.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the zone."
        },
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time when the zone was last updated.",
          "format": "google-datetime"
        },
        "discoverySpec": {
          "$ref": "GoogleCloudDataplexV1ZoneDiscoverySpec",
          "description": "Optional. Specification of the discovery feature applied to data in this zone."
        },
        "assetStatus": {
          "description": "Output only. Aggregated status of the underlying assets of the zone.",
          "$ref": "GoogleCloudDataplexV1AssetStatus",
          "readOnly": true
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time when the zone was created.",
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "type": "string",
          "description": "Output only. Current state of the zone.",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CREATING",
            "DELETING",
            "ACTION_REQUIRED"
          ],
          "readOnly": true,
          "enumDescriptions": [
            "State is not specified.",
            "Resource is active, i.e., ready to use.",
            "Resource is under creation.",
            "Resource is under deletion.",
            "Resource is active but has unresolved actions."
          ]
        },
        "displayName": {
          "description": "Optional. User friendly display name.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions": {
      "type": "object",
      "description": "Describe JSON data format.",
      "id": "GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions",
      "properties": {
        "disableTypeInference": {
          "description": "Optional. Whether to disable the inference of data type for Json data. If true, all columns will be registered as their primitive types (strings, number or boolean).",
          "type": "boolean"
        },
        "encoding": {
          "type": "string",
          "description": "Optional. The character encoding of the data. The default is UTF-8."
        }
      }
    },
    "GoogleCloudDataplexV1TaskExecutionStatus": {
      "id": "GoogleCloudDataplexV1TaskExecutionStatus",
      "properties": {
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Last update time of the status.",
          "readOnly": true
        },
        "latestJob": {
          "$ref": "GoogleCloudDataplexV1Job",
          "description": "Output only. latest job execution",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "Status of the task execution (e.g. Jobs)."
    },
    "GoogleTypeExpr": {
      "type": "object",
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec.Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "properties": {
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
        },
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        }
      },
      "id": "GoogleTypeExpr"
    },
    "GoogleCloudDataplexV1Environment": {
      "id": "GoogleCloudDataplexV1Environment",
      "description": "Environment represents a user-visible compute infrastructure for analytics within a lake.",
      "type": "object",
      "properties": {
        "sessionStatus": {
          "description": "Output only. Status of sessions created for this environment.",
          "$ref": "GoogleCloudDataplexV1EnvironmentSessionStatus",
          "readOnly": true
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CREATING",
            "DELETING",
            "ACTION_REQUIRED"
          ],
          "readOnly": true,
          "description": "Output only. Current state of the environment.",
          "type": "string",
          "enumDescriptions": [
            "State is not specified.",
            "Resource is active, i.e., ready to use.",
            "Resource is under creation.",
            "Resource is under deletion.",
            "Resource is active but has unresolved actions."
          ]
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. Environment creation time.",
          "type": "string",
          "format": "google-datetime"
        },
        "displayName": {
          "type": "string",
          "description": "Optional. User friendly display name."
        },
        "uid": {
          "description": "Output only. System generated globally unique ID for the environment. This ID will be different if the environment is deleted and re-created with the same name.",
          "type": "string",
          "readOnly": true
        },
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time when the environment was last updated."
        },
        "labels": {
          "description": "Optional. User defined labels for the environment.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "name": {
          "type": "string",
          "description": "Output only. The relative resource name of the environment, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/environment/{environment_id}",
          "readOnly": true
        },
        "infrastructureSpec": {
          "$ref": "GoogleCloudDataplexV1EnvironmentInfrastructureSpec",
          "description": "Required. Infrastructure specification for the Environment."
        },
        "endpoints": {
          "readOnly": true,
          "$ref": "GoogleCloudDataplexV1EnvironmentEndpoints",
          "description": "Output only. URI Endpoints to access sessions associated with the Environment."
        },
        "sessionSpec": {
          "$ref": "GoogleCloudDataplexV1EnvironmentSessionSpec",
          "description": "Optional. Configuration for sessions created for this environment."
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the environment."
        }
      }
    },
    "GoogleCloudDataplexV1Partition": {
      "properties": {
        "values": {
          "items": {
            "type": "string"
          },
          "description": "Required. Immutable. The set of values representing the partition, which correspond to the partition schema defined in the parent entity.",
          "type": "array"
        },
        "etag": {
          "description": "Optional. The etag for this partition.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "Required. Immutable. The location of the entity data within the partition, for example, gs://bucket/path/to/entity/key1=value1/key2=value2. Or projects//datasets//tables/"
        },
        "name": {
          "type": "string",
          "description": "Output only. Partition values used in the HTTP URL must be double encoded. For example, url_encode(url_encode(value)) can be used to encode \"US:CA/CA#Sunnyvale so that the request URL ends with \"/partitions/US%253ACA/CA%2523Sunnyvale\". The name field in the response retains the encoded format.",
          "readOnly": true
        }
      },
      "id": "GoogleCloudDataplexV1Partition",
      "type": "object",
      "description": "Represents partition metadata contained within entity instances."
    },
    "GoogleCloudDataplexV1ContentNotebook": {
      "type": "object",
      "description": "Configuration for Notebook content.",
      "properties": {
        "kernelType": {
          "description": "Required. Kernel Type of the notebook.",
          "enum": [
            "KERNEL_TYPE_UNSPECIFIED",
            "PYTHON3"
          ],
          "type": "string",
          "enumDescriptions": [
            "Kernel Type unspecified.",
            "Python 3 Kernel."
          ]
        }
      },
      "id": "GoogleCloudDataplexV1ContentNotebook"
    },
    "GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions": {
      "id": "GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions",
      "properties": {
        "headerRows": {
          "description": "Optional. The number of rows to interpret as header rows that should be skipped when reading data rows.",
          "format": "int32",
          "type": "integer"
        },
        "delimiter": {
          "description": "Optional. The delimiter being used to separate values. This defaults to ','.",
          "type": "string"
        },
        "encoding": {
          "type": "string",
          "description": "Optional. The character encoding of the data. The default is UTF-8."
        },
        "disableTypeInference": {
          "type": "boolean",
          "description": "Optional. Whether to disable the inference of data type for CSV data. If true, all columns will be registered as strings."
        }
      },
      "description": "Describe CSV and similar semi-structured data formats.",
      "type": "object"
    },
    "GoogleCloudDataplexV1AssetSecurityStatus": {
      "properties": {
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Last update time of the status."
        },
        "state": {
          "enumDescriptions": [
            "State unspecified.",
            "Security policy has been successfully applied to the attached resource.",
            "Security policy is in the process of being applied to the attached resource.",
            "Security policy could not be applied to the attached resource due to errors."
          ],
          "description": "The current state of the security policy applied to the attached resource.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "READY",
            "APPLYING",
            "ERROR"
          ]
        },
        "message": {
          "type": "string",
          "description": "Additional information about the current state."
        }
      },
      "type": "object",
      "id": "GoogleCloudDataplexV1AssetSecurityStatus",
      "description": "Security policy status of the asset. Data security policy, i.e., readers, writers & owners, should be specified in the lake/zone/asset IAM policy."
    },
    "GoogleIamV1Policy": {
      "properties": {
        "bindings": {
          "items": {
            "$ref": "GoogleIamV1Binding"
          },
          "description": "Associates a list of members, or principals, with a role. Optionally, may specify a condition that determines how and when the bindings are applied. Each of the bindings must contain at least one principal.The bindings in a Policy can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the bindings grant 50 different roles to user:alice@example.com, and not to any other principal, then you can add another 1,450 principals to the bindings in the Policy.",
          "type": "array"
        },
        "version": {
          "type": "integer",
          "description": "Specifies the format of the policy.Valid values are 0, 1, and 3. Requests that specify an invalid value are rejected.Any operation that affects conditional role bindings must specify version 3. This requirement applies to the following operations: Getting a policy that includes a conditional role binding Adding a conditional role binding to a policy Changing a conditional role binding in a policy Removing any role binding, with or without a condition, from a policy that includes conditionsImportant: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy. If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost.If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).",
          "format": "int32"
        },
        "etag": {
          "type": "string",
          "description": "etag is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the etag in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An etag is returned in the response to getIamPolicy, and systems are expected to put that etag in the request to setIamPolicy to ensure that their change will be applied to the same version of the policy.Important: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy. If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost.",
          "format": "byte"
        },
        "auditConfigs": {
          "type": "array",
          "description": "Specifies cloud audit logging configuration for this policy.",
          "items": {
            "$ref": "GoogleIamV1AuditConfig"
          }
        }
      },
      "id": "GoogleIamV1Policy",
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources.A Policy is a collection of bindings. A binding binds one or more members, or principals, to a single role. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A role is a named list of permissions; each role can be an IAM predefined role or a user-created custom role.For some types of Google Cloud resources, a binding can also specify a condition, which is a logical expression that allows access to a resource only if the expression evaluates to true. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).JSON example: { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } YAML example: bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the IAM documentation (https://cloud.google.com/iam/docs/).",
      "type": "object"
    },
    "GoogleIamV1TestIamPermissionsResponse": {
      "description": "Response message for TestIamPermissions method.",
      "id": "GoogleIamV1TestIamPermissionsResponse",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A subset of TestPermissionsRequest.permissions that the caller is allowed."
        }
      },
      "type": "object"
    },
    "GoogleCloudDataplexV1OperationMetadata": {
      "properties": {
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "type": "string",
          "readOnly": true
        },
        "apiVersion": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. API version used to start the operation."
        },
        "verb": {
          "type": "string",
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true
        },
        "requestedCancellation": {
          "readOnly": true,
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to Code.CANCELLED.",
          "type": "boolean"
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime"
        },
        "statusMessage": {
          "readOnly": true,
          "description": "Output only. Human-readable status of the operation, if any.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Represents the metadata of a long-running operation.",
      "id": "GoogleCloudDataplexV1OperationMetadata"
    },
    "GoogleIamV1SetIamPolicyRequest": {
      "id": "GoogleIamV1SetIamPolicyRequest",
      "properties": {
        "policy": {
          "$ref": "GoogleIamV1Policy",
          "description": "REQUIRED: The complete policy to be applied to the resource. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them."
        },
        "updateMask": {
          "type": "string",
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used:paths: \"bindings, etag\"",
          "format": "google-fieldmask"
        }
      },
      "description": "Request message for SetIamPolicy method.",
      "type": "object"
    },
    "GoogleCloudDataplexV1SessionEvent": {
      "id": "GoogleCloudDataplexV1SessionEvent",
      "type": "object",
      "properties": {
        "warmPoolEnabled": {
          "type": "boolean",
          "description": "If the session is a warm pooled session."
        },
        "userId": {
          "description": "The information about the user that created the session. It will be the email address of the user.",
          "type": "string"
        },
        "unassignedDuration": {
          "type": "string",
          "description": "The idle duration of a warm pooled session before it is assigned to user.",
          "format": "google-duration"
        },
        "sessionId": {
          "type": "string",
          "description": "Unique identifier for the session."
        },
        "message": {
          "description": "The log message.",
          "type": "string"
        },
        "type": {
          "enumDescriptions": [
            "An unspecified event type.",
            "Event when the session is assigned to a user.",
            "Event for stop of a session.",
            "Query events in the session.",
            "Event for creation of a cluster. It is not yet assigned to a user. This comes before START in the sequence"
          ],
          "description": "The type of the event.",
          "enum": [
            "EVENT_TYPE_UNSPECIFIED",
            "START",
            "STOP",
            "QUERY",
            "CREATE"
          ],
          "type": "string"
        },
        "query": {
          "description": "The execution details of the query.",
          "$ref": "GoogleCloudDataplexV1SessionEventQueryDetail"
        },
        "eventSucceeded": {
          "type": "boolean",
          "description": "The status of the event."
        }
      },
      "description": "These messages contain information about sessions within an environment. The monitored resource is 'Environment'."
    },
    "GoogleCloudDataplexV1ListAssetsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "assets": {
          "description": "Asset under the given parent zone.",
          "items": {
            "$ref": "GoogleCloudDataplexV1Asset"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "List assets response.",
      "id": "GoogleCloudDataplexV1ListAssetsResponse"
    },
    "GoogleRpcStatus": {
      "id": "GoogleRpcStatus",
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "details": {
          "type": "array",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        }
      },
      "description": "The Status type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC (https://github.com/grpc). Each Status message contains three pieces of data: error code, error message, and error details.You can find out more about this error model and how to work with it in the API Design Guide (https://cloud.google.com/apis/design/errors)."
    },
    "GoogleCloudDataplexV1ContentSqlScript": {
      "id": "GoogleCloudDataplexV1ContentSqlScript",
      "type": "object",
      "properties": {
        "engine": {
          "enumDescriptions": [
            "Value was unspecified.",
            "Spark SQL Query."
          ],
          "description": "Required. Query Engine to be used for the Sql Query.",
          "type": "string",
          "enum": [
            "QUERY_ENGINE_UNSPECIFIED",
            "SPARK"
          ]
        }
      },
      "description": "Configuration for the Sql Script content."
    },
    "GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime": {
      "description": "Container Image Runtime Configuration used with Batch execution.",
      "type": "object",
      "id": "GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime",
      "properties": {
        "javaJars": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. A list of Java JARS to add to the classpath. Valid input includes Cloud Storage URIs to Jar binaries. For example, gs://bucket-name/my/path/to/file.jar"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. Override to common configuration of open source components installed on the Dataproc cluster. The properties to set on daemon config files. Property keys are specified in prefix:property format, for example core:hadoop.tmp.dir. For more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties).",
          "type": "object"
        },
        "pythonPackages": {
          "type": "array",
          "description": "Optional. A list of python packages to be installed. Valid formats include Cloud Storage URI to a PIP installable library. For example, gs://bucket-name/my/path/to/lib.tar.gz",
          "items": {
            "type": "string"
          }
        },
        "image": {
          "type": "string",
          "description": "Optional. Container image to use."
        }
      }
    },
    "GoogleCloudDataplexV1ListPartitionsResponse": {
      "type": "object",
      "properties": {
        "partitions": {
          "type": "array",
          "description": "Partitions under the specified parent entity.",
          "items": {
            "$ref": "GoogleCloudDataplexV1Partition"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no remaining results in the list."
        }
      },
      "description": "List metadata partitions response.",
      "id": "GoogleCloudDataplexV1ListPartitionsResponse"
    },
    "GoogleCloudDataplexV1EnvironmentSessionStatus": {
      "id": "GoogleCloudDataplexV1EnvironmentSessionStatus",
      "type": "object",
      "properties": {
        "active": {
          "description": "Output only. Queries over sessions to mark whether the environment is currently active or not",
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "GoogleIamV1TestIamPermissionsRequest": {
      "id": "GoogleIamV1TestIamPermissionsRequest",
      "description": "Request message for TestIamPermissions method.",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of permissions to check for the resource. Permissions with wildcards (such as * or storage.*) are not allowed. For more information see IAM Overview (https://cloud.google.com/iam/docs/overview#permissions)."
        }
      },
      "type": "object"
    },
    "GoogleLongrunningCancelOperationRequest": {
      "id": "GoogleLongrunningCancelOperationRequest",
      "properties": {},
      "description": "The request message for Operations.CancelOperation.",
      "type": "object"
    },
    "GoogleCloudDataplexV1ActionInvalidDataFormat": {
      "type": "object",
      "properties": {
        "sampledDataLocations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of data locations sampled and used for format/schema inference."
        },
        "expectedFormat": {
          "type": "string",
          "description": "The expected data format of the entity."
        },
        "newFormat": {
          "description": "The new unexpected data format within the entity.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDataplexV1ActionInvalidDataFormat",
      "description": "Action details for invalid or unsupported data files detected by discovery."
    },
    "GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions": {
      "description": "Describe CSV and similar semi-structured data formats.",
      "type": "object",
      "properties": {
        "headerRows": {
          "description": "Optional. The number of rows to interpret as header rows that should be skipped when reading data rows.",
          "format": "int32",
          "type": "integer"
        },
        "delimiter": {
          "type": "string",
          "description": "Optional. The delimiter being used to separate values. This defaults to ','."
        },
        "disableTypeInference": {
          "type": "boolean",
          "description": "Optional. Whether to disable the inference of data type for CSV data. If true, all columns will be registered as strings."
        },
        "encoding": {
          "description": "Optional. The character encoding of the data. The default is UTF-8.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions"
    },
    "GoogleCloudDataplexV1AssetResourceSpec": {
      "description": "Identifies the cloud resource that is referenced by this asset.",
      "properties": {
        "type": {
          "enumDescriptions": [
            "Type not specified.",
            "Cloud Storage bucket.",
            "BigQuery dataset."
          ],
          "description": "Required. Immutable. Type of resource.",
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "STORAGE_BUCKET",
            "BIGQUERY_DATASET"
          ]
        },
        "name": {
          "description": "Immutable. Relative name of the cloud resource that contains the data that is being managed within a lake. For example: projects/{project_number}/buckets/{bucket_id} projects/{project_number}/datasets/{dataset_id}",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDataplexV1AssetResourceSpec"
    },
    "GoogleCloudDataplexV1ListActionsResponse": {
      "description": "List actions response.",
      "type": "object",
      "id": "GoogleCloudDataplexV1ListActionsResponse",
      "properties": {
        "actions": {
          "items": {
            "$ref": "GoogleCloudDataplexV1Action"
          },
          "description": "Actions under the given parent lake/zone/asset.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      }
    },
    "GoogleCloudDataplexV1ActionInvalidDataOrganization": {
      "properties": {},
      "description": "Action details for invalid data arrangement.",
      "id": "GoogleCloudDataplexV1ActionInvalidDataOrganization",
      "type": "object"
    },
    "GoogleCloudDataplexV1ActionInvalidDataPartition": {
      "id": "GoogleCloudDataplexV1ActionInvalidDataPartition",
      "type": "object",
      "description": "Action details for invalid or unsupported partitions detected by discovery.",
      "properties": {
        "expectedStructure": {
          "enum": [
            "PARTITION_STRUCTURE_UNSPECIFIED",
            "CONSISTENT_KEYS",
            "HIVE_STYLE_KEYS"
          ],
          "description": "The issue type of InvalidDataPartition.",
          "type": "string",
          "enumDescriptions": [
            "PartitionStructure unspecified.",
            "Consistent hive-style partition definition (both raw and curated zone).",
            "Hive style partition definition (curated zone only)."
          ]
        }
      }
    },
    "GoogleCloudDataplexV1JobEvent": {
      "type": "object",
      "id": "GoogleCloudDataplexV1JobEvent",
      "description": "The payload associated with Job logs that contains events describing jobs that have run within a Lake.",
      "properties": {
        "type": {
          "enumDescriptions": [
            "Unspecified job type.",
            "Spark jobs.",
            "Notebook jobs."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "SPARK",
            "NOTEBOOK"
          ],
          "type": "string",
          "description": "The type of the job."
        },
        "retries": {
          "format": "int32",
          "description": "The number of retries.",
          "type": "integer"
        },
        "endTime": {
          "description": "The time when the job ended running.",
          "type": "string",
          "format": "google-datetime"
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified job state.",
            "Job successfully completed.",
            "Job was unsuccessful.",
            "Job was cancelled by the user.",
            "Job was cancelled or aborted via the service executing the job."
          ],
          "description": "The job state on completion.",
          "enum": [
            "STATE_UNSPECIFIED",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED",
            "ABORTED"
          ]
        },
        "startTime": {
          "type": "string",
          "description": "The time when the job started running.",
          "format": "google-datetime"
        },
        "serviceJob": {
          "description": "The reference to the job within the service.",
          "type": "string"
        },
        "jobId": {
          "type": "string",
          "description": "The unique id identifying the job."
        },
        "message": {
          "type": "string",
          "description": "The log message."
        },
        "service": {
          "type": "string",
          "description": "The service used to execute the job.",
          "enum": [
            "SERVICE_UNSPECIFIED",
            "DATAPROC"
          ],
          "enumDescriptions": [
            "Unspecified service.",
            "Cloud Dataproc."
          ]
        }
      }
    },
    "GoogleCloudDataplexV1ListSessionsResponse": {
      "id": "GoogleCloudDataplexV1ListSessionsResponse",
      "description": "List sessions response.",
      "properties": {
        "sessions": {
          "items": {
            "$ref": "GoogleCloudDataplexV1Session"
          },
          "type": "array",
          "description": "Sessions under a given environment."
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime": {
      "type": "object",
      "id": "GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime",
      "description": "Software Runtime Configuration to run Analyze.",
      "properties": {
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. Spark properties to provide configuration for use in sessions created for this environment. The properties to set on daemon config files. Property keys are specified in prefix:property format. The prefix must be \"spark\"."
        },
        "pythonPackages": {
          "description": "Optional. A list of python packages to be installed. Valid formats include Cloud Storage URI to a PIP installable library. For example, gs://bucket-name/my/path/to/lib.tar.gz",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "javaLibraries": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. List of Java jars to be included in the runtime environment. Valid input includes Cloud Storage URIs to Jar binaries. For example, gs://bucket-name/my/path/to/file.jar"
        },
        "imageVersion": {
          "type": "string",
          "description": "Required. Dataplex Image version."
        }
      }
    },
    "GoogleCloudDataplexV1ListContentResponse": {
      "description": "List content response.",
      "id": "GoogleCloudDataplexV1ListContentResponse",
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "description": "Content under the given parent lake.",
          "items": {
            "$ref": "GoogleCloudDataplexV1Content"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDataplexV1LakeMetastore": {
      "id": "GoogleCloudDataplexV1LakeMetastore",
      "type": "object",
      "properties": {
        "service": {
          "type": "string",
          "description": "Optional. A relative reference to the Dataproc Metastore (https://cloud.google.com/dataproc-metastore/docs) service associated with the lake: projects/{project_id}/locations/{location_id}/services/{service_id}"
        }
      },
      "description": "Settings to manage association of Dataproc Metastore with a lake."
    },
    "GoogleCloudDataplexV1Task": {
      "type": "object",
      "id": "GoogleCloudDataplexV1Task",
      "description": "A task represents a user-visible job.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Optional. User friendly display name."
        },
        "triggerSpec": {
          "$ref": "GoogleCloudDataplexV1TaskTriggerSpec",
          "description": "Required. Spec related to how often and when a task should be triggered."
        },
        "executionSpec": {
          "description": "Required. Spec related to how a task is executed.",
          "$ref": "GoogleCloudDataplexV1TaskExecutionSpec"
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time when the task was last updated."
        },
        "description": {
          "description": "Optional. Description of the task.",
          "type": "string"
        },
        "spark": {
          "$ref": "GoogleCloudDataplexV1TaskSparkTaskConfig",
          "description": "Config related to running custom Spark tasks."
        },
        "uid": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. System generated globally unique ID for the task. This ID will be different if the task is deleted and re-created with the same name."
        },
        "state": {
          "enumDescriptions": [
            "State is not specified.",
            "Resource is active, i.e., ready to use.",
            "Resource is under creation.",
            "Resource is under deletion.",
            "Resource is active but has unresolved actions."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CREATING",
            "DELETING",
            "ACTION_REQUIRED"
          ],
          "readOnly": true,
          "description": "Output only. Current state of the task.",
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The time when the task was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "name": {
          "description": "Output only. The relative resource name of the task, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/ tasks/{task_id}.",
          "readOnly": true,
          "type": "string"
        },
        "executionStatus": {
          "readOnly": true,
          "$ref": "GoogleCloudDataplexV1TaskExecutionStatus",
          "description": "Output only. Status of the latest task executions."
        },
        "labels": {
          "description": "Optional. User-defined labels for the task.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      }
    },
    "GoogleCloudDataplexV1DiscoveryEventActionDetails": {
      "type": "object",
      "id": "GoogleCloudDataplexV1DiscoveryEventActionDetails",
      "description": "Details about the action.",
      "properties": {
        "type": {
          "description": "The type of action. Eg. IncompatibleDataSchema, InvalidDataFormat",
          "type": "string"
        }
      }
    },
    "GoogleCloudDataplexV1Asset": {
      "id": "GoogleCloudDataplexV1Asset",
      "type": "object",
      "properties": {
        "resourceSpec": {
          "$ref": "GoogleCloudDataplexV1AssetResourceSpec",
          "description": "Required. Specification of the resource that is referenced by this asset."
        },
        "name": {
          "description": "Output only. The relative resource name of the asset, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/assets/{asset_id}.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time when the asset was created.",
          "readOnly": true
        },
        "resourceStatus": {
          "$ref": "GoogleCloudDataplexV1AssetResourceStatus",
          "description": "Output only. Status of the resource referenced by this asset.",
          "readOnly": true
        },
        "description": {
          "description": "Optional. Description of the asset.",
          "type": "string"
        },
        "discoverySpec": {
          "description": "Optional. Specification of the discovery feature applied to data referenced by this asset. When this spec is left unset, the asset will use the spec set on the parent zone.",
          "$ref": "GoogleCloudDataplexV1AssetDiscoverySpec"
        },
        "state": {
          "readOnly": true,
          "description": "Output only. Current state of the asset.",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CREATING",
            "DELETING",
            "ACTION_REQUIRED"
          ],
          "enumDescriptions": [
            "State is not specified.",
            "Resource is active, i.e., ready to use.",
            "Resource is under creation.",
            "Resource is under deletion.",
            "Resource is active but has unresolved actions."
          ],
          "type": "string"
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time when the asset was last updated.",
          "type": "string"
        },
        "discoveryStatus": {
          "$ref": "GoogleCloudDataplexV1AssetDiscoveryStatus",
          "readOnly": true,
          "description": "Output only. Status of the discovery feature applied to data referenced by this asset."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. User defined labels for the asset."
        },
        "uid": {
          "description": "Output only. System generated globally unique ID for the asset. This ID will be different if the asset is deleted and re-created with the same name.",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "description": "Optional. User friendly display name.",
          "type": "string"
        },
        "securityStatus": {
          "description": "Output only. Status of the security policy applied to resource referenced by this asset.",
          "$ref": "GoogleCloudDataplexV1AssetSecurityStatus",
          "readOnly": true
        }
      },
      "description": "An asset represents a cloud resource that is being managed within a lake as a member of a zone."
    },
    "GoogleCloudDataplexV1EnvironmentInfrastructureSpec": {
      "properties": {
        "compute": {
          "$ref": "GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources",
          "description": "Optional. Compute resources needed for analyze interactive workloads."
        },
        "osImage": {
          "$ref": "GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime",
          "description": "Required. Software Runtime Configuration for analyze interactive workloads."
        }
      },
      "type": "object",
      "description": "Configuration for the underlying infrastructure used to run workloads.",
      "id": "GoogleCloudDataplexV1EnvironmentInfrastructureSpec"
    },
    "GoogleCloudDataplexV1DiscoveryEventEntityDetails": {
      "type": "object",
      "description": "Details about the entity.",
      "id": "GoogleCloudDataplexV1DiscoveryEventEntityDetails",
      "properties": {
        "entity": {
          "description": "The name of the entity resource. The name is the fully-qualified resource name.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "ENTITY_TYPE_UNSPECIFIED",
            "TABLE",
            "FILESET"
          ],
          "enumDescriptions": [
            "An unspecified event type.",
            "Entities representing structured data.",
            "Entities representing unstructured data."
          ],
          "description": "The type of the entity resource."
        }
      }
    },
    "GoogleCloudDataplexV1ZoneDiscoverySpec": {
      "id": "GoogleCloudDataplexV1ZoneDiscoverySpec",
      "properties": {
        "schedule": {
          "description": "Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running discovery periodically. Successive discovery runs must be scheduled at least 60 minutes apart. The default value is to run discovery every 60 minutes. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: \"CRON_TZ=${IANA_TIME_ZONE}\" or TZ=${IANA_TIME_ZONE}\". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, \"CRON_TZ=America/New_York 1 * * * *\", or \"TZ=America/New_York 1 * * * *\".",
          "type": "string"
        },
        "enabled": {
          "type": "boolean",
          "description": "Required. Whether discovery is enabled."
        },
        "jsonOptions": {
          "description": "Optional. Configuration for Json data.",
          "$ref": "GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions"
        },
        "includePatterns": {
          "items": {
            "type": "string"
          },
          "description": "Optional. The list of patterns to apply for selecting data to include during discovery if only a subset of the data should considered. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.",
          "type": "array"
        },
        "excludePatterns": {
          "description": "Optional. The list of patterns to apply for selecting data to exclude during discovery. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "csvOptions": {
          "description": "Optional. Configuration for CSV data.",
          "$ref": "GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions"
        }
      },
      "type": "object",
      "description": "Settings to manage the metadata discovery and publishing in a zone."
    }
  },
  "name": "dataplex",
  "documentationLink": "https://cloud.google.com/dataplex/docs",
  "ownerDomain": "google.com",
  "version_module": true,
  "version": "v1",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "revision": "20220725",
  "canonicalName": "Cloud Dataplex",
  "title": "Cloud Dataplex API",
  "mtlsRootUrl": "https://dataplex.mtls.googleapis.com/",
  "description": "Dataplex API is used to manage the lifecycle of data lakes.",
  "batchPath": "batch",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "servicePath": "",
  "kind": "discovery#restDescription",
  "basePath": "",
  "baseUrl": "https://dataplex.googleapis.com/",
  "fullyEncodeReservedExpansion": true,
  "rootUrl": "https://dataplex.googleapis.com/",
  "id": "dataplex:v1",
  "discoveryVersion": "v1",
  "parameters": {
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "alt": {
      "description": "Data format for response.",
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query",
      "type": "boolean"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ],
      "type": "string"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    }
  },
  "protocol": "rest",
  "ownerName": "Google",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like \"displayName=tokyo\", and is documented in more detail in AIP-160 (https://google.aip.dev/160)."
                },
                "name": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "location": "path"
                },
                "pageToken": {
                  "description": "A page token received from the next_page_token field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "location": "query",
                  "format": "int32",
                  "type": "integer",
                  "description": "The maximum number of results to return. If not set, the service selects a default."
                }
              },
              "response": {
                "$ref": "GoogleCloudLocationListLocationsResponse"
              },
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}/locations",
              "flatPath": "v1/projects/{projectsId}/locations",
              "description": "Lists information about the supported locations for this service.",
              "id": "dataplex.projects.locations.list"
            },
            "get": {
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "path": "v1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "description": "Resource name for the location.",
                  "type": "string",
                  "required": true
                }
              },
              "response": {
                "$ref": "GoogleCloudLocationLocation"
              },
              "description": "Gets information about a location.",
              "id": "dataplex.projects.locations.get",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET"
            }
          },
          "resources": {
            "lakes": {
              "resources": {
                "zones": {
                  "resources": {
                    "actions": {
                      "methods": {
                        "list": {
                          "response": {
                            "$ref": "GoogleCloudDataplexV1ListActionsResponse"
                          },
                          "httpMethod": "GET",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/actions",
                          "path": "v1/{+parent}/actions",
                          "id": "dataplex.projects.locations.lakes.zones.actions.list",
                          "description": "Lists action resources in a zone.",
                          "parameters": {
                            "pageToken": {
                              "location": "query",
                              "type": "string",
                              "description": "Optional. Page token received from a previous ListZoneActions call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListZoneActions must match the call that provided the page token."
                            },
                            "parent": {
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+$",
                              "description": "Required. The resource name of the parent zone: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}.",
                              "location": "path",
                              "required": true
                            },
                            "pageSize": {
                              "description": "Optional. Maximum number of actions to return. The service may return fewer than this value. If unspecified, at most 10 actions will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                              "location": "query",
                              "format": "int32",
                              "type": "integer"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ]
                        }
                      }
                    },
                    "assets": {
                      "resources": {
                        "actions": {
                          "methods": {
                            "list": {
                              "id": "dataplex.projects.locations.lakes.zones.assets.actions.list",
                              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}/actions",
                              "parameters": {
                                "pageSize": {
                                  "location": "query",
                                  "type": "integer",
                                  "description": "Optional. Maximum number of actions to return. The service may return fewer than this value. If unspecified, at most 10 actions will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                                  "format": "int32"
                                },
                                "pageToken": {
                                  "type": "string",
                                  "description": "Optional. Page token received from a previous ListAssetActions call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListAssetActions must match the call that provided the page token.",
                                  "location": "query"
                                },
                                "parent": {
                                  "type": "string",
                                  "description": "Required. The resource name of the parent asset: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/assets/{asset_id}.",
                                  "location": "path",
                                  "required": true,
                                  "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/assets/[^/]+$"
                                }
                              },
                              "path": "v1/{+parent}/actions",
                              "response": {
                                "$ref": "GoogleCloudDataplexV1ListActionsResponse"
                              },
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "httpMethod": "GET",
                              "parameterOrder": [
                                "parent"
                              ],
                              "description": "Lists action resources in an asset."
                            }
                          }
                        }
                      },
                      "methods": {
                        "get": {
                          "response": {
                            "$ref": "GoogleCloudDataplexV1Asset"
                          },
                          "description": "Retrieves an asset resource.",
                          "path": "v1/{+name}",
                          "id": "dataplex.projects.locations.lakes.zones.assets.get",
                          "parameters": {
                            "name": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/assets/[^/]+$",
                              "type": "string",
                              "location": "path",
                              "description": "Required. The resource name of the asset: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/assets/{asset_id}.",
                              "required": true
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameterOrder": [
                            "name"
                          ],
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}",
                          "httpMethod": "GET"
                        },
                        "list": {
                          "description": "Lists asset resources in a zone.",
                          "parameters": {
                            "pageSize": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Optional. Maximum number of asset to return. The service may return fewer than this value. If unspecified, at most 10 assets will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                              "location": "query"
                            },
                            "pageToken": {
                              "description": "Optional. Page token received from a previous ListAssets call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListAssets must match the call that provided the page token.",
                              "type": "string",
                              "location": "query"
                            },
                            "parent": {
                              "required": true,
                              "description": "Required. The resource name of the parent zone: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+$",
                              "type": "string",
                              "location": "path"
                            },
                            "filter": {
                              "type": "string",
                              "location": "query",
                              "description": "Optional. Filter request."
                            },
                            "orderBy": {
                              "type": "string",
                              "location": "query",
                              "description": "Optional. Order by fields for the result."
                            }
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets",
                          "response": {
                            "$ref": "GoogleCloudDataplexV1ListAssetsResponse"
                          },
                          "path": "v1/{+parent}/assets",
                          "id": "dataplex.projects.locations.lakes.zones.assets.list",
                          "httpMethod": "GET",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameterOrder": [
                            "parent"
                          ]
                        },
                        "patch": {
                          "parameters": {
                            "validateOnly": {
                              "location": "query",
                              "description": "Optional. Only validate the request, but do not perform mutations. The default is false.",
                              "type": "boolean"
                            },
                            "name": {
                              "type": "string",
                              "description": "Output only. The relative resource name of the asset, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/assets/{asset_id}.",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/assets/[^/]+$",
                              "location": "path"
                            },
                            "updateMask": {
                              "location": "query",
                              "description": "Required. Mask of fields to update.",
                              "format": "google-fieldmask",
                              "type": "string"
                            }
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}",
                          "request": {
                            "$ref": "GoogleCloudDataplexV1Asset"
                          },
                          "description": "Updates an asset resource.",
                          "id": "dataplex.projects.locations.lakes.zones.assets.patch",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          },
                          "httpMethod": "PATCH",
                          "path": "v1/{+name}"
                        },
                        "setIamPolicy": {
                          "id": "dataplex.projects.locations.lakes.zones.assets.setIamPolicy",
                          "request": {
                            "$ref": "GoogleIamV1SetIamPolicyRequest"
                          },
                          "description": "Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}:setIamPolicy",
                          "path": "v1/{+resource}:setIamPolicy",
                          "httpMethod": "POST",
                          "parameters": {
                            "resource": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/assets/[^/]+$",
                              "type": "string",
                              "location": "path",
                              "required": true,
                              "description": "REQUIRED: The resource for which the policy is being specified. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                            }
                          },
                          "parameterOrder": [
                            "resource"
                          ],
                          "response": {
                            "$ref": "GoogleIamV1Policy"
                          }
                        },
                        "getIamPolicy": {
                          "parameters": {
                            "options.requestedPolicyVersion": {
                              "description": "Optional. The maximum policy version that will be used to format the policy.Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset.The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).",
                              "location": "query",
                              "format": "int32",
                              "type": "integer"
                            },
                            "resource": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/assets/[^/]+$",
                              "required": true,
                              "location": "path",
                              "description": "REQUIRED: The resource for which the policy is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                              "type": "string"
                            }
                          },
                          "id": "dataplex.projects.locations.lakes.zones.assets.getIamPolicy",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "path": "v1/{+resource}:getIamPolicy",
                          "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                          "response": {
                            "$ref": "GoogleIamV1Policy"
                          },
                          "httpMethod": "GET",
                          "parameterOrder": [
                            "resource"
                          ],
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}:getIamPolicy"
                        },
                        "delete": {
                          "id": "dataplex.projects.locations.lakes.zones.assets.delete",
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          },
                          "httpMethod": "DELETE",
                          "description": "Deletes an asset resource. The referenced storage resource is detached (default) or deleted based on the associated Lifecycle policy.",
                          "parameterOrder": [
                            "name"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "name": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/assets/[^/]+$",
                              "required": true,
                              "type": "string",
                              "location": "path",
                              "description": "Required. The resource name of the asset: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/assets/{asset_id}."
                            }
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}",
                          "path": "v1/{+name}"
                        },
                        "testIamPermissions": {
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}:testIamPermissions",
                          "httpMethod": "POST",
                          "path": "v1/{+resource}:testIamPermissions",
                          "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                          "parameterOrder": [
                            "resource"
                          ],
                          "id": "dataplex.projects.locations.lakes.zones.assets.testIamPermissions",
                          "response": {
                            "$ref": "GoogleIamV1TestIamPermissionsResponse"
                          },
                          "parameters": {
                            "resource": {
                              "description": "REQUIRED: The resource for which the policy detail is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/assets/[^/]+$",
                              "location": "path",
                              "type": "string",
                              "required": true
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "request": {
                            "$ref": "GoogleIamV1TestIamPermissionsRequest"
                          }
                        },
                        "create": {
                          "request": {
                            "$ref": "GoogleCloudDataplexV1Asset"
                          },
                          "id": "dataplex.projects.locations.lakes.zones.assets.create",
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "httpMethod": "POST",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets",
                          "description": "Creates an asset resource.",
                          "parameters": {
                            "validateOnly": {
                              "location": "query",
                              "type": "boolean",
                              "description": "Optional. Only validate the request, but do not perform mutations. The default is false."
                            },
                            "assetId": {
                              "location": "query",
                              "description": "Required. Asset identifier. This ID will be used to generate names such as table names when publishing metadata to Hive Metastore and BigQuery. * Must contain only lowercase letters, numbers and hyphens. * Must start with a letter. * Must end with a number or a letter. * Must be between 1-63 characters. * Must be unique within the zone.",
                              "type": "string"
                            },
                            "parent": {
                              "required": true,
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+$",
                              "description": "Required. The resource name of the parent zone: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}.",
                              "type": "string"
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "path": "v1/{+parent}/assets"
                        }
                      }
                    },
                    "entities": {
                      "resources": {
                        "partitions": {
                          "methods": {
                            "create": {
                              "httpMethod": "POST",
                              "parameters": {
                                "parent": {
                                  "description": "Required. The resource name of the parent zone: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{entity_id}.",
                                  "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/entities/[^/]+$",
                                  "required": true,
                                  "location": "path",
                                  "type": "string"
                                },
                                "validateOnly": {
                                  "location": "query",
                                  "description": "Optional. Only validate the request, but do not perform mutations. The default is false.",
                                  "type": "boolean"
                                }
                              },
                              "response": {
                                "$ref": "GoogleCloudDataplexV1Partition"
                              },
                              "description": "Create a metadata partition.",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "parameterOrder": [
                                "parent"
                              ],
                              "request": {
                                "$ref": "GoogleCloudDataplexV1Partition"
                              },
                              "id": "dataplex.projects.locations.lakes.zones.entities.partitions.create",
                              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities/{entitiesId}/partitions",
                              "path": "v1/{+parent}/partitions"
                            },
                            "get": {
                              "parameters": {
                                "name": {
                                  "location": "path",
                                  "description": "Required. The resource name of the partition: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{entity_id}/partitions/{partition_value_path}. The {partition_value_path} segment consists of an ordered sequence of partition values separated by \"/\". All values must be provided.",
                                  "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/entities/[^/]+/partitions/.*$",
                                  "required": true,
                                  "type": "string"
                                }
                              },
                              "id": "dataplex.projects.locations.lakes.zones.entities.partitions.get",
                              "httpMethod": "GET",
                              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities/{entitiesId}/partitions/{partitionsId}",
                              "description": "Get a metadata partition of an entity.",
                              "parameterOrder": [
                                "name"
                              ],
                              "response": {
                                "$ref": "GoogleCloudDataplexV1Partition"
                              },
                              "path": "v1/{+name}",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ]
                            },
                            "list": {
                              "parameterOrder": [
                                "parent"
                              ],
                              "path": "v1/{+parent}/partitions",
                              "description": "List metadata partitions of an entity.",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "response": {
                                "$ref": "GoogleCloudDataplexV1ListPartitionsResponse"
                              },
                              "parameters": {
                                "parent": {
                                  "location": "path",
                                  "description": "Required. The resource name of the parent entity: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{entity_id}.",
                                  "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/entities/[^/]+$",
                                  "required": true,
                                  "type": "string"
                                },
                                "pageSize": {
                                  "format": "int32",
                                  "type": "integer",
                                  "location": "query",
                                  "description": "Optional. Maximum number of partitions to return. The service may return fewer than this value. If unspecified, 100 partitions will be returned by default. The maximum page size is 500; larger values will will be truncated to 500."
                                },
                                "pageToken": {
                                  "description": "Optional. Page token received from a previous ListPartitions call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListPartitions must match the call that provided the page token.",
                                  "location": "query",
                                  "type": "string"
                                },
                                "filter": {
                                  "type": "string",
                                  "description": "Optional. Filter the partitions returned to the caller using a key value pair expression. Supported operators and syntax: logic operators: AND, OR comparison operators: \u003c, \u003e, \u003e=, \u003c= ,=, != LIKE operators: The right hand of a LIKE operator supports \".\" and \"*\" for wildcard searches, for example \"value1 LIKE \".*oo.*\" parenthetical grouping: ( )Sample filter expression: `?filter=\"key1 \u003c value1 OR key2 \u003e value2\"Notes: Keys to the left of operators are case insensitive. Partition results are sorted first by creation time, then by lexicographic order. Up to 20 key value filter pairs are allowed, but due to performance considerations, only the first 10 will be used as a filter.",
                                  "location": "query"
                                }
                              },
                              "id": "dataplex.projects.locations.lakes.zones.entities.partitions.list",
                              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities/{entitiesId}/partitions",
                              "httpMethod": "GET"
                            },
                            "delete": {
                              "parameterOrder": [
                                "name"
                              ],
                              "httpMethod": "DELETE",
                              "description": "Delete a metadata partition.",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities/{entitiesId}/partitions/{partitionsId}",
                              "id": "dataplex.projects.locations.lakes.zones.entities.partitions.delete",
                              "path": "v1/{+name}",
                              "response": {
                                "$ref": "Empty"
                              },
                              "parameters": {
                                "etag": {
                                  "location": "query",
                                  "type": "string",
                                  "description": "Optional. The etag associated with the partition."
                                },
                                "name": {
                                  "required": true,
                                  "location": "path",
                                  "type": "string",
                                  "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/entities/[^/]+/partitions/.*$",
                                  "description": "Required. The resource name of the partition. format: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{entity_id}/partitions/{partition_value_path}. The {partition_value_path} segment consists of an ordered sequence of partition values separated by \"/\". All values must be provided."
                                }
                              }
                            }
                          }
                        }
                      },
                      "methods": {
                        "delete": {
                          "parameterOrder": [
                            "name"
                          ],
                          "httpMethod": "DELETE",
                          "path": "v1/{+name}",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "Empty"
                          },
                          "description": "Delete a metadata entity.",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities/{entitiesId}",
                          "parameters": {
                            "etag": {
                              "type": "string",
                              "location": "query",
                              "description": "Required. The etag associated with the entity, which can be retrieved with a GetEntity request."
                            },
                            "name": {
                              "type": "string",
                              "required": true,
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/entities/[^/]+$",
                              "description": "Required. The resource name of the entity: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{entity_id}."
                            }
                          },
                          "id": "dataplex.projects.locations.lakes.zones.entities.delete"
                        },
                        "create": {
                          "httpMethod": "POST",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities",
                          "parameterOrder": [
                            "parent"
                          ],
                          "id": "dataplex.projects.locations.lakes.zones.entities.create",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "GoogleCloudDataplexV1Entity"
                          },
                          "description": "Create a metadata entity.",
                          "request": {
                            "$ref": "GoogleCloudDataplexV1Entity"
                          },
                          "parameters": {
                            "parent": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+$",
                              "location": "path",
                              "type": "string",
                              "description": "Required. The resource name of the parent zone: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}.",
                              "required": true
                            },
                            "validateOnly": {
                              "description": "Optional. Only validate the request, but do not perform mutations. The default is false.",
                              "location": "query",
                              "type": "boolean"
                            }
                          },
                          "path": "v1/{+parent}/entities"
                        },
                        "update": {
                          "httpMethod": "PUT",
                          "request": {
                            "$ref": "GoogleCloudDataplexV1Entity"
                          },
                          "response": {
                            "$ref": "GoogleCloudDataplexV1Entity"
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "parameters": {
                            "validateOnly": {
                              "type": "boolean",
                              "description": "Optional. Only validate the request, but do not perform mutations. The default is false.",
                              "location": "query"
                            },
                            "name": {
                              "type": "string",
                              "description": "Output only. The resource name of the entity, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{id}.",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/entities/[^/]+$",
                              "location": "path"
                            }
                          },
                          "path": "v1/{+name}",
                          "id": "dataplex.projects.locations.lakes.zones.entities.update",
                          "description": "Update a metadata entity. Only supports full resource update.",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities/{entitiesId}",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ]
                        },
                        "get": {
                          "id": "dataplex.projects.locations.lakes.zones.entities.get",
                          "response": {
                            "$ref": "GoogleCloudDataplexV1Entity"
                          },
                          "path": "v1/{+name}",
                          "parameters": {
                            "name": {
                              "type": "string",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/entities/[^/]+$",
                              "location": "path",
                              "description": "Required. The resource name of the entity: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{entity_id}."
                            },
                            "view": {
                              "description": "Optional. Used to select the subset of entity information to return. Defaults to BASIC.",
                              "enum": [
                                "ENTITY_VIEW_UNSPECIFIED",
                                "BASIC",
                                "SCHEMA",
                                "FULL"
                              ],
                              "location": "query",
                              "enumDescriptions": [
                                "The API will default to the BASIC view.",
                                "Minimal view that does not include the schema.",
                                "Include basic information and schema.",
                                "Include everything. Currently, this is the same as the SCHEMA view."
                              ],
                              "type": "string"
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameterOrder": [
                            "name"
                          ],
                          "description": "Get a metadata entity.",
                          "httpMethod": "GET",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities/{entitiesId}"
                        },
                        "list": {
                          "response": {
                            "$ref": "GoogleCloudDataplexV1ListEntitiesResponse"
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "description": "List metadata entities in a zone.",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities",
                          "parameters": {
                            "view": {
                              "location": "query",
                              "enum": [
                                "ENTITY_VIEW_UNSPECIFIED",
                                "TABLES",
                                "FILESETS"
                              ],
                              "description": "Required. Specify the entity view to make a partial list request.",
                              "enumDescriptions": [
                                "The default unset value. Return both table and fileset entities if unspecified.",
                                "Only list table entities.",
                                "Only list fileset entities."
                              ],
                              "type": "string"
                            },
                            "pageToken": {
                              "location": "query",
                              "type": "string",
                              "description": "Optional. Page token received from a previous ListEntities call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListEntities must match the call that provided the page token."
                            },
                            "parent": {
                              "required": true,
                              "location": "path",
                              "description": "Required. The resource name of the parent zone: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}.",
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+$"
                            },
                            "pageSize": {
                              "format": "int32",
                              "location": "query",
                              "description": "Optional. Maximum number of entities to return. The service may return fewer than this value. If unspecified, 100 entities will be returned by default. The maximum value is 500; larger values will will be truncated to 500.",
                              "type": "integer"
                            },
                            "filter": {
                              "description": "Optional. The following filter parameters can be added to the URL to limit the entities returned by the API: Entity ID: ?filter=\"id=entityID\" Asset ID: ?filter=\"asset=assetID\" Data path ?filter=\"data_path=gs://my-bucket\" Is HIVE compatible: ?filter=\"hive_compatible=true\" Is BigQuery compatible: ?filter=\"bigquery_compatible=true\"",
                              "type": "string",
                              "location": "query"
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "id": "dataplex.projects.locations.lakes.zones.entities.list",
                          "httpMethod": "GET",
                          "path": "v1/{+parent}/entities"
                        }
                      }
                    }
                  },
                  "methods": {
                    "patch": {
                      "path": "v1/{+name}",
                      "parameters": {
                        "updateMask": {
                          "description": "Required. Mask of fields to update.",
                          "type": "string",
                          "location": "query",
                          "format": "google-fieldmask"
                        },
                        "validateOnly": {
                          "description": "Optional. Only validate the request, but do not perform mutations. The default is false.",
                          "type": "boolean",
                          "location": "query"
                        },
                        "name": {
                          "description": "Output only. The relative resource name of the zone, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "request": {
                        "$ref": "GoogleCloudDataplexV1Zone"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}",
                      "description": "Updates a zone resource.",
                      "httpMethod": "PATCH",
                      "id": "dataplex.projects.locations.lakes.zones.patch",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      }
                    },
                    "create": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "dataplex.projects.locations.lakes.zones.create",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones",
                      "description": "Creates a zone resource within a lake.",
                      "path": "v1/{+parent}/zones",
                      "parameters": {
                        "validateOnly": {
                          "description": "Optional. Only validate the request, but do not perform mutations. The default is false.",
                          "location": "query",
                          "type": "boolean"
                        },
                        "zoneId": {
                          "type": "string",
                          "description": "Required. Zone identifier. This ID will be used to generate names such as database and dataset names when publishing metadata to Hive Metastore and BigQuery. * Must contain only lowercase letters, numbers and hyphens. * Must start with a letter. * Must end with a number or a letter. * Must be between 1-63 characters. * Must be unique across all lakes from all locations in a project. * Must not be one of the reserved IDs (i.e. \"default\", \"global-temp\")",
                          "location": "query"
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$",
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "Required. The resource name of the parent lake: projects/{project_number}/locations/{location_id}/lakes/{lake_id}."
                        }
                      },
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "GoogleCloudDataplexV1Zone"
                      }
                    },
                    "testIamPermissions": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}:testIamPermissions",
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+$",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "path": "v1/{+resource}:testIamPermissions",
                      "id": "dataplex.projects.locations.lakes.zones.testIamPermissions",
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "GoogleIamV1TestIamPermissionsRequest"
                      },
                      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                      "response": {
                        "$ref": "GoogleIamV1TestIamPermissionsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "resource"
                      ]
                    },
                    "getIamPolicy": {
                      "response": {
                        "$ref": "GoogleIamV1Policy"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}:getIamPolicy",
                      "id": "dataplex.projects.locations.lakes.zones.getIamPolicy",
                      "parameterOrder": [
                        "resource"
                      ],
                      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                      "parameters": {
                        "options.requestedPolicyVersion": {
                          "location": "query",
                          "description": "Optional. The maximum policy version that will be used to format the policy.Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset.The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).",
                          "type": "integer",
                          "format": "int32"
                        },
                        "resource": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+$",
                          "description": "REQUIRED: The resource for which the policy is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "type": "string",
                          "location": "path",
                          "required": true
                        }
                      },
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+resource}:getIamPolicy"
                    },
                    "delete": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "dataplex.projects.locations.lakes.zones.delete",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "description": "Required. The resource name of the zone: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}.",
                          "required": true
                        }
                      },
                      "description": "Deletes a zone resource. All assets within a zone must be deleted before the zone can be deleted.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}"
                    },
                    "list": {
                      "httpMethod": "GET",
                      "description": "Lists zone resources in a lake.",
                      "response": {
                        "$ref": "GoogleCloudDataplexV1ListZonesResponse"
                      },
                      "id": "dataplex.projects.locations.lakes.zones.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones",
                      "parameters": {
                        "pageSize": {
                          "description": "Optional. Maximum number of zones to return. The service may return fewer than this value. If unspecified, at most 10 zones will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "format": "int32",
                          "type": "integer",
                          "location": "query"
                        },
                        "parent": {
                          "required": true,
                          "location": "path",
                          "description": "Required. The resource name of the parent lake: projects/{project_number}/locations/{location_id}/lakes/{lake_id}.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$",
                          "type": "string"
                        },
                        "filter": {
                          "description": "Optional. Filter request.",
                          "location": "query",
                          "type": "string"
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "Optional. Page token received from a previous ListZones call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListZones must match the call that provided the page token.",
                          "location": "query"
                        },
                        "orderBy": {
                          "type": "string",
                          "description": "Optional. Order by fields for the result.",
                          "location": "query"
                        }
                      },
                      "path": "v1/{+parent}/zones",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "get": {
                      "id": "dataplex.projects.locations.lakes.zones.get",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDataplexV1Zone"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}",
                      "description": "Retrieves a zone resource.",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1/{+name}",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "required": true,
                          "description": "Required. The resource name of the zone: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+$",
                          "type": "string"
                        }
                      }
                    },
                    "setIamPolicy": {
                      "parameters": {
                        "resource": {
                          "type": "string",
                          "description": "REQUIRED: The resource for which the policy is being specified. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+$",
                          "location": "path"
                        }
                      },
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "GoogleIamV1SetIamPolicyRequest"
                      },
                      "response": {
                        "$ref": "GoogleIamV1Policy"
                      },
                      "description": "Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}:setIamPolicy",
                      "parameterOrder": [
                        "resource"
                      ],
                      "id": "dataplex.projects.locations.lakes.zones.setIamPolicy",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+resource}:setIamPolicy"
                    }
                  }
                },
                "contentitems": {
                  "methods": {
                    "delete": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/contentitems/{contentitemsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Delete a content.",
                      "path": "v1/{+name}",
                      "response": {
                        "$ref": "Empty"
                      },
                      "id": "dataplex.projects.locations.lakes.contentitems.delete",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "required": true,
                          "location": "path",
                          "description": "Required. The resource name of the content: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/contentitems/.*$",
                          "type": "string"
                        }
                      },
                      "httpMethod": "DELETE"
                    },
                    "patch": {
                      "request": {
                        "$ref": "GoogleCloudDataplexV1Content"
                      },
                      "description": "Update a content. Only supports full resource update.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/contentitems/{contentitemsId}",
                      "path": "v1/{+name}",
                      "response": {
                        "$ref": "GoogleCloudDataplexV1Content"
                      },
                      "parameters": {
                        "updateMask": {
                          "location": "query",
                          "type": "string",
                          "description": "Required. Mask of fields to update.",
                          "format": "google-fieldmask"
                        },
                        "name": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/contentitems/.*$",
                          "location": "path",
                          "required": true,
                          "description": "Output only. The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}"
                        },
                        "validateOnly": {
                          "location": "query",
                          "type": "boolean",
                          "description": "Optional. Only validate the request, but do not perform mutations. The default is false."
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "dataplex.projects.locations.lakes.contentitems.patch",
                      "httpMethod": "PATCH"
                    },
                    "getIamPolicy": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/contentitems/{contentitemsId}:getIamPolicy",
                      "parameters": {
                        "options.requestedPolicyVersion": {
                          "description": "Optional. The maximum policy version that will be used to format the policy.Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset.The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).",
                          "location": "query",
                          "format": "int32",
                          "type": "integer"
                        },
                        "resource": {
                          "location": "path",
                          "description": "REQUIRED: The resource for which the policy is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/contentitems/.*$",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "httpMethod": "GET",
                      "id": "dataplex.projects.locations.lakes.contentitems.getIamPolicy",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleIamV1Policy"
                      },
                      "description": "Gets the access control policy for a contentitem resource. A NOT_FOUND error is returned if the resource does not exist. An empty policy is returned if the resource exists but does not have a policy set on it.Caller must have Google IAM dataplex.content.getIamPolicy permission on the resource.",
                      "path": "v1/{+resource}:getIamPolicy"
                    },
                    "testIamPermissions": {
                      "request": {
                        "$ref": "GoogleIamV1TestIamPermissionsRequest"
                      },
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "GoogleIamV1TestIamPermissionsResponse"
                      },
                      "id": "dataplex.projects.locations.lakes.contentitems.testIamPermissions",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/contentitems/{contentitemsId}:testIamPermissions",
                      "path": "v1/{+resource}:testIamPermissions",
                      "description": "Returns the caller's permissions on a resource. If the resource does not exist, an empty set of permissions is returned (a NOT_FOUND error is not returned).A caller is not required to have Google IAM permission to make this request.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                      "parameterOrder": [
                        "resource"
                      ],
                      "parameters": {
                        "resource": {
                          "location": "path",
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/contentitems/.*$",
                          "required": true
                        }
                      }
                    },
                    "create": {
                      "description": "Create a content.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/contentitems",
                      "request": {
                        "$ref": "GoogleCloudDataplexV1Content"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$",
                          "required": true,
                          "type": "string",
                          "description": "Required. The resource name of the parent lake: projects/{project_id}/locations/{location_id}/lakes/{lake_id}",
                          "location": "path"
                        },
                        "validateOnly": {
                          "description": "Optional. Only validate the request, but do not perform mutations. The default is false.",
                          "location": "query",
                          "type": "boolean"
                        }
                      },
                      "id": "dataplex.projects.locations.lakes.contentitems.create",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+parent}/contentitems",
                      "response": {
                        "$ref": "GoogleCloudDataplexV1Content"
                      },
                      "httpMethod": "POST"
                    },
                    "setIamPolicy": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleIamV1Policy"
                      },
                      "description": "Sets the access control policy on the specified contentitem resource. Replaces any existing policy.Caller must have Google IAM dataplex.content.setIamPolicy permission on the resource.",
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "resource"
                      ],
                      "path": "v1/{+resource}:setIamPolicy",
                      "parameters": {
                        "resource": {
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/contentitems/.*$",
                          "description": "REQUIRED: The resource for which the policy is being specified. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "type": "string"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/contentitems/{contentitemsId}:setIamPolicy",
                      "id": "dataplex.projects.locations.lakes.contentitems.setIamPolicy",
                      "request": {
                        "$ref": "GoogleIamV1SetIamPolicyRequest"
                      }
                    },
                    "list": {
                      "path": "v1/{+parent}/contentitems",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/contentitems",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "pageSize": {
                          "type": "integer",
                          "location": "query",
                          "description": "Optional. Maximum number of content to return. The service may return fewer than this value. If unspecified, at most 10 content will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "format": "int32"
                        },
                        "parent": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "description": "Required. The resource name of the parent lake: projects/{project_id}/locations/{location_id}/lakes/{lake_id}",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$"
                        },
                        "filter": {
                          "type": "string",
                          "description": "Optional. Filter request. Filters are case-sensitive. The following formats are supported:labels.key1 = \"value1\" labels:key1 type = \"NOTEBOOK\" type = \"SQL_SCRIPT\"These restrictions can be coinjoined with AND, OR and NOT conjunctions.",
                          "location": "query"
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "Optional. Page token received from a previous ListContent call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListContent must match the call that provided the page token.",
                          "type": "string"
                        }
                      },
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "GoogleCloudDataplexV1ListContentResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "dataplex.projects.locations.lakes.contentitems.list",
                      "description": "List content."
                    },
                    "get": {
                      "response": {
                        "$ref": "GoogleCloudDataplexV1Content"
                      },
                      "description": "Get a content resource.",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "dataplex.projects.locations.lakes.contentitems.get",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/contentitems/{contentitemsId}",
                      "parameters": {
                        "view": {
                          "type": "string",
                          "location": "query",
                          "enumDescriptions": [
                            "Content view not specified. Defaults to BASIC. The API will default to the BASIC view.",
                            "Will not return the data_text field.",
                            "Returns the complete proto."
                          ],
                          "description": "Optional. Specify content view to make a partial request.",
                          "enum": [
                            "CONTENT_VIEW_UNSPECIFIED",
                            "BASIC",
                            "FULL"
                          ]
                        },
                        "name": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/contentitems/.*$",
                          "location": "path",
                          "type": "string",
                          "description": "Required. The resource name of the content: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}"
                        }
                      },
                      "path": "v1/{+name}"
                    }
                  }
                },
                "content": {
                  "methods": {
                    "testIamPermissions": {
                      "id": "dataplex.projects.locations.lakes.content.testIamPermissions",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "resource"
                      ],
                      "request": {
                        "$ref": "GoogleIamV1TestIamPermissionsRequest"
                      },
                      "path": "v1/{+resource}:testIamPermissions",
                      "response": {
                        "$ref": "GoogleIamV1TestIamPermissionsResponse"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content/{contentId}:testIamPermissions",
                      "parameters": {
                        "resource": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/content/.*$",
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                        }
                      },
                      "description": "Returns the caller's permissions on a resource. If the resource does not exist, an empty set of permissions is returned (a NOT_FOUND error is not returned).A caller is not required to have Google IAM permission to make this request.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                      "httpMethod": "POST"
                    },
                    "patch": {
                      "request": {
                        "$ref": "GoogleCloudDataplexV1Content"
                      },
                      "response": {
                        "$ref": "GoogleCloudDataplexV1Content"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "validateOnly": {
                          "location": "query",
                          "description": "Optional. Only validate the request, but do not perform mutations. The default is false.",
                          "type": "boolean"
                        },
                        "updateMask": {
                          "type": "string",
                          "format": "google-fieldmask",
                          "description": "Required. Mask of fields to update.",
                          "location": "query"
                        },
                        "name": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/content/.*$",
                          "description": "Output only. The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "httpMethod": "PATCH",
                      "path": "v1/{+name}",
                      "id": "dataplex.projects.locations.lakes.content.patch",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content/{contentId}",
                      "description": "Update a content. Only supports full resource update."
                    },
                    "create": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDataplexV1Content"
                      },
                      "description": "Create a content.",
                      "request": {
                        "$ref": "GoogleCloudDataplexV1Content"
                      },
                      "parameters": {
                        "validateOnly": {
                          "type": "boolean",
                          "location": "query",
                          "description": "Optional. Only validate the request, but do not perform mutations. The default is false."
                        },
                        "parent": {
                          "required": true,
                          "description": "Required. The resource name of the parent lake: projects/{project_id}/locations/{location_id}/lakes/{lake_id}",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$",
                          "location": "path"
                        }
                      },
                      "path": "v1/{+parent}/content",
                      "httpMethod": "POST",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content",
                      "id": "dataplex.projects.locations.lakes.content.create"
                    },
                    "setIamPolicy": {
                      "id": "dataplex.projects.locations.lakes.content.setIamPolicy",
                      "response": {
                        "$ref": "GoogleIamV1Policy"
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "path": "v1/{+resource}:setIamPolicy",
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy is being specified. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/content/.*$",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "request": {
                        "$ref": "GoogleIamV1SetIamPolicyRequest"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content/{contentId}:setIamPolicy",
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Sets the access control policy on the specified contentitem resource. Replaces any existing policy.Caller must have Google IAM dataplex.content.setIamPolicy permission on the resource."
                    },
                    "get": {
                      "description": "Get a content resource.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content/{contentId}",
                      "parameters": {
                        "view": {
                          "enumDescriptions": [
                            "Content view not specified. Defaults to BASIC. The API will default to the BASIC view.",
                            "Will not return the data_text field.",
                            "Returns the complete proto."
                          ],
                          "description": "Optional. Specify content view to make a partial request.",
                          "type": "string",
                          "enum": [
                            "CONTENT_VIEW_UNSPECIFIED",
                            "BASIC",
                            "FULL"
                          ],
                          "location": "query"
                        },
                        "name": {
                          "required": true,
                          "location": "path",
                          "description": "Required. The resource name of the content: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/content/.*$",
                          "type": "string"
                        }
                      },
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDataplexV1Content"
                      },
                      "path": "v1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "dataplex.projects.locations.lakes.content.get"
                    },
                    "delete": {
                      "parameters": {
                        "name": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/content/.*$",
                          "description": "Required. The resource name of the content: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}",
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "path": "v1/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Delete a content.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Empty"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content/{contentId}",
                      "httpMethod": "DELETE",
                      "id": "dataplex.projects.locations.lakes.content.delete"
                    },
                    "getIamPolicy": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content/{contentId}:getIamPolicy",
                      "path": "v1/{+resource}:getIamPolicy",
                      "id": "dataplex.projects.locations.lakes.content.getIamPolicy",
                      "parameterOrder": [
                        "resource"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets the access control policy for a contentitem resource. A NOT_FOUND error is returned if the resource does not exist. An empty policy is returned if the resource exists but does not have a policy set on it.Caller must have Google IAM dataplex.content.getIamPolicy permission on the resource.",
                      "httpMethod": "GET",
                      "parameters": {
                        "options.requestedPolicyVersion": {
                          "format": "int32",
                          "description": "Optional. The maximum policy version that will be used to format the policy.Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset.The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).",
                          "type": "integer",
                          "location": "query"
                        },
                        "resource": {
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/content/.*$",
                          "location": "path",
                          "description": "REQUIRED: The resource for which the policy is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                        }
                      },
                      "response": {
                        "$ref": "GoogleIamV1Policy"
                      }
                    },
                    "list": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "List content.",
                      "httpMethod": "GET",
                      "parameters": {
                        "filter": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. Filter request. Filters are case-sensitive. The following formats are supported:labels.key1 = \"value1\" labels:key1 type = \"NOTEBOOK\" type = \"SQL_SCRIPT\"These restrictions can be coinjoined with AND, OR and NOT conjunctions."
                        },
                        "parent": {
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$",
                          "type": "string",
                          "description": "Required. The resource name of the parent lake: projects/{project_id}/locations/{location_id}/lakes/{lake_id}"
                        },
                        "pageToken": {
                          "description": "Optional. Page token received from a previous ListContent call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListContent must match the call that provided the page token.",
                          "location": "query",
                          "type": "string"
                        },
                        "pageSize": {
                          "format": "int32",
                          "description": "Optional. Maximum number of content to return. The service may return fewer than this value. If unspecified, at most 10 content will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "type": "integer",
                          "location": "query"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content",
                      "response": {
                        "$ref": "GoogleCloudDataplexV1ListContentResponse"
                      },
                      "id": "dataplex.projects.locations.lakes.content.list",
                      "path": "v1/{+parent}/content"
                    }
                  }
                },
                "environments": {
                  "resources": {
                    "sessions": {
                      "methods": {
                        "list": {
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}/sessions",
                          "description": "Lists session resources in an environment.",
                          "id": "dataplex.projects.locations.lakes.environments.sessions.list",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameterOrder": [
                            "parent"
                          ],
                          "response": {
                            "$ref": "GoogleCloudDataplexV1ListSessionsResponse"
                          },
                          "parameters": {
                            "parent": {
                              "description": "Required. The resource name of the parent environment: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/environment/{environment_id}.",
                              "type": "string",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/environments/[^/]+$",
                              "location": "path"
                            },
                            "pageSize": {
                              "format": "int32",
                              "type": "integer",
                              "location": "query",
                              "description": "Optional. Maximum number of sessions to return. The service may return fewer than this value. If unspecified, at most 10 sessions will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
                            },
                            "filter": {
                              "type": "string",
                              "location": "query",
                              "description": "Optional. Filter request. The following mode filter is supported to return only the sessions belonging to the requester when the mode is USER and return sessions of all the users when the mode is ADMIN. When no filter is sent default to USER mode. NOTE: When the mode is ADMIN, the requester should have dataplex.environments.listAllSessions permission to list all sessions, in absence of the permission, the request fails.mode = ADMIN | USER"
                            },
                            "pageToken": {
                              "type": "string",
                              "location": "query",
                              "description": "Optional. Page token received from a previous ListSessions call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListSessions must match the call that provided the page token."
                            }
                          },
                          "path": "v1/{+parent}/sessions",
                          "httpMethod": "GET"
                        }
                      }
                    }
                  },
                  "methods": {
                    "patch": {
                      "request": {
                        "$ref": "GoogleCloudDataplexV1Environment"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1/{+name}",
                      "httpMethod": "PATCH",
                      "description": "Update the environment resource.",
                      "id": "dataplex.projects.locations.lakes.environments.patch",
                      "parameters": {
                        "name": {
                          "description": "Output only. The relative resource name of the environment, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/environment/{environment_id}",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/environments/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "required": true
                        },
                        "validateOnly": {
                          "description": "Optional. Only validate the request, but do not perform mutations. The default is false.",
                          "type": "boolean",
                          "location": "query"
                        },
                        "updateMask": {
                          "type": "string",
                          "format": "google-fieldmask",
                          "location": "query",
                          "description": "Required. Mask of fields to update."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      }
                    },
                    "testIamPermissions": {
                      "parameterOrder": [
                        "resource"
                      ],
                      "httpMethod": "POST",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}:testIamPermissions",
                      "request": {
                        "$ref": "GoogleIamV1TestIamPermissionsRequest"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleIamV1TestIamPermissionsResponse"
                      },
                      "parameters": {
                        "resource": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/environments/[^/]+$",
                          "location": "path",
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                      "path": "v1/{+resource}:testIamPermissions",
                      "id": "dataplex.projects.locations.lakes.environments.testIamPermissions"
                    },
                    "setIamPolicy": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "dataplex.projects.locations.lakes.environments.setIamPolicy",
                      "description": "Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}:setIamPolicy",
                      "parameterOrder": [
                        "resource"
                      ],
                      "httpMethod": "POST",
                      "path": "v1/{+resource}:setIamPolicy",
                      "parameters": {
                        "resource": {
                          "type": "string",
                          "description": "REQUIRED: The resource for which the policy is being specified. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/environments/[^/]+$",
                          "required": true
                        }
                      },
                      "request": {
                        "$ref": "GoogleIamV1SetIamPolicyRequest"
                      },
                      "response": {
                        "$ref": "GoogleIamV1Policy"
                      }
                    },
                    "get": {
                      "id": "dataplex.projects.locations.lakes.environments.get",
                      "parameters": {
                        "name": {
                          "description": "Required. The resource name of the environment: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/environments/{environment_id}.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/environments/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "description": "Get environment resource.",
                      "response": {
                        "$ref": "GoogleCloudDataplexV1Environment"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}"
                    },
                    "create": {
                      "id": "dataplex.projects.locations.lakes.environments.create",
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "POST",
                      "path": "v1/{+parent}/environments",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "request": {
                        "$ref": "GoogleCloudDataplexV1Environment"
                      },
                      "description": "Create an environment resource.",
                      "parameters": {
                        "parent": {
                          "required": true,
                          "description": "Required. The resource name of the parent lake: projects/{project_id}/locations/{location_id}/lakes/{lake_id}.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$",
                          "location": "path"
                        },
                        "environmentId": {
                          "type": "string",
                          "description": "Required. Environment identifier. * Must contain only lowercase letters, numbers and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the lake.",
                          "location": "query"
                        },
                        "validateOnly": {
                          "description": "Optional. Only validate the request, but do not perform mutations. The default is false.",
                          "location": "query",
                          "type": "boolean"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments"
                    },
                    "getIamPolicy": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}:getIamPolicy",
                      "path": "v1/{+resource}:getIamPolicy",
                      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "GoogleIamV1Policy"
                      },
                      "id": "dataplex.projects.locations.lakes.environments.getIamPolicy",
                      "parameters": {
                        "options.requestedPolicyVersion": {
                          "format": "int32",
                          "type": "integer",
                          "location": "query",
                          "description": "Optional. The maximum policy version that will be used to format the policy.Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset.The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies)."
                        },
                        "resource": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/environments/[^/]+$",
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "description": "REQUIRED: The resource for which the policy is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ]
                    },
                    "delete": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}",
                      "parameters": {
                        "name": {
                          "description": "Required. The resource name of the environment: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/environments/{environment_id}.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/environments/[^/]+$",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "id": "dataplex.projects.locations.lakes.environments.delete",
                      "httpMethod": "DELETE",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "path": "v1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Delete the environment resource. All the child resources must have been deleted before environment deletion can be initiated."
                    },
                    "list": {
                      "path": "v1/{+parent}/environments",
                      "id": "dataplex.projects.locations.lakes.environments.list",
                      "description": "Lists environments under the given lake.",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "GoogleCloudDataplexV1ListEnvironmentsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "pageSize": {
                          "description": "Optional. Maximum number of environments to return. The service may return fewer than this value. If unspecified, at most 10 environments will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "type": "integer",
                          "format": "int32",
                          "location": "query"
                        },
                        "pageToken": {
                          "description": "Optional. Page token received from a previous ListEnvironments call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListEnvironments must match the call that provided the page token.",
                          "location": "query",
                          "type": "string"
                        },
                        "orderBy": {
                          "type": "string",
                          "description": "Optional. Order by fields for the result.",
                          "location": "query"
                        },
                        "filter": {
                          "location": "query",
                          "description": "Optional. Filter request.",
                          "type": "string"
                        },
                        "parent": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$",
                          "required": true,
                          "description": "Required. The resource name of the parent lake: projects/{project_id}/locations/{location_id}/lakes/{lake_id}.",
                          "location": "path"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments"
                    }
                  }
                },
                "actions": {
                  "methods": {
                    "list": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Lists action resources in a lake.",
                      "response": {
                        "$ref": "GoogleCloudDataplexV1ListActionsResponse"
                      },
                      "id": "dataplex.projects.locations.lakes.actions.list",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/actions",
                      "path": "v1/{+parent}/actions",
                      "httpMethod": "GET",
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. Page token received from a previous ListLakeActions call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListLakeActions must match the call that provided the page token."
                        },
                        "pageSize": {
                          "format": "int32",
                          "location": "query",
                          "type": "integer",
                          "description": "Optional. Maximum number of actions to return. The service may return fewer than this value. If unspecified, at most 10 actions will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
                        },
                        "parent": {
                          "type": "string",
                          "location": "path",
                          "description": "Required. The resource name of the parent lake: projects/{project_number}/locations/{location_id}/lakes/{lake_id}.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    }
                  }
                },
                "tasks": {
                  "resources": {
                    "jobs": {
                      "methods": {
                        "cancel": {
                          "httpMethod": "POST",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}/jobs/{jobsId}:cancel",
                          "parameterOrder": [
                            "name"
                          ],
                          "description": "Cancel jobs running for the task resource.",
                          "request": {
                            "$ref": "GoogleCloudDataplexV1CancelJobRequest"
                          },
                          "id": "dataplex.projects.locations.lakes.tasks.jobs.cancel",
                          "path": "v1/{+name}:cancel",
                          "parameters": {
                            "name": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/tasks/[^/]+/jobs/[^/]+$",
                              "location": "path",
                              "type": "string",
                              "description": "Required. The resource name of the job: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/task/{task_id}/job/{job_id}.",
                              "required": true
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "Empty"
                          }
                        },
                        "get": {
                          "response": {
                            "$ref": "GoogleCloudDataplexV1Job"
                          },
                          "httpMethod": "GET",
                          "description": "Get job resource.",
                          "path": "v1/{+name}",
                          "id": "dataplex.projects.locations.lakes.tasks.jobs.get",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameterOrder": [
                            "name"
                          ],
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}/jobs/{jobsId}",
                          "parameters": {
                            "name": {
                              "description": "Required. The resource name of the job: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/tasks/{task_id}/jobs/{job_id}.",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/tasks/[^/]+/jobs/[^/]+$",
                              "type": "string",
                              "location": "path"
                            }
                          }
                        },
                        "list": {
                          "path": "v1/{+parent}/jobs",
                          "response": {
                            "$ref": "GoogleCloudDataplexV1ListJobsResponse"
                          },
                          "parameters": {
                            "pageSize": {
                              "type": "integer",
                              "location": "query",
                              "format": "int32",
                              "description": "Optional. Maximum number of jobs to return. The service may return fewer than this value. If unspecified, at most 10 jobs will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
                            },
                            "pageToken": {
                              "description": "Optional. Page token received from a previous ListJobs call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListJobs must match the call that provided the page token.",
                              "type": "string",
                              "location": "query"
                            },
                            "parent": {
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/tasks/[^/]+$",
                              "type": "string",
                              "description": "Required. The resource name of the parent environment: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/tasks/{task_id}.",
                              "required": true
                            }
                          },
                          "id": "dataplex.projects.locations.lakes.tasks.jobs.list",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameterOrder": [
                            "parent"
                          ],
                          "httpMethod": "GET",
                          "description": "Lists Jobs under the given task.",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}/jobs"
                        }
                      }
                    }
                  },
                  "methods": {
                    "setIamPolicy": {
                      "request": {
                        "$ref": "GoogleIamV1SetIamPolicyRequest"
                      },
                      "response": {
                        "$ref": "GoogleIamV1Policy"
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "description": "Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}:setIamPolicy",
                      "id": "dataplex.projects.locations.lakes.tasks.setIamPolicy",
                      "path": "v1/{+resource}:setIamPolicy",
                      "parameters": {
                        "resource": {
                          "required": true,
                          "description": "REQUIRED: The resource for which the policy is being specified. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/tasks/[^/]+$"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST"
                    },
                    "create": {
                      "path": "v1/{+parent}/tasks",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "id": "dataplex.projects.locations.lakes.tasks.create",
                      "request": {
                        "$ref": "GoogleCloudDataplexV1Task"
                      },
                      "parameters": {
                        "taskId": {
                          "description": "Required. Task identifier.",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$",
                          "description": "Required. The resource name of the parent lake: projects/{project_number}/locations/{location_id}/lakes/{lake_id}.",
                          "type": "string",
                          "location": "path",
                          "required": true
                        },
                        "validateOnly": {
                          "type": "boolean",
                          "location": "query",
                          "description": "Optional. Only validate the request, but do not perform mutations. The default is false."
                        }
                      },
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Creates a task resource within a lake."
                    },
                    "testIamPermissions": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "dataplex.projects.locations.lakes.tasks.testIamPermissions",
                      "parameterOrder": [
                        "resource"
                      ],
                      "httpMethod": "POST",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}:testIamPermissions",
                      "response": {
                        "$ref": "GoogleIamV1TestIamPermissionsResponse"
                      },
                      "request": {
                        "$ref": "GoogleIamV1TestIamPermissionsRequest"
                      },
                      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                      "path": "v1/{+resource}:testIamPermissions",
                      "parameters": {
                        "resource": {
                          "type": "string",
                          "required": true,
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/tasks/[^/]+$"
                        }
                      }
                    },
                    "getIamPolicy": {
                      "id": "dataplex.projects.locations.lakes.tasks.getIamPolicy",
                      "httpMethod": "GET",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}:getIamPolicy",
                      "response": {
                        "$ref": "GoogleIamV1Policy"
                      },
                      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                      "parameters": {
                        "options.requestedPolicyVersion": {
                          "location": "query",
                          "description": "Optional. The maximum policy version that will be used to format the policy.Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset.The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).",
                          "type": "integer",
                          "format": "int32"
                        },
                        "resource": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/tasks/[^/]+$",
                          "description": "REQUIRED: The resource for which the policy is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+resource}:getIamPolicy"
                    },
                    "patch": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "updateMask": {
                          "description": "Required. Mask of fields to update.",
                          "location": "query",
                          "format": "google-fieldmask",
                          "type": "string"
                        },
                        "validateOnly": {
                          "type": "boolean",
                          "description": "Optional. Only validate the request, but do not perform mutations. The default is false.",
                          "location": "query"
                        },
                        "name": {
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/tasks/[^/]+$",
                          "description": "Output only. The relative resource name of the task, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/ tasks/{task_id}."
                        }
                      },
                      "path": "v1/{+name}",
                      "httpMethod": "PATCH",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}",
                      "id": "dataplex.projects.locations.lakes.tasks.patch",
                      "request": {
                        "$ref": "GoogleCloudDataplexV1Task"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Update the task resource."
                    },
                    "get": {
                      "parameters": {
                        "name": {
                          "description": "Required. The resource name of the task: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/tasks/{tasks_id}.",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/tasks/[^/]+$",
                          "location": "path"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDataplexV1Task"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}",
                      "path": "v1/{+name}",
                      "id": "dataplex.projects.locations.lakes.tasks.get",
                      "httpMethod": "GET",
                      "description": "Get task resource."
                    },
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+parent}/tasks",
                      "description": "Lists tasks under the given lake.",
                      "response": {
                        "$ref": "GoogleCloudDataplexV1ListTasksResponse"
                      },
                      "httpMethod": "GET",
                      "parameters": {
                        "pageSize": {
                          "format": "int32",
                          "location": "query",
                          "type": "integer",
                          "description": "Optional. Maximum number of tasks to return. The service may return fewer than this value. If unspecified, at most 10 tasks will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "Optional. Page token received from a previous ListZones call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListZones must match the call that provided the page token.",
                          "location": "query"
                        },
                        "orderBy": {
                          "description": "Optional. Order by fields for the result.",
                          "type": "string",
                          "location": "query"
                        },
                        "filter": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. Filter request."
                        },
                        "parent": {
                          "description": "Required. The resource name of the parent lake: projects/{project_number}/locations/{location_id}/lakes/{lake_id}.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "required": true
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "dataplex.projects.locations.lakes.tasks.list",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks"
                    },
                    "delete": {
                      "description": "Delete the task resource.",
                      "path": "v1/{+name}",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "httpMethod": "DELETE",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/tasks/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "Required. The resource name of the task: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/task/{task_id}.",
                          "location": "path"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}",
                      "id": "dataplex.projects.locations.lakes.tasks.delete"
                    }
                  }
                }
              },
              "methods": {
                "setIamPolicy": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "dataplex.projects.locations.lakes.setIamPolicy",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.",
                  "httpMethod": "POST",
                  "path": "v1/{+resource}:setIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "GoogleIamV1SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}:setIamPolicy"
                },
                "testIamPermissions": {
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$",
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1/{+resource}:testIamPermissions",
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}:testIamPermissions",
                  "request": {
                    "$ref": "GoogleIamV1TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "GoogleIamV1TestIamPermissionsResponse"
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "dataplex.projects.locations.lakes.testIamPermissions"
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "dataplex.projects.locations.lakes.delete",
                  "description": "Deletes a lake resource. All zones within the lake must be deleted before the lake can be deleted.",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "description": "Required. The resource name of the lake: projects/{project_number}/locations/{location_id}/lakes/{lake_id}.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$",
                      "location": "path"
                    }
                  }
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleCloudDataplexV1Lake"
                  },
                  "description": "Creates a lake resource.",
                  "httpMethod": "POST",
                  "id": "dataplex.projects.locations.lakes.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "lakeId": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. Lake identifier. This ID will be used to generate names such as database and dataset names when publishing metadata to Hive Metastore and BigQuery. * Must contain only lowercase letters, numbers and hyphens. * Must start with a letter. * Must end with a number or a letter. * Must be between 1-63 characters. * Must be unique within the customer project / location."
                    },
                    "validateOnly": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Optional. Only validate the request, but do not perform mutations. The default is false."
                    },
                    "parent": {
                      "type": "string",
                      "required": true,
                      "description": "Required. The resource name of the lake location, of the form: projects/{project_number}/locations/{location_id} where location_id refers to a GCP region.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "path": "v1/{+parent}/lakes",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes"
                },
                "get": {
                  "description": "Retrieves a lake resource.",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$",
                      "required": true,
                      "description": "Required. The resource name of the lake: projects/{project_number}/locations/{location_id}/lakes/{lake_id}."
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudDataplexV1Lake"
                  },
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "id": "dataplex.projects.locations.lakes.get"
                },
                "patch": {
                  "description": "Updates a lake resource.",
                  "path": "v1/{+name}",
                  "request": {
                    "$ref": "GoogleCloudDataplexV1Lake"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "dataplex.projects.locations.lakes.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}",
                  "parameters": {
                    "validateOnly": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Optional. Only validate the request, but do not perform mutations. The default is false."
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "location": "query",
                      "description": "Required. Mask of fields to update.",
                      "type": "string"
                    },
                    "name": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$",
                      "description": "Output only. The relative resource name of the lake, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}."
                    }
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "httpMethod": "PATCH"
                },
                "getIamPolicy": {
                  "path": "v1/{+resource}:getIamPolicy",
                  "id": "dataplex.projects.locations.lakes.getIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "resource"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy.Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset.The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "resource": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}:getIamPolicy"
                },
                "list": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes",
                  "path": "v1/{+parent}/lakes",
                  "id": "dataplex.projects.locations.lakes.list",
                  "parameters": {
                    "orderBy": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. Order by fields for the result."
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "format": "int32",
                      "description": "Optional. Maximum number of Lakes to return. The service may return fewer than this value. If unspecified, at most 10 lakes will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "Optional. Page token received from a previous ListLakes call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListLakes must match the call that provided the page token.",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Required. The resource name of the lake location, of the form: projects/{project_number}/locations/{location_id} where location_id refers to a GCP region.",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "filter": {
                      "description": "Optional. Filter request.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudDataplexV1ListLakesResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists lake resources in a project and location.",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "operations": {
              "methods": {
                "delete": {
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns google.rpc.Code.UNIMPLEMENTED.",
                  "httpMethod": "DELETE",
                  "id": "dataplex.projects.locations.operations.delete"
                },
                "get": {
                  "id": "dataplex.projects.locations.operations.get",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "The name of the operation resource.",
                      "location": "path"
                    }
                  },
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "id": "dataplex.projects.locations.operations.list",
                  "httpMethod": "GET",
                  "path": "v1/{+name}/operations",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns UNIMPLEMENTED.NOTE: the name binding allows API services to override the binding to use different resource name schemes, such as users/*/operations. To override the binding, API services can add a binding such as \"/v1/{name=users/*}/operations\" to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "The standard list page token.",
                      "location": "query"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "required": true,
                      "location": "path",
                      "description": "The name of the operation's parent resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "GoogleLongrunningListOperationsResponse"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "cancel": {
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "description": "The name of the operation resource to be cancelled.",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "httpMethod": "POST",
                  "id": "dataplex.projects.locations.operations.cancel",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "response": {
                    "$ref": "Empty"
                  },
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to Code.CANCELLED.",
                  "request": {
                    "$ref": "GoogleLongrunningCancelOperationRequest"
                  },
                  "path": "v1/{+name}:cancel",
                  "parameterOrder": [
                    "name"
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}
