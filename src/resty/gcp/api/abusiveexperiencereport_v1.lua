local decode = require("cjson").new().decode
return assert(decode([===[
{ "schemas": { "SiteSummaryResponse": { "id": "SiteSummaryResponse", "type": "object", "description": "Response message for GetSiteSummary.", "properties": { "reviewedSite": { "type": "string", "description": "The name of the reviewed site, e.g. `google.com`." }, "enforcementTime": { "format": "google-datetime", "type": "string", "description": "The time at which [enforcement](https://support.google.com/webtools/answer/7538608) against the site began or will begin. Not set when the filter_status is OFF." }, "lastChangeTime": { "format": "google-datetime", "type": "string", "description": "The time at which the site's status last changed." }, "abusiveStatus": { "description": "The site's Abusive Experience Report status.", "type": "string", "enumDescriptions": [ "Not reviewed.", "Passing.", "Failing." ], "enum": [ "UNKNOWN", "PASSING", "FAILING" ] }, "filterStatus": { "type": "string", "enum": [ "UNKNOWN", "ON", "OFF", "PAUSED", "PENDING" ], "description": "The site's [enforcement status](https://support.google.com/webtools/answer/7538608).", "enumDescriptions": [ "N/A.", "Enforcement is on.", "Enforcement is off.", "Enforcement is paused.", "Enforcement is pending." ] }, "reportUrl": { "type": "string", "description": "A link to the full Abusive Experience Report for the site. Not set in ViolatingSitesResponse. Note that you must complete the [Search Console verification process](https://support.google.com/webmasters/answer/9008080) for the site before you can access the full report." }, "underReview": { "type": "boolean", "description": "Whether the site is currently under review." } } }, "ViolatingSitesResponse": { "properties": { "violatingSites": { "type": "array", "description": "The list of violating sites.", "items": { "$ref": "SiteSummaryResponse" } } }, "description": "Response message for ListViolatingSites.", "id": "ViolatingSitesResponse", "type": "object" } }, "icons": { "x16": "http://www.google.com/images/icons/product/search-16.gif", "x32": "http://www.google.com/images/icons/product/search-32.gif" }, "parameters": { "oauth_token": { "location": "query", "type": "string", "description": "OAuth 2.0 token for the current user." }, "$.xgafv": { "enumDescriptions": [ "v1 error format", "v2 error format" ], "description": "V1 error format.", "enum": [ "1", "2" ], "type": "string", "location": "query" }, "upload_protocol": { "location": "query", "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").", "type": "string" }, "access_token": { "location": "query", "description": "OAuth access token.", "type": "string" }, "uploadType": { "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", "type": "string", "location": "query" }, "quotaUser": { "location": "query", "type": "string", "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters." }, "fields": { "type": "string", "description": "Selector specifying which fields to include in a partial response.", "location": "query" }, "callback": { "location": "query", "type": "string", "description": "JSONP" }, "prettyPrint": { "type": "boolean", "location": "query", "default": "true", "description": "Returns response with indentations and line breaks." }, "key": { "type": "string", "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "location": "query" }, "alt": { "description": "Data format for response.", "enum": [ "json", "media", "proto" ], "default": "json", "enumDescriptions": [ "Responses with Content-Type of application/json", "Media download with context-dependent Content-Type", "Responses with Content-Type of application/x-protobuf" ], "location": "query", "type": "string" } }, "id": "abusiveexperiencereport:v1", "batchPath": "batch", "canonicalName": "Abusive Experience Report", "version": "v1", "name": "abusiveexperiencereport", "discoveryVersion": "v1", "servicePath": "", "fullyEncodeReservedExpansion": true, "mtlsRootUrl": "https://abusiveexperiencereport.mtls.googleapis.com/", "protocol": "rest", "rootUrl": "https://abusiveexperiencereport.googleapis.com/", "description": "Views Abusive Experience Report data, and gets a list of sites that have a significant number of abusive experiences.", "ownerName": "Google", "kind": "discovery#restDescription", "documentationLink": "https://developers.google.com/abusive-experience-report/", "resources": { "violatingSites": { "methods": { "list": { "description": "Lists sites that are failing in the Abusive Experience Report.", "flatPath": "v1/violatingSites", "path": "v1/violatingSites", "response": { "$ref": "ViolatingSitesResponse" }, "parameterOrder": [], "id": "abusiveexperiencereport.violatingSites.list", "httpMethod": "GET", "parameters": {} } } }, "sites": { "methods": { "get": { "path": "v1/{+name}", "id": "abusiveexperiencereport.sites.get", "httpMethod": "GET", "response": { "$ref": "SiteSummaryResponse" }, "flatPath": "v1/sites/{sitesId}", "description": "Gets a site's Abusive Experience Report summary.", "parameterOrder": [ "name" ], "parameters": { "name": { "required": true, "type": "string", "pattern": "^sites/[^/]+$", "location": "path", "description": "Required. The name of the site whose summary to get, e.g. `sites/http%3A%2F%2Fwww.google.com%2F`. Format: `sites/{site}`" } } } } } }, "title": "Abusive Experience Report API", "ownerDomain": "google.com", "version_module": true, "baseUrl": "https://abusiveexperiencereport.googleapis.com/", "revision": "20220621", "basePath": "" }
]===]))
