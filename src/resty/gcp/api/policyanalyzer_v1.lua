local decode = require("cjson").new().decode
return assert(decode([===[
{ "name": "policyanalyzer", "icons": { "x32": "http://www.google.com/images/icons/product/search-32.gif", "x16": "http://www.google.com/images/icons/product/search-16.gif" }, "revision": "20220708", "description": "", "documentationLink": "https://www.google.com", "canonicalName": "Policy Analyzer", "protocol": "rest", "batchPath": "batch", "schemas": { "GoogleCloudPolicyanalyzerV1Activity": { "type": "object", "properties": { "fullResourceName": { "description": "The full resource name that identifies the resource. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names.", "type": "string" }, "activity": { "type": "object", "description": "A struct of custom fields to explain the activity.", "additionalProperties": { "description": "Properties of the object.", "type": "any" } }, "activityType": { "description": "The type of the activity.", "type": "string" }, "observationPeriod": { "$ref": "GoogleCloudPolicyanalyzerV1ObservationPeriod", "description": "The data observation period to build the activity." } }, "id": "GoogleCloudPolicyanalyzerV1Activity" }, "GoogleCloudPolicyanalyzerV1QueryActivityResponse": { "properties": { "nextPageToken": { "description": "If there might be more results than those appearing in this response, then `nextPageToken` is included. To get the next set of results, call this method again using the value of `nextPageToken` as `pageToken`.", "type": "string" }, "activities": { "type": "array", "description": "The set of activities that match the filter included in the request.", "items": { "$ref": "GoogleCloudPolicyanalyzerV1Activity" } } }, "type": "object", "description": "Response to the `QueryActivity` method.", "id": "GoogleCloudPolicyanalyzerV1QueryActivityResponse" }, "GoogleCloudPolicyanalyzerV1ObservationPeriod": { "properties": { "startTime": { "description": "The observation start time. The time in this timestamp is always `07:00:00Z`.", "type": "string", "format": "google-datetime" }, "endTime": { "type": "string", "description": "The observation end time. The time in this timestamp is always `07:00:00Z`.", "format": "google-datetime" } }, "description": "Represents data observation period.", "type": "object", "id": "GoogleCloudPolicyanalyzerV1ObservationPeriod" } }, "title": "Policy Analyzer API", "rootUrl": "https://policyanalyzer.googleapis.com/", "discoveryVersion": "v1", "parameters": { "oauth_token": { "type": "string", "location": "query", "description": "OAuth 2.0 token for the current user." }, "uploadType": { "type": "string", "location": "query", "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")." }, "fields": { "location": "query", "type": "string", "description": "Selector specifying which fields to include in a partial response." }, "alt": { "enumDescriptions": [ "Responses with Content-Type of application/json", "Media download with context-dependent Content-Type", "Responses with Content-Type of application/x-protobuf" ], "enum": [ "json", "media", "proto" ], "location": "query", "type": "string", "description": "Data format for response.", "default": "json" }, "prettyPrint": { "description": "Returns response with indentations and line breaks.", "type": "boolean", "default": "true", "location": "query" }, "$.xgafv": { "type": "string", "description": "V1 error format.", "enumDescriptions": [ "v1 error format", "v2 error format" ], "enum": [ "1", "2" ], "location": "query" }, "quotaUser": { "location": "query", "type": "string", "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters." }, "callback": { "location": "query", "description": "JSONP", "type": "string" }, "access_token": { "type": "string", "location": "query", "description": "OAuth access token." }, "upload_protocol": { "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").", "location": "query", "type": "string" }, "key": { "type": "string", "location": "query", "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token." } }, "mtlsRootUrl": "https://policyanalyzer.mtls.googleapis.com/", "servicePath": "", "ownerName": "Google", "baseUrl": "https://policyanalyzer.googleapis.com/", "kind": "discovery#restDescription", "basePath": "", "fullyEncodeReservedExpansion": true, "ownerDomain": "google.com", "resources": { "projects": { "resources": { "locations": { "resources": { "activityTypes": { "resources": { "activities": { "methods": { "query": { "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/activityTypes/{activityTypesId}/activities:query", "description": "Queries policy activities on Google Cloud resources.", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "response": { "$ref": "GoogleCloudPolicyanalyzerV1QueryActivityResponse" }, "parameters": { "pageSize": { "type": "integer", "description": "Optional. The maximum number of results to return from this request. Max limit is 1000. Non-positive values are ignored. The presence of `nextPageToken` in the response indicates that more results might be available.", "location": "query", "format": "int32" }, "filter": { "type": "string", "location": "query", "description": "Optional. Filter expression to restrict the activities returned. For serviceAccountLastAuthentication activities, supported filters are: - `activities.full_resource_name {=} [STRING]` - `activities.fullResourceName {=} [STRING]` where `[STRING]` is the full resource name of the service account. For serviceAccountKeyLastAuthentication activities, supported filters are: - `activities.full_resource_name {=} [STRING]` - `activities.fullResourceName {=} [STRING]` where `[STRING]` is the full resource name of the service account key." }, "pageToken": { "description": "Optional. If present, then retrieve the next batch of results from the preceding call to this method. `pageToken` must be the value of `nextPageToken` from the previous response. The values of other method parameters should be identical to those in the previous call.", "location": "query", "type": "string" }, "parent": { "description": "Required. The container resource on which to execute the request. Acceptable formats: `projects/[PROJECT_ID|PROJECT_NUMBER]/locations/[LOCATION]/activityTypes/[ACTIVITY_TYPE]` LOCATION here refers to Google Cloud Locations: https://cloud.google.com/about/locations/", "pattern": "^projects/[^/]+/locations/[^/]+/activityTypes/[^/]+$", "required": true, "location": "path", "type": "string" } }, "parameterOrder": [ "parent" ], "path": "v1/{+parent}/activities:query", "httpMethod": "GET", "id": "policyanalyzer.projects.locations.activityTypes.activities.query" } } } } } } } } } }, "version_module": true, "version": "v1", "auth": { "oauth2": { "scopes": { "https://www.googleapis.com/auth/cloud-platform": { "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account." } } } }, "id": "policyanalyzer:v1" }
]===]))
