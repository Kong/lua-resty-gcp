local decode = require("cjson").new().decode
return assert(decode([===[
{ "ownerName": "Google", "mtlsRootUrl": "https://adexperiencereport.mtls.googleapis.com/", "batchPath": "batch", "kind": "discovery#restDescription", "documentationLink": "https://developers.google.com/ad-experience-report/", "title": "Ad Experience Report API", "revision": "20220621", "rootUrl": "https://adexperiencereport.googleapis.com/", "parameters": { "upload_protocol": { "location": "query", "type": "string", "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")." }, "quotaUser": { "location": "query", "type": "string", "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters." }, "uploadType": { "type": "string", "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", "location": "query" }, "fields": { "type": "string", "location": "query", "description": "Selector specifying which fields to include in a partial response." }, "alt": { "type": "string", "description": "Data format for response.", "location": "query", "enumDescriptions": [ "Responses with Content-Type of application/json", "Media download with context-dependent Content-Type", "Responses with Content-Type of application/x-protobuf" ], "default": "json", "enum": [ "json", "media", "proto" ] }, "key": { "type": "string", "location": "query", "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token." }, "access_token": { "description": "OAuth access token.", "type": "string", "location": "query" }, "oauth_token": { "type": "string", "description": "OAuth 2.0 token for the current user.", "location": "query" }, "callback": { "description": "JSONP", "type": "string", "location": "query" }, "prettyPrint": { "default": "true", "location": "query", "type": "boolean", "description": "Returns response with indentations and line breaks." }, "$.xgafv": { "location": "query", "type": "string", "enumDescriptions": [ "v1 error format", "v2 error format" ], "description": "V1 error format.", "enum": [ "1", "2" ] } }, "id": "adexperiencereport:v1", "schemas": { "SiteSummaryResponse": { "description": "Response message for GetSiteSummary.", "properties": { "desktopSummary": { "$ref": "PlatformSummary", "description": "The site's Ad Experience Report summary on desktop." }, "mobileSummary": { "description": "The site's Ad Experience Report summary on mobile.", "$ref": "PlatformSummary" }, "reviewedSite": { "type": "string", "description": "The name of the reviewed site, e.g. `google.com`." } }, "type": "object", "id": "SiteSummaryResponse" }, "ViolatingSitesResponse": { "type": "object", "properties": { "violatingSites": { "items": { "$ref": "SiteSummaryResponse" }, "description": "The list of violating sites.", "type": "array" } }, "description": "Response message for ListViolatingSites.", "id": "ViolatingSitesResponse" }, "PlatformSummary": { "properties": { "underReview": { "description": "Whether the site is currently under review on this platform.", "type": "boolean" }, "filterStatus": { "enumDescriptions": [ "N/A.", "Ad filtering is on.", "Ad filtering is off.", "Ad filtering is paused.", "Ad filtering is pending." ], "description": "The site's [enforcement status](https://support.google.com/webtools/answer/7308033) on this platform.", "enum": [ "UNKNOWN", "ON", "OFF", "PAUSED", "PENDING" ], "type": "string" }, "reportUrl": { "type": "string", "description": "A link to the full Ad Experience Report for the site on this platform.. Not set in ViolatingSitesResponse. Note that you must complete the [Search Console verification process](https://support.google.com/webmasters/answer/9008080) for the site before you can access the full report." }, "enforcementTime": { "type": "string", "format": "google-datetime", "description": "The time at which [enforcement](https://support.google.com/webtools/answer/7308033) against the site began or will begin on this platform. Not set when the filter_status is OFF." }, "region": { "description": "The site's regions on this platform. No longer populated, because there is no longer any semantic difference between sites in different regions.", "items": { "type": "string", "enumDescriptions": [ "Ad standard not yet defined for your region.", "Region A.", "Region B.", "Region C." ], "enum": [ "REGION_UNKNOWN", "REGION_A", "REGION_B", "REGION_C" ] }, "type": "array" }, "lastChangeTime": { "format": "google-datetime", "description": "The time at which the site's status last changed on this platform.", "type": "string" }, "betterAdsStatus": { "description": "The site's Ad Experience Report status on this platform.", "type": "string", "enumDescriptions": [ "Not reviewed.", "Passing.", "Warning. No longer a possible status.", "Failing." ], "enum": [ "UNKNOWN", "PASSING", "WARNING", "FAILING" ] } }, "type": "object", "id": "PlatformSummary", "description": "A site's Ad Experience Report summary on a single platform." } }, "name": "adexperiencereport", "ownerDomain": "google.com", "canonicalName": "Ad Experience Report", "discoveryVersion": "v1", "description": "Views Ad Experience Report data, and gets a list of sites that have a significant number of annoying ads.", "version": "v1", "protocol": "rest", "version_module": true, "icons": { "x16": "http://www.google.com/images/icons/product/search-16.gif", "x32": "http://www.google.com/images/icons/product/search-32.gif" }, "baseUrl": "https://adexperiencereport.googleapis.com/", "resources": { "violatingSites": { "methods": { "list": { "parameterOrder": [], "httpMethod": "GET", "response": { "$ref": "ViolatingSitesResponse" }, "flatPath": "v1/violatingSites", "description": "Lists sites that are failing in the Ad Experience Report on at least one platform.", "path": "v1/violatingSites", "parameters": {}, "id": "adexperiencereport.violatingSites.list" } } }, "sites": { "methods": { "get": { "response": { "$ref": "SiteSummaryResponse" }, "parameters": { "name": { "location": "path", "pattern": "^sites/[^/]+$", "description": "Required. The name of the site whose summary to get, e.g. `sites/http%3A%2F%2Fwww.google.com%2F`. Format: `sites/{site}`", "required": true, "type": "string" } }, "description": "Gets a site's Ad Experience Report summary.", "httpMethod": "GET", "path": "v1/{+name}", "id": "adexperiencereport.sites.get", "parameterOrder": [ "name" ], "flatPath": "v1/sites/{sitesId}" } } } }, "servicePath": "", "basePath": "" }
]===]))
