local decode = require("cjson").new().decode
return assert(decode([===[
{ "resources": { "apis": { "methods": { "list": { "httpMethod": "GET", "description": "Retrieve the list of APIs supported at this endpoint.", "id": "discovery.apis.list", "response": { "$ref": "DirectoryList" }, "parameters": { "name": { "type": "string", "location": "query", "description": "Only include APIs with the given name." }, "preferred": { "location": "query", "description": "Return only the preferred version of an API.", "type": "boolean", "default": "false" } }, "path": "apis" }, "getRest": { "parameters": { "version": { "required": true, "type": "string", "description": "The version of the API.", "location": "path" }, "api": { "required": true, "location": "path", "description": "The name of the API.", "type": "string" } }, "path": "apis/{api}/{version}/rest", "description": "Retrieve the description of a particular version of an api.", "parameterOrder": [ "api", "version" ], "id": "discovery.apis.getRest", "httpMethod": "GET", "response": { "$ref": "RestDescription" } } } } }, "icons": { "x16": "http://www.google.com/images/icons/feature/filing_cabinet_search-g16.png", "x32": "http://www.google.com/images/icons/feature/filing_cabinet_search-g32.png" }, "protocol": "rest", "parameters": { "userIp": { "description": "Deprecated. Please use quotaUser instead.", "type": "string", "location": "query" }, "oauth_token": { "description": "OAuth 2.0 token for the current user.", "location": "query", "type": "string" }, "fields": { "location": "query", "type": "string", "description": "Selector specifying which fields to include in a partial response." }, "alt": { "location": "query", "type": "string", "enum": [ "json" ], "enumDescriptions": [ "Responses with Content-Type of application/json" ], "description": "Data format for the response.", "default": "json" }, "prettyPrint": { "location": "query", "type": "boolean", "description": "Returns response with indentations and line breaks.", "default": "true" }, "key": { "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "location": "query", "type": "string" }, "quotaUser": { "type": "string", "location": "query", "description": "An opaque string that represents a user for quota purposes. Must not exceed 40 characters." } }, "id": "discovery:v1", "discoveryVersion": "v1", "servicePath": "discovery/v1/", "etag": "\"-2NioU2H8y8siEzrBOV_qzRI6kQ/vabF8Q1ADCm_Bt9EBq9rkrRawQA\"", "ownerName": "Google", "version": "v1", "kind": "discovery#restDescription", "revision": "20200806", "documentationLink": "https://developers.google.com/discovery/", "batchPath": "batch/discovery/v1", "rootUrl": "https://www.googleapis.com/", "name": "discovery", "basePath": "/discovery/v1/", "ownerDomain": "google.com", "baseUrl": "https://www.googleapis.com/discovery/v1/", "schemas": { "RestDescription": { "type": "object", "properties": { "documentationLink": { "description": "A link to human readable documentation for the API.", "type": "string" }, "features": { "type": "array", "description": "A list of supported features for this API.", "items": { "type": "string" } }, "title": { "type": "string", "description": "The title of this API." }, "parameters": { "type": "object", "additionalProperties": { "description": "Description of a single parameter.", "$ref": "JsonSchema" }, "description": "Common parameters that apply across all apis." }, "ownerName": { "description": "The name of the owner of this API. See ownerDomain.", "type": "string" }, "ownerDomain": { "type": "string", "description": "The domain of the owner of this API. Together with the ownerName and a packagePath values, this can be used to generate a library for this API which would have a unique fully qualified name." }, "protocol": { "type": "string", "description": "The protocol described by this document.", "default": "rest" }, "etag": { "readOnly": true, "type": "string", "description": "The ETag for this response." }, "kind": { "type": "string", "default": "discovery#restDescription", "description": "The kind for this response." }, "auth": { "type": "object", "properties": { "oauth2": { "description": "OAuth 2.0 authentication information.", "properties": { "scopes": { "description": "Available OAuth 2.0 scopes.", "additionalProperties": { "description": "The scope value.", "properties": { "description": { "type": "string", "description": "Description of scope." } }, "type": "object" }, "type": "object" } }, "type": "object" } }, "description": "Authentication information." }, "description": { "type": "string", "description": "The description of this API." }, "canonicalName": { "description": "Indicates how the API name should be capitalized and split into various parts. Useful for generating pretty class names.", "type": "string" }, "packagePath": { "description": "The package of the owner of this API. See ownerDomain.", "type": "string" }, "version": { "description": "The version of this API.", "type": "string" }, "revision": { "description": "The version of this API.", "type": "string" }, "servicePath": { "type": "string", "description": "The base path for all REST requests." }, "basePath": { "description": "[DEPRECATED] The base path for REST requests.", "type": "string" }, "name": { "description": "The name of this API.", "type": "string" }, "discoveryVersion": { "default": "v1", "description": "Indicate the version of the Discovery API used to generate this doc.", "type": "string" }, "baseUrl": { "type": "string", "description": "[DEPRECATED] The base URL for REST requests." }, "id": { "type": "string", "description": "The ID of this API." }, "rootUrl": { "type": "string", "description": "The root URL under which all API services live." }, "resources": { "additionalProperties": { "description": "An individual resource description. Contains methods and sub-resources related to this resource.", "$ref": "RestResource" }, "type": "object", "description": "The resources in this API." }, "schemas": { "type": "object", "description": "The schemas for this API.", "additionalProperties": { "$ref": "JsonSchema", "description": "An individual schema description." } }, "methods": { "additionalProperties": { "description": "An individual method description.", "$ref": "RestMethod" }, "type": "object", "description": "API-level methods for this API." }, "batchPath": { "type": "string", "description": "The path for REST batch requests." }, "version_module": { "type": "boolean" }, "exponentialBackoffDefault": { "type": "boolean", "description": "Enable exponential backoff for suitable methods in the generated clients." }, "labels": { "description": "Labels for the status of this API, such as labs or deprecated.", "type": "array", "items": { "type": "string" } }, "icons": { "description": "Links to 16x16 and 32x32 icons representing the API.", "properties": { "x16": { "type": "string", "description": "The URL of the 16x16 icon." }, "x32": { "type": "string", "description": "The URL of the 32x32 icon." } }, "type": "object" } }, "id": "RestDescription" }, "RestResource": { "id": "RestResource", "type": "object", "properties": { "methods": { "additionalProperties": { "$ref": "RestMethod", "description": "Description for any methods on this resource." }, "type": "object", "description": "Methods on this resource." }, "resources": { "type": "object", "additionalProperties": { "$ref": "RestResource", "description": "Description for any sub-resources on this resource." }, "description": "Sub-resources on this resource." } } }, "JsonSchema": { "properties": { "enumDescriptions": { "type": "array", "items": { "type": "string" }, "description": "The descriptions for the enums. Each position maps to the corresponding value in the \"enum\" array." }, "additionalProperties": { "$ref": "JsonSchema", "description": "If this is a schema for an object, this property is the schema for any additional properties with dynamic keys on this object." }, "enum": { "type": "array", "description": "Values this parameter may take (if it is an enum).", "items": { "type": "string" } }, "type": { "type": "string", "description": "The value type for this schema. A list of values can be found here: http://tools.ietf.org/html/draft-zyp-json-schema-03#section-5.1" }, "readOnly": { "type": "boolean", "description": "The value is read-only, generated by the service. The value cannot be modified by the client. If the value is included in a POST, PUT, or PATCH request, it is ignored by the service." }, "$ref": { "description": "A reference to another schema. The value of this property is the \"id\" of another schema.", "type": "string" }, "variant": { "properties": { "discriminant": { "type": "string", "description": "The name of the type discriminant property." }, "map": { "type": "array", "description": "The map of discriminant value to schema to use for parsing..", "items": { "properties": { "type_value": { "type": "string" }, "$ref": { "type": "string" } }, "type": "object" } } }, "type": "object", "description": "In a variant data type, the value of one property is used to determine how to interpret the entire entity. Its value must exist in a map of descriminant values to schema names." }, "repeated": { "description": "Whether this parameter may appear multiple times.", "type": "boolean" }, "format": { "description": "An additional regular expression or key that helps constrain the value. For more details see: http://tools.ietf.org/html/draft-zyp-json-schema-03#section-5.23", "type": "string" }, "required": { "description": "Whether the parameter is required.", "type": "boolean" }, "properties": { "additionalProperties": { "$ref": "JsonSchema", "description": "A single property of this object. The value is itself a JSON Schema object describing this property." }, "type": "object", "description": "If this is a schema for an object, list the schema for each property of this object." }, "location": { "description": "Whether this parameter goes in the query or the path for REST requests.", "type": "string" }, "annotations": { "properties": { "required": { "items": { "type": "string" }, "description": "A list of methods for which this property is required on requests.", "type": "array" } }, "description": "Additional information about this property.", "type": "object" }, "minimum": { "type": "string", "description": "The minimum value of this parameter." }, "default": { "type": "string", "description": "The default value of this property (if one exists)." }, "description": { "description": "A description of this object.", "type": "string" }, "items": { "description": "If this is a schema for an array, this property is the schema for each element in the array.", "$ref": "JsonSchema" }, "id": { "type": "string", "description": "Unique identifier for this schema." }, "maximum": { "description": "The maximum value of this parameter.", "type": "string" }, "pattern": { "type": "string", "description": "The regular expression this parameter must conform to. Uses Java 6 regex format: http://docs.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html" } }, "id": "JsonSchema", "type": "object" }, "RestMethod": { "type": "object", "properties": { "httpMethod": { "type": "string", "description": "HTTP method used by this method." }, "scopes": { "items": { "type": "string" }, "description": "OAuth 2.0 scopes applicable to this method.", "type": "array" }, "supportsSubscription": { "description": "Whether this method supports subscriptions.", "type": "boolean" }, "etagRequired": { "description": "Whether this method requires an ETag to be specified. The ETag is sent as an HTTP If-Match or If-None-Match header.", "type": "boolean" }, "description": { "description": "Description of this method.", "type": "string" }, "flatPath": { "type": "string", "description": "The URI path of this REST method in (RFC 6570) format without level 2 features ({+var}). Supplementary to the path property." }, "supportsMediaUpload": { "description": "Whether this method supports media uploads.", "type": "boolean" }, "response": { "type": "object", "properties": { "$ref": { "description": "Schema ID for the response schema.", "type": "string" } }, "description": "The schema for the response." }, "useMediaDownloadService": { "type": "boolean", "description": "Indicates that downloads from this method should use the download service URL (i.e. \"/download\"). Only applies if the method supports media download." }, "parameters": { "type": "object", "description": "Details for all parameters in this method.", "additionalProperties": { "$ref": "JsonSchema", "description": "Details for a single parameter in this method." } }, "parameterOrder": { "description": "Ordered list of required parameters, serves as a hint to clients on how to structure their method signatures. The array is ordered such that the \"most-significant\" parameter appears first.", "items": { "type": "string" }, "type": "array" }, "supportsMediaDownload": { "description": "Whether this method supports media downloads.", "type": "boolean" }, "id": { "description": "A unique ID for this method. This property can be used to match methods between different versions of Discovery.", "type": "string" }, "path": { "description": "The URI path of this REST method. Should be used in conjunction with the basePath property at the api-level.", "type": "string" }, "mediaUpload": { "description": "Media upload parameters.", "type": "object", "properties": { "accept": { "type": "array", "description": "MIME Media Ranges for acceptable media uploads to this method.", "items": { "type": "string" } }, "maxSize": { "type": "string", "description": "Maximum size of a media upload, such as \"1MB\", \"2GB\" or \"3TB\"." }, "protocols": { "description": "Supported upload protocols.", "properties": { "resumable": { "description": "Supports the Resumable Media Upload protocol.", "type": "object", "properties": { "path": { "type": "string", "description": "The URI path to be used for upload. Should be used in conjunction with the basePath property at the api-level." }, "multipart": { "description": "True if this endpoint supports uploading multipart media.", "type": "boolean", "default": "true" } } }, "simple": { "type": "object", "description": "Supports uploading as a single HTTP request.", "properties": { "multipart": { "type": "boolean", "description": "True if this endpoint supports upload multipart media.", "default": "true" }, "path": { "type": "string", "description": "The URI path to be used for upload. Should be used in conjunction with the basePath property at the api-level." } } } }, "type": "object" } } }, "request": { "type": "object", "description": "The schema for the request.", "properties": { "parameterName": { "type": "string", "description": "parameter name." }, "$ref": { "description": "Schema ID for the request schema.", "type": "string" } } } }, "id": "RestMethod" }, "DirectoryList": { "properties": { "discoveryVersion": { "default": "v1", "description": "Indicate the version of the Discovery API used to generate this doc.", "type": "string" }, "items": { "description": "The individual directory entries. One entry per api/version pair.", "items": { "type": "object", "properties": { "discoveryLink": { "type": "string", "description": "A link to the discovery document." }, "discoveryRestUrl": { "description": "The URL for the discovery REST document.", "type": "string" }, "name": { "type": "string", "description": "The name of the API." }, "version": { "description": "The version of the API.", "type": "string" }, "title": { "description": "The title of this API.", "type": "string" }, "description": { "type": "string", "description": "The description of this API." }, "labels": { "description": "Labels for the status of this API, such as labs or deprecated.", "items": { "type": "string" }, "type": "array" }, "id": { "type": "string", "description": "The id of this API." }, "documentationLink": { "type": "string", "description": "A link to human readable documentation for the API." }, "kind": { "default": "discovery#directoryItem", "type": "string", "description": "The kind for this response." }, "icons": { "properties": { "x16": { "type": "string", "description": "The URL of the 16x16 icon." }, "x32": { "type": "string", "description": "The URL of the 32x32 icon." } }, "type": "object", "description": "Links to 16x16 and 32x32 icons representing the API." }, "preferred": { "description": "True if this version is the preferred version to use.", "type": "boolean" } } }, "type": "array" }, "kind": { "type": "string", "default": "discovery#directoryList", "description": "The kind for this response." } }, "id": "DirectoryList", "type": "object" } }, "title": "API Discovery Service", "description": "Provides information about other Google APIs, such as what APIs are available, the resource, and method details for each API." }
]===]))
