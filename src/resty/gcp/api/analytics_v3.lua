local decode = require("cjson").new().decode
return assert(decode([===[
{ "documentationLink": "https://developers.google.com/analytics/", "ownerName": "Google", "id": "analytics:v3", "revision": "20190807", "protocol": "rest", "version": "v3", "auth": { "oauth2": { "scopes": { "https://www.googleapis.com/auth/analytics.manage.users": { "description": "Manage Google Analytics Account users by email address" }, "https://www.googleapis.com/auth/analytics.readonly": { "description": "View your Google Analytics data" }, "https://www.googleapis.com/auth/analytics.provision": { "description": "Create a new Google Analytics account along with its default property and view" }, "https://www.googleapis.com/auth/analytics.user.deletion": { "description": "Manage Google Analytics user deletion requests" }, "https://www.googleapis.com/auth/analytics.manage.users.readonly": { "description": "View Google Analytics user permissions" }, "https://www.googleapis.com/auth/analytics.edit": { "description": "Edit Google Analytics management entities" }, "https://www.googleapis.com/auth/analytics": { "description": "View and manage your Google Analytics data" } } } }, "schemas": { "CustomDataSources": { "id": "CustomDataSources", "description": "Lists Analytics custom data sources to which the user has access. Each resource in the collection corresponds to a single Analytics custom data source.", "properties": { "itemsPerPage": { "format": "int32", "description": "The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.", "type": "integer" }, "totalResults": { "format": "int32", "type": "integer", "description": "The total number of results for the query, regardless of the number of results in the response." }, "items": { "type": "array", "description": "Collection of custom data sources.", "items": { "$ref": "CustomDataSource" } }, "kind": { "type": "string", "description": "Collection type.", "default": "analytics#customDataSources" }, "startIndex": { "type": "integer", "description": "The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.", "format": "int32" }, "previousLink": { "type": "string", "description": "Link to previous page for this custom data source collection." }, "nextLink": { "description": "Link to next page for this custom data source collection.", "type": "string" }, "username": { "type": "string", "description": "Email ID of the authenticated user" } }, "type": "object" }, "EntityAdWordsLinks": { "properties": { "totalResults": { "description": "The total number of results for the query, regardless of the number of results in the response.", "format": "int32", "type": "integer" }, "itemsPerPage": { "type": "integer", "format": "int32", "description": "The maximum number of entries the response can contain, regardless of the actual number of entries returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter." }, "previousLink": { "description": "Previous link for this Google Ads link collection.", "type": "string" }, "items": { "description": "A list of entity Google Ads links.", "type": "array", "items": { "$ref": "EntityAdWordsLink" } }, "nextLink": { "type": "string", "description": "Next link for this Google Ads link collection." }, "kind": { "default": "analytics#entityAdWordsLinks", "description": "Collection type.", "type": "string" }, "startIndex": { "format": "int32", "description": "The starting index of the entries, which is 1 by default or otherwise specified by the start-index query parameter.", "type": "integer" } }, "type": "object", "description": "An entity Google Ads link collection provides a list of GA-Google Ads links Each resource in this collection corresponds to a single link.", "id": "EntityAdWordsLinks" }, "AccountSummaries": { "properties": { "itemsPerPage": { "description": "The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.", "format": "int32", "type": "integer" }, "kind": { "type": "string", "default": "analytics#accountSummaries", "description": "Collection type." }, "totalResults": { "type": "integer", "format": "int32", "description": "The total number of results for the query, regardless of the number of results in the response." }, "nextLink": { "type": "string", "description": "Link to next page for this AccountSummary collection." }, "username": { "description": "Email ID of the authenticated user", "type": "string" }, "previousLink": { "type": "string", "description": "Link to previous page for this AccountSummary collection." }, "startIndex": { "format": "int32", "description": "The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.", "type": "integer" }, "items": { "items": { "$ref": "AccountSummary" }, "description": "A list of AccountSummaries.", "type": "array" } }, "description": "An AccountSummary collection lists a summary of accounts, properties and views (profiles) to which the user has access. Each resource in the collection corresponds to a single AccountSummary.", "id": "AccountSummaries", "type": "object" }, "Column": { "id": "Column", "type": "object", "properties": { "attributes": { "additionalProperties": { "description": "The name of the attribute.", "type": "string" }, "description": "Map of attribute name and value for this column.", "type": "object" }, "id": { "type": "string", "description": "Column id." }, "kind": { "description": "Resource type for Analytics column.", "default": "analytics#column", "type": "string" } }, "description": "JSON template for a metadata column." }, "Goal": { "properties": { "urlDestinationDetails": { "description": "Details for the goal of the type URL_DESTINATION.", "properties": { "steps": { "description": "List of steps configured for this goal funnel.", "items": { "properties": { "name": { "type": "string", "description": "Step name." }, "number": { "description": "Step number.", "format": "int32", "type": "integer" }, "url": { "description": "URL for this step.", "type": "string" } }, "type": "object" }, "type": "array" }, "matchType": { "type": "string", "description": "Match type for the goal URL. Possible values are HEAD, EXACT, or REGEX." }, "caseSensitive": { "type": "boolean", "description": "Determines if the goal URL must exactly match the capitalization of visited URLs." }, "firstStepRequired": { "description": "Determines if the first step in this goal is required.", "type": "boolean" }, "url": { "description": "URL for this goal.", "type": "string" } }, "type": "object" }, "active": { "description": "Determines whether this goal is active.", "type": "boolean" }, "visitTimeOnSiteDetails": { "description": "Details for the goal of the type VISIT_TIME_ON_SITE.", "type": "object", "properties": { "comparisonValue": { "format": "int64", "description": "Value used for this comparison.", "type": "string" }, "comparisonType": { "type": "string", "description": "Type of comparison. Possible values are LESS_THAN or GREATER_THAN." } } }, "id": { "description": "Goal ID.", "type": "string" }, "visitNumPagesDetails": { "description": "Details for the goal of the type VISIT_NUM_PAGES.", "properties": { "comparisonType": { "description": "Type of comparison. Possible values are LESS_THAN, GREATER_THAN, or EQUAL.", "type": "string" }, "comparisonValue": { "type": "string", "format": "int64", "description": "Value used for this comparison." } }, "type": "object" }, "name": { "type": "string", "description": "Goal name." }, "updated": { "description": "Time this goal was last modified.", "format": "date-time", "type": "string" }, "value": { "description": "Goal value.", "type": "number", "format": "float" }, "accountId": { "type": "string", "description": "Account ID to which this goal belongs." }, "internalWebPropertyId": { "description": "Internal ID for the web property to which this goal belongs.", "type": "string" }, "webPropertyId": { "description": "Web property ID to which this goal belongs. The web property ID is of the form UA-XXXXX-YY.", "type": "string" }, "profileId": { "type": "string", "description": "View (Profile) ID to which this goal belongs." }, "created": { "description": "Time this goal was created.", "format": "date-time", "type": "string" }, "selfLink": { "description": "Link for this goal.", "type": "string" }, "parentLink": { "properties": { "href": { "description": "Link to the view (profile) to which this goal belongs.", "type": "string" }, "type": { "description": "Value is \"analytics#profile\".", "default": "analytics#profile", "type": "string" } }, "type": "object", "description": "Parent link for a goal. Points to the view (profile) to which this goal belongs." }, "type": { "description": "Goal type. Possible values are URL_DESTINATION, VISIT_TIME_ON_SITE, VISIT_NUM_PAGES, AND EVENT.", "type": "string" }, "kind": { "default": "analytics#goal", "description": "Resource type for an Analytics goal.", "type": "string" }, "eventDetails": { "description": "Details for the goal of the type EVENT.", "properties": { "eventConditions": { "description": "List of event conditions.", "items": { "properties": { "type": { "type": "string", "description": "Type of this event condition. Possible values are CATEGORY, ACTION, LABEL, or VALUE." }, "expression": { "type": "string", "description": "Expression used for this match." }, "comparisonType": { "description": "Type of comparison. Possible values are LESS_THAN, GREATER_THAN or EQUAL.", "type": "string" }, "comparisonValue": { "description": "Value used for this comparison.", "format": "int64", "type": "string" }, "matchType": { "description": "Type of the match to be performed. Possible values are REGEXP, BEGINS_WITH, or EXACT.", "type": "string" } }, "type": "object" }, "type": "array" }, "useEventValue": { "description": "Determines if the event value should be used as the value for this goal.", "type": "boolean" } }, "type": "object" } }, "id": "Goal", "description": "JSON template for Analytics goal resource.", "type": "object" }, "RemarketingAudience": { "properties": { "stateBasedAudienceDefinition": { "properties": { "includeConditions": { "$ref": "IncludeConditions", "description": "Defines the conditions to include users to the audience." }, "excludeConditions": { "type": "object", "description": "Defines the conditions to exclude users from the audience.", "properties": { "exclusionDuration": { "type": "string", "description": "Whether to make the exclusion TEMPORARY or PERMANENT." }, "segment": { "description": "The segment condition that will cause a user to be removed from an audience.", "type": "string" } } } }, "type": "object", "description": "A state based audience definition that will cause a user to be added or removed from an audience." }, "accountId": { "description": "Account ID to which this remarketing audience belongs.", "type": "string" }, "webPropertyId": { "type": "string", "description": "Web property ID of the form UA-XXXXX-YY to which this remarketing audience belongs." }, "linkedViews": { "type": "array", "description": "The views (profiles) that this remarketing audience is linked to.", "items": { "type": "string" } }, "name": { "type": "string", "description": "The name of this remarketing audience." }, "audienceType": { "type": "string", "description": "The type of audience, either SIMPLE or STATE_BASED." }, "description": { "type": "string", "description": "The description of this remarketing audience.", "readOnly": true }, "updated": { "readOnly": true, "type": "string", "description": "Time this remarketing audience was last modified.", "format": "date-time" }, "created": { "description": "Time this remarketing audience was created.", "readOnly": true, "type": "string", "format": "date-time" }, "audienceDefinition": { "description": "The simple audience definition that will cause a user to be added to an audience.", "properties": { "includeConditions": { "description": "Defines the conditions to include users to the audience.", "$ref": "IncludeConditions" } }, "type": "object" }, "kind": { "description": "Collection type.", "type": "string", "default": "analytics#remarketingAudience" }, "internalWebPropertyId": { "readOnly": true, "description": "Internal ID for the web property to which this remarketing audience belongs.", "type": "string" }, "linkedAdAccounts": { "type": "array", "items": { "$ref": "LinkedForeignAccount" }, "description": "The linked ad accounts associated with this remarketing audience. A remarketing audience can have only one linkedAdAccount currently." }, "id": { "type": "string", "description": "Remarketing Audience ID." } }, "description": "JSON template for an Analytics remarketing audience.", "id": "RemarketingAudience", "type": "object" }, "Goals": { "description": "A goal collection lists Analytics goals to which the user has access. Each view (profile) can have a set of goals. Each resource in the Goal collection corresponds to a single Analytics goal.", "id": "Goals", "type": "object", "properties": { "nextLink": { "description": "Link to next page for this goal collection.", "type": "string" }, "totalResults": { "type": "integer", "format": "int32", "description": "The total number of results for the query, regardless of the number of resources in the result." }, "previousLink": { "description": "Link to previous page for this goal collection.", "type": "string" }, "items": { "items": { "$ref": "Goal" }, "type": "array", "description": "A list of goals." }, "kind": { "description": "Collection type.", "default": "analytics#goals", "type": "string" }, "itemsPerPage": { "type": "integer", "description": "The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.", "format": "int32" }, "username": { "description": "Email ID of the authenticated user", "type": "string" }, "startIndex": { "format": "int32", "description": "The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.", "type": "integer" } } }, "FilterRef": { "properties": { "id": { "description": "Filter ID.", "type": "string", "annotations": { "required": [ "analytics.management.profileFilterLinks.insert" ] } }, "href": { "type": "string", "description": "Link for this filter." }, "kind": { "default": "analytics#filterRef", "description": "Kind value for filter reference.", "type": "string" }, "accountId": { "description": "Account ID to which this filter belongs.", "type": "string", "readOnly": true }, "name": { "description": "Name of this filter.", "readOnly": true, "type": "string" } }, "id": "FilterRef", "type": "object", "description": "JSON template for a profile filter link." }, "CustomDimension": { "description": "JSON template for Analytics Custom Dimension.", "id": "CustomDimension", "type": "object", "properties": { "active": { "description": "Boolean indicating whether the custom dimension is active.", "type": "boolean" }, "selfLink": { "readOnly": true, "description": "Link for the custom dimension", "type": "string" }, "scope": { "description": "Scope of the custom dimension: HIT, SESSION, USER or PRODUCT.", "type": "string" }, "accountId": { "type": "string", "description": "Account ID." }, "index": { "format": "int32", "readOnly": true, "description": "Index of the custom dimension.", "type": "integer" }, "webPropertyId": { "type": "string", "description": "Property ID." }, "created": { "type": "string", "readOnly": true, "format": "date-time", "description": "Time the custom dimension was created." }, "id": { "description": "Custom dimension ID.", "type": "string" }, "updated": { "description": "Time the custom dimension was last modified.", "readOnly": true, "format": "date-time", "type": "string" }, "parentLink": { "description": "Parent link for the custom dimension. Points to the property to which the custom dimension belongs.", "properties": { "href": { "type": "string", "description": "Link to the property to which the custom dimension belongs." }, "type": { "description": "Type of the parent link. Set to \"analytics#webproperty\".", "type": "string", "default": "analytics#webproperty" } }, "type": "object" }, "kind": { "type": "string", "default": "analytics#customDimension", "readOnly": true, "description": "Kind value for a custom dimension. Set to \"analytics#customDimension\". It is a read-only field." }, "name": { "description": "Name of the custom dimension.", "type": "string" } } }, "Segment": { "type": "object", "id": "Segment", "description": "JSON template for an Analytics segment.", "properties": { "kind": { "default": "analytics#segment", "description": "Resource type for Analytics segment.", "type": "string" }, "created": { "format": "date-time", "type": "string", "description": "Time the segment was created." }, "id": { "type": "string", "description": "Segment ID." }, "type": { "type": "string", "description": "Type for a segment. Possible values are \"BUILT_IN\" or \"CUSTOM\"." }, "segmentId": { "description": "Segment ID. Can be used with the 'segment' parameter in Core Reporting API.", "type": "string" }, "selfLink": { "description": "Link for this segment.", "type": "string" }, "name": { "type": "string", "description": "Segment name." }, "definition": { "type": "string", "description": "Segment definition." }, "updated": { "description": "Time the segment was last modified.", "type": "string", "format": "date-time" } } }, "AccountTreeRequest": { "description": "JSON template for an Analytics account tree requests. The account tree request is used in the provisioning api to create an account, property, and view (profile). It contains the basic information required to make these fields.", "type": "object", "properties": { "websiteUrl": { "type": "string", "annotations": { "required": [ "analytics.provisioning.createAccountTree" ] } }, "timezone": { "type": "string", "annotations": { "required": [ "analytics.provisioning.createAccountTree" ] } }, "webpropertyName": { "annotations": { "required": [ "analytics.provisioning.createAccountTree" ] }, "type": "string" }, "profileName": { "type": "string", "annotations": { "required": [ "analytics.provisioning.createAccountTree" ] } }, "accountName": { "type": "string", "annotations": { "required": [ "analytics.provisioning.createAccountTree" ] } }, "kind": { "default": "analytics#accountTreeRequest", "description": "Resource type for account ticket.", "type": "string" } }, "id": "AccountTreeRequest" }, "FilterExpression": { "description": "JSON template for an Analytics filter expression.", "type": "object", "id": "FilterExpression", "properties": { "fieldIndex": { "format": "int32", "description": "The Index of the custom dimension. Set only if the field is a is CUSTOM_DIMENSION.", "type": "integer" }, "field": { "description": "Field to filter. Possible values: \n- Content and Traffic \n- PAGE_REQUEST_URI, \n- PAGE_HOSTNAME, \n- PAGE_TITLE, \n- REFERRAL, \n- COST_DATA_URI (Campaign target URL), \n- HIT_TYPE, \n- INTERNAL_SEARCH_TERM, \n- INTERNAL_SEARCH_TYPE, \n- SOURCE_PROPERTY_TRACKING_ID, \n- Campaign or AdGroup \n- CAMPAIGN_SOURCE, \n- CAMPAIGN_MEDIUM, \n- CAMPAIGN_NAME, \n- CAMPAIGN_AD_GROUP, \n- CAMPAIGN_TERM, \n- CAMPAIGN_CONTENT, \n- CAMPAIGN_CODE, \n- CAMPAIGN_REFERRAL_PATH, \n- E-Commerce \n- TRANSACTION_COUNTRY, \n- TRANSACTION_REGION, \n- TRANSACTION_CITY, \n- TRANSACTION_AFFILIATION (Store or order location), \n- ITEM_NAME, \n- ITEM_CODE, \n- ITEM_VARIATION, \n- TRANSACTION_ID, \n- TRANSACTION_CURRENCY_CODE, \n- PRODUCT_ACTION_TYPE, \n- Audience/Users \n- BROWSER, \n- BROWSER_VERSION, \n- BROWSER_SIZE, \n- PLATFORM, \n- PLATFORM_VERSION, \n- LANGUAGE, \n- SCREEN_RESOLUTION, \n- SCREEN_COLORS, \n- JAVA_ENABLED (Boolean Field), \n- FLASH_VERSION, \n- GEO_SPEED (Connection speed), \n- VISITOR_TYPE, \n- GEO_ORGANIZATION (ISP organization), \n- GEO_DOMAIN, \n- GEO_IP_ADDRESS, \n- GEO_IP_VERSION, \n- Location \n- GEO_COUNTRY, \n- GEO_REGION, \n- GEO_CITY, \n- Event \n- EVENT_CATEGORY, \n- EVENT_ACTION, \n- EVENT_LABEL, \n- Other \n- CUSTOM_FIELD_1, \n- CUSTOM_FIELD_2, \n- USER_DEFINED_VALUE, \n- Application \n- APP_ID, \n- APP_INSTALLER_ID, \n- APP_NAME, \n- APP_VERSION, \n- SCREEN, \n- IS_APP (Boolean Field), \n- IS_FATAL_EXCEPTION (Boolean Field), \n- EXCEPTION_DESCRIPTION, \n- Mobile device \n- IS_MOBILE (Boolean Field, Deprecated. Use DEVICE_CATEGORY=mobile), \n- IS_TABLET (Boolean Field, Deprecated. Use DEVICE_CATEGORY=tablet), \n- DEVICE_CATEGORY, \n- MOBILE_HAS_QWERTY_KEYBOARD (Boolean Field), \n- MOBILE_HAS_NFC_SUPPORT (Boolean Field), \n- MOBILE_HAS_CELLULAR_RADIO (Boolean Field), \n- MOBILE_HAS_WIFI_SUPPORT (Boolean Field), \n- MOBILE_BRAND_NAME, \n- MOBILE_MODEL_NAME, \n- MOBILE_MARKETING_NAME, \n- MOBILE_POINTING_METHOD, \n- Social \n- SOCIAL_NETWORK, \n- SOCIAL_ACTION, \n- SOCIAL_ACTION_TARGET, \n- Custom dimension \n- CUSTOM_DIMENSION (See accompanying field index),", "type": "string" }, "expressionValue": { "description": "Filter expression value", "type": "string" }, "caseSensitive": { "description": "Determines if the filter is case sensitive.", "type": "boolean" }, "kind": { "type": "string", "default": "analytics#filterExpression", "description": "Kind value for filter expression" }, "matchType": { "description": "Match type for this filter. Possible values are BEGINS_WITH, EQUAL, ENDS_WITH, CONTAINS, or MATCHES. GEO_DOMAIN, GEO_IP_ADDRESS, PAGE_REQUEST_URI, or PAGE_HOSTNAME filters can use any match type; all other filters must use MATCHES.", "type": "string" } } }, "CustomDimensions": { "type": "object", "properties": { "username": { "type": "string", "description": "Email ID of the authenticated user" }, "totalResults": { "format": "int32", "type": "integer", "description": "The total number of results for the query, regardless of the number of results in the response." }, "items": { "items": { "$ref": "CustomDimension" }, "description": "Collection of custom dimensions.", "type": "array" }, "itemsPerPage": { "type": "integer", "format": "int32", "description": "The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter." }, "startIndex": { "type": "integer", "description": "The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.", "format": "int32" }, "previousLink": { "type": "string", "description": "Link to previous page for this custom dimension collection." }, "nextLink": { "type": "string", "description": "Link to next page for this custom dimension collection." }, "kind": { "description": "Collection type.", "type": "string", "default": "analytics#customDimensions" } }, "id": "CustomDimensions", "description": "A custom dimension collection lists Analytics custom dimensions to which the user has access. Each resource in the collection corresponds to a single Analytics custom dimension." }, "ProfileSummary": { "type": "object", "properties": { "id": { "type": "string", "description": "View (profile) ID." }, "kind": { "default": "analytics#profileSummary", "description": "Resource type for Analytics ProfileSummary.", "type": "string" }, "type": { "type": "string", "description": "View (Profile) type. Supported types: WEB or APP." }, "starred": { "description": "Indicates whether this view (profile) is starred or not.", "type": "boolean" }, "name": { "type": "string", "description": "View (profile) name." } }, "id": "ProfileSummary", "description": "JSON template for an Analytics ProfileSummary. ProfileSummary returns basic information (i.e., summary) for a profile." }, "Upload": { "description": "Metadata returned for an upload operation.", "properties": { "accountId": { "format": "int64", "description": "Account Id to which this upload belongs.", "type": "string" }, "id": { "type": "string", "description": "A unique ID for this upload." }, "kind": { "type": "string", "default": "analytics#upload", "description": "Resource type for Analytics upload." }, "errors": { "type": "array", "items": { "type": "string" }, "description": "Data import errors collection." }, "status": { "description": "Upload status. Possible values: PENDING, COMPLETED, FAILED, DELETING, DELETED.", "type": "string" }, "customDataSourceId": { "type": "string", "description": "Custom data source Id to which this data import belongs." }, "uploadTime": { "type": "string", "format": "date-time", "description": "Time this file is uploaded." } }, "type": "object", "id": "Upload" }, "Experiments": { "properties": { "totalResults": { "format": "int32", "description": "The total number of results for the query, regardless of the number of resources in the result.", "type": "integer" }, "username": { "type": "string", "description": "Email ID of the authenticated user" }, "items": { "type": "array", "description": "A list of experiments.", "items": { "$ref": "Experiment" } }, "itemsPerPage": { "type": "integer", "description": "The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.", "format": "int32" }, "startIndex": { "description": "The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.", "type": "integer", "format": "int32" }, "kind": { "description": "Collection type.", "default": "analytics#experiments", "type": "string" }, "nextLink": { "description": "Link to next page for this experiment collection.", "type": "string" }, "previousLink": { "type": "string", "description": "Link to previous page for this experiment collection." } }, "type": "object", "id": "Experiments", "description": "An experiment collection lists Analytics experiments to which the user has access. Each view (profile) can have a set of experiments. Each resource in the Experiment collection corresponds to a single Analytics experiment." }, "LinkedForeignAccount": { "properties": { "id": { "type": "string", "description": "Entity ad account link ID." }, "accountId": { "description": "Account ID to which this linked foreign account belongs.", "type": "string" }, "eligibleForSearch": { "description": "Boolean indicating whether this is eligible for search.", "type": "boolean", "readOnly": true }, "kind": { "description": "Resource type for linked foreign account.", "type": "string", "default": "analytics#linkedForeignAccount" }, "linkedAccountId": { "type": "string", "description": "The foreign account ID. For example the an Google Ads `linkedAccountId` has the following format XXX-XXX-XXXX." }, "webPropertyId": { "type": "string", "description": "Web property ID of the form UA-XXXXX-YY to which this linked foreign account belongs." }, "status": { "type": "string", "description": "The status of this foreign account link." }, "internalWebPropertyId": { "description": "Internal ID for the web property to which this linked foreign account belongs.", "type": "string", "readOnly": true }, "type": { "description": "The type of the foreign account. For example, `ADWORDS_LINKS`, `DBM_LINKS`, `MCC_LINKS` or `OPTIMIZE`.", "type": "string" }, "remarketingAudienceId": { "description": "Remarketing audience ID to which this linked foreign account belongs.", "type": "string" } }, "id": "LinkedForeignAccount", "type": "object", "description": "JSON template for an Analytics Remarketing Audience Foreign Link." }, "UserRef": { "id": "UserRef", "description": "JSON template for a user reference.", "type": "object", "properties": { "id": { "type": "string", "description": "User ID." }, "kind": { "type": "string", "default": "analytics#userRef" }, "email": { "type": "string", "description": "Email ID of this user." } } }, "UnsampledReport": { "id": "UnsampledReport", "type": "object", "properties": { "filters": { "type": "string", "description": "The filters for the unsampled report." }, "updated": { "format": "date-time", "readOnly": true, "description": "Time this unsampled report was last modified.", "type": "string" }, "webPropertyId": { "description": "Web property ID to which this unsampled report belongs. The web property ID is of the form UA-XXXXX-YY.", "type": "string" }, "downloadType": { "readOnly": true, "description": "The type of download you need to use for the report data file. Possible values include `GOOGLE_DRIVE` and `GOOGLE_CLOUD_STORAGE`. If the value is `GOOGLE_DRIVE`, see the `driveDownloadDetails` field. If the value is `GOOGLE_CLOUD_STORAGE`, see the `cloudStorageDownloadDetails` field.", "type": "string" }, "driveDownloadDetails": { "properties": { "documentId": { "type": "string", "description": "Id of the document/file containing the report data." } }, "readOnly": true, "type": "object", "description": "Download details for a file stored in Google Drive." }, "created": { "readOnly": true, "description": "Time this unsampled report was created.", "type": "string", "format": "date-time" }, "start-date": { "annotations": { "required": [ "analytics.management.filters.insert", "analytics.management.unsampledReports.insert" ] }, "type": "string", "description": "The start date for the unsampled report." }, "profileId": { "description": "View (Profile) ID to which this unsampled report belongs.", "type": "string" }, "metrics": { "description": "The metrics for the unsampled report.", "type": "string", "annotations": { "required": [ "analytics.management.filters.insert", "analytics.management.unsampledReports.insert" ] } }, "kind": { "description": "Resource type for an Analytics unsampled report.", "default": "analytics#unsampledReport", "type": "string", "readOnly": true }, "status": { "readOnly": true, "type": "string", "description": "Status of this unsampled report. Possible values are PENDING, COMPLETED, or FAILED." }, "selfLink": { "readOnly": true, "type": "string", "description": "Link for this unsampled report." }, "accountId": { "type": "string", "description": "Account ID to which this unsampled report belongs." }, "title": { "annotations": { "required": [ "analytics.management.filters.insert", "analytics.management.unsampledReports.insert" ] }, "description": "Title of the unsampled report.", "type": "string" }, "cloudStorageDownloadDetails": { "readOnly": true, "type": "object", "properties": { "bucketId": { "type": "string", "description": "Id of the bucket the file object is stored in." }, "objectId": { "description": "Id of the file object containing the report data.", "type": "string" } }, "description": "Download details for a file stored in Google Cloud Storage." }, "dimensions": { "description": "The dimensions for the unsampled report.", "type": "string" }, "segment": { "type": "string", "description": "The segment for the unsampled report." }, "id": { "type": "string", "description": "Unsampled report ID." }, "end-date": { "description": "The end date for the unsampled report.", "type": "string", "annotations": { "required": [ "analytics.management.filters.insert", "analytics.management.unsampledReports.insert" ] } } }, "description": "JSON template for Analytics unsampled report resource." }, "Profiles": { "properties": { "startIndex": { "description": "The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.", "format": "int32", "type": "integer" }, "itemsPerPage": { "format": "int32", "type": "integer", "description": "The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter." }, "previousLink": { "description": "Link to previous page for this view (profile) collection.", "type": "string" }, "totalResults": { "format": "int32", "type": "integer", "description": "The total number of results for the query, regardless of the number of results in the response." }, "nextLink": { "description": "Link to next page for this view (profile) collection.", "type": "string" }, "username": { "type": "string", "description": "Email ID of the authenticated user" }, "items": { "type": "array", "items": { "$ref": "Profile" }, "description": "A list of views (profiles)." }, "kind": { "type": "string", "description": "Collection type.", "default": "analytics#profiles" } }, "id": "Profiles", "type": "object", "description": "A view (profile) collection lists Analytics views (profiles) to which the user has access. Each resource in the collection corresponds to a single Analytics view (profile)." }, "EntityUserLinks": { "properties": { "startIndex": { "type": "integer", "description": "The starting index of the entries, which is 1 by default or otherwise specified by the start-index query parameter.", "format": "int32" }, "kind": { "default": "analytics#entityUserLinks", "description": "Collection type.", "type": "string" }, "itemsPerPage": { "format": "int32", "description": "The maximum number of entries the response can contain, regardless of the actual number of entries returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.", "type": "integer" }, "nextLink": { "description": "Next link for this account collection.", "type": "string" }, "previousLink": { "type": "string", "description": "Previous link for this account collection." }, "items": { "description": "A list of entity user links.", "type": "array", "items": { "$ref": "EntityUserLink" } }, "totalResults": { "type": "integer", "description": "The total number of results for the query, regardless of the number of results in the response.", "format": "int32" } }, "type": "object", "description": "An entity user link collection provides a list of Analytics ACL links Each resource in this collection corresponds to a single link.", "id": "EntityUserLinks" }, "Accounts": { "type": "object", "properties": { "nextLink": { "type": "string", "description": "Next link for this account collection." }, "kind": { "description": "Collection type.", "default": "analytics#accounts", "type": "string" }, "startIndex": { "type": "integer", "description": "The starting index of the entries, which is 1 by default or otherwise specified by the start-index query parameter.", "format": "int32" }, "totalResults": { "format": "int32", "type": "integer", "description": "The total number of results for the query, regardless of the number of results in the response." }, "previousLink": { "description": "Previous link for this account collection.", "type": "string" }, "itemsPerPage": { "format": "int32", "description": "The maximum number of entries the response can contain, regardless of the actual number of entries returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.", "type": "integer" }, "items": { "description": "A list of accounts.", "items": { "$ref": "Account" }, "type": "array" }, "username": { "description": "Email ID of the authenticated user", "type": "string" } }, "description": "An account collection provides a list of Analytics accounts to which a user has access. The account collection is the entry point to all management information. Each resource in the collection corresponds to a single Analytics account.", "id": "Accounts" }, "WebPropertyRef": { "type": "object", "id": "WebPropertyRef", "properties": { "internalWebPropertyId": { "type": "string", "description": "Internal ID for this web property." }, "kind": { "description": "Analytics web property reference.", "type": "string", "default": "analytics#webPropertyRef" }, "name": { "description": "Name of this web property.", "type": "string" }, "id": { "description": "Web property ID of the form UA-XXXXX-YY.", "type": "string" }, "accountId": { "description": "Account ID to which this web property belongs.", "type": "string" }, "href": { "description": "Link for this web property.", "type": "string" } }, "description": "JSON template for a web property reference." }, "Segments": { "id": "Segments", "type": "object", "description": "An segment collection lists Analytics segments that the user has access to. Each resource in the collection corresponds to a single Analytics segment.", "properties": { "itemsPerPage": { "format": "int32", "type": "integer", "description": "The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter." }, "username": { "description": "Email ID of the authenticated user", "type": "string" }, "startIndex": { "type": "integer", "description": "The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.", "format": "int32" }, "previousLink": { "type": "string", "description": "Link to previous page for this segment collection." }, "items": { "items": { "$ref": "Segment" }, "type": "array", "description": "A list of segments." }, "totalResults": { "format": "int32", "description": "The total number of results for the query, regardless of the number of results in the response.", "type": "integer" }, "kind": { "description": "Collection type for segments.", "default": "analytics#segments", "type": "string" }, "nextLink": { "type": "string", "description": "Link to next page for this segment collection." } } }, "Filter": { "properties": { "id": { "type": "string", "description": "Filter ID." }, "selfLink": { "type": "string", "readOnly": true, "description": "Link for this filter." }, "searchAndReplaceDetails": { "description": "Details for the filter of the type SEARCH_AND_REPLACE.", "properties": { "fieldIndex": { "format": "int32", "type": "integer", "description": "The Index of the custom dimension. Required if field is a CUSTOM_DIMENSION." }, "searchString": { "description": "Term to search.", "type": "string" }, "field": { "type": "string", "description": "Field to use in the filter." }, "caseSensitive": { "description": "Determines if the filter is case sensitive.", "type": "boolean" }, "replaceString": { "type": "string", "description": "Term to replace the search term with." } }, "type": "object" }, "excludeDetails": { "description": "Details for the filter of the type EXCLUDE.", "$ref": "FilterExpression" }, "type": { "type": "string", "annotations": { "required": [ "analytics.management.filters.insert", "analytics.management.filters.update" ] }, "description": "Type of this filter. Possible values are INCLUDE, EXCLUDE, LOWERCASE, UPPERCASE, SEARCH_AND_REPLACE and ADVANCED." }, "parentLink": { "type": "object", "properties": { "href": { "type": "string", "description": "Link to the account to which this filter belongs." }, "type": { "description": "Value is \"analytics#account\".", "type": "string", "default": "analytics#account" } }, "description": "Parent link for this filter. Points to the account to which this filter belongs." }, "lowercaseDetails": { "type": "object", "description": "Details for the filter of the type LOWER.", "properties": { "field": { "description": "Field to use in the filter.", "type": "string" }, "fieldIndex": { "format": "int32", "description": "The Index of the custom dimension. Required if field is a CUSTOM_DIMENSION.", "type": "integer" } } }, "updated": { "description": "Time this filter was last modified.", "format": "date-time", "readOnly": true, "type": "string" }, "name": { "annotations": { "required": [ "analytics.management.filters.insert", "analytics.management.filters.update" ] }, "description": "Name of this filter.", "type": "string" }, "advancedDetails": { "properties": { "caseSensitive": { "description": "Indicates if the filter expressions are case sensitive.", "type": "boolean" }, "fieldBIndex": { "description": "The Index of the custom dimension. Required if field is a CUSTOM_DIMENSION.", "format": "int32", "type": "integer" }, "extractA": { "type": "string", "description": "Expression to extract from field A." }, "fieldB": { "type": "string", "description": "Field B." }, "fieldAIndex": { "type": "integer", "description": "The Index of the custom dimension. Required if field is a CUSTOM_DIMENSION.", "format": "int32" }, "fieldBRequired": { "description": "Indicates if field B is required to match.", "type": "boolean" }, "fieldA": { "type": "string", "description": "Field A." }, "overrideOutputField": { "type": "boolean", "description": "Indicates if the existing value of the output field, if any, should be overridden by the output expression." }, "extractB": { "type": "string", "description": "Expression to extract from field B." }, "fieldARequired": { "description": "Indicates if field A is required to match.", "type": "boolean" }, "outputToFieldIndex": { "type": "integer", "description": "The Index of the custom dimension. Required if field is a CUSTOM_DIMENSION.", "format": "int32" }, "outputConstructor": { "description": "Expression used to construct the output value.", "type": "string" }, "outputToField": { "type": "string", "description": "Output field." } }, "type": "object", "description": "Details for the filter of the type ADVANCED." }, "created": { "readOnly": true, "format": "date-time", "type": "string", "description": "Time this filter was created." }, "kind": { "default": "analytics#filter", "type": "string", "readOnly": true, "description": "Resource type for Analytics filter." }, "uppercaseDetails": { "properties": { "fieldIndex": { "type": "integer", "format": "int32", "description": "The Index of the custom dimension. Required if field is a CUSTOM_DIMENSION." }, "field": { "type": "string", "description": "Field to use in the filter." } }, "type": "object", "description": "Details for the filter of the type UPPER." }, "includeDetails": { "description": "Details for the filter of the type INCLUDE.", "$ref": "FilterExpression" }, "accountId": { "description": "Account ID to which this filter belongs.", "type": "string" } }, "description": "JSON template for an Analytics account filter.", "id": "Filter", "type": "object" }, "Profile": { "type": "object", "description": "JSON template for an Analytics view (profile).", "properties": { "timezone": { "type": "string", "description": "Time zone for which this view (profile) has been configured. Time zones are identified by strings from the TZ database." }, "selfLink": { "type": "string", "description": "Link for this view (profile).", "readOnly": true }, "id": { "description": "View (Profile) ID.", "type": "string" }, "websiteUrl": { "type": "string", "description": "Website URL for this view (profile)." }, "name": { "type": "string", "description": "Name of this view (profile)." }, "enhancedECommerceTracking": { "type": "boolean", "description": "Indicates whether enhanced ecommerce tracking is enabled for this view (profile). This property can only be enabled if ecommerce tracking is enabled." }, "parentLink": { "description": "Parent link for this view (profile). Points to the web property to which this view (profile) belongs.", "properties": { "href": { "type": "string", "description": "Link to the web property to which this view (profile) belongs." }, "type": { "type": "string", "description": "Value is \"analytics#webproperty\".", "default": "analytics#webproperty" } }, "type": "object" }, "defaultPage": { "type": "string", "description": "Default page for this view (profile)." }, "excludeQueryParameters": { "description": "The query parameters that are excluded from this view (profile).", "type": "string" }, "currency": { "type": "string", "description": "The currency type associated with this view (profile), defaults to USD. The supported values are:\nUSD, JPY, EUR, GBP, AUD, KRW, BRL, CNY, DKK, RUB, SEK, NOK, PLN, TRY, TWD, HKD, THB, IDR, ARS, MXN, VND, PHP, INR, CHF, CAD, CZK, NZD, HUF, BGN, LTL, ZAR, UAH, AED, BOB, CLP, COP, EGP, HRK, ILS, MAD, MYR, PEN, PKR, RON, RSD, SAR, SGD, VEF, LVL" }, "siteSearchCategoryParameters": { "type": "string", "description": "Site search category parameters for this view (profile)." }, "stripSiteSearchCategoryParameters": { "type": "boolean", "description": "Whether or not Analytics will strip search category parameters from the URLs in your reports." }, "kind": { "default": "analytics#profile", "type": "string", "description": "Resource type for Analytics view (profile).", "readOnly": true }, "created": { "description": "Time this view (profile) was created.", "format": "date-time", "readOnly": true, "type": "string" }, "internalWebPropertyId": { "description": "Internal ID for the web property to which this view (profile) belongs.", "type": "string", "readOnly": true }, "siteSearchQueryParameters": { "type": "string", "description": "The site search query parameters for this view (profile)." }, "botFilteringEnabled": { "type": "boolean", "description": "Indicates whether bot filtering is enabled for this view (profile)." }, "stripSiteSearchQueryParameters": { "type": "boolean", "description": "Whether or not Analytics will strip search query parameters from the URLs in your reports." }, "webPropertyId": { "type": "string", "description": "Web property ID of the form UA-XXXXX-YY to which this view (profile) belongs.", "readOnly": true }, "accountId": { "description": "Account ID to which this view (profile) belongs.", "type": "string" }, "permissions": { "description": "Permissions the user has for this view (profile).", "type": "object", "properties": { "effective": { "items": { "type": "string" }, "description": "All the permissions that the user has for this view (profile). These include any implied permissions (e.g., EDIT implies VIEW) or inherited permissions from the parent web property.", "type": "array", "readOnly": true } } }, "childLink": { "type": "object", "description": "Child link for this view (profile). Points to the list of goals for this view (profile).", "properties": { "href": { "type": "string", "description": "Link to the list of goals for this view (profile)." }, "type": { "default": "analytics#goals", "description": "Value is \"analytics#goals\".", "type": "string" } } }, "updated": { "readOnly": true, "format": "date-time", "description": "Time this view (profile) was last modified.", "type": "string" }, "eCommerceTracking": { "description": "Indicates whether ecommerce tracking is enabled for this view (profile).", "type": "boolean" }, "type": { "description": "View (Profile) type. Supported types: WEB or APP.", "type": "string" }, "starred": { "description": "Indicates whether this view (profile) is starred or not.", "type": "boolean" } }, "id": "Profile" }, "Uploads": { "id": "Uploads", "description": "Upload collection lists Analytics uploads to which the user has access. Each custom data source can have a set of uploads. Each resource in the upload collection corresponds to a single Analytics data upload.", "properties": { "items": { "type": "array", "description": "A list of uploads.", "items": { "$ref": "Upload" } }, "itemsPerPage": { "format": "int32", "type": "integer", "description": "The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter." }, "nextLink": { "type": "string", "description": "Link to next page for this upload collection." }, "totalResults": { "type": "integer", "description": "The total number of results for the query, regardless of the number of resources in the result.", "format": "int32" }, "startIndex": { "type": "integer", "format": "int32", "description": "The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter." }, "kind": { "default": "analytics#uploads", "description": "Collection type.", "type": "string" }, "previousLink": { "type": "string", "description": "Link to previous page for this upload collection." } }, "type": "object" }, "McfData": { "description": "Multi-Channel Funnels data for a given view (profile).", "id": "McfData", "properties": { "nextLink": { "description": "Link to next page for this Analytics data query.", "type": "string" }, "selfLink": { "description": "Link to this page.", "type": "string" }, "previousLink": { "description": "Link to previous page for this Analytics data query.", "type": "string" }, "totalsForAllResults": { "type": "object", "additionalProperties": { "description": "Key-value pair for the total value of a metric. Key is the metric name and the value is the total value for that metric.", "type": "string" }, "description": "Total values for the requested metrics over all the results, not just the results returned in this response. The order of the metric totals is same as the metric order specified in the request." }, "sampleSpace": { "type": "string", "format": "int64", "description": "Total size of the sample space from which the samples were selected." }, "rows": { "items": { "type": "array", "items": { "type": "object", "description": "A union object representing a dimension or metric value. Only one of \"primitiveValue\" or \"conversionPathValue\" attribute will be populated.", "properties": { "conversionPathValue": { "description": "A conversion path dimension value, containing a list of interactions with their attributes.", "items": { "type": "object", "properties": { "interactionType": { "type": "string", "description": "Type of an interaction on conversion path. Such as CLICK, IMPRESSION etc." }, "nodeValue": { "description": "Node value of an interaction on conversion path. Such as source, medium etc.", "type": "string" } } }, "type": "array" }, "primitiveValue": { "type": "string", "description": "A primitive dimension value. A primitive metric value." } } } }, "description": "Analytics data rows, where each row contains a list of dimension values followed by the metric values. The order of dimensions and metrics is same as specified in the request.", "type": "array" }, "query": { "properties": { "sort": { "type": "array", "items": { "type": "string" }, "description": "List of dimensions or metrics based on which Analytics data is sorted." }, "metrics": { "type": "array", "items": { "type": "string" }, "description": "List of analytics metrics." }, "filters": { "type": "string", "description": "Comma-separated list of dimension or metric filters." }, "samplingLevel": { "type": "string", "description": "Desired sampling level" }, "ids": { "type": "string", "description": "Unique table ID." }, "dimensions": { "description": "List of analytics dimensions.", "type": "string" }, "end-date": { "type": "string", "description": "End date." }, "start-index": { "format": "int32", "type": "integer", "description": "Start index." }, "max-results": { "description": "Maximum results per page.", "type": "integer", "format": "int32" }, "start-date": { "description": "Start date.", "type": "string" }, "segment": { "type": "string", "description": "Analytics advanced segment." } }, "type": "object", "description": "Analytics data request query parameters." }, "kind": { "type": "string", "default": "analytics#mcfData", "description": "Resource type." }, "profileInfo": { "properties": { "accountId": { "description": "Account ID to which this view (profile) belongs.", "type": "string" }, "tableId": { "description": "Table ID for view (profile).", "type": "string" }, "profileId": { "type": "string", "description": "View (Profile) ID." }, "profileName": { "type": "string", "description": "View (Profile) name." }, "webPropertyId": { "type": "string", "description": "Web Property ID to which this view (profile) belongs." }, "internalWebPropertyId": { "description": "Internal ID for the web property to which this view (profile) belongs.", "type": "string" } }, "description": "Information for the view (profile), for which the Analytics data was requested.", "type": "object" }, "columnHeaders": { "description": "Column headers that list dimension names followed by the metric names. The order of dimensions and metrics is same as specified in the request.", "items": { "properties": { "name": { "description": "Column name.", "type": "string" }, "columnType": { "description": "Column Type. Either DIMENSION or METRIC.", "type": "string" }, "dataType": { "description": "Data type. Dimension and metric values data types such as INTEGER, DOUBLE, CURRENCY, MCF_SEQUENCE etc.", "type": "string" } }, "type": "object" }, "type": "array" }, "sampleSize": { "type": "string", "format": "int64", "description": "The number of samples used to calculate the result." }, "containsSampledData": { "type": "boolean", "description": "Determines if the Analytics data contains sampled data." }, "totalResults": { "description": "The total number of rows for the query, regardless of the number of rows in the response.", "type": "integer", "format": "int32" }, "id": { "type": "string", "description": "Unique ID for this data response." }, "itemsPerPage": { "type": "integer", "format": "int32", "description": "The maximum number of rows the response can contain, regardless of the actual number of rows returned. Its value ranges from 1 to 10,000 with a value of 1000 by default, or otherwise specified by the max-results query parameter." } }, "type": "object" }, "Filters": { "type": "object", "id": "Filters", "description": "A filter collection lists filters created by users in an Analytics account. Each resource in the collection corresponds to a filter.", "properties": { "items": { "type": "array", "description": "A list of filters.", "items": { "$ref": "Filter" } }, "previousLink": { "type": "string", "description": "Link to previous page for this filter collection." }, "nextLink": { "type": "string", "description": "Link to next page for this filter collection." }, "kind": { "description": "Collection type.", "default": "analytics#filters", "type": "string" }, "totalResults": { "description": "The total number of results for the query, regardless of the number of results in the response.", "type": "integer", "format": "int32" }, "itemsPerPage": { "format": "int32", "type": "integer", "description": "The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1,000 with a value of 1000 by default, or otherwise specified by the max-results query parameter." }, "username": { "type": "string", "description": "Email ID of the authenticated user" }, "startIndex": { "description": "The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.", "format": "int32", "type": "integer" } } }, "ProfileFilterLink": { "properties": { "profileRef": { "description": "View (Profile) for this link.", "$ref": "ProfileRef" }, "rank": { "description": "The rank of this profile filter link relative to the other filters linked to the same profile.\nFor readonly (i.e., list and get) operations, the rank always starts at 1.\nFor write (i.e., create, update, or delete) operations, you may specify a value between 0 and 255 inclusively, [0, 255]. In order to insert a link at the end of the list, either don't specify a rank or set a rank to a number greater than the largest rank in the list. In order to insert a link to the beginning of the list specify a rank that is less than or equal to 1. The new link will move all existing filters with the same or lower rank down the list. After the link is inserted/updated/deleted all profile filter links will be renumbered starting at 1.", "type": "integer", "format": "int32" }, "filterRef": { "description": "Filter for this link.", "$ref": "FilterRef" }, "selfLink": { "description": "Link for this profile filter link.", "readOnly": true, "type": "string" }, "kind": { "readOnly": true, "description": "Resource type for Analytics filter.", "type": "string", "default": "analytics#profileFilterLink" }, "id": { "description": "Profile filter link ID.", "type": "string" } }, "type": "object", "id": "ProfileFilterLink", "description": "JSON template for an Analytics profile filter link." }, "AdWordsAccount": { "type": "object", "properties": { "autoTaggingEnabled": { "description": "True if auto-tagging is enabled on the Google Ads account. Read-only after the insert operation.", "type": "boolean" }, "kind": { "default": "analytics#adWordsAccount", "type": "string", "description": "Resource type for Google Ads account." }, "customerId": { "annotations": { "required": [ "analytics.management.webPropertyAdWordsLinks.insert", "analytics.management.webPropertyAdWordsLinks.update" ] }, "description": "Customer ID. This field is required when creating a Google Ads link.", "type": "string" } }, "id": "AdWordsAccount", "description": "JSON template for an Google Ads account." }, "UnsampledReports": { "description": "An unsampled report collection lists Analytics unsampled reports to which the user has access. Each view (profile) can have a set of unsampled reports. Each resource in the unsampled report collection corresponds to a single Analytics unsampled report.", "properties": { "username": { "description": "Email ID of the authenticated user", "type": "string" }, "kind": { "description": "Collection type.", "type": "string", "default": "analytics#unsampledReports" }, "totalResults": { "description": "The total number of results for the query, regardless of the number of resources in the result.", "type": "integer", "format": "int32" }, "nextLink": { "type": "string", "description": "Link to next page for this unsampled report collection." }, "previousLink": { "description": "Link to previous page for this unsampled report collection.", "type": "string" }, "items": { "items": { "$ref": "UnsampledReport" }, "description": "A list of unsampled reports.", "type": "array" }, "startIndex": { "type": "integer", "format": "int32", "description": "The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter." }, "itemsPerPage": { "format": "int32", "description": "The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.", "type": "integer" } }, "type": "object", "id": "UnsampledReports" }, "EntityAdWordsLink": { "properties": { "kind": { "default": "analytics#entityAdWordsLink", "type": "string", "description": "Resource type for entity Google Ads link." }, "name": { "type": "string", "description": "Name of the link. This field is required when creating a Google Ads link.", "annotations": { "required": [ "analytics.management.webPropertyAdWordsLinks.insert", "analytics.management.webPropertyAdWordsLinks.update" ] } }, "selfLink": { "description": "URL link for this Google Analytics - Google Ads link.", "type": "string" }, "adWordsAccounts": { "type": "array", "description": "A list of Google Ads client accounts. These cannot be MCC accounts. This field is required when creating a Google Ads link. It cannot be empty.", "annotations": { "required": [ "analytics.management.webPropertyAdWordsLinks.insert", "analytics.management.webPropertyAdWordsLinks.update" ] }, "items": { "$ref": "AdWordsAccount" } }, "profileIds": { "type": "array", "description": "IDs of linked Views (Profiles) represented as strings.", "items": { "type": "string" } }, "id": { "description": "Entity Google Ads link ID", "type": "string" }, "entity": { "type": "object", "description": "Web property being linked.", "properties": { "webPropertyRef": { "$ref": "WebPropertyRef" } } } }, "type": "object", "id": "EntityAdWordsLink", "description": "JSON template for Analytics Entity Google Ads Link." }, "EntityUserLink": { "properties": { "userRef": { "description": "User reference.", "$ref": "UserRef" }, "permissions": { "type": "object", "properties": { "local": { "type": "array", "description": "Permissions that a user has been assigned at this very level. Does not include any implied or inherited permissions. Local permissions are modifiable.", "items": { "type": "string" } }, "effective": { "type": "array", "items": { "type": "string" }, "readOnly": true, "description": "Effective permissions represent all the permissions that a user has for this entity. These include any implied permissions (e.g., EDIT implies VIEW) or inherited permissions from the parent entity. Effective permissions are read-only." } }, "description": "Permissions the user has for this entity." }, "entity": { "properties": { "profileRef": { "description": "View (Profile) for this link.", "$ref": "ProfileRef" }, "webPropertyRef": { "description": "Web property for this link.", "$ref": "WebPropertyRef" }, "accountRef": { "description": "Account for this link.", "$ref": "AccountRef" } }, "type": "object", "description": "Entity for this link. It can be an account, a web property, or a view (profile)." }, "selfLink": { "type": "string", "description": "Self link for this resource." }, "id": { "description": "Entity user link ID", "type": "string" }, "kind": { "default": "analytics#entityUserLink", "description": "Resource type for entity user link.", "type": "string" } }, "description": "JSON template for an Analytics Entity-User Link. Returns permissions that a user has for an entity.", "id": "EntityUserLink", "type": "object" }, "UserDeletionRequest": { "id": "UserDeletionRequest", "type": "object", "description": "JSON template for a user deletion request resource.", "properties": { "kind": { "description": "Value is \"analytics#userDeletionRequest\".", "default": "analytics#userDeletionRequest", "type": "string" }, "deletionRequestTime": { "format": "date-time", "readOnly": true, "description": "This marks the point in time for which all user data before should be deleted", "type": "string" }, "propertyId": { "description": "Property ID", "type": "string" }, "webPropertyId": { "description": "Web property ID of the form UA-XXXXX-YY.", "type": "string" }, "id": { "properties": { "type": { "type": "string", "description": "Type of user" }, "userId": { "description": "The User's id", "type": "string" } }, "type": "object", "description": "User ID." }, "firebaseProjectId": { "type": "string", "description": "Firebase Project Id" } } }, "WebPropertySummary": { "properties": { "kind": { "description": "Resource type for Analytics WebPropertySummary.", "default": "analytics#webPropertySummary", "type": "string" }, "starred": { "description": "Indicates whether this web property is starred or not.", "type": "boolean" }, "id": { "description": "Web property ID of the form UA-XXXXX-YY.", "type": "string" }, "internalWebPropertyId": { "type": "string", "description": "Internal ID for this web property." }, "profiles": { "items": { "$ref": "ProfileSummary" }, "description": "List of profiles under this web property.", "type": "array" }, "name": { "type": "string", "description": "Web property name." }, "websiteUrl": { "description": "Website url for this web property.", "type": "string" }, "level": { "description": "Level for this web property. Possible values are STANDARD or PREMIUM.", "type": "string" } }, "type": "object", "description": "JSON template for an Analytics WebPropertySummary. WebPropertySummary returns basic information (i.e., summary) for a web property.", "id": "WebPropertySummary" }, "AccountSummary": { "properties": { "webProperties": { "type": "array", "description": "List of web properties under this account.", "items": { "$ref": "WebPropertySummary" } }, "name": { "description": "Account name.", "type": "string" }, "starred": { "type": "boolean", "description": "Indicates whether this account is starred or not." }, "id": { "description": "Account ID.", "type": "string" }, "kind": { "type": "string", "description": "Resource type for Analytics AccountSummary.", "default": "analytics#accountSummary" } }, "description": "JSON template for an Analytics AccountSummary. An AccountSummary is a lightweight tree comprised of properties/profiles.", "id": "AccountSummary", "type": "object" }, "AnalyticsDataimportDeleteUploadDataRequest": { "id": "AnalyticsDataimportDeleteUploadDataRequest", "description": "Request template for the delete upload data request.", "properties": { "customDataImportUids": { "items": { "type": "string" }, "description": "A list of upload UIDs.", "type": "array" } }, "type": "object" }, "Experiment": { "id": "Experiment", "properties": { "equalWeighting": { "description": "Boolean specifying whether to distribute traffic evenly across all variations. If the value is False, content experiments follows the default behavior of adjusting traffic dynamically based on variation performance. Optional -- defaults to False. This field may not be changed for an experiment whose status is ENDED.", "type": "boolean" }, "endTime": { "format": "date-time", "type": "string", "description": "The ending time of the experiment (the time the status changed from RUNNING to ENDED). This field is present only if the experiment has ended. This field is read-only." }, "optimizationType": { "type": "string", "description": "Whether the objectiveMetric should be minimized or maximized. Possible values: \"MAXIMUM\", \"MINIMUM\". Optional--defaults to \"MAXIMUM\". Cannot be specified without objectiveMetric. Cannot be modified when status is \"RUNNING\" or \"ENDED\"." }, "internalWebPropertyId": { "type": "string", "description": "Internal ID for the web property to which this experiment belongs. This field is read-only." }, "objectiveMetric": { "description": "The metric that the experiment is optimizing. Valid values: \"ga:goal(n)Completions\", \"ga:adsenseAdsClicks\", \"ga:adsenseAdsViewed\", \"ga:adsenseRevenue\", \"ga:bounces\", \"ga:pageviews\", \"ga:sessionDuration\", \"ga:transactions\", \"ga:transactionRevenue\". This field is required if status is \"RUNNING\" and servingFramework is one of \"REDIRECT\" or \"API\".", "type": "string" }, "snippet": { "type": "string", "description": "The snippet of code to include on the control page(s). This field is read-only." }, "startTime": { "type": "string", "format": "date-time", "description": "The starting time of the experiment (the time the status changed from READY_TO_RUN to RUNNING). This field is present only if the experiment has started. This field is read-only." }, "parentLink": { "description": "Parent link for an experiment. Points to the view (profile) to which this experiment belongs.", "properties": { "type": { "description": "Value is \"analytics#profile\". This field is read-only.", "default": "analytics#profile", "type": "string" }, "href": { "description": "Link to the view (profile) to which this experiment belongs. This field is read-only.", "type": "string" } }, "type": "object" }, "webPropertyId": { "description": "Web property ID to which this experiment belongs. The web property ID is of the form UA-XXXXX-YY. This field is read-only.", "type": "string" }, "name": { "description": "Experiment name. This field may not be changed for an experiment whose status is ENDED. This field is required when creating an experiment.", "type": "string", "annotations": { "required": [ "analytics.management.experiments.insert", "analytics.management.experiments.update" ] } }, "updated": { "description": "Time the experiment was last modified. This field is read-only.", "type": "string", "format": "date-time" }, "trafficCoverage": { "format": "double", "type": "number", "description": "A floating-point number in (0, 1]. Specifies the fraction of the traffic that participates in the experiment. Can be changed for a running experiment. This field may not be changed for an experiments whose status is ENDED." }, "winnerConfidenceLevel": { "format": "double", "description": "A floating-point number in (0, 1). Specifies the necessary confidence level to choose a winner. This field may not be changed for an experiments whose status is ENDED.", "type": "number" }, "kind": { "default": "analytics#experiment", "description": "Resource type for an Analytics experiment. This field is read-only.", "type": "string" }, "winnerFound": { "type": "boolean", "description": "Boolean specifying whether a winner has been found for this experiment. This field is read-only." }, "description": { "description": "Notes about this experiment.", "type": "string" }, "status": { "type": "string", "annotations": { "required": [ "analytics.management.experiments.insert", "analytics.management.experiments.update" ] }, "description": "Experiment status. Possible values: \"DRAFT\", \"READY_TO_RUN\", \"RUNNING\", \"ENDED\". Experiments can be created in the \"DRAFT\", \"READY_TO_RUN\" or \"RUNNING\" state. This field is required when creating an experiment." }, "selfLink": { "type": "string", "description": "Link for this experiment. This field is read-only." }, "accountId": { "description": "Account ID to which this experiment belongs. This field is read-only.", "type": "string" }, "rewriteVariationUrlsAsOriginal": { "type": "boolean", "description": "Boolean specifying whether variations URLS are rewritten to match those of the original. This field may not be changed for an experiments whose status is ENDED." }, "servingFramework": { "type": "string", "description": "The framework used to serve the experiment variations and evaluate the results. One of: \n- REDIRECT: Google Analytics redirects traffic to different variation pages, reports the chosen variation and evaluates the results.\n- API: Google Analytics chooses and reports the variation to serve and evaluates the results; the caller is responsible for serving the selected variation.\n- EXTERNAL: The variations will be served externally and the chosen variation reported to Google Analytics. The caller is responsible for serving the selected variation and evaluating the results." }, "created": { "description": "Time the experiment was created. This field is read-only.", "type": "string", "format": "date-time" }, "minimumExperimentLengthInDays": { "type": "integer", "description": "An integer number in [3, 90]. Specifies the minimum length of the experiment. Can be changed for a running experiment. This field may not be changed for an experiments whose status is ENDED.", "format": "int32" }, "variations": { "description": "Array of variations. The first variation in the array is the original. The number of variations may not change once an experiment is in the RUNNING state. At least two variations are required before status can be set to RUNNING.", "type": "array", "items": { "type": "object", "properties": { "status": { "description": "Status of the variation. Possible values: \"ACTIVE\", \"INACTIVE\". INACTIVE variations are not served. This field may not be changed for an experiment whose status is ENDED.", "type": "string" }, "weight": { "format": "double", "description": "Weight that this variation should receive. Only present if the experiment is running. This field is read-only.", "type": "number" }, "url": { "description": "The URL of the variation. This field may not be changed for an experiment whose status is RUNNING or ENDED.", "type": "string" }, "won": { "description": "True if the experiment has ended and this variation performed (statistically) significantly better than the original. This field is read-only.", "type": "boolean" }, "name": { "description": "The name of the variation. This field is required when creating an experiment. This field may not be changed for an experiment whose status is ENDED.", "annotations": { "required": [ "analytics.management.experiments.insert", "analytics.management.experiments.update" ] }, "type": "string" } } } }, "profileId": { "description": "View (Profile) ID to which this experiment belongs. This field is read-only.", "type": "string" }, "reasonExperimentEnded": { "type": "string", "description": "Why the experiment ended. Possible values: \"STOPPED_BY_USER\", \"WINNER_FOUND\", \"EXPERIMENT_EXPIRED\", \"ENDED_WITH_NO_WINNER\", \"GOAL_OBJECTIVE_CHANGED\". \"ENDED_WITH_NO_WINNER\" means that the experiment didn't expire but no winner was projected to be found. If the experiment status is changed via the API to ENDED this field is set to STOPPED_BY_USER. This field is read-only." }, "editableInGaUi": { "description": "If true, the end user will be able to edit the experiment via the Google Analytics user interface.", "type": "boolean" }, "id": { "description": "Experiment ID. Required for patch and update. Disallowed for create.", "type": "string", "annotations": { "required": [ "analytics.management.experiments.patch", "analytics.management.experiments.update" ] } } }, "type": "object", "description": "JSON template for Analytics experiment resource." }, "RemarketingAudiences": { "properties": { "username": { "type": "string", "description": "Email ID of the authenticated user" }, "previousLink": { "type": "string", "description": "Link to previous page for this view (profile) collection." }, "itemsPerPage": { "description": "The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.", "format": "int32", "type": "integer" }, "totalResults": { "description": "The total number of results for the query, regardless of the number of results in the response.", "type": "integer", "format": "int32" }, "kind": { "default": "analytics#remarketingAudiences", "description": "Collection type.", "type": "string" }, "nextLink": { "type": "string", "description": "Link to next page for this remarketing audience collection." }, "startIndex": { "description": "The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.", "format": "int32", "type": "integer" }, "items": { "items": { "$ref": "RemarketingAudience" }, "description": "A list of remarketing audiences.", "type": "array" } }, "description": "A remarketing audience collection lists Analytics remarketing audiences to which the user has access. Each resource in the collection corresponds to a single Analytics remarketing audience.", "id": "RemarketingAudiences", "type": "object" }, "ProfileFilterLinks": { "id": "ProfileFilterLinks", "type": "object", "description": "A profile filter link collection lists profile filter links between profiles and filters. Each resource in the collection corresponds to a profile filter link.", "properties": { "items": { "type": "array", "items": { "$ref": "ProfileFilterLink" }, "description": "A list of profile filter links." }, "kind": { "type": "string", "description": "Collection type.", "default": "analytics#profileFilterLinks" }, "startIndex": { "type": "integer", "description": "The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.", "format": "int32" }, "itemsPerPage": { "description": "The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1,000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.", "format": "int32", "type": "integer" }, "previousLink": { "type": "string", "description": "Link to previous page for this profile filter link collection." }, "nextLink": { "type": "string", "description": "Link to next page for this profile filter link collection." }, "username": { "type": "string", "description": "Email ID of the authenticated user" }, "totalResults": { "format": "int32", "description": "The total number of results for the query, regardless of the number of results in the response.", "type": "integer" } } }, "CustomMetrics": { "description": "A custom metric collection lists Analytics custom metrics to which the user has access. Each resource in the collection corresponds to a single Analytics custom metric.", "id": "CustomMetrics", "type": "object", "properties": { "previousLink": { "type": "string", "description": "Link to previous page for this custom metric collection." }, "username": { "type": "string", "description": "Email ID of the authenticated user" }, "totalResults": { "format": "int32", "description": "The total number of results for the query, regardless of the number of results in the response.", "type": "integer" }, "items": { "items": { "$ref": "CustomMetric" }, "description": "Collection of custom metrics.", "type": "array" }, "nextLink": { "type": "string", "description": "Link to next page for this custom metric collection." }, "itemsPerPage": { "type": "integer", "format": "int32", "description": "The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter." }, "startIndex": { "format": "int32", "description": "The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.", "type": "integer" }, "kind": { "default": "analytics#customMetrics", "description": "Collection type.", "type": "string" } } }, "IncludeConditions": { "description": "JSON template for an Analytics Remarketing Include Conditions.", "type": "object", "properties": { "daysToLookBack": { "description": "The look-back window lets you specify a time frame for evaluating the behavior that qualifies users for your audience. For example, if your filters include users from Central Asia, and Transactions Greater than 2, and you set the look-back window to 14 days, then any user from Central Asia whose cumulative transactions exceed 2 during the last 14 days is added to the audience.", "format": "int32", "type": "integer" }, "isSmartList": { "description": "Boolean indicating whether this segment is a smart list. https://support.google.com/analytics/answer/4628577", "type": "boolean" }, "kind": { "description": "Resource type for include conditions.", "type": "string", "default": "analytics#includeConditions" }, "segment": { "description": "The segment condition that will cause a user to be added to an audience.", "type": "string" }, "membershipDurationDays": { "format": "int32", "type": "integer", "description": "Number of days (in the range 1 to 540) a user remains in the audience." } }, "id": "IncludeConditions" }, "AccountTicket": { "description": "JSON template for an Analytics account ticket. The account ticket consists of the ticket ID and the basic information for the account, property and profile.", "properties": { "profile": { "description": "View (Profile) for the account.", "$ref": "Profile" }, "account": { "description": "Account for this ticket.", "$ref": "Account" }, "id": { "description": "Account ticket ID used to access the account ticket.", "type": "string" }, "redirectUri": { "description": "Redirect URI where the user will be sent after accepting Terms of Service. Must be configured in APIs console as a callback URL.", "type": "string" }, "kind": { "default": "analytics#accountTicket", "type": "string", "description": "Resource type for account ticket." }, "webproperty": { "$ref": "Webproperty", "description": "Web property for the account." } }, "type": "object", "id": "AccountTicket" }, "CustomMetric": { "description": "JSON template for Analytics Custom Metric.", "properties": { "active": { "type": "boolean", "description": "Boolean indicating whether the custom metric is active." }, "name": { "type": "string", "description": "Name of the custom metric." }, "kind": { "readOnly": true, "default": "analytics#customMetric", "description": "Kind value for a custom metric. Set to \"analytics#customMetric\". It is a read-only field.", "type": "string" }, "selfLink": { "description": "Link for the custom metric", "type": "string", "readOnly": true }, "index": { "description": "Index of the custom metric.", "format": "int32", "type": "integer", "readOnly": true }, "scope": { "type": "string", "description": "Scope of the custom metric: HIT or PRODUCT." }, "max_value": { "type": "string", "description": "Max value of custom metric." }, "updated": { "type": "string", "readOnly": true, "description": "Time the custom metric was last modified.", "format": "date-time" }, "created": { "readOnly": true, "description": "Time the custom metric was created.", "format": "date-time", "type": "string" }, "parentLink": { "properties": { "href": { "description": "Link to the property to which the custom metric belongs.", "type": "string" }, "type": { "description": "Type of the parent link. Set to \"analytics#webproperty\".", "type": "string", "default": "analytics#webproperty" } }, "description": "Parent link for the custom metric. Points to the property to which the custom metric belongs.", "type": "object" }, "min_value": { "type": "string", "description": "Min value of custom metric." }, "webPropertyId": { "description": "Property ID.", "type": "string" }, "id": { "description": "Custom metric ID.", "type": "string" }, "accountId": { "type": "string", "description": "Account ID." }, "type": { "description": "Data type of custom metric.", "type": "string" } }, "type": "object", "id": "CustomMetric" }, "AccountTreeResponse": { "description": "JSON template for an Analytics account tree response. The account tree response is used in the provisioning api to return the result of creating an account, property, and view (profile).", "type": "object", "id": "AccountTreeResponse", "properties": { "kind": { "type": "string", "default": "analytics#accountTreeResponse", "description": "Resource type for account ticket." }, "webproperty": { "$ref": "Webproperty", "description": "Web property for the account." }, "account": { "$ref": "Account", "description": "The account created." }, "profile": { "$ref": "Profile", "description": "View (Profile) for the account." } } }, "Webproperty": { "description": "JSON template for an Analytics web property.", "id": "Webproperty", "type": "object", "properties": { "defaultProfileId": { "format": "int64", "type": "string", "description": "Default view (profile) ID." }, "permissions": { "description": "Permissions the user has for this web property.", "type": "object", "properties": { "effective": { "readOnly": true, "type": "array", "items": { "type": "string" }, "description": "All the permissions that the user has for this web property. These include any implied permissions (e.g., EDIT implies VIEW) or inherited permissions from the parent account." } } }, "accountId": { "description": "Account ID to which this web property belongs.", "type": "string" }, "selfLink": { "type": "string", "readOnly": true, "description": "Link for this web property." }, "id": { "type": "string", "description": "Web property ID of the form UA-XXXXX-YY." }, "dataRetentionTtl": { "description": "The length of time for which user and event data is retained.\nThis property cannot be set on insert.", "type": "string" }, "websiteUrl": { "type": "string", "description": "Website url for this web property." }, "kind": { "type": "string", "description": "Resource type for Analytics WebProperty.", "default": "analytics#webproperty", "readOnly": true }, "name": { "type": "string", "description": "Name of this web property." }, "updated": { "format": "date-time", "description": "Time this web property was last modified.", "type": "string", "readOnly": true }, "industryVertical": { "type": "string", "description": "The industry vertical/category selected for this web property." }, "dataRetentionResetOnNewActivity": { "description": "Set to true to reset the retention period of the user identifier with each new event from that user (thus setting the expiration date to current time plus retention period).\nSet to false to delete data associated with the user identifier automatically after the rentention period.\nThis property cannot be set on insert.", "type": "boolean" }, "profileCount": { "type": "integer", "description": "View (Profile) count for this web property.", "format": "int32", "readOnly": true }, "childLink": { "description": "Child link for this web property. Points to the list of views (profiles) for this web property.", "properties": { "type": { "type": "string", "description": "Type of the parent link. Its value is \"analytics#profiles\".", "default": "analytics#profiles" }, "href": { "type": "string", "description": "Link to the list of views (profiles) for this web property." } }, "type": "object" }, "level": { "readOnly": true, "type": "string", "description": "Level for this web property. Possible values are STANDARD or PREMIUM." }, "starred": { "description": "Indicates whether this web property is starred or not.", "type": "boolean" }, "parentLink": { "type": "object", "properties": { "href": { "type": "string", "description": "Link to the account for this web property." }, "type": { "type": "string", "description": "Type of the parent link. Its value is \"analytics#account\".", "default": "analytics#account" } }, "description": "Parent link for this web property. Points to the account to which this web property belongs." }, "created": { "description": "Time this web property was created.", "readOnly": true, "format": "date-time", "type": "string" }, "internalWebPropertyId": { "type": "string", "description": "Internal ID for this web property.", "readOnly": true } } }, "HashClientIdRequest": { "id": "HashClientIdRequest", "type": "object", "properties": { "webPropertyId": { "type": "string" }, "kind": { "type": "string", "default": "analytics#hashClientIdRequest" }, "clientId": { "type": "string" } }, "description": "JSON template for a hash Client Id request resource." }, "Account": { "properties": { "name": { "description": "Account name.", "type": "string" }, "id": { "type": "string", "description": "Account ID." }, "permissions": { "description": "Permissions the user has for this account.", "type": "object", "properties": { "effective": { "type": "array", "items": { "type": "string" }, "readOnly": true, "description": "All the permissions that the user has for this account. These include any implied permissions (e.g., EDIT implies VIEW)." } } }, "starred": { "description": "Indicates whether this account is starred or not.", "type": "boolean" }, "kind": { "type": "string", "default": "analytics#account", "description": "Resource type for Analytics account." }, "childLink": { "properties": { "type": { "type": "string", "default": "analytics#webproperties", "description": "Type of the child link. Its value is \"analytics#webproperties\"." }, "href": { "description": "Link to the list of web properties for this account.", "type": "string" } }, "description": "Child link for an account entry. Points to the list of web properties for this account.", "type": "object" }, "selfLink": { "description": "Link for this account.", "type": "string" }, "created": { "type": "string", "format": "date-time", "description": "Time the account was created." }, "updated": { "description": "Time the account was last modified.", "format": "date-time", "type": "string" } }, "description": "JSON template for Analytics account entry.", "id": "Account", "type": "object" }, "ProfileRef": { "type": "object", "description": "JSON template for a linked view (profile).", "properties": { "kind": { "description": "Analytics view (profile) reference.", "default": "analytics#profileRef", "type": "string" }, "webPropertyId": { "description": "Web property ID of the form UA-XXXXX-YY to which this view (profile) belongs.", "type": "string" }, "accountId": { "description": "Account ID to which this view (profile) belongs.", "type": "string" }, "name": { "type": "string", "description": "Name of this view (profile)." }, "id": { "description": "View (Profile) ID.", "type": "string" }, "internalWebPropertyId": { "description": "Internal ID for the web property to which this view (profile) belongs.", "type": "string" }, "href": { "description": "Link for this view (profile).", "type": "string" } }, "id": "ProfileRef" }, "AccountRef": { "description": "JSON template for a linked account.", "properties": { "kind": { "type": "string", "default": "analytics#accountRef", "description": "Analytics account reference." }, "id": { "description": "Account ID.", "type": "string" }, "href": { "description": "Link for this account.", "type": "string" }, "name": { "description": "Account name.", "type": "string" } }, "id": "AccountRef", "type": "object" }, "GaData": { "properties": { "previousLink": { "description": "Link to previous page for this Analytics data query.", "type": "string" }, "dataTable": { "type": "object", "properties": { "cols": { "items": { "properties": { "id": { "type": "string" }, "type": { "type": "string" }, "label": { "type": "string" } }, "type": "object" }, "type": "array" }, "rows": { "type": "array", "items": { "properties": { "c": { "items": { "properties": { "v": { "type": "string" } }, "type": "object" }, "type": "array" } }, "type": "object" } } } }, "totalResults": { "type": "integer", "description": "The total number of rows for the query, regardless of the number of rows in the response.", "format": "int32" }, "selfLink": { "type": "string", "description": "Link to this page." }, "rows": { "description": "Analytics data rows, where each row contains a list of dimension values followed by the metric values. The order of dimensions and metrics is same as specified in the request.", "type": "array", "items": { "items": { "type": "string" }, "type": "array" } }, "sampleSize": { "type": "string", "description": "The number of samples used to calculate the result.", "format": "int64" }, "nextLink": { "description": "Link to next page for this Analytics data query.", "type": "string" }, "id": { "type": "string", "description": "Unique ID for this data response." }, "columnHeaders": { "items": { "type": "object", "properties": { "name": { "description": "Column name.", "type": "string" }, "dataType": { "type": "string", "description": "Data type. Dimension column headers have only STRING as the data type. Metric column headers have data types for metric values such as INTEGER, DOUBLE, CURRENCY etc." }, "columnType": { "description": "Column Type. Either DIMENSION or METRIC.", "type": "string" } } }, "description": "Column headers that list dimension names followed by the metric names. The order of dimensions and metrics is same as specified in the request.", "type": "array" }, "profileInfo": { "properties": { "profileName": { "type": "string", "description": "View (Profile) name." }, "webPropertyId": { "description": "Web Property ID to which this view (profile) belongs.", "type": "string" }, "accountId": { "type": "string", "description": "Account ID to which this view (profile) belongs." }, "internalWebPropertyId": { "description": "Internal ID for the web property to which this view (profile) belongs.", "type": "string" }, "tableId": { "description": "Table ID for view (profile).", "type": "string" }, "profileId": { "description": "View (Profile) ID.", "type": "string" } }, "type": "object", "description": "Information for the view (profile), for which the Analytics data was requested." }, "containsSampledData": { "description": "Determines if Analytics data contains samples.", "type": "boolean" }, "totalsForAllResults": { "additionalProperties": { "description": "Key-value pair for the total value of a metric. Key is the metric name and the value is the total value for that metric.", "type": "string" }, "description": "Total values for the requested metrics over all the results, not just the results returned in this response. The order of the metric totals is same as the metric order specified in the request.", "type": "object" }, "kind": { "default": "analytics#gaData", "description": "Resource type.", "type": "string" }, "itemsPerPage": { "type": "integer", "format": "int32", "description": "The maximum number of rows the response can contain, regardless of the actual number of rows returned. Its value ranges from 1 to 10,000 with a value of 1000 by default, or otherwise specified by the max-results query parameter." }, "dataLastRefreshed": { "description": "The last refreshed time in seconds for Analytics data.", "format": "int64", "type": "string" }, "query": { "description": "Analytics data request query parameters.", "type": "object", "properties": { "ids": { "type": "string", "description": "Unique table ID." }, "filters": { "type": "string", "description": "Comma-separated list of dimension or metric filters." }, "sort": { "items": { "type": "string" }, "description": "List of dimensions or metrics based on which Analytics data is sorted.", "type": "array" }, "start-index": { "type": "integer", "description": "Start index.", "format": "int32" }, "max-results": { "description": "Maximum results per page.", "format": "int32", "type": "integer" }, "segment": { "description": "Analytics advanced segment.", "type": "string" }, "start-date": { "type": "string", "description": "Start date." }, "metrics": { "items": { "type": "string" }, "type": "array", "description": "List of analytics metrics." }, "samplingLevel": { "description": "Desired sampling level", "type": "string" }, "dimensions": { "type": "string", "description": "List of analytics dimensions." }, "end-date": { "description": "End date.", "type": "string" } } }, "sampleSpace": { "type": "string", "description": "Total size of the sample space from which the samples were selected.", "format": "int64" } }, "description": "Analytics data for a given view (profile).", "id": "GaData", "type": "object" }, "RealtimeData": { "properties": { "totalResults": { "type": "integer", "format": "int32", "description": "The total number of rows for the query, regardless of the number of rows in the response." }, "query": { "description": "Real time data request query parameters.", "type": "object", "properties": { "max-results": { "format": "int32", "type": "integer", "description": "Maximum results per page." }, "dimensions": { "description": "List of real time dimensions.", "type": "string" }, "sort": { "type": "array", "items": { "type": "string" }, "description": "List of dimensions or metrics based on which real time data is sorted." }, "ids": { "description": "Unique table ID.", "type": "string" }, "filters": { "description": "Comma-separated list of dimension or metric filters.", "type": "string" }, "metrics": { "description": "List of real time metrics.", "items": { "type": "string" }, "type": "array" } } }, "totalsForAllResults": { "additionalProperties": { "type": "string", "description": "Key-value pair for the total value of a metric. Key is the metric name and the value is the total value for that metric." }, "type": "object", "description": "Total values for the requested metrics over all the results, not just the results returned in this response. The order of the metric totals is same as the metric order specified in the request." }, "id": { "type": "string", "description": "Unique ID for this data response." }, "columnHeaders": { "items": { "properties": { "name": { "type": "string", "description": "Column name." }, "dataType": { "description": "Data type. Dimension column headers have only STRING as the data type. Metric column headers have data types for metric values such as INTEGER, DOUBLE, CURRENCY etc.", "type": "string" }, "columnType": { "description": "Column Type. Either DIMENSION or METRIC.", "type": "string" } }, "type": "object" }, "description": "Column headers that list dimension names followed by the metric names. The order of dimensions and metrics is same as specified in the request.", "type": "array" }, "profileInfo": { "properties": { "internalWebPropertyId": { "description": "Internal ID for the web property to which this view (profile) belongs.", "type": "string" }, "tableId": { "type": "string", "description": "Table ID for view (profile)." }, "accountId": { "type": "string", "description": "Account ID to which this view (profile) belongs." }, "webPropertyId": { "type": "string", "description": "Web Property ID to which this view (profile) belongs." }, "profileName": { "description": "View (Profile) name.", "type": "string" }, "profileId": { "type": "string", "description": "View (Profile) ID." } }, "description": "Information for the view (profile), for which the real time data was requested.", "type": "object" }, "rows": { "type": "array", "items": { "items": { "type": "string" }, "type": "array" }, "description": "Real time data rows, where each row contains a list of dimension values followed by the metric values. The order of dimensions and metrics is same as specified in the request." }, "selfLink": { "type": "string", "description": "Link to this page." }, "kind": { "type": "string", "description": "Resource type.", "default": "analytics#realtimeData" } }, "description": "Real time data for a given view (profile).", "id": "RealtimeData", "type": "object" }, "CustomDataSource": { "type": "object", "id": "CustomDataSource", "description": "JSON template for an Analytics custom data source.", "properties": { "uploadType": { "type": "string", "description": "Upload type of the custom data source." }, "id": { "description": "Custom data source ID.", "type": "string" }, "schema": { "description": "Collection of schema headers of the custom data source.", "items": { "type": "string" }, "type": "array" }, "name": { "type": "string", "description": "Name of this custom data source." }, "childLink": { "properties": { "type": { "description": "Value is \"analytics#dailyUploads\". Value is \"analytics#uploads\".", "type": "string" }, "href": { "description": "Link to the list of daily uploads for this custom data source. Link to the list of uploads for this custom data source.", "type": "string" } }, "type": "object" }, "kind": { "default": "analytics#customDataSource", "type": "string", "description": "Resource type for Analytics custom data source." }, "type": { "type": "string", "description": "Type of the custom data source." }, "description": { "description": "Description of custom data source.", "type": "string" }, "profilesLinked": { "type": "array", "description": "IDs of views (profiles) linked to the custom data source.", "items": { "type": "string" } }, "parentLink": { "type": "object", "properties": { "type": { "default": "analytics#webproperty", "type": "string", "description": "Value is \"analytics#webproperty\"." }, "href": { "type": "string", "description": "Link to the web property to which this custom data source belongs." } }, "description": "Parent link for this custom data source. Points to the web property to which this custom data source belongs." }, "updated": { "type": "string", "format": "date-time", "description": "Time this custom data source was last modified." }, "created": { "format": "date-time", "description": "Time this custom data source was created.", "type": "string" }, "webPropertyId": { "description": "Web property ID of the form UA-XXXXX-YY to which this custom data source belongs.", "type": "string" }, "selfLink": { "type": "string", "description": "Link for this Analytics custom data source." }, "accountId": { "type": "string", "description": "Account ID to which this custom data source belongs." }, "importBehavior": { "type": "string" } } }, "HashClientIdResponse": { "type": "object", "description": "JSON template for a hash Client Id response resource.", "id": "HashClientIdResponse", "properties": { "hashedClientId": { "type": "string" }, "clientId": { "type": "string" }, "kind": { "type": "string", "default": "analytics#hashClientIdResponse" }, "webPropertyId": { "type": "string" } } }, "Webproperties": { "id": "Webproperties", "description": "A web property collection lists Analytics web properties to which the user has access. Each resource in the collection corresponds to a single Analytics web property.", "type": "object", "properties": { "kind": { "default": "analytics#webproperties", "type": "string", "description": "Collection type." }, "username": { "description": "Email ID of the authenticated user", "type": "string" }, "itemsPerPage": { "format": "int32", "description": "The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.", "type": "integer" }, "startIndex": { "description": "The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.", "type": "integer", "format": "int32" }, "items": { "description": "A list of web properties.", "type": "array", "items": { "$ref": "Webproperty" } }, "nextLink": { "description": "Link to next page for this web property collection.", "type": "string" }, "previousLink": { "type": "string", "description": "Link to previous page for this web property collection." }, "totalResults": { "description": "The total number of results for the query, regardless of the number of results in the response.", "type": "integer", "format": "int32" } } }, "Columns": { "properties": { "totalResults": { "format": "int32", "type": "integer", "description": "Total number of columns returned in the response." }, "items": { "description": "List of columns for a report type.", "type": "array", "items": { "$ref": "Column" } }, "kind": { "type": "string", "default": "analytics#columns", "description": "Collection type." }, "attributeNames": { "items": { "type": "string" }, "description": "List of attributes names returned by columns.", "type": "array" }, "etag": { "type": "string", "description": "Etag of collection. This etag can be compared with the last response etag to check if response has changed." } }, "type": "object", "id": "Columns", "description": "Lists columns (dimensions and metrics) for a particular report type." } }, "parameters": { "userIp": { "location": "query", "type": "string", "description": "Deprecated. Please use quotaUser instead." }, "fields": { "location": "query", "description": "Selector specifying which fields to include in a partial response.", "type": "string" }, "alt": { "enumDescriptions": [ "Responses with Content-Type of application/json" ], "enum": [ "json" ], "description": "Data format for the response.", "default": "json", "type": "string", "location": "query" }, "prettyPrint": { "location": "query", "type": "boolean", "description": "Returns response with indentations and line breaks.", "default": "false" }, "oauth_token": { "location": "query", "description": "OAuth 2.0 token for the current user.", "type": "string" }, "quotaUser": { "location": "query", "description": "An opaque string that represents a user for quota purposes. Must not exceed 40 characters.", "type": "string" }, "key": { "location": "query", "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "type": "string" } }, "title": "Google Analytics API", "name": "analytics", "discoveryVersion": "v1", "basePath": "/analytics/v3/", "icons": { "x32": "https://www.google.com/images/icons/product/analytics-32.png", "x16": "https://www.google.com/images/icons/product/analytics-16.png" }, "servicePath": "analytics/v3/", "description": "Views and manages your Google Analytics data.", "resources": { "metadata": { "resources": { "columns": { "methods": { "list": { "httpMethod": "GET", "id": "analytics.metadata.columns.list", "scopes": [ "https://www.googleapis.com/auth/analytics", "https://www.googleapis.com/auth/analytics.edit", "https://www.googleapis.com/auth/analytics.readonly" ], "parameters": { "reportType": { "pattern": "ga", "required": true, "type": "string", "description": "Report type. Allowed Values: 'ga'. Where 'ga' corresponds to the Core Reporting API", "location": "path" } }, "parameterOrder": [ "reportType" ], "description": "Lists all columns for a report type", "path": "metadata/{reportType}/columns", "response": { "$ref": "Columns" } } } } } }, "data": { "resources": { "realtime": { "methods": { "get": { "path": "data/realtime", "description": "Returns real time data for a view (profile).", "parameters": { "sort": { "description": "A comma-separated list of dimensions or metrics that determine the sort order for real time data.", "location": "query", "pattern": "(-)?((ga:.+)|(rt:.+))", "type": "string" }, "max-results": { "description": "The maximum number of entries to include in this feed.", "format": "int32", "location": "query", "type": "integer" }, "metrics": { "description": "A comma-separated list of real time metrics. E.g., 'rt:activeUsers'. At least one metric must be specified.", "required": true, "pattern": "(ga:.+)|(rt:.+)", "type": "string", "location": "query" }, "filters": { "pattern": "(ga:.+)|(rt:.+)", "location": "query", "type": "string", "description": "A comma-separated list of dimension or metric filters to be applied to real time data." }, "ids": { "type": "string", "pattern": "ga:[0-9]+", "required": true, "location": "query", "description": "Unique table ID for retrieving real time data. Table ID is of the form ga:XXXX, where XXXX is the Analytics view (profile) ID." }, "dimensions": { "description": "A comma-separated list of real time dimensions. E.g., 'rt:medium,rt:city'.", "location": "query", "pattern": "(ga:.+)|(rt:.+)", "type": "string" } }, "id": "analytics.data.realtime.get", "scopes": [ "https://www.googleapis.com/auth/analytics", "https://www.googleapis.com/auth/analytics.readonly" ], "httpMethod": "GET", "response": { "$ref": "RealtimeData" }, "parameterOrder": [ "ids", "metrics" ] } } }, "ga": { "methods": { "get": { "path": "data/ga", "scopes": [ "https://www.googleapis.com/auth/analytics", "https://www.googleapis.com/auth/analytics.readonly" ], "id": "analytics.data.ga.get", "description": "Returns Analytics data for a view (profile).", "parameters": { "samplingLevel": { "enumDescriptions": [ "Returns response with a sample size that balances speed and accuracy.", "Returns a fast response with a smaller sample size.", "Returns a more accurate response using a large sample size, but this may result in the response being slower." ], "type": "string", "description": "The desired sampling level.", "location": "query", "enum": [ "DEFAULT", "FASTER", "HIGHER_PRECISION" ] }, "end-date": { "type": "string", "required": true, "location": "query", "description": "End date for fetching Analytics data. Request can should specify an end date formatted as YYYY-MM-DD, or as a relative date (e.g., today, yesterday, or 7daysAgo). The default value is yesterday.", "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}|today|yesterday|[0-9]+(daysAgo)" }, "include-empty-rows": { "location": "query", "description": "The response will include empty rows if this parameter is set to true, the default is true", "type": "boolean" }, "filters": { "description": "A comma-separated list of dimension or metric filters to be applied to Analytics data.", "location": "query", "type": "string", "pattern": "ga:.+" }, "start-index": { "type": "integer", "description": "An index of the first entity to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.", "format": "int32", "location": "query", "minimum": "1" }, "start-date": { "description": "Start date for fetching Analytics data. Requests can specify a start date formatted as YYYY-MM-DD, or as a relative date (e.g., today, yesterday, or 7daysAgo). The default value is 7daysAgo.", "type": "string", "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}|today|yesterday|[0-9]+(daysAgo)", "location": "query", "required": true }, "segment": { "location": "query", "type": "string", "description": "An Analytics segment to be applied to data." }, "dimensions": { "location": "query", "description": "A comma-separated list of Analytics dimensions. E.g., 'ga:browser,ga:city'.", "pattern": "(ga:.+)?", "type": "string" }, "ids": { "description": "Unique table ID for retrieving Analytics data. Table ID is of the form ga:XXXX, where XXXX is the Analytics view (profile) ID.", "required": true, "pattern": "ga:[0-9]+", "location": "query", "type": "string" }, "metrics": { "description": "A comma-separated list of Analytics metrics. E.g., 'ga:sessions,ga:pageviews'. At least one metric must be specified.", "required": true, "pattern": "ga:.+", "type": "string", "location": "query" }, "max-results": { "format": "int32", "location": "query", "type": "integer", "description": "The maximum number of entries to include in this feed." }, "output": { "location": "query", "enum": [ "dataTable", "json" ], "description": "The selected format for the response. Default format is JSON.", "type": "string", "enumDescriptions": [ "Returns the response in Google Charts Data Table format. This is useful in creating visualization using Google Charts.", "Returns the response in standard JSON format." ] }, "sort": { "description": "A comma-separated list of dimensions or metrics that determine the sort order for Analytics data.", "location": "query", "type": "string", "pattern": "(-)?ga:.+" } }, "httpMethod": "GET", "parameterOrder": [ "ids", "start-date", "end-date", "metrics" ], "response": { "$ref": "GaData" } } } }, "mcf": { "methods": { "get": { "scopes": [ "https://www.googleapis.com/auth/analytics", "https://www.googleapis.com/auth/analytics.readonly" ], "response": { "$ref": "McfData" }, "path": "data/mcf", "parameterOrder": [ "ids", "start-date", "end-date", "metrics" ], "description": "Returns Analytics Multi-Channel Funnels data for a view (profile).", "parameters": { "end-date": { "location": "query", "description": "End date for fetching Analytics data. Requests can specify a start date formatted as YYYY-MM-DD, or as a relative date (e.g., today, yesterday, or 7daysAgo). The default value is 7daysAgo.", "required": true, "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}|today|yesterday|[0-9]+(daysAgo)", "type": "string" }, "samplingLevel": { "description": "The desired sampling level.", "enum": [ "DEFAULT", "FASTER", "HIGHER_PRECISION" ], "enumDescriptions": [ "Returns response with a sample size that balances speed and accuracy.", "Returns a fast response with a smaller sample size.", "Returns a more accurate response using a large sample size, but this may result in the response being slower." ], "type": "string", "location": "query" }, "ids": { "type": "string", "pattern": "ga:[0-9]+", "required": true, "location": "query", "description": "Unique table ID for retrieving Analytics data. Table ID is of the form ga:XXXX, where XXXX is the Analytics view (profile) ID." }, "filters": { "type": "string", "description": "A comma-separated list of dimension or metric filters to be applied to the Analytics data.", "location": "query", "pattern": "mcf:.+" }, "metrics": { "description": "A comma-separated list of Multi-Channel Funnels metrics. E.g., 'mcf:totalConversions,mcf:totalConversionValue'. At least one metric must be specified.", "type": "string", "required": true, "pattern": "mcf:.+", "location": "query" }, "sort": { "location": "query", "description": "A comma-separated list of dimensions or metrics that determine the sort order for the Analytics data.", "pattern": "(-)?mcf:.+", "type": "string" }, "dimensions": { "pattern": "(mcf:.+)?", "type": "string", "description": "A comma-separated list of Multi-Channel Funnels dimensions. E.g., 'mcf:source,mcf:medium'.", "location": "query" }, "start-date": { "required": true, "description": "Start date for fetching Analytics data. Requests can specify a start date formatted as YYYY-MM-DD, or as a relative date (e.g., today, yesterday, or 7daysAgo). The default value is 7daysAgo.", "type": "string", "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}|today|yesterday|[0-9]+(daysAgo)", "location": "query" }, "start-index": { "minimum": "1", "description": "An index of the first entity to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.", "type": "integer", "location": "query", "format": "int32" }, "max-results": { "location": "query", "format": "int32", "type": "integer", "description": "The maximum number of entries to include in this feed." } }, "httpMethod": "GET", "id": "analytics.data.mcf.get" } } } } }, "userDeletion": { "resources": { "userDeletionRequest": { "methods": { "upsert": { "scopes": [ "https://www.googleapis.com/auth/analytics.user.deletion" ], "path": "userDeletion/userDeletionRequests:upsert", "id": "analytics.userDeletion.userDeletionRequest.upsert", "httpMethod": "POST", "description": "Insert or update a user deletion requests.", "response": { "$ref": "UserDeletionRequest" }, "request": { "$ref": "UserDeletionRequest" } } } } } }, "management": { "resources": { "profileUserLinks": { "methods": { "update": { "response": { "$ref": "EntityUserLink" }, "parameterOrder": [ "accountId", "webPropertyId", "profileId", "linkId" ], "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/entityUserLinks/{linkId}", "scopes": [ "https://www.googleapis.com/auth/analytics.manage.users" ], "httpMethod": "PUT", "description": "Updates permissions for an existing user on the given view (profile).", "request": { "$ref": "EntityUserLink" }, "parameters": { "linkId": { "required": true, "location": "path", "type": "string", "description": "Link ID to update the user link for." }, "accountId": { "location": "path", "description": "Account ID to update the user link for.", "type": "string", "required": true }, "webPropertyId": { "required": true, "description": "Web Property ID to update the user link for.", "location": "path", "type": "string" }, "profileId": { "description": "View (Profile ID) to update the user link for.", "required": true, "location": "path", "type": "string" } }, "id": "analytics.management.profileUserLinks.update" }, "insert": { "request": { "$ref": "EntityUserLink" }, "description": "Adds a new user to the given view (profile).", "parameters": { "webPropertyId": { "type": "string", "location": "path", "required": true, "description": "Web Property ID to create the user link for." }, "accountId": { "required": true, "description": "Account ID to create the user link for.", "type": "string", "location": "path" }, "profileId": { "type": "string", "required": true, "description": "View (Profile) ID to create the user link for.", "location": "path" } }, "httpMethod": "POST", "scopes": [ "https://www.googleapis.com/auth/analytics.manage.users" ], "id": "analytics.management.profileUserLinks.insert", "parameterOrder": [ "accountId", "webPropertyId", "profileId" ], "response": { "$ref": "EntityUserLink" }, "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/entityUserLinks" }, "list": { "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/entityUserLinks", "description": "Lists profile-user links for a given view (profile).", "response": { "$ref": "EntityUserLinks" }, "parameterOrder": [ "accountId", "webPropertyId", "profileId" ], "httpMethod": "GET", "parameters": { "webPropertyId": { "description": "Web Property ID which the given view (profile) belongs to. Can either be a specific web property ID or '~all', which refers to all the web properties that user has access to.", "type": "string", "required": true, "location": "path" }, "max-results": { "description": "The maximum number of profile-user links to include in this response.", "format": "int32", "type": "integer", "location": "query" }, "profileId": { "description": "View (Profile) ID to retrieve the profile-user links for. Can either be a specific profile ID or '~all', which refers to all the profiles that user has access to.", "type": "string", "location": "path", "required": true }, "start-index": { "description": "An index of the first profile-user link to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.", "minimum": "1", "location": "query", "format": "int32", "type": "integer" }, "accountId": { "description": "Account ID which the given view (profile) belongs to.", "type": "string", "location": "path", "required": true } }, "scopes": [ "https://www.googleapis.com/auth/analytics.manage.users", "https://www.googleapis.com/auth/analytics.manage.users.readonly" ], "id": "analytics.management.profileUserLinks.list" }, "delete": { "parameterOrder": [ "accountId", "webPropertyId", "profileId", "linkId" ], "description": "Removes a user from the given view (profile).", "httpMethod": "DELETE", "scopes": [ "https://www.googleapis.com/auth/analytics.manage.users" ], "parameters": { "linkId": { "required": true, "description": "Link ID to delete the user link for.", "location": "path", "type": "string" }, "accountId": { "type": "string", "description": "Account ID to delete the user link for.", "required": true, "location": "path" }, "profileId": { "description": "View (Profile) ID to delete the user link for.", "type": "string", "required": true, "location": "path" }, "webPropertyId": { "location": "path", "type": "string", "required": true, "description": "Web Property ID to delete the user link for." } }, "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/entityUserLinks/{linkId}", "id": "analytics.management.profileUserLinks.delete" } } }, "webPropertyAdWordsLinks": { "methods": { "get": { "scopes": [ "https://www.googleapis.com/auth/analytics.edit", "https://www.googleapis.com/auth/analytics.readonly" ], "response": { "$ref": "EntityAdWordsLink" }, "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/entityAdWordsLinks/{webPropertyAdWordsLinkId}", "httpMethod": "GET", "id": "analytics.management.webPropertyAdWordsLinks.get", "description": "Returns a web property-Google Ads link to which the user has access.", "parameterOrder": [ "accountId", "webPropertyId", "webPropertyAdWordsLinkId" ], "parameters": { "webPropertyId": { "type": "string", "required": true, "location": "path", "description": "Web property ID to retrieve the Google Ads link for." }, "accountId": { "required": true, "description": "ID of the account which the given web property belongs to.", "type": "string", "location": "path" }, "webPropertyAdWordsLinkId": { "description": "Web property-Google Ads link ID.", "type": "string", "location": "path", "required": true } } }, "delete": { "parameterOrder": [ "accountId", "webPropertyId", "webPropertyAdWordsLinkId" ], "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/entityAdWordsLinks/{webPropertyAdWordsLinkId}", "id": "analytics.management.webPropertyAdWordsLinks.delete", "httpMethod": "DELETE", "scopes": [ "https://www.googleapis.com/auth/analytics.edit" ], "parameters": { "webPropertyAdWordsLinkId": { "type": "string", "required": true, "description": "Web property Google Ads link ID.", "location": "path" }, "accountId": { "required": true, "description": "ID of the account which the given web property belongs to.", "location": "path", "type": "string" }, "webPropertyId": { "required": true, "location": "path", "type": "string", "description": "Web property ID to delete the Google Ads link for." } }, "description": "Deletes a web property-Google Ads link." }, "insert": { "httpMethod": "POST", "request": { "$ref": "EntityAdWordsLink" }, "parameters": { "webPropertyId": { "required": true, "location": "path", "type": "string", "description": "Web property ID to create the link for." }, "accountId": { "description": "ID of the Google Analytics account to create the link for.", "type": "string", "location": "path", "required": true } }, "id": "analytics.management.webPropertyAdWordsLinks.insert", "response": { "$ref": "EntityAdWordsLink" }, "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/entityAdWordsLinks", "description": "Creates a webProperty-Google Ads link.", "scopes": [ "https://www.googleapis.com/auth/analytics.edit" ], "parameterOrder": [ "accountId", "webPropertyId" ] }, "patch": { "parameterOrder": [ "accountId", "webPropertyId", "webPropertyAdWordsLinkId" ], "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/entityAdWordsLinks/{webPropertyAdWordsLinkId}", "parameters": { "webPropertyAdWordsLinkId": { "description": "Web property-Google Ads link ID.", "type": "string", "required": true, "location": "path" }, "webPropertyId": { "description": "Web property ID to retrieve the Google Ads link for.", "type": "string", "location": "path", "required": true }, "accountId": { "required": true, "location": "path", "description": "ID of the account which the given web property belongs to.", "type": "string" } }, "scopes": [ "https://www.googleapis.com/auth/analytics.edit" ], "httpMethod": "PATCH", "response": { "$ref": "EntityAdWordsLink" }, "id": "analytics.management.webPropertyAdWordsLinks.patch", "request": { "$ref": "EntityAdWordsLink" }, "description": "Updates an existing webProperty-Google Ads link. This method supports patch semantics." }, "list": { "response": { "$ref": "EntityAdWordsLinks" }, "id": "analytics.management.webPropertyAdWordsLinks.list", "description": "Lists webProperty-Google Ads links for a given web property.", "scopes": [ "https://www.googleapis.com/auth/analytics.edit", "https://www.googleapis.com/auth/analytics.readonly" ], "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/entityAdWordsLinks", "parameters": { "max-results": { "description": "The maximum number of webProperty-Google Ads links to include in this response.", "location": "query", "type": "integer", "format": "int32" }, "accountId": { "location": "path", "description": "ID of the account which the given web property belongs to.", "type": "string", "required": true, "pattern": "\\d+" }, "webPropertyId": { "location": "path", "type": "string", "required": true, "description": "Web property ID to retrieve the Google Ads links for." }, "start-index": { "description": "An index of the first webProperty-Google Ads link to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.", "minimum": "1", "location": "query", "type": "integer", "format": "int32" } }, "httpMethod": "GET", "parameterOrder": [ "accountId", "webPropertyId" ] }, "update": { "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/entityAdWordsLinks/{webPropertyAdWordsLinkId}", "scopes": [ "https://www.googleapis.com/auth/analytics.edit" ], "description": "Updates an existing webProperty-Google Ads link.", "parameterOrder": [ "accountId", "webPropertyId", "webPropertyAdWordsLinkId" ], "response": { "$ref": "EntityAdWordsLink" }, "httpMethod": "PUT", "request": { "$ref": "EntityAdWordsLink" }, "parameters": { "webPropertyId": { "type": "string", "description": "Web property ID to retrieve the Google Ads link for.", "location": "path", "required": true }, "accountId": { "required": true, "type": "string", "description": "ID of the account which the given web property belongs to.", "location": "path" }, "webPropertyAdWordsLinkId": { "description": "Web property-Google Ads link ID.", "location": "path", "type": "string", "required": true } }, "id": "analytics.management.webPropertyAdWordsLinks.update" } } }, "segments": { "methods": { "list": { "path": "management/segments", "httpMethod": "GET", "response": { "$ref": "Segments" }, "scopes": [ "https://www.googleapis.com/auth/analytics", "https://www.googleapis.com/auth/analytics.edit", "https://www.googleapis.com/auth/analytics.readonly" ], "parameters": { "start-index": { "minimum": "1", "format": "int32", "location": "query", "type": "integer", "description": "An index of the first segment to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter." }, "max-results": { "type": "integer", "format": "int32", "location": "query", "description": "The maximum number of segments to include in this response." } }, "description": "Lists segments to which the user has access.", "id": "analytics.management.segments.list" } } }, "filters": { "methods": { "get": { "id": "analytics.management.filters.get", "scopes": [ "https://www.googleapis.com/auth/analytics.edit", "https://www.googleapis.com/auth/analytics.readonly" ], "parameterOrder": [ "accountId", "filterId" ], "path": "management/accounts/{accountId}/filters/{filterId}", "description": "Returns filters to which the user has access.", "parameters": { "filterId": { "required": true, "location": "path", "description": "Filter ID to retrieve filters for.", "type": "string" }, "accountId": { "description": "Account ID to retrieve filters for.", "type": "string", "required": true, "location": "path" } }, "httpMethod": "GET", "response": { "$ref": "Filter" } }, "patch": { "response": { "$ref": "Filter" }, "httpMethod": "PATCH", "description": "Updates an existing filter. This method supports patch semantics.", "id": "analytics.management.filters.patch", "parameters": { "filterId": { "description": "ID of the filter to be updated.", "required": true, "location": "path", "type": "string" }, "accountId": { "required": true, "description": "Account ID to which the filter belongs.", "location": "path", "type": "string" } }, "parameterOrder": [ "accountId", "filterId" ], "path": "management/accounts/{accountId}/filters/{filterId}", "scopes": [ "https://www.googleapis.com/auth/analytics.edit" ], "request": { "$ref": "Filter" } }, "delete": { "httpMethod": "DELETE", "parameters": { "accountId": { "required": true, "type": "string", "location": "path", "description": "Account ID to delete the filter for." }, "filterId": { "type": "string", "location": "path", "required": true, "description": "ID of the filter to be deleted." } }, "path": "management/accounts/{accountId}/filters/{filterId}", "scopes": [ "https://www.googleapis.com/auth/analytics.edit" ], "description": "Delete a filter.", "response": { "$ref": "Filter" }, "id": "analytics.management.filters.delete", "parameterOrder": [ "accountId", "filterId" ] }, "insert": { "path": "management/accounts/{accountId}/filters", "description": "Create a new filter.", "parameterOrder": [ "accountId" ], "response": { "$ref": "Filter" }, "id": "analytics.management.filters.insert", "httpMethod": "POST", "request": { "$ref": "Filter" }, "scopes": [ "https://www.googleapis.com/auth/analytics.edit" ], "parameters": { "accountId": { "location": "path", "required": true, "type": "string", "description": "Account ID to create filter for." } } }, "update": { "parameters": { "filterId": { "type": "string", "location": "path", "description": "ID of the filter to be updated.", "required": true }, "accountId": { "type": "string", "required": true, "description": "Account ID to which the filter belongs.", "location": "path" } }, "id": "analytics.management.filters.update", "path": "management/accounts/{accountId}/filters/{filterId}", "response": { "$ref": "Filter" }, "description": "Updates an existing filter.", "httpMethod": "PUT", "request": { "$ref": "Filter" }, "scopes": [ "https://www.googleapis.com/auth/analytics.edit" ], "parameterOrder": [ "accountId", "filterId" ] }, "list": { "httpMethod": "GET", "scopes": [ "https://www.googleapis.com/auth/analytics.edit", "https://www.googleapis.com/auth/analytics.readonly" ], "parameters": { "max-results": { "format": "int32", "type": "integer", "description": "The maximum number of filters to include in this response.", "location": "query" }, "accountId": { "location": "path", "pattern": "\\d+", "required": true, "type": "string", "description": "Account ID to retrieve filters for." }, "start-index": { "location": "query", "description": "An index of the first entity to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.", "format": "int32", "minimum": "1", "type": "integer" } }, "response": { "$ref": "Filters" }, "description": "Lists all filters for an account", "path": "management/accounts/{accountId}/filters", "parameterOrder": [ "accountId" ], "id": "analytics.management.filters.list" } } }, "webproperties": { "methods": { "get": { "response": { "$ref": "Webproperty" }, "parameters": { "webPropertyId": { "required": true, "location": "path", "type": "string", "pattern": "UA-[0-9]+-[0-9]+", "description": "ID to retrieve the web property for." }, "accountId": { "description": "Account ID to retrieve the web property for.", "required": true, "type": "string", "location": "path", "pattern": "[0-9]+" } }, "httpMethod": "GET", "scopes": [ "https://www.googleapis.com/auth/analytics.edit", "https://www.googleapis.com/auth/analytics.readonly" ], "id": "analytics.management.webproperties.get", "parameterOrder": [ "accountId", "webPropertyId" ], "description": "Gets a web property to which the user has access.", "path": "management/accounts/{accountId}/webproperties/{webPropertyId}" }, "patch": { "scopes": [ "https://www.googleapis.com/auth/analytics.edit" ], "description": "Updates an existing web property. This method supports patch semantics.", "request": { "$ref": "Webproperty" }, "parameterOrder": [ "accountId", "webPropertyId" ], "parameters": { "webPropertyId": { "type": "string", "required": true, "description": "Web property ID", "location": "path" }, "accountId": { "description": "Account ID to which the web property belongs", "type": "string", "required": true, "location": "path" } }, "path": "management/accounts/{accountId}/webproperties/{webPropertyId}", "response": { "$ref": "Webproperty" }, "httpMethod": "PATCH", "id": "analytics.management.webproperties.patch" }, "update": { "description": "Updates an existing web property.", "parameters": { "webPropertyId": { "type": "string", "location": "path", "required": true, "description": "Web property ID" }, "accountId": { "required": true, "type": "string", "location": "path", "description": "Account ID to which the web property belongs" } }, "id": "analytics.management.webproperties.update", "request": { "$ref": "Webproperty" }, "path": "management/accounts/{accountId}/webproperties/{webPropertyId}", "scopes": [ "https://www.googleapis.com/auth/analytics.edit" ], "httpMethod": "PUT", "parameterOrder": [ "accountId", "webPropertyId" ], "response": { "$ref": "Webproperty" } }, "insert": { "parameterOrder": [ "accountId" ], "parameters": { "accountId": { "required": true, "location": "path", "description": "Account ID to create the web property for.", "type": "string" } }, "path": "management/accounts/{accountId}/webproperties", "response": { "$ref": "Webproperty" }, "httpMethod": "POST", "request": { "$ref": "Webproperty" }, "scopes": [ "https://www.googleapis.com/auth/analytics.edit" ], "description": "Create a new property if the account has fewer than 20 properties. Web properties are visible in the Google Analytics interface only if they have at least one profile.", "id": "analytics.management.webproperties.insert" }, "list": { "parameterOrder": [ "accountId" ], "scopes": [ "https://www.googleapis.com/auth/analytics", "https://www.googleapis.com/auth/analytics.edit", "https://www.googleapis.com/auth/analytics.readonly" ], "parameters": { "start-index": { "type": "integer", "format": "int32", "location": "query", "minimum": "1", "description": "An index of the first entity to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter." }, "accountId": { "location": "path", "type": "string", "description": "Account ID to retrieve web properties for. Can either be a specific account ID or '~all', which refers to all the accounts that user has access to.", "required": true }, "max-results": { "description": "The maximum number of web properties to include in this response.", "type": "integer", "format": "int32", "location": "query" } }, "id": "analytics.management.webproperties.list", "description": "Lists web properties to which the user has access.", "response": { "$ref": "Webproperties" }, "httpMethod": "GET", "path": "management/accounts/{accountId}/webproperties" } } }, "webpropertyUserLinks": { "methods": { "delete": { "scopes": [ "https://www.googleapis.com/auth/analytics.manage.users" ], "parameterOrder": [ "accountId", "webPropertyId", "linkId" ], "parameters": { "webPropertyId": { "required": true, "description": "Web Property ID to delete the user link for.", "location": "path", "type": "string" }, "linkId": { "type": "string", "required": true, "description": "Link ID to delete the user link for.", "location": "path" }, "accountId": { "required": true, "description": "Account ID to delete the user link for.", "type": "string", "location": "path" } }, "httpMethod": "DELETE", "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/entityUserLinks/{linkId}", "id": "analytics.management.webpropertyUserLinks.delete", "description": "Removes a user from the given web property." }, "list": { "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/entityUserLinks", "description": "Lists webProperty-user links for a given web property.", "parameterOrder": [ "accountId", "webPropertyId" ], "httpMethod": "GET", "scopes": [ "https://www.googleapis.com/auth/analytics.manage.users", "https://www.googleapis.com/auth/analytics.manage.users.readonly" ], "id": "analytics.management.webpropertyUserLinks.list", "parameters": { "accountId": { "description": "Account ID which the given web property belongs to.", "required": true, "type": "string", "location": "path" }, "max-results": { "description": "The maximum number of webProperty-user Links to include in this response.", "type": "integer", "format": "int32", "location": "query" }, "webPropertyId": { "location": "path", "description": "Web Property ID for the webProperty-user links to retrieve. Can either be a specific web property ID or '~all', which refers to all the web properties that user has access to.", "type": "string", "required": true }, "start-index": { "type": "integer", "description": "An index of the first webProperty-user link to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.", "location": "query", "minimum": "1", "format": "int32" } }, "response": { "$ref": "EntityUserLinks" } }, "insert": { "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/entityUserLinks", "parameterOrder": [ "accountId", "webPropertyId" ], "parameters": { "webPropertyId": { "description": "Web Property ID to create the user link for.", "required": true, "location": "path", "type": "string" }, "accountId": { "description": "Account ID to create the user link for.", "required": true, "type": "string", "location": "path" } }, "scopes": [ "https://www.googleapis.com/auth/analytics.manage.users" ], "description": "Adds a new user to the given web property.", "response": { "$ref": "EntityUserLink" }, "httpMethod": "POST", "request": { "$ref": "EntityUserLink" }, "id": "analytics.management.webpropertyUserLinks.insert" }, "update": { "response": { "$ref": "EntityUserLink" }, "description": "Updates permissions for an existing user on the given web property.", "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/entityUserLinks/{linkId}", "request": { "$ref": "EntityUserLink" }, "parameters": { "accountId": { "location": "path", "required": true, "type": "string", "description": "Account ID to update the account-user link for." }, "linkId": { "description": "Link ID to update the account-user link for.", "type": "string", "required": true, "location": "path" }, "webPropertyId": { "location": "path", "type": "string", "required": true, "description": "Web property ID to update the account-user link for." } }, "httpMethod": "PUT", "scopes": [ "https://www.googleapis.com/auth/analytics.manage.users" ], "id": "analytics.management.webpropertyUserLinks.update", "parameterOrder": [ "accountId", "webPropertyId", "linkId" ] } } }, "customDataSources": { "methods": { "list": { "scopes": [ "https://www.googleapis.com/auth/analytics", "https://www.googleapis.com/auth/analytics.edit", "https://www.googleapis.com/auth/analytics.readonly" ], "httpMethod": "GET", "id": "analytics.management.customDataSources.list", "description": "List custom data sources to which the user has access.", "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/customDataSources", "parameters": { "max-results": { "description": "The maximum number of custom data sources to include in this response.", "format": "int32", "minimum": "1", "location": "query", "type": "integer" }, "start-index": { "format": "int32", "location": "query", "description": "A 1-based index of the first custom data source to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.", "minimum": "1", "type": "integer" }, "accountId": { "type": "string", "description": "Account Id for the custom data sources to retrieve.", "pattern": "\\d+", "required": true, "location": "path" }, "webPropertyId": { "description": "Web property Id for the custom data sources to retrieve.", "type": "string", "location": "path", "pattern": "UA-(\\d+)-(\\d+)", "required": true } }, "parameterOrder": [ "accountId", "webPropertyId" ], "response": { "$ref": "CustomDataSources" } } } }, "profiles": { "methods": { "delete": { "parameters": { "webPropertyId": { "type": "string", "required": true, "description": "Web property ID to delete the view (profile) for.", "location": "path" }, "profileId": { "required": true, "location": "path", "type": "string", "description": "ID of the view (profile) to be deleted." }, "accountId": { "description": "Account ID to delete the view (profile) for.", "required": true, "location": "path", "type": "string" } }, "scopes": [ "https://www.googleapis.com/auth/analytics.edit" ], "id": "analytics.management.profiles.delete", "parameterOrder": [ "accountId", "webPropertyId", "profileId" ], "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}", "httpMethod": "DELETE", "description": "Deletes a view (profile)." }, "insert": { "response": { "$ref": "Profile" }, "parameters": { "webPropertyId": { "location": "path", "description": "Web property ID to create the view (profile) for.", "type": "string", "required": true }, "accountId": { "location": "path", "description": "Account ID to create the view (profile) for.", "type": "string", "required": true } }, "httpMethod": "POST", "parameterOrder": [ "accountId", "webPropertyId" ], "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/profiles", "description": "Create a new view (profile).", "scopes": [ "https://www.googleapis.com/auth/analytics.edit" ], "request": { "$ref": "Profile" }, "id": "analytics.management.profiles.insert" }, "update": { "parameterOrder": [ "accountId", "webPropertyId", "profileId" ], "description": "Updates an existing view (profile).", "httpMethod": "PUT", "parameters": { "profileId": { "type": "string", "location": "path", "description": "ID of the view (profile) to be updated.", "required": true }, "webPropertyId": { "location": "path", "type": "string", "description": "Web property ID to which the view (profile) belongs", "required": true }, "accountId": { "required": true, "location": "path", "description": "Account ID to which the view (profile) belongs", "type": "string" } }, "request": { "$ref": "Profile" }, "scopes": [ "https://www.googleapis.com/auth/analytics.edit" ], "id": "analytics.management.profiles.update", "response": { "$ref": "Profile" }, "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}" }, "get": { "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}", "response": { "$ref": "Profile" }, "parameterOrder": [ "accountId", "webPropertyId", "profileId" ], "description": "Gets a view (profile) to which the user has access.", "parameters": { "accountId": { "pattern": "[0-9]+", "required": true, "location": "path", "type": "string", "description": "Account ID to retrieve the view (profile) for." }, "webPropertyId": { "location": "path", "required": true, "type": "string", "pattern": "UA-[0-9]+-[0-9]+", "description": "Web property ID to retrieve the view (profile) for." }, "profileId": { "required": true, "location": "path", "description": "View (Profile) ID to retrieve the view (profile) for.", "pattern": "[0-9]+", "type": "string" } }, "scopes": [ "https://www.googleapis.com/auth/analytics.edit", "https://www.googleapis.com/auth/analytics.readonly" ], "id": "analytics.management.profiles.get", "httpMethod": "GET" }, "patch": { "parameterOrder": [ "accountId", "webPropertyId", "profileId" ], "id": "analytics.management.profiles.patch", "description": "Updates an existing view (profile). This method supports patch semantics.", "scopes": [ "https://www.googleapis.com/auth/analytics.edit" ], "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}", "httpMethod": "PATCH", "parameters": { "accountId": { "type": "string", "required": true, "location": "path", "description": "Account ID to which the view (profile) belongs" }, "profileId": { "required": true, "description": "ID of the view (profile) to be updated.", "type": "string", "location": "path" }, "webPropertyId": { "location": "path", "description": "Web property ID to which the view (profile) belongs", "required": true, "type": "string" } }, "request": { "$ref": "Profile" }, "response": { "$ref": "Profile" } }, "list": { "httpMethod": "GET", "response": { "$ref": "Profiles" }, "id": "analytics.management.profiles.list", "parameterOrder": [ "accountId", "webPropertyId" ], "description": "Lists views (profiles) to which the user has access.", "scopes": [ "https://www.googleapis.com/auth/analytics", "https://www.googleapis.com/auth/analytics.edit", "https://www.googleapis.com/auth/analytics.readonly" ], "parameters": { "accountId": { "location": "path", "description": "Account ID for the view (profiles) to retrieve. Can either be a specific account ID or '~all', which refers to all the accounts to which the user has access.", "required": true, "type": "string" }, "start-index": { "format": "int32", "minimum": "1", "location": "query", "type": "integer", "description": "An index of the first entity to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter." }, "max-results": { "type": "integer", "description": "The maximum number of views (profiles) to include in this response.", "format": "int32", "location": "query" }, "webPropertyId": { "required": true, "type": "string", "description": "Web property ID for the views (profiles) to retrieve. Can either be a specific web property ID or '~all', which refers to all the web properties to which the user has access.", "location": "path" } }, "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/profiles" } } }, "goals": { "methods": { "list": { "response": { "$ref": "Goals" }, "id": "analytics.management.goals.list", "description": "Lists goals to which the user has access.", "parameterOrder": [ "accountId", "webPropertyId", "profileId" ], "scopes": [ "https://www.googleapis.com/auth/analytics", "https://www.googleapis.com/auth/analytics.edit", "https://www.googleapis.com/auth/analytics.readonly" ], "httpMethod": "GET", "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/goals", "parameters": { "start-index": { "format": "int32", "minimum": "1", "type": "integer", "description": "An index of the first goal to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.", "location": "query" }, "accountId": { "type": "string", "location": "path", "description": "Account ID to retrieve goals for. Can either be a specific account ID or '~all', which refers to all the accounts that user has access to.", "required": true }, "webPropertyId": { "required": true, "description": "Web property ID to retrieve goals for. Can either be a specific web property ID or '~all', which refers to all the web properties that user has access to.", "type": "string", "location": "path" }, "max-results": { "description": "The maximum number of goals to include in this response.", "type": "integer", "location": "query", "format": "int32" }, "profileId": { "description": "View (Profile) ID to retrieve goals for. Can either be a specific view (profile) ID or '~all', which refers to all the views (profiles) that user has access to.", "location": "path", "required": true, "type": "string" } } }, "patch": { "request": { "$ref": "Goal" }, "id": "analytics.management.goals.patch", "description": "Updates an existing goal. This method supports patch semantics.", "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/goals/{goalId}", "parameters": { "webPropertyId": { "type": "string", "required": true, "location": "path", "description": "Web property ID to update the goal." }, "accountId": { "description": "Account ID to update the goal.", "type": "string", "required": true, "location": "path" }, "goalId": { "location": "path", "type": "string", "description": "Index of the goal to be updated.", "required": true }, "profileId": { "description": "View (Profile) ID to update the goal.", "location": "path", "type": "string", "required": true } }, "scopes": [ "https://www.googleapis.com/auth/analytics.edit" ], "parameterOrder": [ "accountId", "webPropertyId", "profileId", "goalId" ], "httpMethod": "PATCH", "response": { "$ref": "Goal" } }, "get": { "parameters": { "webPropertyId": { "type": "string", "description": "Web property ID to retrieve the goal for.", "required": true, "location": "path" }, "goalId": { "location": "path", "description": "Goal ID to retrieve the goal for.", "type": "string", "required": true }, "profileId": { "description": "View (Profile) ID to retrieve the goal for.", "type": "string", "required": true, "location": "path" }, "accountId": { "required": true, "location": "path", "description": "Account ID to retrieve the goal for.", "type": "string" } }, "response": { "$ref": "Goal" }, "id": "analytics.management.goals.get", "httpMethod": "GET", "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/goals/{goalId}", "description": "Gets a goal to which the user has access.", "parameterOrder": [ "accountId", "webPropertyId", "profileId", "goalId" ], "scopes": [ "https://www.googleapis.com/auth/analytics.edit", "https://www.googleapis.com/auth/analytics.readonly" ] }, "update": { "scopes": [ "https://www.googleapis.com/auth/analytics.edit" ], "parameters": { "accountId": { "required": true, "description": "Account ID to update the goal.", "location": "path", "type": "string" }, "goalId": { "location": "path", "required": true, "type": "string", "description": "Index of the goal to be updated." }, "webPropertyId": { "description": "Web property ID to update the goal.", "location": "path", "required": true, "type": "string" }, "profileId": { "location": "path", "type": "string", "description": "View (Profile) ID to update the goal.", "required": true } }, "request": { "$ref": "Goal" }, "httpMethod": "PUT", "parameterOrder": [ "accountId", "webPropertyId", "profileId", "goalId" ], "description": "Updates an existing goal.", "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/goals/{goalId}", "id": "analytics.management.goals.update", "response": { "$ref": "Goal" } }, "insert": { "request": { "$ref": "Goal" }, "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/goals", "parameters": { "accountId": { "description": "Account ID to create the goal for.", "type": "string", "required": true, "location": "path" }, "webPropertyId": { "type": "string", "location": "path", "required": true, "description": "Web property ID to create the goal for." }, "profileId": { "location": "path", "type": "string", "required": true, "description": "View (Profile) ID to create the goal for." } }, "httpMethod": "POST", "parameterOrder": [ "accountId", "webPropertyId", "profileId" ], "id": "analytics.management.goals.insert", "response": { "$ref": "Goal" }, "description": "Create a new goal.", "scopes": [ "https://www.googleapis.com/auth/analytics.edit" ] } } }, "customMetrics": { "methods": { "insert": { "parameterOrder": [ "accountId", "webPropertyId" ], "parameters": { "accountId": { "location": "path", "description": "Account ID for the custom metric to create.", "type": "string", "required": true }, "webPropertyId": { "required": true, "type": "string", "location": "path", "description": "Web property ID for the custom dimension to create." } }, "description": "Create a new custom metric.", "scopes": [ "https://www.googleapis.com/auth/analytics.edit" ], "response": { "$ref": "CustomMetric" }, "httpMethod": "POST", "id": "analytics.management.customMetrics.insert", "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/customMetrics", "request": { "$ref": "CustomMetric" } }, "list": { "scopes": [ "https://www.googleapis.com/auth/analytics", "https://www.googleapis.com/auth/analytics.readonly" ], "response": { "$ref": "CustomMetrics" }, "description": "Lists custom metrics to which the user has access.", "httpMethod": "GET", "parameterOrder": [ "accountId", "webPropertyId" ], "id": "analytics.management.customMetrics.list", "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/customMetrics", "parameters": { "accountId": { "location": "path", "type": "string", "required": true, "description": "Account ID for the custom metrics to retrieve." }, "start-index": { "description": "An index of the first entity to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.", "minimum": "1", "type": "integer", "location": "query", "format": "int32" }, "webPropertyId": { "description": "Web property ID for the custom metrics to retrieve.", "location": "path", "type": "string", "required": true }, "max-results": { "description": "The maximum number of custom metrics to include in this response.", "format": "int32", "location": "query", "type": "integer" } } }, "patch": { "request": { "$ref": "CustomMetric" }, "id": "analytics.management.customMetrics.patch", "httpMethod": "PATCH", "response": { "$ref": "CustomMetric" }, "parameters": { "customMetricId": { "type": "string", "required": true, "description": "Custom metric ID for the custom metric to update.", "location": "path" }, "accountId": { "required": true, "description": "Account ID for the custom metric to update.", "location": "path", "type": "string" }, "ignoreCustomDataSourceLinks": { "type": "boolean", "location": "query", "default": "false", "description": "Force the update and ignore any warnings related to the custom metric being linked to a custom data source / data set." }, "webPropertyId": { "location": "path", "type": "string", "description": "Web property ID for the custom metric to update.", "required": true } }, "scopes": [ "https://www.googleapis.com/auth/analytics.edit" ], "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/customMetrics/{customMetricId}", "parameterOrder": [ "accountId", "webPropertyId", "customMetricId" ], "description": "Updates an existing custom metric. This method supports patch semantics." }, "update": { "request": { "$ref": "CustomMetric" }, "parameters": { "webPropertyId": { "description": "Web property ID for the custom metric to update.", "type": "string", "location": "path", "required": true }, "customMetricId": { "description": "Custom metric ID for the custom metric to update.", "required": true, "location": "path", "type": "string" }, "ignoreCustomDataSourceLinks": { "description": "Force the update and ignore any warnings related to the custom metric being linked to a custom data source / data set.", "location": "query", "default": "false", "type": "boolean" }, "accountId": { "type": "string", "description": "Account ID for the custom metric to update.", "required": true, "location": "path" } }, "parameterOrder": [ "accountId", "webPropertyId", "customMetricId" ], "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/customMetrics/{customMetricId}", "id": "analytics.management.customMetrics.update", "description": "Updates an existing custom metric.", "response": { "$ref": "CustomMetric" }, "scopes": [ "https://www.googleapis.com/auth/analytics.edit" ], "httpMethod": "PUT" }, "get": { "httpMethod": "GET", "description": "Get a custom metric to which the user has access.", "id": "analytics.management.customMetrics.get", "parameterOrder": [ "accountId", "webPropertyId", "customMetricId" ], "response": { "$ref": "CustomMetric" }, "scopes": [ "https://www.googleapis.com/auth/analytics.edit", "https://www.googleapis.com/auth/analytics.readonly" ], "parameters": { "customMetricId": { "type": "string", "required": true, "location": "path", "description": "The ID of the custom metric to retrieve." }, "webPropertyId": { "description": "Web property ID for the custom metric to retrieve.", "location": "path", "type": "string", "required": true }, "accountId": { "description": "Account ID for the custom metric to retrieve.", "required": true, "location": "path", "type": "string" } }, "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/customMetrics/{customMetricId}" } } }, "remarketingAudience": { "methods": { "update": { "parameterOrder": [ "accountId", "webPropertyId", "remarketingAudienceId" ], "id": "analytics.management.remarketingAudience.update", "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/remarketingAudiences/{remarketingAudienceId}", "scopes": [ "https://www.googleapis.com/auth/analytics.edit" ], "response": { "$ref": "RemarketingAudience" }, "request": { "$ref": "RemarketingAudience" }, "description": "Updates an existing remarketing audience.", "parameters": { "webPropertyId": { "location": "path", "type": "string", "description": "The web property ID of the remarketing audience to update.", "required": true }, "remarketingAudienceId": { "description": "The ID of the remarketing audience to update.", "location": "path", "required": true, "type": "string" }, "accountId": { "description": "The account ID of the remarketing audience to update.", "type": "string", "location": "path", "required": true } }, "httpMethod": "PUT" }, "delete": { "scopes": [ "https://www.googleapis.com/auth/analytics.edit" ], "parameters": { "accountId": { "required": true, "type": "string", "location": "path", "description": "Account ID to which the remarketing audience belongs." }, "webPropertyId": { "required": true, "description": "Web property ID to which the remarketing audience belongs.", "location": "path", "type": "string" }, "remarketingAudienceId": { "location": "path", "description": "The ID of the remarketing audience to delete.", "type": "string", "required": true } }, "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/remarketingAudiences/{remarketingAudienceId}", "httpMethod": "DELETE", "description": "Delete a remarketing audience.", "parameterOrder": [ "accountId", "webPropertyId", "remarketingAudienceId" ], "id": "analytics.management.remarketingAudience.delete" }, "list": { "httpMethod": "GET", "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/remarketingAudiences", "response": { "$ref": "RemarketingAudiences" }, "id": "analytics.management.remarketingAudience.list", "description": "Lists remarketing audiences to which the user has access.", "scopes": [ "https://www.googleapis.com/auth/analytics.edit", "https://www.googleapis.com/auth/analytics.readonly" ], "parameterOrder": [ "accountId", "webPropertyId" ], "parameters": { "start-index": { "location": "query", "type": "integer", "format": "int32", "minimum": "1", "description": "An index of the first entity to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter." }, "accountId": { "description": "The account ID of the remarketing audiences to retrieve.", "type": "string", "location": "path", "required": true }, "max-results": { "location": "query", "type": "integer", "format": "int32", "description": "The maximum number of remarketing audiences to include in this response." }, "type": { "default": "all", "type": "string", "location": "query" }, "webPropertyId": { "location": "path", "description": "The web property ID of the remarketing audiences to retrieve.", "required": true, "type": "string" } } }, "get": { "parameters": { "webPropertyId": { "type": "string", "description": "The web property ID of the remarketing audience to retrieve.", "required": true, "location": "path" }, "accountId": { "type": "string", "location": "path", "required": true, "description": "The account ID of the remarketing audience to retrieve." }, "remarketingAudienceId": { "required": true, "location": "path", "type": "string", "description": "The ID of the remarketing audience to retrieve." } }, "response": { "$ref": "RemarketingAudience" }, "scopes": [ "https://www.googleapis.com/auth/analytics.edit", "https://www.googleapis.com/auth/analytics.readonly" ], "httpMethod": "GET", "description": "Gets a remarketing audience to which the user has access.", "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/remarketingAudiences/{remarketingAudienceId}", "id": "analytics.management.remarketingAudience.get", "parameterOrder": [ "accountId", "webPropertyId", "remarketingAudienceId" ] }, "patch": { "scopes": [ "https://www.googleapis.com/auth/analytics.edit" ], "parameterOrder": [ "accountId", "webPropertyId", "remarketingAudienceId" ], "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/remarketingAudiences/{remarketingAudienceId}", "response": { "$ref": "RemarketingAudience" }, "request": { "$ref": "RemarketingAudience" }, "parameters": { "webPropertyId": { "type": "string", "description": "The web property ID of the remarketing audience to update.", "required": true, "location": "path" }, "accountId": { "description": "The account ID of the remarketing audience to update.", "required": true, "type": "string", "location": "path" }, "remarketingAudienceId": { "required": true, "type": "string", "description": "The ID of the remarketing audience to update.", "location": "path" } }, "httpMethod": "PATCH", "id": "analytics.management.remarketingAudience.patch", "description": "Updates an existing remarketing audience. This method supports patch semantics." }, "insert": { "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/remarketingAudiences", "request": { "$ref": "RemarketingAudience" }, "description": "Creates a new remarketing audience.", "parameters": { "accountId": { "type": "string", "required": true, "description": "The account ID for which to create the remarketing audience.", "location": "path" }, "webPropertyId": { "description": "Web property ID for which to create the remarketing audience.", "required": true, "type": "string", "location": "path" } }, "httpMethod": "POST", "parameterOrder": [ "accountId", "webPropertyId" ], "response": { "$ref": "RemarketingAudience" }, "id": "analytics.management.remarketingAudience.insert", "scopes": [ "https://www.googleapis.com/auth/analytics.edit" ] } } }, "profileFilterLinks": { "methods": { "patch": { "parameters": { "accountId": { "location": "path", "type": "string", "description": "Account ID to which profile filter link belongs.", "required": true, "pattern": "\\d+" }, "profileId": { "pattern": "\\d+", "required": true, "location": "path", "description": "Profile ID to which filter link belongs", "type": "string" }, "linkId": { "location": "path", "required": true, "pattern": "\\d+:\\d+", "description": "ID of the profile filter link to be updated.", "type": "string" }, "webPropertyId": { "description": "Web property Id to which profile filter link belongs", "pattern": "UA-(\\d+)-(\\d+)", "type": "string", "required": true, "location": "path" } }, "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/profileFilterLinks/{linkId}", "id": "analytics.management.profileFilterLinks.patch", "request": { "$ref": "ProfileFilterLink" }, "httpMethod": "PATCH", "description": "Update an existing profile filter link. This method supports patch semantics.", "scopes": [ "https://www.googleapis.com/auth/analytics.edit" ], "response": { "$ref": "ProfileFilterLink" }, "parameterOrder": [ "accountId", "webPropertyId", "profileId", "linkId" ] }, "list": { "id": "analytics.management.profileFilterLinks.list", "scopes": [ "https://www.googleapis.com/auth/analytics.edit", "https://www.googleapis.com/auth/analytics.readonly" ], "httpMethod": "GET", "response": { "$ref": "ProfileFilterLinks" }, "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/profileFilterLinks", "parameterOrder": [ "accountId", "webPropertyId", "profileId" ], "description": "Lists all profile filter links for a profile.", "parameters": { "start-index": { "description": "An index of the first entity to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.", "type": "integer", "format": "int32", "minimum": "1", "location": "query" }, "profileId": { "description": "Profile ID to retrieve filter links for. Can either be a specific profile ID or '~all', which refers to all the profiles that user has access to.", "type": "string", "location": "path", "required": true }, "max-results": { "format": "int32", "type": "integer", "description": "The maximum number of profile filter links to include in this response.", "location": "query" }, "accountId": { "required": true, "type": "string", "pattern": "\\d+", "location": "path", "description": "Account ID to retrieve profile filter links for." }, "webPropertyId": { "description": "Web property Id for profile filter links for. Can either be a specific web property ID or '~all', which refers to all the web properties that user has access to.", "location": "path", "type": "string", "required": true } } }, "delete": { "parameters": { "webPropertyId": { "required": true, "location": "path", "description": "Web property Id to which the profile filter link belongs.", "type": "string", "pattern": "UA-(\\d+)-(\\d+)" }, "accountId": { "location": "path", "pattern": "\\d+", "type": "string", "required": true, "description": "Account ID to which the profile filter link belongs." }, "linkId": { "location": "path", "required": true, "description": "ID of the profile filter link to delete.", "type": "string", "pattern": "\\d+:\\d+" }, "profileId": { "type": "string", "pattern": "\\d+", "description": "Profile ID to which the filter link belongs.", "required": true, "location": "path" } }, "parameterOrder": [ "accountId", "webPropertyId", "profileId", "linkId" ], "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/profileFilterLinks/{linkId}", "scopes": [ "https://www.googleapis.com/auth/analytics.edit" ], "httpMethod": "DELETE", "id": "analytics.management.profileFilterLinks.delete", "description": "Delete a profile filter link." }, "get": { "parameters": { "profileId": { "description": "Profile ID to retrieve filter link for.", "location": "path", "pattern": "\\d+", "required": true, "type": "string" }, "linkId": { "type": "string", "location": "path", "required": true, "pattern": "\\d+:\\d+", "description": "ID of the profile filter link." }, "accountId": { "required": true, "type": "string", "pattern": "\\d+", "location": "path", "description": "Account ID to retrieve profile filter link for." }, "webPropertyId": { "type": "string", "location": "path", "pattern": "UA-(\\d+)-(\\d+)", "description": "Web property Id to retrieve profile filter link for.", "required": true } }, "response": { "$ref": "ProfileFilterLink" }, "httpMethod": "GET", "scopes": [ "https://www.googleapis.com/auth/analytics.edit", "https://www.googleapis.com/auth/analytics.readonly" ], "id": "analytics.management.profileFilterLinks.get", "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/profileFilterLinks/{linkId}", "parameterOrder": [ "accountId", "webPropertyId", "profileId", "linkId" ], "description": "Returns a single profile filter link." }, "insert": { "parameterOrder": [ "accountId", "webPropertyId", "profileId" ], "scopes": [ "https://www.googleapis.com/auth/analytics.edit" ], "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/profileFilterLinks", "description": "Create a new profile filter link.", "httpMethod": "POST", "id": "analytics.management.profileFilterLinks.insert", "request": { "$ref": "ProfileFilterLink" }, "parameters": { "webPropertyId": { "description": "Web property Id to create profile filter link for.", "type": "string", "location": "path", "pattern": "UA-(\\d+)-(\\d+)", "required": true }, "accountId": { "required": true, "pattern": "\\d+", "location": "path", "description": "Account ID to create profile filter link for.", "type": "string" }, "profileId": { "location": "path", "pattern": "\\d+", "required": true, "description": "Profile ID to create filter link for.", "type": "string" } }, "response": { "$ref": "ProfileFilterLink" } }, "update": { "id": "analytics.management.profileFilterLinks.update", "parameterOrder": [ "accountId", "webPropertyId", "profileId", "linkId" ], "request": { "$ref": "ProfileFilterLink" }, "description": "Update an existing profile filter link.", "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/profileFilterLinks/{linkId}", "scopes": [ "https://www.googleapis.com/auth/analytics.edit" ], "response": { "$ref": "ProfileFilterLink" }, "parameters": { "webPropertyId": { "pattern": "UA-(\\d+)-(\\d+)", "required": true, "type": "string", "description": "Web property Id to which profile filter link belongs", "location": "path" }, "accountId": { "required": true, "description": "Account ID to which profile filter link belongs.", "type": "string", "location": "path", "pattern": "\\d+" }, "profileId": { "description": "Profile ID to which filter link belongs", "type": "string", "location": "path", "required": true, "pattern": "\\d+" }, "linkId": { "type": "string", "required": true, "location": "path", "pattern": "\\d+:\\d+", "description": "ID of the profile filter link to be updated." } }, "httpMethod": "PUT" } } }, "unsampledReports": { "methods": { "get": { "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/unsampledReports/{unsampledReportId}", "scopes": [ "https://www.googleapis.com/auth/analytics", "https://www.googleapis.com/auth/analytics.edit", "https://www.googleapis.com/auth/analytics.readonly" ], "response": { "$ref": "UnsampledReport" }, "parameters": { "unsampledReportId": { "description": "ID of the unsampled report to retrieve.", "required": true, "type": "string", "location": "path" }, "webPropertyId": { "type": "string", "location": "path", "description": "Web property ID to retrieve unsampled reports for.", "required": true }, "accountId": { "required": true, "description": "Account ID to retrieve unsampled report for.", "location": "path", "type": "string" }, "profileId": { "type": "string", "description": "View (Profile) ID to retrieve unsampled report for.", "location": "path", "required": true } }, "parameterOrder": [ "accountId", "webPropertyId", "profileId", "unsampledReportId" ], "httpMethod": "GET", "description": "Returns a single unsampled report.", "id": "analytics.management.unsampledReports.get" }, "insert": { "response": { "$ref": "UnsampledReport" }, "request": { "$ref": "UnsampledReport" }, "id": "analytics.management.unsampledReports.insert", "description": "Create a new unsampled report.", "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/unsampledReports", "httpMethod": "POST", "scopes": [ "https://www.googleapis.com/auth/analytics", "https://www.googleapis.com/auth/analytics.edit" ], "parameterOrder": [ "accountId", "webPropertyId", "profileId" ], "parameters": { "webPropertyId": { "type": "string", "required": true, "description": "Web property ID to create the unsampled report for.", "location": "path" }, "profileId": { "description": "View (Profile) ID to create the unsampled report for.", "location": "path", "type": "string", "required": true }, "accountId": { "type": "string", "location": "path", "required": true, "description": "Account ID to create the unsampled report for." } } }, "list": { "description": "Lists unsampled reports to which the user has access.", "id": "analytics.management.unsampledReports.list", "parameterOrder": [ "accountId", "webPropertyId", "profileId" ], "response": { "$ref": "UnsampledReports" }, "parameters": { "profileId": { "type": "string", "required": true, "location": "path", "description": "View (Profile) ID to retrieve unsampled reports for. Must be a specific view (profile) ID, ~all is not supported." }, "start-index": { "type": "integer", "description": "An index of the first unsampled report to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.", "minimum": "1", "location": "query", "format": "int32" }, "accountId": { "description": "Account ID to retrieve unsampled reports for. Must be a specific account ID, ~all is not supported.", "location": "path", "required": true, "type": "string" }, "max-results": { "description": "The maximum number of unsampled reports to include in this response.", "type": "integer", "format": "int32", "location": "query" }, "webPropertyId": { "location": "path", "type": "string", "description": "Web property ID to retrieve unsampled reports for. Must be a specific web property ID, ~all is not supported.", "required": true } }, "scopes": [ "https://www.googleapis.com/auth/analytics", "https://www.googleapis.com/auth/analytics.edit", "https://www.googleapis.com/auth/analytics.readonly" ], "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/unsampledReports", "httpMethod": "GET" }, "delete": { "parameters": { "webPropertyId": { "type": "string", "required": true, "location": "path", "description": "Web property ID to delete the unsampled reports for." }, "profileId": { "required": true, "description": "View (Profile) ID to delete the unsampled report for.", "location": "path", "type": "string" }, "accountId": { "type": "string", "location": "path", "description": "Account ID to delete the unsampled report for.", "required": true }, "unsampledReportId": { "location": "path", "description": "ID of the unsampled report to be deleted.", "required": true, "type": "string" } }, "scopes": [ "https://www.googleapis.com/auth/analytics.edit" ], "httpMethod": "DELETE", "parameterOrder": [ "accountId", "webPropertyId", "profileId", "unsampledReportId" ], "id": "analytics.management.unsampledReports.delete", "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/unsampledReports/{unsampledReportId}", "description": "Deletes an unsampled report." } } }, "experiments": { "methods": { "patch": { "parameters": { "experimentId": { "required": true, "type": "string", "location": "path", "description": "Experiment ID of the experiment to update." }, "accountId": { "location": "path", "required": true, "type": "string", "description": "Account ID of the experiment to update." }, "profileId": { "location": "path", "required": true, "description": "View (Profile) ID of the experiment to update.", "type": "string" }, "webPropertyId": { "description": "Web property ID of the experiment to update.", "type": "string", "location": "path", "required": true } }, "response": { "$ref": "Experiment" }, "id": "analytics.management.experiments.patch", "parameterOrder": [ "accountId", "webPropertyId", "profileId", "experimentId" ], "httpMethod": "PATCH", "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/experiments/{experimentId}", "scopes": [ "https://www.googleapis.com/auth/analytics", "https://www.googleapis.com/auth/analytics.edit" ], "request": { "$ref": "Experiment" }, "description": "Update an existing experiment. This method supports patch semantics." }, "list": { "description": "Lists experiments to which the user has access.", "response": { "$ref": "Experiments" }, "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/experiments", "httpMethod": "GET", "id": "analytics.management.experiments.list", "parameterOrder": [ "accountId", "webPropertyId", "profileId" ], "parameters": { "profileId": { "required": true, "location": "path", "description": "View (Profile) ID to retrieve experiments for.", "pattern": "\\d+", "type": "string" }, "webPropertyId": { "description": "Web property ID to retrieve experiments for.", "location": "path", "type": "string", "required": true, "pattern": "UA-(\\d+)-(\\d+)" }, "start-index": { "location": "query", "format": "int32", "type": "integer", "minimum": "1", "description": "An index of the first experiment to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter." }, "max-results": { "format": "int32", "type": "integer", "location": "query", "description": "The maximum number of experiments to include in this response." }, "accountId": { "required": true, "pattern": "\\d+", "description": "Account ID to retrieve experiments for.", "type": "string", "location": "path" } }, "scopes": [ "https://www.googleapis.com/auth/analytics", "https://www.googleapis.com/auth/analytics.edit", "https://www.googleapis.com/auth/analytics.readonly" ] }, "delete": { "scopes": [ "https://www.googleapis.com/auth/analytics", "https://www.googleapis.com/auth/analytics.edit" ], "parameters": { "profileId": { "required": true, "description": "View (Profile) ID to which the experiment belongs", "type": "string", "location": "path" }, "accountId": { "description": "Account ID to which the experiment belongs", "required": true, "location": "path", "type": "string" }, "experimentId": { "location": "path", "description": "ID of the experiment to delete", "required": true, "type": "string" }, "webPropertyId": { "description": "Web property ID to which the experiment belongs", "type": "string", "required": true, "location": "path" } }, "httpMethod": "DELETE", "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/experiments/{experimentId}", "parameterOrder": [ "accountId", "webPropertyId", "profileId", "experimentId" ], "description": "Delete an experiment.", "id": "analytics.management.experiments.delete" }, "update": { "scopes": [ "https://www.googleapis.com/auth/analytics", "https://www.googleapis.com/auth/analytics.edit" ], "id": "analytics.management.experiments.update", "request": { "$ref": "Experiment" }, "parameterOrder": [ "accountId", "webPropertyId", "profileId", "experimentId" ], "description": "Update an existing experiment.", "httpMethod": "PUT", "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/experiments/{experimentId}", "response": { "$ref": "Experiment" }, "parameters": { "profileId": { "required": true, "description": "View (Profile) ID of the experiment to update.", "location": "path", "type": "string" }, "accountId": { "location": "path", "required": true, "description": "Account ID of the experiment to update.", "type": "string" }, "webPropertyId": { "location": "path", "description": "Web property ID of the experiment to update.", "type": "string", "required": true }, "experimentId": { "required": true, "description": "Experiment ID of the experiment to update.", "type": "string", "location": "path" } } }, "insert": { "httpMethod": "POST", "parameters": { "accountId": { "description": "Account ID to create the experiment for.", "type": "string", "location": "path", "required": true }, "profileId": { "location": "path", "type": "string", "description": "View (Profile) ID to create the experiment for.", "required": true }, "webPropertyId": { "description": "Web property ID to create the experiment for.", "type": "string", "location": "path", "required": true } }, "id": "analytics.management.experiments.insert", "response": { "$ref": "Experiment" }, "request": { "$ref": "Experiment" }, "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/experiments", "description": "Create a new experiment.", "scopes": [ "https://www.googleapis.com/auth/analytics", "https://www.googleapis.com/auth/analytics.edit" ], "parameterOrder": [ "accountId", "webPropertyId", "profileId" ] }, "get": { "response": { "$ref": "Experiment" }, "parameterOrder": [ "accountId", "webPropertyId", "profileId", "experimentId" ], "parameters": { "experimentId": { "description": "Experiment ID to retrieve the experiment for.", "location": "path", "required": true, "type": "string" }, "accountId": { "required": true, "location": "path", "description": "Account ID to retrieve the experiment for.", "type": "string" }, "webPropertyId": { "description": "Web property ID to retrieve the experiment for.", "required": true, "type": "string", "location": "path" }, "profileId": { "required": true, "description": "View (Profile) ID to retrieve the experiment for.", "type": "string", "location": "path" } }, "id": "analytics.management.experiments.get", "description": "Returns an experiment to which the user has access.", "scopes": [ "https://www.googleapis.com/auth/analytics", "https://www.googleapis.com/auth/analytics.edit", "https://www.googleapis.com/auth/analytics.readonly" ], "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/experiments/{experimentId}", "httpMethod": "GET" } } }, "customDimensions": { "methods": { "get": { "httpMethod": "GET", "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/customDimensions/{customDimensionId}", "description": "Get a custom dimension to which the user has access.", "scopes": [ "https://www.googleapis.com/auth/analytics.edit", "https://www.googleapis.com/auth/analytics.readonly" ], "response": { "$ref": "CustomDimension" }, "parameters": { "customDimensionId": { "location": "path", "required": true, "type": "string", "description": "The ID of the custom dimension to retrieve." }, "accountId": { "description": "Account ID for the custom dimension to retrieve.", "type": "string", "required": true, "location": "path" }, "webPropertyId": { "required": true, "type": "string", "description": "Web property ID for the custom dimension to retrieve.", "location": "path" } }, "id": "analytics.management.customDimensions.get", "parameterOrder": [ "accountId", "webPropertyId", "customDimensionId" ] }, "insert": { "parameterOrder": [ "accountId", "webPropertyId" ], "httpMethod": "POST", "request": { "$ref": "CustomDimension" }, "id": "analytics.management.customDimensions.insert", "response": { "$ref": "CustomDimension" }, "description": "Create a new custom dimension.", "parameters": { "accountId": { "description": "Account ID for the custom dimension to create.", "type": "string", "location": "path", "required": true }, "webPropertyId": { "required": true, "description": "Web property ID for the custom dimension to create.", "type": "string", "location": "path" } }, "scopes": [ "https://www.googleapis.com/auth/analytics.edit" ], "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/customDimensions" }, "update": { "response": { "$ref": "CustomDimension" }, "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/customDimensions/{customDimensionId}", "id": "analytics.management.customDimensions.update", "description": "Updates an existing custom dimension.", "httpMethod": "PUT", "parameters": { "webPropertyId": { "description": "Web property ID for the custom dimension to update.", "location": "path", "type": "string", "required": true }, "customDimensionId": { "required": true, "type": "string", "description": "Custom dimension ID for the custom dimension to update.", "location": "path" }, "ignoreCustomDataSourceLinks": { "description": "Force the update and ignore any warnings related to the custom dimension being linked to a custom data source / data set.", "location": "query", "default": "false", "type": "boolean" }, "accountId": { "location": "path", "description": "Account ID for the custom dimension to update.", "type": "string", "required": true } }, "scopes": [ "https://www.googleapis.com/auth/analytics.edit" ], "parameterOrder": [ "accountId", "webPropertyId", "customDimensionId" ], "request": { "$ref": "CustomDimension" } }, "list": { "id": "analytics.management.customDimensions.list", "parameters": { "max-results": { "description": "The maximum number of custom dimensions to include in this response.", "format": "int32", "type": "integer", "location": "query" }, "webPropertyId": { "type": "string", "required": true, "location": "path", "description": "Web property ID for the custom dimensions to retrieve." }, "accountId": { "location": "path", "description": "Account ID for the custom dimensions to retrieve.", "required": true, "type": "string" }, "start-index": { "location": "query", "format": "int32", "minimum": "1", "type": "integer", "description": "An index of the first entity to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter." } }, "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/customDimensions", "response": { "$ref": "CustomDimensions" }, "scopes": [ "https://www.googleapis.com/auth/analytics", "https://www.googleapis.com/auth/analytics.readonly" ], "parameterOrder": [ "accountId", "webPropertyId" ], "description": "Lists custom dimensions to which the user has access.", "httpMethod": "GET" }, "patch": { "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/customDimensions/{customDimensionId}", "response": { "$ref": "CustomDimension" }, "parameters": { "webPropertyId": { "type": "string", "location": "path", "description": "Web property ID for the custom dimension to update.", "required": true }, "ignoreCustomDataSourceLinks": { "default": "false", "description": "Force the update and ignore any warnings related to the custom dimension being linked to a custom data source / data set.", "type": "boolean", "location": "query" }, "customDimensionId": { "required": true, "location": "path", "description": "Custom dimension ID for the custom dimension to update.", "type": "string" }, "accountId": { "type": "string", "description": "Account ID for the custom dimension to update.", "location": "path", "required": true } }, "description": "Updates an existing custom dimension. This method supports patch semantics.", "id": "analytics.management.customDimensions.patch", "httpMethod": "PATCH", "scopes": [ "https://www.googleapis.com/auth/analytics.edit" ], "parameterOrder": [ "accountId", "webPropertyId", "customDimensionId" ], "request": { "$ref": "CustomDimension" } } } }, "accountUserLinks": { "methods": { "update": { "scopes": [ "https://www.googleapis.com/auth/analytics.manage.users" ], "description": "Updates permissions for an existing user on the given account.", "request": { "$ref": "EntityUserLink" }, "response": { "$ref": "EntityUserLink" }, "parameters": { "accountId": { "location": "path", "required": true, "description": "Account ID to update the account-user link for.", "type": "string" }, "linkId": { "description": "Link ID to update the account-user link for.", "type": "string", "required": true, "location": "path" } }, "httpMethod": "PUT", "parameterOrder": [ "accountId", "linkId" ], "path": "management/accounts/{accountId}/entityUserLinks/{linkId}", "id": "analytics.management.accountUserLinks.update" }, "insert": { "parameterOrder": [ "accountId" ], "request": { "$ref": "EntityUserLink" }, "parameters": { "accountId": { "location": "path", "required": true, "description": "Account ID to create the user link for.", "type": "string" } }, "description": "Adds a new user to the given account.", "httpMethod": "POST", "scopes": [ "https://www.googleapis.com/auth/analytics.manage.users" ], "response": { "$ref": "EntityUserLink" }, "path": "management/accounts/{accountId}/entityUserLinks", "id": "analytics.management.accountUserLinks.insert" }, "list": { "parameterOrder": [ "accountId" ], "path": "management/accounts/{accountId}/entityUserLinks", "description": "Lists account-user links for a given account.", "id": "analytics.management.accountUserLinks.list", "parameters": { "accountId": { "required": true, "location": "path", "type": "string", "description": "Account ID to retrieve the user links for." }, "start-index": { "type": "integer", "location": "query", "format": "int32", "description": "An index of the first account-user link to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.", "minimum": "1" }, "max-results": { "format": "int32", "type": "integer", "location": "query", "description": "The maximum number of account-user links to include in this response." } }, "response": { "$ref": "EntityUserLinks" }, "httpMethod": "GET", "scopes": [ "https://www.googleapis.com/auth/analytics.manage.users", "https://www.googleapis.com/auth/analytics.manage.users.readonly" ] }, "delete": { "httpMethod": "DELETE", "parameters": { "linkId": { "required": true, "location": "path", "description": "Link ID to delete the user link for.", "type": "string" }, "accountId": { "required": true, "description": "Account ID to delete the user link for.", "type": "string", "location": "path" } }, "scopes": [ "https://www.googleapis.com/auth/analytics.manage.users" ], "description": "Removes a user from the given account.", "path": "management/accounts/{accountId}/entityUserLinks/{linkId}", "id": "analytics.management.accountUserLinks.delete", "parameterOrder": [ "accountId", "linkId" ] } } }, "accountSummaries": { "methods": { "list": { "parameters": { "max-results": { "format": "int32", "type": "integer", "location": "query", "description": "The maximum number of account summaries to include in this response, where the largest acceptable value is 1000." }, "start-index": { "format": "int32", "minimum": "1", "description": "An index of the first entity to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.", "type": "integer", "location": "query" } }, "path": "management/accountSummaries", "response": { "$ref": "AccountSummaries" }, "scopes": [ "https://www.googleapis.com/auth/analytics.edit", "https://www.googleapis.com/auth/analytics.readonly" ], "id": "analytics.management.accountSummaries.list", "httpMethod": "GET", "description": "Lists account summaries (lightweight tree comprised of accounts/properties/profiles) to which the user has access." } } }, "clientId": { "methods": { "hashClientId": { "response": { "$ref": "HashClientIdResponse" }, "path": "management/clientId:hashClientId", "scopes": [ "https://www.googleapis.com/auth/analytics.edit", "https://www.googleapis.com/auth/analytics.readonly" ], "description": "Hashes the given Client ID.", "httpMethod": "POST", "id": "analytics.management.clientId.hashClientId", "request": { "$ref": "HashClientIdRequest" } } } }, "accounts": { "methods": { "list": { "scopes": [ "https://www.googleapis.com/auth/analytics", "https://www.googleapis.com/auth/analytics.edit", "https://www.googleapis.com/auth/analytics.readonly" ], "path": "management/accounts", "response": { "$ref": "Accounts" }, "parameters": { "start-index": { "location": "query", "format": "int32", "minimum": "1", "description": "An index of the first account to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.", "type": "integer" }, "max-results": { "type": "integer", "location": "query", "format": "int32", "description": "The maximum number of accounts to include in this response." } }, "httpMethod": "GET", "description": "Lists all accounts to which the user has access.", "id": "analytics.management.accounts.list" } } }, "uploads": { "methods": { "get": { "response": { "$ref": "Upload" }, "description": "List uploads to which the user has access.", "id": "analytics.management.uploads.get", "parameters": { "webPropertyId": { "pattern": "UA-(\\d+)-(\\d+)", "description": "Web property Id for the upload to retrieve.", "type": "string", "location": "path", "required": true }, "uploadId": { "required": true, "description": "Upload Id to retrieve.", "type": "string", "pattern": ".{22}", "location": "path" }, "accountId": { "type": "string", "required": true, "location": "path", "pattern": "\\d+", "description": "Account Id for the upload to retrieve." }, "customDataSourceId": { "type": "string", "location": "path", "required": true, "pattern": ".{22}", "description": "Custom data source Id for upload to retrieve." } }, "parameterOrder": [ "accountId", "webPropertyId", "customDataSourceId", "uploadId" ], "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/customDataSources/{customDataSourceId}/uploads/{uploadId}", "scopes": [ "https://www.googleapis.com/auth/analytics", "https://www.googleapis.com/auth/analytics.edit", "https://www.googleapis.com/auth/analytics.readonly" ], "httpMethod": "GET" }, "uploadData": { "description": "Upload data for a custom data source.", "mediaUpload": { "maxSize": "1GB", "protocols": { "resumable": { "path": "/resumable/upload/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customDataSources/{customDataSourceId}/uploads", "multipart": true }, "simple": { "multipart": true, "path": "/upload/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customDataSources/{customDataSourceId}/uploads" } }, "accept": [ "application/octet-stream" ] }, "id": "analytics.management.uploads.uploadData", "scopes": [ "https://www.googleapis.com/auth/analytics", "https://www.googleapis.com/auth/analytics.edit" ], "response": { "$ref": "Upload" }, "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/customDataSources/{customDataSourceId}/uploads", "parameters": { "customDataSourceId": { "description": "Custom data source Id to which the data being uploaded belongs.", "required": true, "location": "path", "type": "string" }, "accountId": { "location": "path", "type": "string", "pattern": "\\d+", "description": "Account Id associated with the upload.", "required": true }, "webPropertyId": { "description": "Web property UA-string associated with the upload.", "pattern": "UA-\\d+-\\d+", "type": "string", "location": "path", "required": true } }, "httpMethod": "POST", "supportsMediaUpload": true, "parameterOrder": [ "accountId", "webPropertyId", "customDataSourceId" ] }, "list": { "httpMethod": "GET", "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/customDataSources/{customDataSourceId}/uploads", "parameters": { "webPropertyId": { "pattern": "UA-(\\d+)-(\\d+)", "type": "string", "required": true, "location": "path", "description": "Web property Id for the uploads to retrieve." }, "max-results": { "location": "query", "description": "The maximum number of uploads to include in this response.", "minimum": "1", "format": "int32", "type": "integer" }, "accountId": { "pattern": "\\d+", "required": true, "type": "string", "description": "Account Id for the uploads to retrieve.", "location": "path" }, "start-index": { "location": "query", "minimum": "1", "type": "integer", "format": "int32", "description": "A 1-based index of the first upload to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter." }, "customDataSourceId": { "required": true, "type": "string", "description": "Custom data source Id for uploads to retrieve.", "location": "path", "pattern": ".{22}" } }, "description": "List uploads to which the user has access.", "response": { "$ref": "Uploads" }, "scopes": [ "https://www.googleapis.com/auth/analytics", "https://www.googleapis.com/auth/analytics.edit", "https://www.googleapis.com/auth/analytics.readonly" ], "parameterOrder": [ "accountId", "webPropertyId", "customDataSourceId" ], "id": "analytics.management.uploads.list" }, "deleteUploadData": { "path": "management/accounts/{accountId}/webproperties/{webPropertyId}/customDataSources/{customDataSourceId}/deleteUploadData", "parameters": { "webPropertyId": { "pattern": "UA-(\\d+)-(\\d+)", "description": "Web property Id for the uploads to be deleted.", "type": "string", "location": "path", "required": true }, "customDataSourceId": { "location": "path", "type": "string", "description": "Custom data source Id for the uploads to be deleted.", "required": true, "pattern": ".{22}" }, "accountId": { "description": "Account Id for the uploads to be deleted.", "required": true, "type": "string", "location": "path", "pattern": "\\d+" } }, "description": "Delete data associated with a previous upload.", "request": { "$ref": "AnalyticsDataimportDeleteUploadDataRequest" }, "scopes": [ "https://www.googleapis.com/auth/analytics", "https://www.googleapis.com/auth/analytics.edit" ], "httpMethod": "POST", "parameterOrder": [ "accountId", "webPropertyId", "customDataSourceId" ], "id": "analytics.management.uploads.deleteUploadData" } } } } }, "provisioning": { "methods": { "createAccountTree": { "id": "analytics.provisioning.createAccountTree", "httpMethod": "POST", "response": { "$ref": "AccountTreeResponse" }, "scopes": [ "https://www.googleapis.com/auth/analytics.provision" ], "description": "Provision account.", "request": { "$ref": "AccountTreeRequest" }, "path": "provisioning/createAccountTree" }, "createAccountTicket": { "id": "analytics.provisioning.createAccountTicket", "request": { "$ref": "AccountTicket" }, "description": "Creates an account ticket.", "httpMethod": "POST", "path": "provisioning/createAccountTicket", "scopes": [ "https://www.googleapis.com/auth/analytics.provision" ], "response": { "$ref": "AccountTicket" } } } } }, "etag": "\"9eZ1uxVRThTDhLJCZHhqs3eQWz4/o_TVyaWurnALX6ZIQ952-U5m22Y\"", "rootUrl": "https://analytics.googleapis.com/", "batchPath": "batch/analytics/v3", "kind": "discovery#restDescription", "baseUrl": "https://www.googleapis.com/analytics/v3/", "ownerDomain": "google.com" }
]===]))
