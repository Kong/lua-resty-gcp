local decode = require("cjson").new().decode
return assert(decode([===[
{ "batchPath": "batch", "servicePath": "", "schemas": { "ChangesListResponse": { "type": "object", "description": "The response to a request to enumerate Changes to a ResourceRecordSets collection.", "properties": { "header": { "$ref": "ResponseHeader" }, "nextPageToken": { "description": "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your pagination token. This lets you retrieve the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. You cannot retrieve a \"snapshot\" of collections larger than the maximum page size.", "type": "string" }, "kind": { "default": "dns#changesListResponse", "description": "Type of resource.", "type": "string" }, "changes": { "description": "The requested changes.", "items": { "$ref": "Change" }, "type": "array" } }, "id": "ChangesListResponse" }, "ManagedZoneForwardingConfigNameServerTarget": { "id": "ManagedZoneForwardingConfigNameServerTarget", "properties": { "ipv6Address": { "description": "IPv6 address of a target name server. Does not accept both fields (ipv4 & ipv6) being populated.", "type": "string" }, "kind": { "default": "dns#managedZoneForwardingConfigNameServerTarget", "type": "string" }, "ipv4Address": { "description": "IPv4 address of a target name server.", "type": "string" }, "forwardingPath": { "type": "string", "description": "Forwarding path for this NameServerTarget. If unset or set to DEFAULT, Cloud DNS makes forwarding decisions based on IP address ranges; that is, RFC1918 addresses go to the VPC network, non-RFC1918 addresses go to the internet. When set to PRIVATE, Cloud DNS always sends queries through the VPC network for this target.", "enum": [ "default", "private" ], "enumDescriptions": [ "Cloud DNS makes forwarding decisions based on address ranges; that is, RFC1918 addresses forward to the target through the VPC and non-RFC1918 addresses forward to the target through the internet", "Cloud DNS always forwards to this target through the VPC." ] } }, "type": "object" }, "ManagedZoneServiceDirectoryConfig": { "description": "Contains information about Service Directory-backed zones.", "properties": { "namespace": { "$ref": "ManagedZoneServiceDirectoryConfigNamespace", "description": "Contains information about the namespace associated with the zone." }, "kind": { "default": "dns#managedZoneServiceDirectoryConfig", "type": "string" } }, "type": "object", "id": "ManagedZoneServiceDirectoryConfig" }, "ResponsePoliciesUpdateResponse": { "type": "object", "id": "ResponsePoliciesUpdateResponse", "properties": { "header": { "$ref": "ResponseHeader" }, "responsePolicy": { "$ref": "ResponsePolicy" } } }, "ResponsePolicyRulesUpdateResponse": { "properties": { "responsePolicyRule": { "$ref": "ResponsePolicyRule" }, "header": { "$ref": "ResponseHeader" } }, "type": "object", "id": "ResponsePolicyRulesUpdateResponse" }, "ManagedZoneCloudLoggingConfig": { "id": "ManagedZoneCloudLoggingConfig", "properties": { "kind": { "default": "dns#managedZoneCloudLoggingConfig", "type": "string" }, "enableLogging": { "description": "If set, enable query logging for this ManagedZone. False by default, making logging opt-in.", "type": "boolean" } }, "type": "object", "description": "Cloud Logging configurations for publicly visible zones." }, "RRSetRoutingPolicyWrrPolicyWrrPolicyItem": { "type": "object", "description": "A routing block which contains the routing information for one WRR item.", "id": "RRSetRoutingPolicyWrrPolicyWrrPolicyItem", "properties": { "signatureRrdatas": { "description": "DNSSEC generated signatures for all the rrdata within this item. Note that if health checked targets are provided for DNSSEC enabled zones, there's a restriction of 1 ip per item. .", "items": { "type": "string" }, "type": "array" }, "rrdatas": { "type": "array", "items": { "type": "string" } }, "weight": { "format": "double", "type": "number", "description": "The weight corresponding to this subset of rrdata. When multiple WeightedRoundRobinPolicyItems are configured, the probability of returning an rrset is proportional to its weight relative to the sum of weights configured for all items. This weight should be non-negative." }, "kind": { "type": "string", "default": "dns#rRSetRoutingPolicyWrrPolicyWrrPolicyItem" } } }, "GoogleIamV1AuditConfig": { "id": "GoogleIamV1AuditConfig", "type": "object", "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.", "properties": { "service": { "type": "string", "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services." }, "auditLogConfigs": { "description": "The configuration for logging of each type of permission.", "type": "array", "items": { "$ref": "GoogleIamV1AuditLogConfig" } } } }, "Quota": { "description": "Limits associated with a Project.", "properties": { "gkeClustersPerManagedZone": { "type": "integer", "format": "int32", "description": "Maximum allowed number of GKE clusters to which a privately scoped zone can be attached." }, "networksPerResponsePolicy": { "type": "integer", "description": "Maximum allowed number of networks per response policy.", "format": "int32" }, "resourceRecordsPerRrset": { "type": "integer", "format": "int32", "description": "Maximum allowed number of ResourceRecords per ResourceRecordSet." }, "rrsetDeletionsPerChange": { "description": "Maximum allowed number of ResourceRecordSets to delete per ChangesCreateRequest.", "type": "integer", "format": "int32" }, "totalRrdataSizePerChange": { "description": "Maximum allowed size for total rrdata in one ChangesCreateRequest in bytes.", "type": "integer", "format": "int32" }, "networksPerPolicy": { "type": "integer", "description": "Maximum allowed number of networks per policy.", "format": "int32" }, "managedZonesPerGkeCluster": { "type": "integer", "description": "Maximum allowed number of managed zones which can be attached to a GKE cluster.", "format": "int32" }, "whitelistedKeySpecs": { "description": "DNSSEC algorithm and key length types that can be used for DnsKeys.", "items": { "$ref": "DnsKeySpec" }, "type": "array" }, "itemsPerRoutingPolicy": { "format": "int32", "type": "integer", "description": "Maximum allowed number of items per routing policy." }, "managedZonesPerNetwork": { "format": "int32", "type": "integer", "description": "Maximum allowed number of managed zones which can be attached to a network." }, "managedZones": { "description": "Maximum allowed number of managed zones in the project.", "format": "int32", "type": "integer" }, "kind": { "type": "string", "default": "dns#quota" }, "networksPerManagedZone": { "type": "integer", "format": "int32", "description": "Maximum allowed number of networks to which a privately scoped zone can be attached." }, "targetNameServersPerPolicy": { "format": "int32", "type": "integer", "description": "Maximum allowed number of alternative target name servers per policy." }, "gkeClustersPerResponsePolicy": { "format": "int32", "description": "Maximum allowed number of GKE clusters per response policy.", "type": "integer" }, "responsePolicies": { "type": "integer", "description": "Maximum allowed number of response policies per project.", "format": "int32" }, "gkeClustersPerPolicy": { "type": "integer", "format": "int32", "description": "Maximum allowed number of GKE clusters per policy." }, "rrsetsPerManagedZone": { "format": "int32", "description": "Maximum allowed number of ResourceRecordSets per zone in the project.", "type": "integer" }, "policies": { "format": "int32", "type": "integer", "description": "Maximum allowed number of policies per project." }, "dnsKeysPerManagedZone": { "description": "Maximum allowed number of DnsKeys per ManagedZone.", "type": "integer", "format": "int32" }, "peeringZonesPerTargetNetwork": { "description": "Maximum allowed number of consumer peering zones per target network owned by this producer project", "format": "int32", "type": "integer" }, "rrsetAdditionsPerChange": { "format": "int32", "type": "integer", "description": "Maximum allowed number of ResourceRecordSets to add per ChangesCreateRequest." }, "targetNameServersPerManagedZone": { "format": "int32", "description": "Maximum allowed number of target name servers per managed forwarding zone.", "type": "integer" }, "responsePolicyRulesPerResponsePolicy": { "type": "integer", "description": "Maximum allowed number of rules per response policy.", "format": "int32" } }, "type": "object", "id": "Quota" }, "ResponsePolicyNetwork": { "properties": { "networkUrl": { "type": "string", "description": "The fully qualified URL of the VPC network to bind to. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}" }, "kind": { "default": "dns#responsePolicyNetwork", "type": "string" } }, "type": "object", "id": "ResponsePolicyNetwork" }, "PolicyNetwork": { "type": "object", "id": "PolicyNetwork", "properties": { "kind": { "type": "string", "default": "dns#policyNetwork" }, "networkUrl": { "description": "The fully qualified URL of the VPC network to bind to. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}", "type": "string" } } }, "DnsKeysListResponse": { "description": "The response to a request to enumerate DnsKeys in a ManagedZone.", "type": "object", "id": "DnsKeysListResponse", "properties": { "dnsKeys": { "items": { "$ref": "DnsKey" }, "type": "array", "description": "The requested resources." }, "header": { "$ref": "ResponseHeader" }, "nextPageToken": { "type": "string", "description": "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your pagination token. In this way you can retrieve the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. There is no way to retrieve a \"snapshot\" of collections larger than the maximum page size." }, "kind": { "description": "Type of resource.", "default": "dns#dnsKeysListResponse", "type": "string" } } }, "ManagedZone": { "id": "ManagedZone", "description": "A zone is a subtree of the DNS namespace under one administrative responsibility. A ManagedZone is a resource that represents a DNS zone hosted by the Cloud DNS service.", "type": "object", "properties": { "id": { "type": "string", "description": "Unique identifier for the resource; defined by the server (output only)", "format": "uint64" }, "privateVisibilityConfig": { "$ref": "ManagedZonePrivateVisibilityConfig", "description": "For privately visible zones, the set of Virtual Private Cloud resources that the zone is visible from." }, "description": { "type": "string", "description": "A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the managed zone's function." }, "name": { "description": "User assigned name for this resource. Must be unique within the project. The name must be 1-63 characters long, must begin with a letter, end with a letter or digit, and only contain lowercase letters, digits or dashes.", "type": "string" }, "nameServers": { "type": "array", "description": "Delegate your managed_zone to these virtual name servers; defined by the server (output only)", "items": { "type": "string" } }, "reverseLookupConfig": { "description": "The presence of this field indicates that this is a managed reverse lookup zone and Cloud DNS resolves reverse lookup queries using automatically configured records for VPC resources. This only applies to networks listed under private_visibility_config.", "$ref": "ManagedZoneReverseLookupConfig" }, "creationTime": { "description": "The time that this resource was created on the server. This is in RFC3339 text format. Output only.", "type": "string" }, "dnsName": { "description": "The DNS name of this managed zone, for instance \"example.com.\".", "type": "string" }, "visibility": { "enumDescriptions": [ "", "" ], "type": "string", "description": "The zone's visibility: public zones are exposed to the Internet, while private zones are visible only to Virtual Private Cloud resources.", "enum": [ "public", "private" ] }, "dnssecConfig": { "description": "DNSSEC configuration.", "$ref": "ManagedZoneDnsSecConfig" }, "nameServerSet": { "type": "string", "description": "Optionally specifies the NameServerSet for this ManagedZone. A NameServerSet is a set of DNS name servers that all host the same ManagedZones. Most users leave this field unset. If you need to use this field, contact your account team." }, "serviceDirectoryConfig": { "description": "This field links to the associated service directory namespace. Do not set this field for public zones or forwarding zones.", "$ref": "ManagedZoneServiceDirectoryConfig" }, "labels": { "type": "object", "description": "User labels.", "additionalProperties": { "type": "string" } }, "cloudLoggingConfig": { "$ref": "ManagedZoneCloudLoggingConfig" }, "forwardingConfig": { "$ref": "ManagedZoneForwardingConfig", "description": "The presence for this field indicates that outbound forwarding is enabled for this zone. The value of this field contains the set of destinations to forward to." }, "peeringConfig": { "description": "The presence of this field indicates that DNS Peering is enabled for this zone. The value of this field contains the network to peer with.", "$ref": "ManagedZonePeeringConfig" }, "kind": { "default": "dns#managedZone", "type": "string" } } }, "ManagedZonePrivateVisibilityConfigGKECluster": { "type": "object", "id": "ManagedZonePrivateVisibilityConfigGKECluster", "properties": { "gkeClusterName": { "description": "The resource name of the cluster to bind this ManagedZone to. This should be specified in the format like: projects/*/locations/*/clusters/*. This is referenced from GKE projects.locations.clusters.get API: https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters/get", "type": "string" }, "kind": { "default": "dns#managedZonePrivateVisibilityConfigGKECluster", "type": "string" } } }, "PoliciesListResponse": { "id": "PoliciesListResponse", "properties": { "policies": { "type": "array", "description": "The policy resources.", "items": { "$ref": "Policy" } }, "nextPageToken": { "description": "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your page token. This lets you the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. You cannot retrieve a consistent snapshot of a collection larger than the maximum page size.", "type": "string" }, "header": { "$ref": "ResponseHeader" }, "kind": { "type": "string", "description": "Type of resource.", "default": "dns#policiesListResponse" } }, "type": "object" }, "RRSetRoutingPolicyGeoPolicyGeoPolicyItem": { "properties": { "kind": { "type": "string", "default": "dns#rRSetRoutingPolicyGeoPolicyGeoPolicyItem" }, "signatureRrdatas": { "items": { "type": "string" }, "description": "DNSSEC generated signatures for all the rrdata within this item. Note that if health checked targets are provided for DNSSEC enabled zones, there's a restriction of 1 ip per item. .", "type": "array" }, "rrdatas": { "type": "array", "items": { "type": "string" } }, "location": { "description": "The geo-location granularity is a GCP region. This location string should correspond to a GCP region. e.g. \"us-east1\", \"southamerica-east1\", \"asia-east1\", etc.", "type": "string" } }, "description": "ResourceRecordSet data for one geo location.", "id": "RRSetRoutingPolicyGeoPolicyGeoPolicyItem", "type": "object" }, "DnsKeyDigest": { "id": "DnsKeyDigest", "type": "object", "properties": { "digest": { "type": "string", "description": "The base-16 encoded bytes of this digest. Suitable for use in a DS resource record." }, "type": { "type": "string", "enumDescriptions": [ "", "", "" ], "description": "Specifies the algorithm used to calculate this digest.", "enum": [ "sha1", "sha256", "sha384" ] } } }, "ManagedZoneServiceDirectoryConfigNamespace": { "properties": { "namespaceUrl": { "description": "The fully qualified URL of the namespace associated with the zone. Format must be https://servicedirectory.googleapis.com/v1/projects/{project}/locations/{location}/namespaces/{namespace}", "type": "string" }, "deletionTime": { "description": "The time that the namespace backing this zone was deleted; an empty string if it still exists. This is in RFC3339 text format. Output only.", "type": "string" }, "kind": { "type": "string", "default": "dns#managedZoneServiceDirectoryConfigNamespace" } }, "type": "object", "id": "ManagedZoneServiceDirectoryConfigNamespace" }, "ResourceRecordSetsListResponse": { "properties": { "kind": { "default": "dns#resourceRecordSetsListResponse", "type": "string", "description": "Type of resource." }, "rrsets": { "type": "array", "items": { "$ref": "ResourceRecordSet" }, "description": "The resource record set resources." }, "nextPageToken": { "type": "string", "description": "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your pagination token. This lets you retrieve complete contents of even larger collections, one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of elements returned are an inconsistent view of the collection. You cannot retrieve a consistent snapshot of a collection larger than the maximum page size." }, "header": { "$ref": "ResponseHeader" } }, "id": "ResourceRecordSetsListResponse", "type": "object" }, "RRSetRoutingPolicyWrrPolicy": { "id": "RRSetRoutingPolicyWrrPolicy", "description": "Configures a RRSetRoutingPolicy that routes in a weighted round robin fashion.", "properties": { "kind": { "type": "string", "default": "dns#rRSetRoutingPolicyWrrPolicy" }, "items": { "type": "array", "items": { "$ref": "RRSetRoutingPolicyWrrPolicyWrrPolicyItem" } } }, "type": "object" }, "ManagedZonePrivateVisibilityConfig": { "id": "ManagedZonePrivateVisibilityConfig", "type": "object", "properties": { "networks": { "type": "array", "description": "The list of VPC networks that can see this zone.", "items": { "$ref": "ManagedZonePrivateVisibilityConfigNetwork" } }, "gkeClusters": { "items": { "$ref": "ManagedZonePrivateVisibilityConfigGKECluster" }, "description": "The list of Google Kubernetes Engine clusters that can see this zone.", "type": "array" }, "kind": { "type": "string", "default": "dns#managedZonePrivateVisibilityConfig" } } }, "ManagedZoneReverseLookupConfig": { "id": "ManagedZoneReverseLookupConfig", "properties": { "kind": { "default": "dns#managedZoneReverseLookupConfig", "type": "string" } }, "type": "object" }, "ManagedZonePrivateVisibilityConfigNetwork": { "type": "object", "id": "ManagedZonePrivateVisibilityConfigNetwork", "properties": { "networkUrl": { "type": "string", "description": "The fully qualified URL of the VPC network to bind to. Format this URL like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}" }, "kind": { "default": "dns#managedZonePrivateVisibilityConfigNetwork", "type": "string" } } }, "ResponsePolicyRulesListResponse": { "type": "object", "properties": { "nextPageToken": { "type": "string", "description": "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your page token. This lets you the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. You cannot retrieve a consistent snapshot of a collection larger than the maximum page size." }, "responsePolicyRules": { "type": "array", "description": "The Response Policy Rule resources.", "items": { "$ref": "ResponsePolicyRule" } }, "header": { "$ref": "ResponseHeader" } }, "id": "ResponsePolicyRulesListResponse" }, "PolicyAlternativeNameServerConfig": { "id": "PolicyAlternativeNameServerConfig", "properties": { "targetNameServers": { "description": "Sets an alternative name server for the associated networks. When specified, all DNS queries are forwarded to a name server that you choose. Names such as .internal are not available when an alternative name server is specified.", "type": "array", "items": { "$ref": "PolicyAlternativeNameServerConfigTargetNameServer" } }, "kind": { "default": "dns#policyAlternativeNameServerConfig", "type": "string" } }, "type": "object" }, "ManagedZoneOperationsListResponse": { "id": "ManagedZoneOperationsListResponse", "properties": { "header": { "$ref": "ResponseHeader" }, "nextPageToken": { "type": "string", "description": "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your page token. This lets you retrieve the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. You cannot retrieve a consistent snapshot of a collection larger than the maximum page size." }, "operations": { "description": "The operation resources.", "items": { "$ref": "Operation" }, "type": "array" }, "kind": { "type": "string", "default": "dns#managedZoneOperationsListResponse", "description": "Type of resource." } }, "type": "object" }, "PoliciesPatchResponse": { "type": "object", "properties": { "policy": { "$ref": "Policy" }, "header": { "$ref": "ResponseHeader" } }, "id": "PoliciesPatchResponse" }, "GoogleIamV1TestIamPermissionsResponse": { "type": "object", "properties": { "permissions": { "items": { "type": "string" }, "type": "array", "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed." } }, "id": "GoogleIamV1TestIamPermissionsResponse", "description": "Response message for `TestIamPermissions` method." }, "Policy": { "description": "A policy is a collection of DNS rules applied to one or more Virtual Private Cloud resources.", "id": "Policy", "type": "object", "properties": { "networks": { "items": { "$ref": "PolicyNetwork" }, "description": "List of network names specifying networks to which this policy is applied.", "type": "array" }, "kind": { "type": "string", "default": "dns#policy" }, "name": { "description": "User-assigned name for this policy.", "type": "string" }, "description": { "type": "string", "description": "A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the policy's function." }, "enableLogging": { "type": "boolean", "description": "Controls whether logging is enabled for the networks bound to this policy. Defaults to no logging if not set." }, "alternativeNameServerConfig": { "description": "Sets an alternative name server for the associated networks. When specified, all DNS queries are forwarded to a name server that you choose. Names such as .internal are not available when an alternative name server is specified.", "$ref": "PolicyAlternativeNameServerConfig" }, "enableInboundForwarding": { "description": "Allows networks bound to this policy to receive DNS queries sent by VMs or applications over VPN connections. When enabled, a virtual IP address is allocated from each of the subnetworks that are bound to this policy.", "type": "boolean" }, "id": { "description": "Unique identifier for the resource; defined by the server (output only).", "format": "uint64", "type": "string" } } }, "GoogleIamV1Policy": { "id": "GoogleIamV1Policy", "properties": { "auditConfigs": { "description": "Specifies cloud audit logging configuration for this policy.", "type": "array", "items": { "$ref": "GoogleIamV1AuditConfig" } }, "bindings": { "type": "array", "items": { "$ref": "GoogleIamV1Binding" }, "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`." }, "etag": { "format": "byte", "type": "string", "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost." }, "version": { "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh Getting a policy that includes a conditional role binding LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh Adding a conditional role binding to a policy LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh Changing a conditional role binding in a policy LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).", "format": "int32", "type": "integer" } }, "type": "object", "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)." }, "GoogleIamV1TestIamPermissionsRequest": { "description": "Request message for `TestIamPermissions` method.", "type": "object", "properties": { "permissions": { "type": "array", "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).", "items": { "type": "string" } } }, "id": "GoogleIamV1TestIamPermissionsRequest" }, "ManagedZoneForwardingConfig": { "properties": { "targetNameServers": { "description": "List of target name servers to forward to. Cloud DNS selects the best available name server if more than one target is given.", "items": { "$ref": "ManagedZoneForwardingConfigNameServerTarget" }, "type": "array" }, "kind": { "default": "dns#managedZoneForwardingConfig", "type": "string" } }, "id": "ManagedZoneForwardingConfig", "type": "object" }, "DnsKey": { "type": "object", "properties": { "type": { "enum": [ "keySigning", "zoneSigning" ], "enumDescriptions": [ "", "" ], "description": "One of \"KEY_SIGNING\" or \"ZONE_SIGNING\". Keys of type KEY_SIGNING have the Secure Entry Point flag set and, when active, are used to sign only resource record sets of type DNSKEY. Otherwise, the Secure Entry Point flag is cleared, and this key is used to sign only resource record sets of other types. Immutable after creation time.", "type": "string" }, "keyLength": { "description": "Length of the key in bits. Specified at creation time, and then immutable.", "format": "uint32", "type": "integer" }, "keyTag": { "description": "The key tag is a non-cryptographic hash of the a DNSKEY resource record associated with this DnsKey. The key tag can be used to identify a DNSKEY more quickly (but it is not a unique identifier). In particular, the key tag is used in a parent zone's DS record to point at the DNSKEY in this child ManagedZone. The key tag is a number in the range [0, 65535] and the algorithm to calculate it is specified in RFC4034 Appendix B. Output only.", "type": "integer", "format": "int32" }, "description": { "description": "A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the resource's function.", "type": "string" }, "algorithm": { "type": "string", "enum": [ "rsasha1", "rsasha256", "rsasha512", "ecdsap256sha256", "ecdsap384sha384" ], "description": "String mnemonic specifying the DNSSEC algorithm of this key. Immutable after creation time.", "enumDescriptions": [ "", "", "", "", "" ] }, "kind": { "default": "dns#dnsKey", "type": "string" }, "publicKey": { "type": "string", "description": "Base64 encoded public half of this key. Output only." }, "id": { "type": "string", "description": "Unique identifier for the resource; defined by the server (output only)." }, "digests": { "type": "array", "description": "Cryptographic hashes of the DNSKEY resource record associated with this DnsKey. These digests are needed to construct a DS record that points at this DNS key. Output only.", "items": { "$ref": "DnsKeyDigest" } }, "creationTime": { "description": "The time that this resource was created in the control plane. This is in RFC3339 text format. Output only.", "type": "string" }, "isActive": { "type": "boolean", "description": "Active keys are used to sign subsequent changes to the ManagedZone. Inactive keys are still present as DNSKEY Resource Records for the use of resolvers validating existing signatures." } }, "id": "DnsKey", "description": "A DNSSEC key pair." }, "GoogleIamV1SetIamPolicyRequest": { "type": "object", "properties": { "updateMask": { "type": "string", "format": "google-fieldmask", "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`" }, "policy": { "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.", "$ref": "GoogleIamV1Policy" } }, "id": "GoogleIamV1SetIamPolicyRequest", "description": "Request message for `SetIamPolicy` method." }, "Operation": { "description": "An operation represents a successful mutation performed on a Cloud DNS resource. Operations provide: - An audit log of server resource mutations. - A way to recover/retry API calls in the case where the response is never received by the caller. Use the caller specified client_operation_id.", "id": "Operation", "type": "object", "properties": { "status": { "type": "string", "description": "Status of the operation. Can be one of the following: \"PENDING\" or \"DONE\" (output only). A status of \"DONE\" means that the request to update the authoritative servers has been sent, but the servers might not be updated yet.", "enum": [ "pending", "done" ], "enumDescriptions": [ "", "" ] }, "type": { "type": "string", "description": "Type of the operation. Operations include insert, update, and delete (output only)." }, "id": { "type": "string", "description": "Unique identifier for the resource. This is the client_operation_id if the client specified it when the mutation was initiated, otherwise, it is generated by the server. The name must be 1-63 characters long and match the regular expression [-a-z0-9]? (output only)" }, "zoneContext": { "$ref": "OperationManagedZoneContext", "description": "Only populated if the operation targeted a ManagedZone (output only)." }, "dnsKeyContext": { "$ref": "OperationDnsKeyContext", "description": "Only populated if the operation targeted a DnsKey (output only)." }, "startTime": { "type": "string", "description": "The time that this operation was started by the server. This is in RFC3339 text format (output only)." }, "user": { "description": "User who requested the operation, for example: user@example.com. cloud-dns-system for operations automatically done by the system. (output only)", "type": "string" }, "kind": { "type": "string", "default": "dns#operation" } } }, "DnsKeySpec": { "properties": { "keyLength": { "type": "integer", "description": "Length of the keys in bits.", "format": "uint32" }, "keyType": { "type": "string", "enumDescriptions": [ "", "" ], "enum": [ "keySigning", "zoneSigning" ], "description": "Specifies whether this is a key signing key (KSK) or a zone signing key (ZSK). Key signing keys have the Secure Entry Point flag set and, when active, are only used to sign resource record sets of type DNSKEY. Zone signing keys do not have the Secure Entry Point flag set and are used to sign all other types of resource record sets." }, "kind": { "default": "dns#dnsKeySpec", "type": "string" }, "algorithm": { "type": "string", "enumDescriptions": [ "", "", "", "", "" ], "enum": [ "rsasha1", "rsasha256", "rsasha512", "ecdsap256sha256", "ecdsap384sha384" ], "description": "String mnemonic specifying the DNSSEC algorithm of this key." } }, "type": "object", "description": "Parameters for DnsKey key generation. Used for generating initial keys for a new ManagedZone and as default when adding a new DnsKey.", "id": "DnsKeySpec" }, "ManagedZonesListResponse": { "properties": { "header": { "$ref": "ResponseHeader" }, "kind": { "description": "Type of resource.", "default": "dns#managedZonesListResponse", "type": "string" }, "nextPageToken": { "type": "string", "description": "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your page token. This lets you the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. You cannot retrieve a consistent snapshot of a collection larger than the maximum page size." }, "managedZones": { "items": { "$ref": "ManagedZone" }, "type": "array", "description": "The managed zone resources." } }, "type": "object", "id": "ManagedZonesListResponse" }, "ResponsePolicyGKECluster": { "type": "object", "id": "ResponsePolicyGKECluster", "properties": { "gkeClusterName": { "description": "The resource name of the cluster to bind this response policy to. This should be specified in the format like: projects/*/locations/*/clusters/*. This is referenced from GKE projects.locations.clusters.get API: https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters/get", "type": "string" }, "kind": { "default": "dns#responsePolicyGKECluster", "type": "string" } } }, "Change": { "id": "Change", "type": "object", "description": "A Change represents a set of ResourceRecordSet additions and deletions applied atomically to a ManagedZone. ResourceRecordSets within a ManagedZone are modified by creating a new Change element in the Changes collection. In turn the Changes collection also records the past modifications to the ResourceRecordSets in a ManagedZone. The current state of the ManagedZone is the sum effect of applying all Change elements in the Changes collection in sequence.", "properties": { "startTime": { "description": "The time that this operation was started by the server (output only). This is in RFC3339 text format.", "type": "string" }, "deletions": { "description": "Which ResourceRecordSets to remove? Must match existing data exactly.", "items": { "$ref": "ResourceRecordSet" }, "type": "array" }, "id": { "description": "Unique identifier for the resource; defined by the server (output only).", "type": "string" }, "isServing": { "description": "If the DNS queries for the zone will be served.", "type": "boolean" }, "kind": { "type": "string", "default": "dns#change" }, "additions": { "type": "array", "items": { "$ref": "ResourceRecordSet" }, "description": "Which ResourceRecordSets to add?" }, "status": { "type": "string", "enum": [ "pending", "done" ], "description": "Status of the operation (output only). A status of \"done\" means that the request to update the authoritative servers has been sent, but the servers might not be updated yet.", "enumDescriptions": [ "", "" ] } } }, "ResponsePolicyRulesPatchResponse": { "properties": { "responsePolicyRule": { "$ref": "ResponsePolicyRule" }, "header": { "$ref": "ResponseHeader" } }, "id": "ResponsePolicyRulesPatchResponse", "type": "object" }, "ResponsePoliciesListResponse": { "type": "object", "properties": { "nextPageToken": { "type": "string", "description": "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your page token. This lets you the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. You cannot retrieve a consistent snapshot of a collection larger than the maximum page size." }, "responsePolicies": { "type": "array", "description": "The Response Policy resources.", "items": { "$ref": "ResponsePolicy" } }, "header": { "$ref": "ResponseHeader" } }, "id": "ResponsePoliciesListResponse" }, "ResponsePolicyRuleLocalData": { "properties": { "localDatas": { "items": { "$ref": "ResourceRecordSet" }, "type": "array", "description": "All resource record sets for this selector, one per resource record type. The name must match the dns_name." } }, "id": "ResponsePolicyRuleLocalData", "type": "object" }, "GoogleIamV1Binding": { "description": "Associates `members`, or principals, with a `role`.", "id": "GoogleIamV1Binding", "properties": { "role": { "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.", "type": "string" }, "members": { "items": { "type": "string" }, "type": "array", "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. " }, "condition": { "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).", "$ref": "Expr" } }, "type": "object" }, "OperationDnsKeyContext": { "id": "OperationDnsKeyContext", "type": "object", "properties": { "newValue": { "$ref": "DnsKey", "description": "The post-operation DnsKey resource." }, "oldValue": { "description": "The pre-operation DnsKey resource.", "$ref": "DnsKey" } } }, "GoogleIamV1AuditLogConfig": { "properties": { "logType": { "enum": [ "LOG_TYPE_UNSPECIFIED", "ADMIN_READ", "DATA_WRITE", "DATA_READ" ], "type": "string", "description": "The log type that this config enables.", "enumDescriptions": [ "Default case. Should never be this.", "Admin reads. Example: CloudIAM getIamPolicy", "Data writes. Example: CloudSQL Users create", "Data reads. Example: CloudSQL Users list" ] }, "exemptedMembers": { "type": "array", "items": { "type": "string" }, "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members." } }, "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.", "id": "GoogleIamV1AuditLogConfig", "type": "object" }, "Project": { "description": "A project resource. The project is a top level container for resources including Cloud DNS ManagedZones. Projects can be created only in the APIs console. Next tag: 7.", "id": "Project", "type": "object", "properties": { "quota": { "$ref": "Quota", "description": "Quotas assigned to this project (output only)." }, "kind": { "type": "string", "default": "dns#project" }, "id": { "description": "User assigned unique identifier for the resource (output only).", "type": "string" }, "number": { "format": "uint64", "description": "Unique numeric identifier for the resource; defined by the server (output only).", "type": "string" } } }, "ResourceRecordSet": { "type": "object", "properties": { "routingPolicy": { "description": "Configures dynamic query responses based on geo location of querying user or a weighted round robin based routing policy. A ResourceRecordSet should only have either rrdata (static) or routing_policy (dynamic). An error is returned otherwise.", "$ref": "RRSetRoutingPolicy" }, "kind": { "default": "dns#resourceRecordSet", "type": "string" }, "ttl": { "format": "int32", "description": "Number of seconds that this ResourceRecordSet can be cached by resolvers.", "type": "integer" }, "type": { "description": "The identifier of a supported record type. See the list of Supported DNS record types.", "type": "string" }, "signatureRrdatas": { "description": "As defined in RFC 4034 (section 3.2).", "items": { "type": "string" }, "type": "array" }, "rrdatas": { "type": "array", "description": "As defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1) -- see examples.", "items": { "type": "string" } }, "name": { "description": "For example, www.example.com.", "type": "string" } }, "id": "ResourceRecordSet", "description": "A unit of data that is returned by the DNS servers." }, "ResponsePolicyRule": { "properties": { "behavior": { "enumDescriptions": [ "", "Skip a less-specific ResponsePolicyRule and continue normal query logic. This can be used with a less-specific wildcard selector to exempt a subset of the wildcard ResponsePolicyRule from the ResponsePolicy behavior and query the public Internet instead. For instance, if these rules exist: *.example.com -\u003e LocalData 1.2.3.4 foo.example.com -\u003e Behavior 'bypassResponsePolicy' Then a query for 'foo.example.com' skips the wildcard. This additionally functions to facilitate the allowlist feature. RPZs can be applied to multiple levels in the (eventually org, folder, project, network) hierarchy. If a rule is applied at a higher level of the hierarchy, adding a passthru rule at a lower level will supersede that, and a query from an affected vm to that domain will be exempt from the RPZ and proceed to normal resolution behavior." ], "description": "Answer this query with a behavior rather than DNS data.", "type": "string", "enum": [ "behaviorUnspecified", "bypassResponsePolicy" ] }, "kind": { "default": "dns#responsePolicyRule", "type": "string" }, "localData": { "description": "Answer this query directly with DNS data. These ResourceRecordSets override any other DNS behavior for the matched name; in particular they override private zones, the public internet, and GCP internal DNS. No SOA nor NS types are allowed.", "$ref": "ResponsePolicyRuleLocalData" }, "dnsName": { "description": "The DNS name (wildcard or exact) to apply this rule to. Must be unique within the Response Policy Rule.", "type": "string" }, "ruleName": { "description": "An identifier for this rule. Must be unique with the ResponsePolicy.", "type": "string" } }, "description": "A Response Policy Rule is a selector that applies its behavior to queries that match the selector. Selectors are DNS names, which may be wildcards or exact matches. Each DNS query subject to a Response Policy matches at most one ResponsePolicyRule, as identified by the dns_name field with the longest matching suffix.", "type": "object", "id": "ResponsePolicyRule" }, "RRSetRoutingPolicyGeoPolicy": { "id": "RRSetRoutingPolicyGeoPolicy", "type": "object", "description": "Configures a RRSetRoutingPolicy that routes based on the geo location of the querying user.", "properties": { "kind": { "default": "dns#rRSetRoutingPolicyGeoPolicy", "type": "string" }, "items": { "description": "The primary geo routing configuration. If there are multiple items with the same location, an error is returned instead.", "items": { "$ref": "RRSetRoutingPolicyGeoPolicyGeoPolicyItem" }, "type": "array" } } }, "RRSetRoutingPolicy": { "type": "object", "id": "RRSetRoutingPolicy", "properties": { "kind": { "default": "dns#rRSetRoutingPolicy", "type": "string" }, "geo": { "$ref": "RRSetRoutingPolicyGeoPolicy" }, "wrr": { "$ref": "RRSetRoutingPolicyWrrPolicy" }, "geoPolicy": { "$ref": "RRSetRoutingPolicyGeoPolicy" }, "wrrPolicy": { "$ref": "RRSetRoutingPolicyWrrPolicy" } }, "description": "A RRSetRoutingPolicy represents ResourceRecordSet data that is returned dynamically with the response varying based on configured properties such as geolocation or by weighted random selection." }, "GoogleIamV1GetPolicyOptions": { "type": "object", "description": "Encapsulates settings provided to GetIamPolicy.", "id": "GoogleIamV1GetPolicyOptions", "properties": { "requestedPolicyVersion": { "format": "int32", "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).", "type": "integer" } } }, "ResponseHeader": { "description": "Elements common to every response.", "type": "object", "properties": { "operationId": { "description": "For mutating operation requests that completed successfully. This is the client_operation_id if the client specified it, otherwise it is generated by the server (output only).", "type": "string" } }, "id": "ResponseHeader" }, "ResponsePolicy": { "description": "A Response Policy is a collection of selectors that apply to queries made against one or more Virtual Private Cloud networks.", "properties": { "id": { "description": "Unique identifier for the resource; defined by the server (output only).", "type": "string", "format": "int64" }, "networks": { "type": "array", "items": { "$ref": "ResponsePolicyNetwork" }, "description": "List of network names specifying networks to which this policy is applied." }, "kind": { "default": "dns#responsePolicy", "type": "string" }, "responsePolicyName": { "type": "string", "description": "User assigned name for this Response Policy." }, "gkeClusters": { "description": "The list of Google Kubernetes Engine clusters to which this response policy is applied.", "type": "array", "items": { "$ref": "ResponsePolicyGKECluster" } }, "description": { "type": "string", "description": "User-provided description for this Response Policy." } }, "type": "object", "id": "ResponsePolicy" }, "GoogleIamV1GetIamPolicyRequest": { "description": "Request message for `GetIamPolicy` method.", "properties": { "options": { "$ref": "GoogleIamV1GetPolicyOptions", "description": "OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`." } }, "id": "GoogleIamV1GetIamPolicyRequest", "type": "object" }, "PolicyAlternativeNameServerConfigTargetNameServer": { "properties": { "kind": { "default": "dns#policyAlternativeNameServerConfigTargetNameServer", "type": "string" }, "ipv6Address": { "type": "string", "description": "IPv6 address to forward to. Does not accept both fields (ipv4 & ipv6) being populated." }, "ipv4Address": { "type": "string", "description": "IPv4 address to forward to." }, "forwardingPath": { "enum": [ "default", "private" ], "description": "Forwarding path for this TargetNameServer. If unset or set to DEFAULT, Cloud DNS makes forwarding decisions based on address ranges; that is, RFC1918 addresses go to the VPC network, non-RFC1918 addresses go to the internet. When set to PRIVATE, Cloud DNS always sends queries through the VPC network for this target.", "enumDescriptions": [ "Cloud DNS makes forwarding decision based on IP address ranges; that is, RFC1918 addresses forward to the target through the VPC and non-RFC1918 addresses forward to the target through the internet", "Cloud DNS always forwards to this target through the VPC." ], "type": "string" } }, "id": "PolicyAlternativeNameServerConfigTargetNameServer", "type": "object" }, "ResponsePoliciesPatchResponse": { "type": "object", "properties": { "responsePolicy": { "$ref": "ResponsePolicy" }, "header": { "$ref": "ResponseHeader" } }, "id": "ResponsePoliciesPatchResponse" }, "Expr": { "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.", "properties": { "title": { "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.", "type": "string" }, "location": { "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.", "type": "string" }, "expression": { "description": "Textual representation of an expression in Common Expression Language syntax.", "type": "string" }, "description": { "type": "string", "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI." } }, "type": "object", "id": "Expr" }, "PoliciesUpdateResponse": { "type": "object", "properties": { "header": { "$ref": "ResponseHeader" }, "policy": { "$ref": "Policy" } }, "id": "PoliciesUpdateResponse" }, "ManagedZonePeeringConfig": { "properties": { "kind": { "type": "string", "default": "dns#managedZonePeeringConfig" }, "targetNetwork": { "description": "The network with which to peer.", "$ref": "ManagedZonePeeringConfigTargetNetwork" } }, "type": "object", "id": "ManagedZonePeeringConfig" }, "ManagedZoneDnsSecConfig": { "properties": { "kind": { "default": "dns#managedZoneDnsSecConfig", "type": "string" }, "defaultKeySpecs": { "items": { "$ref": "DnsKeySpec" }, "description": "Specifies parameters for generating initial DnsKeys for this ManagedZone. Can only be changed while the state is OFF.", "type": "array" }, "nonExistence": { "type": "string", "description": "Specifies the mechanism for authenticated denial-of-existence responses. Can only be changed while the state is OFF.", "enum": [ "nsec", "nsec3" ], "enumDescriptions": [ "", "" ] }, "state": { "enum": [ "off", "on", "transfer" ], "type": "string", "description": "Specifies whether DNSSEC is enabled, and what mode it is in.", "enumDescriptions": [ "DNSSEC is disabled; the zone is not signed.", "DNSSEC is enabled; the zone is signed and fully managed.", "DNSSEC is enabled, but in a \"transfer\" mode." ] } }, "type": "object", "id": "ManagedZoneDnsSecConfig" }, "OperationManagedZoneContext": { "id": "OperationManagedZoneContext", "properties": { "newValue": { "description": "The post-operation ManagedZone resource.", "$ref": "ManagedZone" }, "oldValue": { "$ref": "ManagedZone", "description": "The pre-operation ManagedZone resource." } }, "type": "object" }, "ManagedZonePeeringConfigTargetNetwork": { "type": "object", "properties": { "kind": { "default": "dns#managedZonePeeringConfigTargetNetwork", "type": "string" }, "deactivateTime": { "type": "string", "description": "The time at which the zone was deactivated, in RFC 3339 date-time format. An empty string indicates that the peering connection is active. The producer network can deactivate a zone. The zone is automatically deactivated if the producer network that the zone targeted is deleted. Output only." }, "networkUrl": { "description": "The fully qualified URL of the VPC network to forward queries to. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}", "type": "string" } }, "id": "ManagedZonePeeringConfigTargetNetwork" } }, "ownerDomain": "google.com", "discoveryVersion": "v1", "fullyEncodeReservedExpansion": true, "version": "v1beta2", "basePath": "", "revision": "20220706", "rootUrl": "https://dns.googleapis.com/", "icons": { "x16": "http://www.google.com/images/icons/product/search-16.gif", "x32": "http://www.google.com/images/icons/product/search-32.gif" }, "description": "", "kind": "discovery#restDescription", "documentationLink": "https://cloud.google.com/dns/docs", "parameters": { "key": { "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "location": "query", "type": "string" }, "$.xgafv": { "description": "V1 error format.", "location": "query", "type": "string", "enum": [ "1", "2" ], "enumDescriptions": [ "v1 error format", "v2 error format" ] }, "access_token": { "location": "query", "type": "string", "description": "OAuth access token." }, "prettyPrint": { "default": "true", "type": "boolean", "location": "query", "description": "Returns response with indentations and line breaks." }, "alt": { "location": "query", "description": "Data format for response.", "enumDescriptions": [ "Responses with Content-Type of application/json", "Media download with context-dependent Content-Type", "Responses with Content-Type of application/x-protobuf" ], "enum": [ "json", "media", "proto" ], "default": "json", "type": "string" }, "callback": { "type": "string", "location": "query", "description": "JSONP" }, "oauth_token": { "description": "OAuth 2.0 token for the current user.", "type": "string", "location": "query" }, "uploadType": { "type": "string", "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", "location": "query" }, "upload_protocol": { "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").", "type": "string", "location": "query" }, "fields": { "type": "string", "description": "Selector specifying which fields to include in a partial response.", "location": "query" }, "quotaUser": { "location": "query", "type": "string", "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters." } }, "name": "dns", "canonicalName": "Dns", "ownerName": "Google", "id": "dns:v1beta2", "baseUrl": "https://dns.googleapis.com/", "auth": { "oauth2": { "scopes": { "https://www.googleapis.com/auth/cloud-platform.read-only": { "description": "View your data across Google Cloud services and see the email address of your Google Account" }, "https://www.googleapis.com/auth/cloud-platform": { "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account." }, "https://www.googleapis.com/auth/ndev.clouddns.readwrite": { "description": "View and manage your DNS records hosted by Google Cloud DNS" }, "https://www.googleapis.com/auth/ndev.clouddns.readonly": { "description": "View your DNS records hosted by Google Cloud DNS" } } } }, "protocol": "rest", "resources": { "projects": { "methods": { "get": { "parameters": { "project": { "description": "Identifies the project addressed by this request.", "required": true, "location": "path", "type": "string" }, "clientOperationId": { "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.", "location": "query", "type": "string" } }, "httpMethod": "GET", "scopes": [ "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/cloud-platform.read-only", "https://www.googleapis.com/auth/ndev.clouddns.readonly", "https://www.googleapis.com/auth/ndev.clouddns.readwrite" ], "description": "Fetches the representation of an existing Project.", "flatPath": "dns/v1beta2/projects/{project}", "response": { "$ref": "Project" }, "id": "dns.projects.get", "parameterOrder": [ "project" ], "path": "dns/v1beta2/projects/{project}" } } }, "resourceRecordSets": { "methods": { "list": { "id": "dns.resourceRecordSets.list", "httpMethod": "GET", "parameterOrder": [ "project", "managedZone" ], "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/rrsets", "parameters": { "maxResults": { "location": "query", "description": "Optional. Maximum number of results to be returned. If unspecified, the server decides how many results to return.", "type": "integer", "format": "int32" }, "name": { "location": "query", "type": "string", "description": "Restricts the list to return only records with this fully qualified domain name." }, "managedZone": { "required": true, "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.", "type": "string", "location": "path" }, "type": { "description": "Restricts the list to return only records of this type. If present, the \"name\" parameter must also be present.", "type": "string", "location": "query" }, "pageToken": { "location": "query", "description": "Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request.", "type": "string" }, "project": { "location": "path", "type": "string", "required": true, "description": "Identifies the project addressed by this request." } }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/cloud-platform.read-only", "https://www.googleapis.com/auth/ndev.clouddns.readonly", "https://www.googleapis.com/auth/ndev.clouddns.readwrite" ], "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/rrsets", "description": "Enumerates ResourceRecordSets that you have created but not yet deleted.", "response": { "$ref": "ResourceRecordSetsListResponse" } }, "create": { "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/rrsets", "parameters": { "project": { "required": true, "description": "Identifies the project addressed by this request.", "type": "string", "location": "path" }, "clientOperationId": { "type": "string", "location": "query", "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection." }, "managedZone": { "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.", "location": "path", "type": "string", "required": true } }, "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/rrsets", "id": "dns.resourceRecordSets.create", "response": { "$ref": "ResourceRecordSet" }, "parameterOrder": [ "project", "managedZone" ], "description": "Creates a new ResourceRecordSet.", "httpMethod": "POST", "scopes": [ "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/ndev.clouddns.readwrite" ], "request": { "$ref": "ResourceRecordSet" } }, "delete": { "id": "dns.resourceRecordSets.delete", "httpMethod": "DELETE", "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/rrsets/{name}/{type}", "parameterOrder": [ "project", "managedZone", "name", "type" ], "parameters": { "name": { "required": true, "description": "Fully qualified domain name.", "location": "path", "type": "string" }, "project": { "location": "path", "type": "string", "description": "Identifies the project addressed by this request.", "required": true }, "type": { "required": true, "type": "string", "location": "path", "description": "RRSet type." }, "clientOperationId": { "type": "string", "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.", "location": "query" }, "managedZone": { "type": "string", "required": true, "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.", "location": "path" } }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/ndev.clouddns.readwrite" ], "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/rrsets/{name}/{type}", "description": "Deletes a previously created ResourceRecordSet." }, "patch": { "request": { "$ref": "ResourceRecordSet" }, "parameterOrder": [ "project", "managedZone", "name", "type" ], "response": { "$ref": "ResourceRecordSet" }, "parameters": { "name": { "location": "path", "required": true, "type": "string", "description": "Fully qualified domain name." }, "project": { "description": "Identifies the project addressed by this request.", "location": "path", "type": "string", "required": true }, "managedZone": { "location": "path", "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.", "required": true, "type": "string" }, "type": { "type": "string", "location": "path", "required": true, "description": "RRSet type." }, "clientOperationId": { "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.", "type": "string", "location": "query" } }, "httpMethod": "PATCH", "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/rrsets/{name}/{type}", "description": "Applies a partial update to an existing ResourceRecordSet.", "scopes": [ "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/ndev.clouddns.readwrite" ], "id": "dns.resourceRecordSets.patch", "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/rrsets/{name}/{type}" }, "get": { "parameterOrder": [ "project", "managedZone", "name", "type" ], "httpMethod": "GET", "response": { "$ref": "ResourceRecordSet" }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/cloud-platform.read-only", "https://www.googleapis.com/auth/ndev.clouddns.readonly", "https://www.googleapis.com/auth/ndev.clouddns.readwrite" ], "parameters": { "project": { "type": "string", "required": true, "location": "path", "description": "Identifies the project addressed by this request." }, "type": { "required": true, "type": "string", "description": "RRSet type.", "location": "path" }, "managedZone": { "required": true, "location": "path", "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.", "type": "string" }, "clientOperationId": { "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.", "location": "query", "type": "string" }, "name": { "description": "Fully qualified domain name.", "type": "string", "required": true, "location": "path" } }, "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/rrsets/{name}/{type}", "description": "Fetches the representation of an existing ResourceRecordSet.", "id": "dns.resourceRecordSets.get", "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/rrsets/{name}/{type}" } } }, "managedZoneOperations": { "methods": { "list": { "parameters": { "maxResults": { "format": "int32", "type": "integer", "description": "Optional. Maximum number of results to be returned. If unspecified, the server decides how many results to return.", "location": "query" }, "managedZone": { "description": "Identifies the managed zone addressed by this request.", "type": "string", "required": true, "location": "path" }, "pageToken": { "type": "string", "description": "Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request.", "location": "query" }, "sortBy": { "default": "startTime", "location": "query", "description": "Sorting criterion. The only supported values are START_TIME and ID.", "enumDescriptions": [ "", "" ], "type": "string", "enum": [ "startTime", "id" ] }, "project": { "required": true, "type": "string", "location": "path", "description": "Identifies the project addressed by this request." } }, "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/operations", "response": { "$ref": "ManagedZoneOperationsListResponse" }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/cloud-platform.read-only", "https://www.googleapis.com/auth/ndev.clouddns.readonly", "https://www.googleapis.com/auth/ndev.clouddns.readwrite" ], "id": "dns.managedZoneOperations.list", "httpMethod": "GET", "parameterOrder": [ "project", "managedZone" ], "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/operations", "description": "Enumerates Operations for the given ManagedZone." }, "get": { "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/operations/{operation}", "httpMethod": "GET", "parameterOrder": [ "project", "managedZone", "operation" ], "id": "dns.managedZoneOperations.get", "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/operations/{operation}", "scopes": [ "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/cloud-platform.read-only", "https://www.googleapis.com/auth/ndev.clouddns.readonly", "https://www.googleapis.com/auth/ndev.clouddns.readwrite" ], "response": { "$ref": "Operation" }, "parameters": { "clientOperationId": { "type": "string", "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.", "location": "query" }, "project": { "location": "path", "required": true, "description": "Identifies the project addressed by this request.", "type": "string" }, "operation": { "description": "Identifies the operation addressed by this request (ID of the operation).", "type": "string", "location": "path", "required": true }, "managedZone": { "required": true, "type": "string", "description": "Identifies the managed zone addressed by this request.", "location": "path" } }, "description": "Fetches the representation of an existing Operation." } } }, "managedZones": { "methods": { "setIamPolicy": { "scopes": [ "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/ndev.clouddns.readwrite" ], "path": "dns/v1beta2/{+resource}:setIamPolicy", "parameterOrder": [ "resource" ], "httpMethod": "POST", "request": { "$ref": "GoogleIamV1SetIamPolicyRequest" }, "response": { "$ref": "GoogleIamV1Policy" }, "parameters": { "resource": { "pattern": "^projects/[^/]+/managedZones/[^/]+$", "type": "string", "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.", "required": true, "location": "path" } }, "flatPath": "dns/v1beta2/projects/{projectsId}/managedZones/{managedZonesId}:setIamPolicy", "id": "dns.managedZones.setIamPolicy", "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors." }, "list": { "httpMethod": "GET", "scopes": [ "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/cloud-platform.read-only", "https://www.googleapis.com/auth/ndev.clouddns.readonly", "https://www.googleapis.com/auth/ndev.clouddns.readwrite" ], "flatPath": "dns/v1beta2/projects/{project}/managedZones", "response": { "$ref": "ManagedZonesListResponse" }, "path": "dns/v1beta2/projects/{project}/managedZones", "parameters": { "pageToken": { "description": "Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request.", "type": "string", "location": "query" }, "maxResults": { "type": "integer", "format": "int32", "description": "Optional. Maximum number of results to be returned. If unspecified, the server decides how many results to return.", "location": "query" }, "project": { "required": true, "description": "Identifies the project addressed by this request.", "location": "path", "type": "string" }, "dnsName": { "description": "Restricts the list to return only zones with this domain name.", "location": "query", "type": "string" } }, "description": "Enumerates ManagedZones that have been created but not yet deleted.", "parameterOrder": [ "project" ], "id": "dns.managedZones.list" }, "get": { "id": "dns.managedZones.get", "parameterOrder": [ "project", "managedZone" ], "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}", "httpMethod": "GET", "description": "Fetches the representation of an existing ManagedZone.", "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}", "parameters": { "clientOperationId": { "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.", "type": "string", "location": "query" }, "managedZone": { "type": "string", "required": true, "location": "path", "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID." }, "project": { "description": "Identifies the project addressed by this request.", "type": "string", "location": "path", "required": true } }, "response": { "$ref": "ManagedZone" }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/cloud-platform.read-only", "https://www.googleapis.com/auth/ndev.clouddns.readonly", "https://www.googleapis.com/auth/ndev.clouddns.readwrite" ] }, "update": { "id": "dns.managedZones.update", "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}", "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}", "response": { "$ref": "Operation" }, "httpMethod": "PUT", "request": { "$ref": "ManagedZone" }, "description": "Updates an existing ManagedZone.", "parameters": { "clientOperationId": { "location": "query", "type": "string", "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection." }, "project": { "location": "path", "required": true, "description": "Identifies the project addressed by this request.", "type": "string" }, "managedZone": { "required": true, "location": "path", "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.", "type": "string" } }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/ndev.clouddns.readwrite" ], "parameterOrder": [ "project", "managedZone" ] }, "testIamPermissions": { "scopes": [ "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/cloud-platform.read-only", "https://www.googleapis.com/auth/ndev.clouddns.readonly", "https://www.googleapis.com/auth/ndev.clouddns.readwrite" ], "request": { "$ref": "GoogleIamV1TestIamPermissionsRequest" }, "path": "dns/v1beta2/{+resource}:testIamPermissions", "id": "dns.managedZones.testIamPermissions", "flatPath": "dns/v1beta2/projects/{projectsId}/managedZones/{managedZonesId}:testIamPermissions", "httpMethod": "POST", "response": { "$ref": "GoogleIamV1TestIamPermissionsResponse" }, "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.", "parameterOrder": [ "resource" ], "parameters": { "resource": { "required": true, "type": "string", "pattern": "^projects/[^/]+/managedZones/[^/]+$", "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.", "location": "path" } } }, "patch": { "parameters": { "managedZone": { "required": true, "location": "path", "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.", "type": "string" }, "clientOperationId": { "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.", "location": "query", "type": "string" }, "project": { "location": "path", "type": "string", "description": "Identifies the project addressed by this request.", "required": true } }, "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}", "httpMethod": "PATCH", "id": "dns.managedZones.patch", "response": { "$ref": "Operation" }, "parameterOrder": [ "project", "managedZone" ], "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}", "description": "Applies a partial update to an existing ManagedZone.", "scopes": [ "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/ndev.clouddns.readwrite" ], "request": { "$ref": "ManagedZone" } }, "getIamPolicy": { "request": { "$ref": "GoogleIamV1GetIamPolicyRequest" }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/cloud-platform.read-only", "https://www.googleapis.com/auth/ndev.clouddns.readonly", "https://www.googleapis.com/auth/ndev.clouddns.readwrite" ], "parameterOrder": [ "resource" ], "path": "dns/v1beta2/{+resource}:getIamPolicy", "httpMethod": "POST", "response": { "$ref": "GoogleIamV1Policy" }, "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.", "flatPath": "dns/v1beta2/projects/{projectsId}/managedZones/{managedZonesId}:getIamPolicy", "id": "dns.managedZones.getIamPolicy", "parameters": { "resource": { "location": "path", "required": true, "pattern": "^projects/[^/]+/managedZones/[^/]+$", "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.", "type": "string" } } }, "delete": { "parameterOrder": [ "project", "managedZone" ], "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}", "description": "Deletes a previously created ManagedZone.", "parameters": { "project": { "required": true, "location": "path", "description": "Identifies the project addressed by this request.", "type": "string" }, "clientOperationId": { "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.", "location": "query", "type": "string" }, "managedZone": { "type": "string", "required": true, "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.", "location": "path" } }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/ndev.clouddns.readwrite" ], "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}", "id": "dns.managedZones.delete", "httpMethod": "DELETE" }, "create": { "httpMethod": "POST", "response": { "$ref": "ManagedZone" }, "path": "dns/v1beta2/projects/{project}/managedZones", "description": "Creates a new ManagedZone.", "scopes": [ "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/ndev.clouddns.readwrite" ], "id": "dns.managedZones.create", "request": { "$ref": "ManagedZone" }, "parameters": { "project": { "description": "Identifies the project addressed by this request.", "type": "string", "required": true, "location": "path" }, "clientOperationId": { "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.", "type": "string", "location": "query" } }, "parameterOrder": [ "project" ], "flatPath": "dns/v1beta2/projects/{project}/managedZones" } } }, "policies": { "methods": { "create": { "path": "dns/v1beta2/projects/{project}/policies", "parameters": { "project": { "type": "string", "description": "Identifies the project addressed by this request.", "location": "path", "required": true }, "clientOperationId": { "location": "query", "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.", "type": "string" } }, "request": { "$ref": "Policy" }, "id": "dns.policies.create", "flatPath": "dns/v1beta2/projects/{project}/policies", "parameterOrder": [ "project" ], "description": "Creates a new Policy.", "response": { "$ref": "Policy" }, "httpMethod": "POST", "scopes": [ "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/ndev.clouddns.readwrite" ] }, "get": { "httpMethod": "GET", "response": { "$ref": "Policy" }, "path": "dns/v1beta2/projects/{project}/policies/{policy}", "id": "dns.policies.get", "flatPath": "dns/v1beta2/projects/{project}/policies/{policy}", "parameterOrder": [ "project", "policy" ], "description": "Fetches the representation of an existing Policy.", "parameters": { "clientOperationId": { "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.", "type": "string", "location": "query" }, "policy": { "type": "string", "description": "User given friendly name of the policy addressed by this request.", "required": true, "location": "path" }, "project": { "location": "path", "required": true, "description": "Identifies the project addressed by this request.", "type": "string" } }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/cloud-platform.read-only", "https://www.googleapis.com/auth/ndev.clouddns.readonly", "https://www.googleapis.com/auth/ndev.clouddns.readwrite" ] }, "list": { "flatPath": "dns/v1beta2/projects/{project}/policies", "parameters": { "pageToken": { "location": "query", "type": "string", "description": "Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request." }, "project": { "required": true, "description": "Identifies the project addressed by this request.", "type": "string", "location": "path" }, "maxResults": { "format": "int32", "description": "Optional. Maximum number of results to be returned. If unspecified, the server decides how many results to return.", "type": "integer", "location": "query" } }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/cloud-platform.read-only", "https://www.googleapis.com/auth/ndev.clouddns.readonly", "https://www.googleapis.com/auth/ndev.clouddns.readwrite" ], "path": "dns/v1beta2/projects/{project}/policies", "id": "dns.policies.list", "response": { "$ref": "PoliciesListResponse" }, "httpMethod": "GET", "description": "Enumerates all Policies associated with a project.", "parameterOrder": [ "project" ] }, "delete": { "httpMethod": "DELETE", "flatPath": "dns/v1beta2/projects/{project}/policies/{policy}", "id": "dns.policies.delete", "description": "Deletes a previously created Policy. Fails if the policy is still being referenced by a network.", "parameterOrder": [ "project", "policy" ], "parameters": { "project": { "type": "string", "required": true, "description": "Identifies the project addressed by this request.", "location": "path" }, "clientOperationId": { "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.", "location": "query", "type": "string" }, "policy": { "type": "string", "required": true, "description": "User given friendly name of the policy addressed by this request.", "location": "path" } }, "path": "dns/v1beta2/projects/{project}/policies/{policy}", "scopes": [ "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/ndev.clouddns.readwrite" ] }, "patch": { "request": { "$ref": "Policy" }, "response": { "$ref": "PoliciesPatchResponse" }, "parameterOrder": [ "project", "policy" ], "id": "dns.policies.patch", "path": "dns/v1beta2/projects/{project}/policies/{policy}", "flatPath": "dns/v1beta2/projects/{project}/policies/{policy}", "parameters": { "project": { "type": "string", "required": true, "location": "path", "description": "Identifies the project addressed by this request." }, "policy": { "description": "User given friendly name of the policy addressed by this request.", "location": "path", "type": "string", "required": true }, "clientOperationId": { "location": "query", "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.", "type": "string" } }, "description": "Applies a partial update to an existing Policy.", "httpMethod": "PATCH", "scopes": [ "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/ndev.clouddns.readwrite" ] }, "update": { "parameters": { "clientOperationId": { "type": "string", "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.", "location": "query" }, "project": { "type": "string", "location": "path", "required": true, "description": "Identifies the project addressed by this request." }, "policy": { "required": true, "type": "string", "location": "path", "description": "User given friendly name of the policy addressed by this request." } }, "id": "dns.policies.update", "response": { "$ref": "PoliciesUpdateResponse" }, "description": "Updates an existing Policy.", "path": "dns/v1beta2/projects/{project}/policies/{policy}", "httpMethod": "PUT", "flatPath": "dns/v1beta2/projects/{project}/policies/{policy}", "request": { "$ref": "Policy" }, "parameterOrder": [ "project", "policy" ], "scopes": [ "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/ndev.clouddns.readwrite" ] } } }, "responsePolicies": { "methods": { "get": { "parameters": { "project": { "type": "string", "location": "path", "description": "Identifies the project addressed by this request.", "required": true }, "responsePolicy": { "required": true, "location": "path", "description": "User assigned name of the Response Policy addressed by this request.", "type": "string" }, "clientOperationId": { "location": "query", "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.", "type": "string" } }, "id": "dns.responsePolicies.get", "path": "dns/v1beta2/projects/{project}/responsePolicies/{responsePolicy}", "response": { "$ref": "ResponsePolicy" }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/cloud-platform.read-only", "https://www.googleapis.com/auth/ndev.clouddns.readonly", "https://www.googleapis.com/auth/ndev.clouddns.readwrite" ], "httpMethod": "GET", "flatPath": "dns/v1beta2/projects/{project}/responsePolicies/{responsePolicy}", "parameterOrder": [ "project", "responsePolicy" ], "description": "Fetches the representation of an existing Response Policy." }, "patch": { "path": "dns/v1beta2/projects/{project}/responsePolicies/{responsePolicy}", "id": "dns.responsePolicies.patch", "parameters": { "clientOperationId": { "location": "query", "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.", "type": "string" }, "responsePolicy": { "required": true, "description": "User assigned name of the Respones Policy addressed by this request.", "type": "string", "location": "path" }, "project": { "required": true, "type": "string", "location": "path", "description": "Identifies the project addressed by this request." } }, "httpMethod": "PATCH", "request": { "$ref": "ResponsePolicy" }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/ndev.clouddns.readwrite" ], "flatPath": "dns/v1beta2/projects/{project}/responsePolicies/{responsePolicy}", "parameterOrder": [ "project", "responsePolicy" ], "description": "Applies a partial update to an existing Response Policy.", "response": { "$ref": "ResponsePoliciesPatchResponse" } }, "delete": { "description": "Deletes a previously created Response Policy. Fails if the response policy is non-empty or still being referenced by a network.", "parameterOrder": [ "project", "responsePolicy" ], "flatPath": "dns/v1beta2/projects/{project}/responsePolicies/{responsePolicy}", "scopes": [ "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/ndev.clouddns.readwrite" ], "path": "dns/v1beta2/projects/{project}/responsePolicies/{responsePolicy}", "id": "dns.responsePolicies.delete", "parameters": { "responsePolicy": { "type": "string", "location": "path", "required": true, "description": "User assigned name of the Response Policy addressed by this request." }, "clientOperationId": { "location": "query", "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.", "type": "string" }, "project": { "required": true, "type": "string", "location": "path", "description": "Identifies the project addressed by this request." } }, "httpMethod": "DELETE" }, "create": { "description": "Creates a new Response Policy", "parameters": { "clientOperationId": { "location": "query", "type": "string", "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection." }, "project": { "type": "string", "required": true, "description": "Identifies the project addressed by this request.", "location": "path" } }, "request": { "$ref": "ResponsePolicy" }, "response": { "$ref": "ResponsePolicy" }, "httpMethod": "POST", "id": "dns.responsePolicies.create", "parameterOrder": [ "project" ], "path": "dns/v1beta2/projects/{project}/responsePolicies", "flatPath": "dns/v1beta2/projects/{project}/responsePolicies", "scopes": [ "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/ndev.clouddns.readwrite" ] }, "update": { "parameters": { "project": { "location": "path", "required": true, "type": "string", "description": "Identifies the project addressed by this request." }, "clientOperationId": { "type": "string", "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.", "location": "query" }, "responsePolicy": { "location": "path", "description": "User assigned name of the Response Policy addressed by this request.", "required": true, "type": "string" } }, "description": "Updates an existing Response Policy.", "path": "dns/v1beta2/projects/{project}/responsePolicies/{responsePolicy}", "response": { "$ref": "ResponsePoliciesUpdateResponse" }, "httpMethod": "PUT", "parameterOrder": [ "project", "responsePolicy" ], "flatPath": "dns/v1beta2/projects/{project}/responsePolicies/{responsePolicy}", "id": "dns.responsePolicies.update", "request": { "$ref": "ResponsePolicy" }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/ndev.clouddns.readwrite" ] }, "list": { "parameters": { "pageToken": { "description": "Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request.", "type": "string", "location": "query" }, "maxResults": { "location": "query", "format": "int32", "description": "Optional. Maximum number of results to be returned. If unspecified, the server decides how many results to return.", "type": "integer" }, "project": { "location": "path", "type": "string", "required": true, "description": "Identifies the project addressed by this request." } }, "flatPath": "dns/v1beta2/projects/{project}/responsePolicies", "scopes": [ "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/cloud-platform.read-only", "https://www.googleapis.com/auth/ndev.clouddns.readonly", "https://www.googleapis.com/auth/ndev.clouddns.readwrite" ], "path": "dns/v1beta2/projects/{project}/responsePolicies", "id": "dns.responsePolicies.list", "httpMethod": "GET", "response": { "$ref": "ResponsePoliciesListResponse" }, "parameterOrder": [ "project" ], "description": "Enumerates all Response Policies associated with a project." } } }, "dnsKeys": { "methods": { "get": { "response": { "$ref": "DnsKey" }, "description": "Fetches the representation of an existing DnsKey.", "scopes": [ "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/cloud-platform.read-only", "https://www.googleapis.com/auth/ndev.clouddns.readonly", "https://www.googleapis.com/auth/ndev.clouddns.readwrite" ], "parameters": { "project": { "required": true, "location": "path", "description": "Identifies the project addressed by this request.", "type": "string" }, "managedZone": { "location": "path", "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.", "type": "string", "required": true }, "clientOperationId": { "location": "query", "type": "string", "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection." }, "dnsKeyId": { "type": "string", "required": true, "location": "path", "description": "The identifier of the requested DnsKey." }, "digestType": { "location": "query", "type": "string", "description": "An optional comma-separated list of digest types to compute and display for key signing keys. If omitted, the recommended digest type is computed and displayed." } }, "httpMethod": "GET", "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/dnsKeys/{dnsKeyId}", "parameterOrder": [ "project", "managedZone", "dnsKeyId" ], "id": "dns.dnsKeys.get", "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/dnsKeys/{dnsKeyId}" }, "list": { "id": "dns.dnsKeys.list", "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/dnsKeys", "response": { "$ref": "DnsKeysListResponse" }, "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/dnsKeys", "parameterOrder": [ "project", "managedZone" ], "description": "Enumerates DnsKeys to a ResourceRecordSet collection.", "scopes": [ "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/cloud-platform.read-only", "https://www.googleapis.com/auth/ndev.clouddns.readonly", "https://www.googleapis.com/auth/ndev.clouddns.readwrite" ], "httpMethod": "GET", "parameters": { "project": { "required": true, "location": "path", "description": "Identifies the project addressed by this request.", "type": "string" }, "maxResults": { "location": "query", "format": "int32", "description": "Optional. Maximum number of results to be returned. If unspecified, the server decides how many results to return.", "type": "integer" }, "digestType": { "location": "query", "type": "string", "description": "An optional comma-separated list of digest types to compute and display for key signing keys. If omitted, the recommended digest type is computed and displayed." }, "managedZone": { "location": "path", "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.", "required": true, "type": "string" }, "pageToken": { "location": "query", "type": "string", "description": "Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request." } } } } }, "responsePolicyRules": { "methods": { "patch": { "flatPath": "dns/v1beta2/projects/{project}/responsePolicies/{responsePolicy}/rules/{responsePolicyRule}", "httpMethod": "PATCH", "request": { "$ref": "ResponsePolicyRule" }, "id": "dns.responsePolicyRules.patch", "path": "dns/v1beta2/projects/{project}/responsePolicies/{responsePolicy}/rules/{responsePolicyRule}", "description": "Applies a partial update to an existing Response Policy Rule.", "parameters": { "responsePolicyRule": { "type": "string", "location": "path", "description": "User assigned name of the Response Policy Rule addressed by this request.", "required": true }, "project": { "location": "path", "description": "Identifies the project addressed by this request.", "required": true, "type": "string" }, "responsePolicy": { "type": "string", "required": true, "location": "path", "description": "User assigned name of the Response Policy containing the Response Policy Rule." }, "clientOperationId": { "type": "string", "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.", "location": "query" } }, "parameterOrder": [ "project", "responsePolicy", "responsePolicyRule" ], "response": { "$ref": "ResponsePolicyRulesPatchResponse" }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/ndev.clouddns.readwrite" ] }, "create": { "id": "dns.responsePolicyRules.create", "httpMethod": "POST", "request": { "$ref": "ResponsePolicyRule" }, "path": "dns/v1beta2/projects/{project}/responsePolicies/{responsePolicy}/rules", "description": "Creates a new Response Policy Rule.", "flatPath": "dns/v1beta2/projects/{project}/responsePolicies/{responsePolicy}/rules", "scopes": [ "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/ndev.clouddns.readwrite" ], "parameters": { "clientOperationId": { "location": "query", "type": "string", "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection." }, "project": { "description": "Identifies the project addressed by this request.", "location": "path", "required": true, "type": "string" }, "responsePolicy": { "description": "User assigned name of the Response Policy containing the Response Policy Rule.", "location": "path", "type": "string", "required": true } }, "parameterOrder": [ "project", "responsePolicy" ], "response": { "$ref": "ResponsePolicyRule" } }, "list": { "parameters": { "pageToken": { "description": "Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request.", "location": "query", "type": "string" }, "maxResults": { "type": "integer", "location": "query", "format": "int32", "description": "Optional. Maximum number of results to be returned. If unspecified, the server decides how many results to return." }, "project": { "type": "string", "required": true, "description": "Identifies the project addressed by this request.", "location": "path" }, "responsePolicy": { "type": "string", "location": "path", "description": "User assigned name of the Response Policy to list.", "required": true } }, "httpMethod": "GET", "path": "dns/v1beta2/projects/{project}/responsePolicies/{responsePolicy}/rules", "flatPath": "dns/v1beta2/projects/{project}/responsePolicies/{responsePolicy}/rules", "parameterOrder": [ "project", "responsePolicy" ], "scopes": [ "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/cloud-platform.read-only", "https://www.googleapis.com/auth/ndev.clouddns.readonly", "https://www.googleapis.com/auth/ndev.clouddns.readwrite" ], "response": { "$ref": "ResponsePolicyRulesListResponse" }, "id": "dns.responsePolicyRules.list", "description": "Enumerates all Response Policy Rules associated with a project." }, "update": { "parameterOrder": [ "project", "responsePolicy", "responsePolicyRule" ], "request": { "$ref": "ResponsePolicyRule" }, "flatPath": "dns/v1beta2/projects/{project}/responsePolicies/{responsePolicy}/rules/{responsePolicyRule}", "response": { "$ref": "ResponsePolicyRulesUpdateResponse" }, "path": "dns/v1beta2/projects/{project}/responsePolicies/{responsePolicy}/rules/{responsePolicyRule}", "httpMethod": "PUT", "id": "dns.responsePolicyRules.update", "scopes": [ "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/ndev.clouddns.readwrite" ], "description": "Updates an existing Response Policy Rule.", "parameters": { "project": { "required": true, "description": "Identifies the project addressed by this request.", "location": "path", "type": "string" }, "responsePolicy": { "location": "path", "type": "string", "description": "User assigned name of the Response Policy containing the Response Policy Rule.", "required": true }, "clientOperationId": { "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.", "type": "string", "location": "query" }, "responsePolicyRule": { "required": true, "type": "string", "description": "User assigned name of the Response Policy Rule addressed by this request.", "location": "path" } } }, "get": { "id": "dns.responsePolicyRules.get", "parameterOrder": [ "project", "responsePolicy", "responsePolicyRule" ], "path": "dns/v1beta2/projects/{project}/responsePolicies/{responsePolicy}/rules/{responsePolicyRule}", "response": { "$ref": "ResponsePolicyRule" }, "description": "Fetches the representation of an existing Response Policy Rule.", "httpMethod": "GET", "flatPath": "dns/v1beta2/projects/{project}/responsePolicies/{responsePolicy}/rules/{responsePolicyRule}", "parameters": { "responsePolicyRule": { "location": "path", "required": true, "description": "User assigned name of the Response Policy Rule addressed by this request.", "type": "string" }, "project": { "type": "string", "description": "Identifies the project addressed by this request.", "location": "path", "required": true }, "responsePolicy": { "required": true, "type": "string", "description": "User assigned name of the Response Policy containing the Response Policy Rule.", "location": "path" }, "clientOperationId": { "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.", "location": "query", "type": "string" } }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/cloud-platform.read-only", "https://www.googleapis.com/auth/ndev.clouddns.readonly", "https://www.googleapis.com/auth/ndev.clouddns.readwrite" ] }, "delete": { "httpMethod": "DELETE", "parameters": { "responsePolicyRule": { "description": "User assigned name of the Response Policy Rule addressed by this request.", "type": "string", "location": "path", "required": true }, "clientOperationId": { "location": "query", "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.", "type": "string" }, "project": { "required": true, "type": "string", "location": "path", "description": "Identifies the project addressed by this request." }, "responsePolicy": { "type": "string", "description": "User assigned name of the Response Policy containing the Response Policy Rule.", "required": true, "location": "path" } }, "parameterOrder": [ "project", "responsePolicy", "responsePolicyRule" ], "scopes": [ "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/ndev.clouddns.readwrite" ], "id": "dns.responsePolicyRules.delete", "flatPath": "dns/v1beta2/projects/{project}/responsePolicies/{responsePolicy}/rules/{responsePolicyRule}", "description": "Deletes a previously created Response Policy Rule.", "path": "dns/v1beta2/projects/{project}/responsePolicies/{responsePolicy}/rules/{responsePolicyRule}" } } }, "changes": { "methods": { "create": { "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/changes", "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/changes", "request": { "$ref": "Change" }, "id": "dns.changes.create", "parameters": { "clientOperationId": { "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.", "location": "query", "type": "string" }, "project": { "required": true, "description": "Identifies the project addressed by this request.", "type": "string", "location": "path" }, "managedZone": { "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.", "type": "string", "location": "path", "required": true } }, "description": "Atomically updates the ResourceRecordSet collection.", "scopes": [ "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/ndev.clouddns.readwrite" ], "parameterOrder": [ "project", "managedZone" ], "httpMethod": "POST", "response": { "$ref": "Change" } }, "get": { "scopes": [ "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/cloud-platform.read-only", "https://www.googleapis.com/auth/ndev.clouddns.readonly", "https://www.googleapis.com/auth/ndev.clouddns.readwrite" ], "description": "Fetches the representation of an existing Change.", "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/changes/{changeId}", "httpMethod": "GET", "id": "dns.changes.get", "parameters": { "changeId": { "description": "The identifier of the requested change, from a previous ResourceRecordSetsChangeResponse.", "type": "string", "location": "path", "required": true }, "managedZone": { "required": true, "type": "string", "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.", "location": "path" }, "project": { "required": true, "description": "Identifies the project addressed by this request.", "location": "path", "type": "string" }, "clientOperationId": { "location": "query", "type": "string", "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection." } }, "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/changes/{changeId}", "response": { "$ref": "Change" }, "parameterOrder": [ "project", "managedZone", "changeId" ] }, "list": { "parameters": { "sortBy": { "enumDescriptions": [ "" ], "type": "string", "default": "changeSequence", "location": "query", "enum": [ "changeSequence" ], "description": "Sorting criterion. The only supported value is change sequence." }, "project": { "location": "path", "description": "Identifies the project addressed by this request.", "type": "string", "required": true }, "maxResults": { "type": "integer", "format": "int32", "description": "Optional. Maximum number of results to be returned. If unspecified, the server decides how many results to return.", "location": "query" }, "managedZone": { "type": "string", "required": true, "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.", "location": "path" }, "sortOrder": { "location": "query", "description": "Sorting order direction: 'ascending' or 'descending'.", "type": "string" }, "pageToken": { "description": "Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request.", "type": "string", "location": "query" } }, "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/changes", "description": "Enumerates Changes to a ResourceRecordSet collection.", "parameterOrder": [ "project", "managedZone" ], "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/changes", "id": "dns.changes.list", "response": { "$ref": "ChangesListResponse" }, "httpMethod": "GET", "scopes": [ "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/cloud-platform.read-only", "https://www.googleapis.com/auth/ndev.clouddns.readonly", "https://www.googleapis.com/auth/ndev.clouddns.readwrite" ] } } } }, "mtlsRootUrl": "https://dns.mtls.googleapis.com/", "title": "Cloud DNS API" }
]===]))
