local decode = require("cjson").new().decode
return assert(decode([===[
{ "rootUrl": "https://books.googleapis.com/", "revision": "20220624", "ownerName": "Google", "version": "v1", "protocol": "rest", "title": "Books API", "id": "books:v1", "servicePath": "", "documentationLink": "https://code.google.com/apis/books/docs/v1/getting_started.html", "baseUrl": "https://books.googleapis.com/", "icons": { "x16": "http://www.google.com/images/icons/product/search-16.gif", "x32": "http://www.google.com/images/icons/product/search-32.gif" }, "batchPath": "batch", "mtlsRootUrl": "https://books.mtls.googleapis.com/", "description": "The Google Books API allows clients to access the Google Books repository.", "parameters": { "$.xgafv": { "type": "string", "enumDescriptions": [ "v1 error format", "v2 error format" ], "description": "V1 error format.", "location": "query", "enum": [ "1", "2" ] }, "oauth_token": { "location": "query", "type": "string", "description": "OAuth 2.0 token for the current user." }, "upload_protocol": { "location": "query", "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").", "type": "string" }, "access_token": { "location": "query", "description": "OAuth access token.", "type": "string" }, "prettyPrint": { "location": "query", "type": "boolean", "default": "true", "description": "Returns response with indentations and line breaks." }, "alt": { "description": "Data format for response.", "location": "query", "enumDescriptions": [ "Responses with Content-Type of application/json", "Media download with context-dependent Content-Type", "Responses with Content-Type of application/x-protobuf" ], "type": "string", "enum": [ "json", "media", "proto" ], "default": "json" }, "uploadType": { "location": "query", "type": "string", "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")." }, "fields": { "location": "query", "description": "Selector specifying which fields to include in a partial response.", "type": "string" }, "quotaUser": { "location": "query", "type": "string", "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters." }, "key": { "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "location": "query", "type": "string" }, "callback": { "location": "query", "description": "JSONP", "type": "string" } }, "auth": { "oauth2": { "scopes": { "https://www.googleapis.com/auth/books": { "description": "Manage your books" } } } }, "basePath": "", "version_module": true, "name": "books", "discoveryVersion": "v1", "ownerDomain": "google.com", "resources": { "layers": { "methods": { "get": { "flatPath": "books/v1/volumes/{volumeId}/layersummary/{summaryId}", "path": "books/v1/volumes/{volumeId}/layersummary/{summaryId}", "parameterOrder": [ "volumeId", "summaryId" ], "scopes": [ "https://www.googleapis.com/auth/books" ], "description": "Gets the layer summary for a volume.", "id": "books.layers.get", "response": { "$ref": "Layersummary" }, "parameters": { "summaryId": { "required": true, "description": "The ID for the layer to get the summary for.", "location": "path", "type": "string" }, "volumeId": { "location": "path", "type": "string", "required": true, "description": "The volume to retrieve layers for." }, "contentVersion": { "location": "query", "description": "The content version for the requested volume.", "type": "string" }, "source": { "description": "String to identify the originator of this request.", "location": "query", "type": "string" } }, "httpMethod": "GET" }, "list": { "parameterOrder": [ "volumeId" ], "description": "List the layer summaries for a volume.", "response": { "$ref": "Layersummaries" }, "flatPath": "books/v1/volumes/{volumeId}/layersummary", "id": "books.layers.list", "httpMethod": "GET", "scopes": [ "https://www.googleapis.com/auth/books" ], "path": "books/v1/volumes/{volumeId}/layersummary", "parameters": { "source": { "description": "String to identify the originator of this request.", "location": "query", "type": "string" }, "volumeId": { "description": "The volume to retrieve layers for.", "type": "string", "required": true, "location": "path" }, "pageToken": { "description": "The value of the nextToken from the previous page.", "location": "query", "type": "string" }, "contentVersion": { "description": "The content version for the requested volume.", "location": "query", "type": "string" }, "maxResults": { "maximum": "200", "type": "integer", "minimum": "0", "location": "query", "description": "Maximum number of results to return", "format": "uint32" } } } }, "resources": { "annotationData": { "methods": { "list": { "description": "Gets the annotation data for a volume and layer.", "parameters": { "pageToken": { "location": "query", "type": "string", "description": "The value of the nextToken from the previous page." }, "volumeId": { "required": true, "type": "string", "description": "The volume to retrieve annotation data for.", "location": "path" }, "updatedMax": { "location": "query", "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive).", "type": "string" }, "maxResults": { "location": "query", "format": "uint32", "type": "integer", "maximum": "200", "minimum": "0", "description": "Maximum number of results to return" }, "updatedMin": { "location": "query", "description": "RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive).", "type": "string" }, "layerId": { "type": "string", "location": "path", "required": true, "description": "The ID for the layer to get the annotation data." }, "locale": { "type": "string", "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'.", "location": "query" }, "annotationDataId": { "repeated": true, "location": "query", "description": "The list of Annotation Data Ids to retrieve. Pagination is ignored if this is set.", "type": "string" }, "scale": { "minimum": "0", "format": "int32", "type": "integer", "description": "The requested scale for the image.", "location": "query" }, "source": { "type": "string", "description": "String to identify the originator of this request.", "location": "query" }, "contentVersion": { "location": "query", "required": true, "type": "string", "description": "The content version for the requested volume." }, "h": { "description": "The requested pixel height for any images. If height is provided width must also be provided.", "type": "integer", "format": "int32", "location": "query" }, "w": { "description": "The requested pixel width for any images. If width is provided height must also be provided.", "location": "query", "type": "integer", "format": "int32" } }, "parameterOrder": [ "volumeId", "layerId", "contentVersion" ], "httpMethod": "GET", "path": "books/v1/volumes/{volumeId}/layers/{layerId}/data", "id": "books.layers.annotationData.list", "response": { "$ref": "Annotationsdata" }, "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/data", "scopes": [ "https://www.googleapis.com/auth/books" ] }, "get": { "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/data/{annotationDataId}", "response": { "$ref": "DictionaryAnnotationdata" }, "description": "Gets the annotation data.", "path": "books/v1/volumes/{volumeId}/layers/{layerId}/data/{annotationDataId}", "scopes": [ "https://www.googleapis.com/auth/books" ], "httpMethod": "GET", "id": "books.layers.annotationData.get", "parameters": { "scale": { "type": "integer", "location": "query", "description": "The requested scale for the image.", "minimum": "0", "format": "int32" }, "locale": { "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'.", "type": "string", "location": "query" }, "allowWebDefinitions": { "location": "query", "description": "For the dictionary layer. Whether or not to allow web definitions.", "type": "boolean" }, "layerId": { "type": "string", "required": true, "description": "The ID for the layer to get the annotations.", "location": "path" }, "contentVersion": { "location": "query", "type": "string", "description": "The content version for the volume you are trying to retrieve.", "required": true }, "w": { "format": "int32", "location": "query", "description": "The requested pixel width for any images. If width is provided height must also be provided.", "type": "integer" }, "h": { "description": "The requested pixel height for any images. If height is provided width must also be provided.", "format": "int32", "location": "query", "type": "integer" }, "source": { "description": "String to identify the originator of this request.", "location": "query", "type": "string" }, "volumeId": { "location": "path", "required": true, "description": "The volume to retrieve annotations for.", "type": "string" }, "annotationDataId": { "type": "string", "location": "path", "description": "The ID of the annotation data to retrieve.", "required": true } }, "parameterOrder": [ "volumeId", "layerId", "annotationDataId", "contentVersion" ] } } }, "volumeAnnotations": { "methods": { "list": { "parameters": { "showDeleted": { "description": "Set to true to return deleted annotations. updatedMin must be in the request to use this. Defaults to false.", "location": "query", "type": "boolean" }, "volumeId": { "required": true, "type": "string", "description": "The volume to retrieve annotations for.", "location": "path" }, "pageToken": { "description": "The value of the nextToken from the previous page.", "location": "query", "type": "string" }, "locale": { "type": "string", "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'.", "location": "query" }, "maxResults": { "description": "Maximum number of results to return", "location": "query", "maximum": "200", "type": "integer", "minimum": "0", "format": "uint32" }, "endPosition": { "type": "string", "description": "The end position to end retrieving data from.", "location": "query" }, "volumeAnnotationsVersion": { "type": "string", "location": "query", "description": "The version of the volume annotations that you are requesting." }, "startOffset": { "type": "string", "location": "query", "description": "The start offset to start retrieving data from." }, "contentVersion": { "required": true, "description": "The content version for the requested volume.", "type": "string", "location": "query" }, "layerId": { "type": "string", "required": true, "location": "path", "description": "The ID for the layer to get the annotations." }, "updatedMin": { "type": "string", "location": "query", "description": "RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive)." }, "updatedMax": { "location": "query", "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive).", "type": "string" }, "endOffset": { "location": "query", "type": "string", "description": "The end offset to end retrieving data from." }, "startPosition": { "description": "The start position to start retrieving data from.", "type": "string", "location": "query" }, "source": { "description": "String to identify the originator of this request.", "location": "query", "type": "string" } }, "path": "books/v1/volumes/{volumeId}/layers/{layerId}", "parameterOrder": [ "volumeId", "layerId", "contentVersion" ], "description": "Gets the volume annotations for a volume and layer.", "httpMethod": "GET", "scopes": [ "https://www.googleapis.com/auth/books" ], "id": "books.layers.volumeAnnotations.list", "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}", "response": { "$ref": "Volumeannotations" } }, "get": { "scopes": [ "https://www.googleapis.com/auth/books" ], "parameters": { "layerId": { "type": "string", "required": true, "location": "path", "description": "The ID for the layer to get the annotations." }, "volumeId": { "type": "string", "description": "The volume to retrieve annotations for.", "required": true, "location": "path" }, "annotationId": { "required": true, "location": "path", "description": "The ID of the volume annotation to retrieve.", "type": "string" }, "source": { "description": "String to identify the originator of this request.", "location": "query", "type": "string" }, "locale": { "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'.", "type": "string", "location": "query" } }, "description": "Gets the volume annotation.", "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/annotations/{annotationId}", "httpMethod": "GET", "path": "books/v1/volumes/{volumeId}/layers/{layerId}/annotations/{annotationId}", "parameterOrder": [ "volumeId", "layerId", "annotationId" ], "response": { "$ref": "Volumeannotation" }, "id": "books.layers.volumeAnnotations.get" } } } } }, "volumes": { "methods": { "get": { "parameters": { "projection": { "type": "string", "description": "Restrict information returned to a set of selected fields.", "enumDescriptions": [ "", "Includes all volume data.", "Includes a subset of fields in volumeInfo and accessInfo." ], "location": "query", "enum": [ "PROJECTION_UNDEFINED", "FULL", "LITE" ] }, "volumeId": { "location": "path", "required": true, "description": "ID of volume to retrieve.", "type": "string" }, "source": { "description": "string to identify the originator of this request.", "type": "string", "location": "query" }, "user_library_consistent_read": { "type": "boolean", "location": "query" }, "country": { "description": "ISO-3166-1 code to override the IP-based location.", "type": "string", "location": "query" }, "partner": { "location": "query", "type": "string", "description": "Brand results for partner ID." }, "includeNonComicsSeries": { "description": "Set to true to include non-comics series. Defaults to false.", "location": "query", "type": "boolean" } }, "path": "books/v1/volumes/{volumeId}", "parameterOrder": [ "volumeId" ], "id": "books.volumes.get", "flatPath": "books/v1/volumes/{volumeId}", "description": "Gets volume information for a single volume.", "httpMethod": "GET", "response": { "$ref": "Volume" }, "scopes": [ "https://www.googleapis.com/auth/books" ] }, "list": { "response": { "$ref": "Volumes" }, "parameterOrder": [ "q" ], "id": "books.volumes.list", "description": "Performs a book search.", "scopes": [ "https://www.googleapis.com/auth/books" ], "httpMethod": "GET", "parameters": { "projection": { "location": "query", "enumDescriptions": [ "", "Includes all volume data.", "Includes a subset of fields in volumeInfo and accessInfo." ], "enum": [ "PROJECTION_UNDEFINED", "FULL", "LITE" ], "type": "string", "description": "Restrict information returned to a set of selected fields." }, "langRestrict": { "type": "string", "location": "query", "description": "Restrict results to books with this language code." }, "showPreorders": { "type": "boolean", "location": "query", "description": "Set to true to show books available for preorder. Defaults to false." }, "maxResults": { "description": "Maximum number of results to return.", "maximum": "40", "type": "integer", "format": "uint32", "minimum": "0", "location": "query" }, "printType": { "type": "string", "location": "query", "enum": [ "PRINT_TYPE_UNDEFINED", "ALL", "BOOKS", "MAGAZINES" ], "description": "Restrict to books or magazines.", "enumDescriptions": [ "", "All volume content types.", "Just books.", "Just magazines." ] }, "maxAllowedMaturityRating": { "enum": [ "MAX_ALLOWED_MATURITY_RATING_UNDEFINED", "MATURE", "not-mature" ], "enumDescriptions": [ "", "Show books which are rated mature or lower.", "Show books which are rated not mature." ], "type": "string", "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.", "location": "query" }, "source": { "description": "String to identify the originator of this request.", "type": "string", "location": "query" }, "download": { "enum": [ "DOWNLOAD_UNDEFINED", "EPUB" ], "enumDescriptions": [ "", "All volumes with epub." ], "description": "Restrict to volumes by download availability.", "type": "string", "location": "query" }, "orderBy": { "enum": [ "ORDER_BY_UNDEFINED", "newest", "relevance" ], "type": "string", "enumDescriptions": [ "", "Most recently published.", "Relevance to search terms." ], "location": "query", "description": "Sort search results." }, "q": { "type": "string", "description": "Full-text search query string.", "required": true, "location": "query" }, "libraryRestrict": { "enumDescriptions": [ "", "Restrict to the user's library, any shelf.", "Do not restrict based on user's library." ], "type": "string", "description": "Restrict search to this user's library.", "location": "query", "enum": [ "LIBRARY_RESTRICT_UNDEFINED", "my-library", "no-restrict" ] }, "filter": { "description": "Filter search results.", "enumDescriptions": [ "", "All Google eBooks.", "Google eBook with full volume text viewability.", "Public can view entire volume text.", "Google eBook with a price.", "Public able to see parts of text." ], "location": "query", "type": "string", "enum": [ "FILTER_UNDEFINED", "ebooks", "free-ebooks", "full", "paid-ebooks", "partial" ] }, "partner": { "type": "string", "location": "query", "description": "Restrict and brand results for partner ID." }, "startIndex": { "type": "integer", "minimum": "0", "format": "uint32", "description": "Index of the first result to return (starts at 0)", "location": "query" } }, "flatPath": "books/v1/volumes", "path": "books/v1/volumes" } }, "resources": { "recommended": { "methods": { "rate": { "parameterOrder": [ "rating", "volumeId" ], "flatPath": "books/v1/volumes/recommended/rate", "id": "books.volumes.recommended.rate", "httpMethod": "POST", "scopes": [ "https://www.googleapis.com/auth/books" ], "description": "Rate a recommended book for the current user.", "path": "books/v1/volumes/recommended/rate", "response": { "$ref": "BooksVolumesRecommendedRateResponse" }, "parameters": { "volumeId": { "description": "ID of the source volume.", "location": "query", "required": true, "type": "string" }, "source": { "location": "query", "type": "string", "description": "String to identify the originator of this request." }, "rating": { "location": "query", "enumDescriptions": [ "", "Rating indicating a dismissal due to ownership.", "Rating indicating a negative dismissal of a volume." ], "enum": [ "RATING_UNDEFINED", "HAVE_IT", "NOT_INTERESTED" ], "required": true, "type": "string", "description": "Rating to be given to the volume." }, "locale": { "location": "query", "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.", "type": "string" } } }, "list": { "path": "books/v1/volumes/recommended", "httpMethod": "GET", "id": "books.volumes.recommended.list", "scopes": [ "https://www.googleapis.com/auth/books" ], "response": { "$ref": "Volumes" }, "parameterOrder": [], "flatPath": "books/v1/volumes/recommended", "description": "Return a list of recommended books for the current user.", "parameters": { "locale": { "type": "string", "location": "query", "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations." }, "maxAllowedMaturityRating": { "type": "string", "enumDescriptions": [ "", "Show books which are rated mature or lower.", "Show books which are rated not mature." ], "location": "query", "enum": [ "MAX_ALLOWED_MATURITY_RATING_UNDEFINED", "MATURE", "not-mature" ], "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out." }, "source": { "description": "String to identify the originator of this request.", "location": "query", "type": "string" } } } } }, "mybooks": { "methods": { "list": { "flatPath": "books/v1/volumes/mybooks", "parameterOrder": [], "httpMethod": "GET", "scopes": [ "https://www.googleapis.com/auth/books" ], "response": { "$ref": "Volumes" }, "id": "books.volumes.mybooks.list", "parameters": { "maxResults": { "description": "Maximum number of results to return.", "maximum": "100", "location": "query", "type": "integer", "format": "uint32", "minimum": "0" }, "source": { "description": "String to identify the originator of this request.", "location": "query", "type": "string" }, "country": { "type": "string", "description": "ISO-3166-1 code to override the IP-based location.", "location": "query" }, "startIndex": { "type": "integer", "minimum": "0", "format": "uint32", "location": "query", "description": "Index of the first result to return (starts at 0)" }, "acquireMethod": { "enumDescriptions": [ "", "Books acquired via Family Sharing", "Preordered books (not yet available)", "User-rented books past their expiration time", "Public domain books", "Purchased books", "User-rented books", "Sample books", "User uploaded books" ], "description": "How the book was acquired", "location": "query", "repeated": true, "type": "string", "enum": [ "ACQUIRE_METHOD_UNDEFINED", "FAMILY_SHARED", "PREORDERED", "PREVIOUSLY_RENTED", "PUBLIC_DOMAIN", "PURCHASED", "RENTED", "SAMPLE", "UPLOADED" ] }, "locale": { "location": "query", "description": "ISO-639-1 language and ISO-3166-1 country code. Ex:'en_US'. Used for generating recommendations.", "type": "string" }, "processingState": { "location": "query", "enumDescriptions": [ "", "The volume processing hase failed.", "The volume processing was completed.", "The volume processing is not completed." ], "repeated": true, "type": "string", "description": "The processing state of the user uploaded volumes to be returned. Applicable only if the UPLOADED is specified in the acquireMethod.", "enum": [ "PROCESSING_STATE_UNDEFINED", "COMPLETED_FAILED", "COMPLETED_SUCCESS", "RUNNING" ] } }, "description": "Return a list of books in My Library.", "path": "books/v1/volumes/mybooks" } } }, "useruploaded": { "methods": { "list": { "flatPath": "books/v1/volumes/useruploaded", "scopes": [ "https://www.googleapis.com/auth/books" ], "httpMethod": "GET", "parameterOrder": [], "description": "Return a list of books uploaded by the current user.", "id": "books.volumes.useruploaded.list", "parameters": { "maxResults": { "description": "Maximum number of results to return.", "maximum": "40", "format": "uint32", "type": "integer", "location": "query", "minimum": "0" }, "volumeId": { "repeated": true, "type": "string", "description": "The ids of the volumes to be returned. If not specified all that match the processingState are returned.", "location": "query" }, "startIndex": { "type": "integer", "format": "uint32", "minimum": "0", "location": "query", "description": "Index of the first result to return (starts at 0)" }, "locale": { "location": "query", "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.", "type": "string" }, "source": { "location": "query", "type": "string", "description": "String to identify the originator of this request." }, "processingState": { "location": "query", "repeated": true, "type": "string", "enumDescriptions": [ "", "The volume processing hase failed.", "The volume processing was completed.", "The volume processing is not completed." ], "description": "The processing state of the user uploaded volumes to be returned.", "enum": [ "PROCESSING_STATE_UNDEFINED", "COMPLETED_FAILED", "COMPLETED_SUCCESS", "RUNNING" ] } }, "response": { "$ref": "Volumes" }, "path": "books/v1/volumes/useruploaded" } } }, "associated": { "methods": { "list": { "scopes": [ "https://www.googleapis.com/auth/books" ], "path": "books/v1/volumes/{volumeId}/associated", "flatPath": "books/v1/volumes/{volumeId}/associated", "httpMethod": "GET", "parameterOrder": [ "volumeId" ], "parameters": { "volumeId": { "type": "string", "location": "path", "description": "ID of the source volume.", "required": true }, "association": { "enum": [ "ASSOCIATION_UNDEFINED", "end-of-sample", "end-of-volume", "related-for-play" ], "location": "query", "type": "string", "description": "Association type.", "enumDescriptions": [ "", "Recommendations for display end-of-sample.", "Recommendations for display end-of-volume.", "Related volumes for Play Store." ] }, "source": { "description": "String to identify the originator of this request.", "location": "query", "type": "string" }, "maxAllowedMaturityRating": { "location": "query", "enumDescriptions": [ "", "Show books which are rated mature or lower.", "Show books which are rated not mature." ], "enum": [ "MAX_ALLOWED_MATURITY_RATING_UNDEFINED", "MATURE", "not-mature" ], "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.", "type": "string" }, "locale": { "type": "string", "location": "query", "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations." } }, "id": "books.volumes.associated.list", "response": { "$ref": "Volumes" }, "description": "Return a list of associated books." } } } } }, "notification": { "methods": { "get": { "description": "Returns notification details for a given notification id.", "path": "books/v1/notification/get", "id": "books.notification.get", "flatPath": "books/v1/notification/get", "scopes": [ "https://www.googleapis.com/auth/books" ], "httpMethod": "GET", "response": { "$ref": "Notification" }, "parameters": { "source": { "location": "query", "description": "String to identify the originator of this request.", "type": "string" }, "notification_id": { "required": true, "type": "string", "location": "query", "description": "String to identify the notification." }, "locale": { "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating notification title and body.", "location": "query", "type": "string" } }, "parameterOrder": [ "notification_id" ] } } }, "onboarding": { "methods": { "listCategoryVolumes": { "path": "books/v1/onboarding/listCategoryVolumes", "scopes": [ "https://www.googleapis.com/auth/books" ], "parameterOrder": [], "response": { "$ref": "Volume2" }, "id": "books.onboarding.listCategoryVolumes", "description": "List available volumes under categories for onboarding experience.", "httpMethod": "GET", "parameters": { "pageSize": { "location": "query", "description": "Number of maximum results per page to be included in the response.", "format": "uint32", "type": "integer" }, "maxAllowedMaturityRating": { "enum": [ "MAX_ALLOWED_MATURITY_RATING_UNDEFINED", "MATURE", "not-mature" ], "description": "The maximum allowed maturity rating of returned volumes. Books with a higher maturity rating are filtered out.", "type": "string", "enumDescriptions": [ "", "Show books which are rated mature or lower.", "Show books which are rated not mature." ], "location": "query" }, "locale": { "type": "string", "location": "query", "description": "ISO-639-1 language and ISO-3166-1 country code. Default is en-US if unset." }, "categoryId": { "repeated": true, "type": "string", "description": "List of category ids requested.", "location": "query" }, "pageToken": { "description": "The value of the nextToken from the previous page.", "type": "string", "location": "query" } }, "flatPath": "books/v1/onboarding/listCategoryVolumes" }, "listCategories": { "scopes": [ "https://www.googleapis.com/auth/books" ], "httpMethod": "GET", "description": "List categories for onboarding experience.", "flatPath": "books/v1/onboarding/listCategories", "path": "books/v1/onboarding/listCategories", "parameters": { "locale": { "description": "ISO-639-1 language and ISO-3166-1 country code. Default is en-US if unset.", "type": "string", "location": "query" } }, "parameterOrder": [], "id": "books.onboarding.listCategories", "response": { "$ref": "Category" } } } }, "series": { "methods": { "get": { "parameterOrder": [ "series_id" ], "parameters": { "series_id": { "repeated": true, "type": "string", "location": "query", "required": true, "description": "String that identifies the series" } }, "flatPath": "books/v1/series/get", "path": "books/v1/series/get", "response": { "$ref": "Series" }, "scopes": [ "https://www.googleapis.com/auth/books" ], "httpMethod": "GET", "description": "Returns Series metadata for the given series ids.", "id": "books.series.get" } }, "resources": { "membership": { "methods": { "get": { "response": { "$ref": "Seriesmembership" }, "parameters": { "series_id": { "location": "query", "description": "String that identifies the series", "type": "string", "required": true }, "page_token": { "location": "query", "type": "string", "description": "The value of the nextToken from the previous page." }, "page_size": { "description": "Number of maximum results per page to be included in the response.", "type": "integer", "location": "query", "format": "uint32" } }, "parameterOrder": [ "series_id" ], "id": "books.series.membership.get", "httpMethod": "GET", "flatPath": "books/v1/series/membership/get", "path": "books/v1/series/membership/get", "scopes": [ "https://www.googleapis.com/auth/books" ], "description": "Returns Series membership data given the series id." } } } } }, "promooffer": { "methods": { "accept": { "description": "Accepts the promo offer.", "parameterOrder": [], "scopes": [ "https://www.googleapis.com/auth/books" ], "flatPath": "books/v1/promooffer/accept", "parameters": { "volumeId": { "type": "string", "description": "Volume id to exercise the offer", "location": "query" }, "model": { "description": "device model", "type": "string", "location": "query" }, "manufacturer": { "location": "query", "description": "device manufacturer", "type": "string" }, "product": { "location": "query", "type": "string", "description": "device product" }, "offerId": { "type": "string", "location": "query" }, "serial": { "description": "device serial", "location": "query", "type": "string" }, "device": { "description": "device device", "type": "string", "location": "query" }, "androidId": { "location": "query", "description": "device android_id", "type": "string" } }, "path": "books/v1/promooffer/accept", "id": "books.promooffer.accept", "httpMethod": "POST", "response": { "$ref": "Empty" } }, "get": { "parameters": { "androidId": { "description": "device android_id", "location": "query", "type": "string" }, "model": { "description": "device model", "location": "query", "type": "string" }, "manufacturer": { "type": "string", "description": "device manufacturer", "location": "query" }, "product": { "type": "string", "description": "device product", "location": "query" }, "serial": { "description": "device serial", "location": "query", "type": "string" }, "device": { "location": "query", "type": "string", "description": "device device" } }, "path": "books/v1/promooffer/get", "parameterOrder": [], "httpMethod": "GET", "description": "Returns a list of promo offers available to the user", "id": "books.promooffer.get", "response": { "$ref": "Offers" }, "flatPath": "books/v1/promooffer/get", "scopes": [ "https://www.googleapis.com/auth/books" ] }, "dismiss": { "parameters": { "manufacturer": { "location": "query", "description": "device manufacturer", "type": "string" }, "androidId": { "description": "device android_id", "location": "query", "type": "string" }, "serial": { "location": "query", "description": "device serial", "type": "string" }, "offerId": { "location": "query", "description": "Offer to dimiss", "type": "string" }, "product": { "type": "string", "location": "query", "description": "device product" }, "model": { "description": "device model", "location": "query", "type": "string" }, "device": { "description": "device device", "location": "query", "type": "string" } }, "flatPath": "books/v1/promooffer/dismiss", "response": { "$ref": "Empty" }, "httpMethod": "POST", "path": "books/v1/promooffer/dismiss", "description": "Marks the promo offer as dismissed.", "id": "books.promooffer.dismiss", "scopes": [ "https://www.googleapis.com/auth/books" ], "parameterOrder": [] } } }, "personalizedstream": { "methods": { "get": { "parameters": { "source": { "type": "string", "location": "query", "description": "String to identify the originator of this request." }, "maxAllowedMaturityRating": { "enumDescriptions": [ "", "Show books which are rated mature or lower.", "Show books which are rated not mature." ], "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.", "location": "query", "type": "string", "enum": [ "MAX_ALLOWED_MATURITY_RATING_UNDEFINED", "MATURE", "not-mature" ] }, "locale": { "type": "string", "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.", "location": "query" } }, "path": "books/v1/personalizedstream/get", "response": { "$ref": "Discoveryclusters" }, "httpMethod": "GET", "id": "books.personalizedstream.get", "flatPath": "books/v1/personalizedstream/get", "parameterOrder": [], "scopes": [ "https://www.googleapis.com/auth/books" ], "description": "Returns a stream of personalized book clusters" } } }, "mylibrary": { "resources": { "readingpositions": { "methods": { "get": { "scopes": [ "https://www.googleapis.com/auth/books" ], "parameters": { "volumeId": { "description": "ID of volume for which to retrieve a reading position.", "location": "path", "required": true, "type": "string" }, "contentVersion": { "type": "string", "description": "Volume content version for which this reading position is requested.", "location": "query" }, "source": { "location": "query", "description": "String to identify the originator of this request.", "type": "string" } }, "response": { "$ref": "ReadingPosition" }, "flatPath": "books/v1/mylibrary/readingpositions/{volumeId}", "httpMethod": "GET", "path": "books/v1/mylibrary/readingpositions/{volumeId}", "parameterOrder": [ "volumeId" ], "description": "Retrieves my reading position information for a volume.", "id": "books.mylibrary.readingpositions.get" }, "setPosition": { "description": "Sets my reading position information for a volume.", "path": "books/v1/mylibrary/readingpositions/{volumeId}/setPosition", "response": { "$ref": "Empty" }, "parameterOrder": [ "volumeId", "position", "timestamp" ], "parameters": { "volumeId": { "location": "path", "required": true, "description": "ID of volume for which to update the reading position.", "type": "string" }, "deviceCookie": { "description": "Random persistent device cookie optional on set position.", "location": "query", "type": "string" }, "contentVersion": { "description": "Volume content version for which this reading position applies.", "type": "string", "location": "query" }, "source": { "location": "query", "description": "String to identify the originator of this request.", "type": "string" }, "position": { "required": true, "location": "query", "type": "string", "description": "Position string for the new volume reading position." }, "timestamp": { "type": "string", "required": true, "location": "query", "description": "RFC 3339 UTC format timestamp associated with this reading position." }, "action": { "description": "Action that caused this reading position to be set.", "type": "string", "enumDescriptions": [ "", "User chose bookmark within volume.", "User selected chapter from list.", "Next page event.", "Previous page event.", "User navigated to page.", "User chose search results within volume." ], "enum": [ "ACTION_UNDEFINED", "bookmark", "chapter", "next-page", "prev-page", "scroll", "search" ], "location": "query" } }, "httpMethod": "POST", "flatPath": "books/v1/mylibrary/readingpositions/{volumeId}/setPosition", "scopes": [ "https://www.googleapis.com/auth/books" ], "id": "books.mylibrary.readingpositions.setPosition" } } }, "bookshelves": { "methods": { "get": { "response": { "$ref": "Bookshelf" }, "httpMethod": "GET", "parameterOrder": [ "shelf" ], "description": "Retrieves metadata for a specific bookshelf belonging to the authenticated user.", "scopes": [ "https://www.googleapis.com/auth/books" ], "flatPath": "books/v1/mylibrary/bookshelves/{shelf}", "id": "books.mylibrary.bookshelves.get", "path": "books/v1/mylibrary/bookshelves/{shelf}", "parameters": { "shelf": { "location": "path", "required": true, "description": "ID of bookshelf to retrieve.", "type": "string" }, "source": { "description": "String to identify the originator of this request.", "type": "string", "location": "query" } } }, "moveVolume": { "parameters": { "volumeId": { "description": "ID of volume to move.", "required": true, "type": "string", "location": "query" }, "source": { "type": "string", "location": "query", "description": "String to identify the originator of this request." }, "shelf": { "location": "path", "description": "ID of bookshelf with the volume.", "required": true, "type": "string" }, "volumePosition": { "format": "int32", "location": "query", "required": true, "type": "integer", "description": "Position on shelf to move the item (0 puts the item before the current first item, 1 puts it between the first and the second and so on.)" } }, "response": { "$ref": "Empty" }, "scopes": [ "https://www.googleapis.com/auth/books" ], "path": "books/v1/mylibrary/bookshelves/{shelf}/moveVolume", "id": "books.mylibrary.bookshelves.moveVolume", "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/moveVolume", "description": "Moves a volume within a bookshelf.", "httpMethod": "POST", "parameterOrder": [ "shelf", "volumeId", "volumePosition" ] }, "removeVolume": { "parameters": { "shelf": { "location": "path", "required": true, "description": "ID of bookshelf from which to remove a volume.", "type": "string" }, "reason": { "description": "The reason for which the book is removed from the library.", "enum": [ "REASON_UNDEFINED", "ONBOARDING" ], "type": "string", "enumDescriptions": [ "", "Samples removed from the Onboarding flow." ], "location": "query" }, "source": { "location": "query", "description": "String to identify the originator of this request.", "type": "string" }, "volumeId": { "location": "query", "required": true, "type": "string", "description": "ID of volume to remove." } }, "description": "Removes a volume from a bookshelf.", "parameterOrder": [ "shelf", "volumeId" ], "httpMethod": "POST", "scopes": [ "https://www.googleapis.com/auth/books" ], "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/removeVolume", "id": "books.mylibrary.bookshelves.removeVolume", "response": { "$ref": "Empty" }, "path": "books/v1/mylibrary/bookshelves/{shelf}/removeVolume" }, "list": { "parameterOrder": [], "response": { "$ref": "Bookshelves" }, "httpMethod": "GET", "scopes": [ "https://www.googleapis.com/auth/books" ], "description": "Retrieves a list of bookshelves belonging to the authenticated user.", "flatPath": "books/v1/mylibrary/bookshelves", "id": "books.mylibrary.bookshelves.list", "path": "books/v1/mylibrary/bookshelves", "parameters": { "source": { "location": "query", "description": "String to identify the originator of this request.", "type": "string" } } }, "clearVolumes": { "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/clearVolumes", "id": "books.mylibrary.bookshelves.clearVolumes", "parameterOrder": [ "shelf" ], "path": "books/v1/mylibrary/bookshelves/{shelf}/clearVolumes", "parameters": { "shelf": { "description": "ID of bookshelf from which to remove a volume.", "location": "path", "required": true, "type": "string" }, "source": { "type": "string", "description": "String to identify the originator of this request.", "location": "query" } }, "response": { "$ref": "Empty" }, "scopes": [ "https://www.googleapis.com/auth/books" ], "httpMethod": "POST", "description": "Clears all volumes from a bookshelf." }, "addVolume": { "id": "books.mylibrary.bookshelves.addVolume", "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/addVolume", "scopes": [ "https://www.googleapis.com/auth/books" ], "description": "Adds a volume to a bookshelf.", "parameterOrder": [ "shelf", "volumeId" ], "httpMethod": "POST", "path": "books/v1/mylibrary/bookshelves/{shelf}/addVolume", "response": { "$ref": "Empty" }, "parameters": { "reason": { "enumDescriptions": [ "", "Volumes added from the PREX flow on iOS.", "Volumes added from the Search flow on iOS.", "Volumes added from the Onboarding flow." ], "enum": [ "REASON_UNDEFINED", "IOS_PREX", "IOS_SEARCH", "ONBOARDING" ], "location": "query", "type": "string", "description": "The reason for which the book is added to the library." }, "shelf": { "description": "ID of bookshelf to which to add a volume.", "required": true, "location": "path", "type": "string" }, "source": { "type": "string", "location": "query", "description": "String to identify the originator of this request." }, "volumeId": { "description": "ID of volume to add.", "type": "string", "required": true, "location": "query" } } } }, "resources": { "volumes": { "methods": { "list": { "id": "books.mylibrary.bookshelves.volumes.list", "parameterOrder": [ "shelf" ], "path": "books/v1/mylibrary/bookshelves/{shelf}/volumes", "scopes": [ "https://www.googleapis.com/auth/books" ], "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/volumes", "description": "Gets volume information for volumes on a bookshelf.", "parameters": { "projection": { "location": "query", "enumDescriptions": [ "", "Includes all volume data.", "Includes a subset of fields in volumeInfo and accessInfo." ], "description": "Restrict information returned to a set of selected fields.", "type": "string", "enum": [ "PROJECTION_UNDEFINED", "FULL", "LITE" ] }, "startIndex": { "format": "uint32", "minimum": "0", "location": "query", "description": "Index of the first element to return (starts at 0)", "type": "integer" }, "shelf": { "location": "path", "description": "The bookshelf ID or name retrieve volumes for.", "required": true, "type": "string" }, "country": { "type": "string", "location": "query", "description": "ISO-3166-1 code to override the IP-based location." }, "q": { "type": "string", "description": "Full-text search query string in this bookshelf.", "location": "query" }, "showPreorders": { "type": "boolean", "location": "query", "description": "Set to true to show pre-ordered books. Defaults to false." }, "source": { "description": "String to identify the originator of this request.", "type": "string", "location": "query" }, "maxResults": { "type": "integer", "format": "uint32", "description": "Maximum number of results to return", "location": "query", "minimum": "0" } }, "response": { "$ref": "Volumes" }, "httpMethod": "GET" } } } } }, "annotations": { "methods": { "list": { "id": "books.mylibrary.annotations.list", "scopes": [ "https://www.googleapis.com/auth/books" ], "path": "books/v1/mylibrary/annotations", "parameters": { "updatedMin": { "location": "query", "description": "RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive).", "type": "string" }, "pageToken": { "location": "query", "description": "The value of the nextToken from the previous page.", "type": "string" }, "layerId": { "type": "string", "location": "query", "description": "The layer ID to limit annotation by." }, "volumeId": { "description": "The volume to restrict annotations to.", "type": "string", "location": "query" }, "maxResults": { "type": "integer", "description": "Maximum number of results to return", "minimum": "0", "maximum": "40", "location": "query", "format": "uint32" }, "updatedMax": { "location": "query", "type": "string", "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive)." }, "contentVersion": { "description": "The content version for the requested volume.", "location": "query", "type": "string" }, "showDeleted": { "location": "query", "description": "Set to true to return deleted annotations. updatedMin must be in the request to use this. Defaults to false.", "type": "boolean" }, "layerIds": { "type": "string", "description": "The layer ID(s) to limit annotation by.", "repeated": true, "location": "query" }, "source": { "type": "string", "description": "String to identify the originator of this request.", "location": "query" } }, "flatPath": "books/v1/mylibrary/annotations", "response": { "$ref": "Annotations" }, "httpMethod": "GET", "description": "Retrieves a list of annotations, possibly filtered.", "parameterOrder": [] }, "insert": { "id": "books.mylibrary.annotations.insert", "flatPath": "books/v1/mylibrary/annotations", "description": "Inserts a new annotation.", "path": "books/v1/mylibrary/annotations", "request": { "$ref": "Annotation" }, "parameters": { "showOnlySummaryInResponse": { "description": "Requests that only the summary of the specified layer be provided in the response.", "location": "query", "type": "boolean" }, "source": { "location": "query", "description": "String to identify the originator of this request.", "type": "string" }, "country": { "description": "ISO-3166-1 code to override the IP-based location.", "type": "string", "location": "query" }, "annotationId": { "location": "query", "type": "string", "description": "The ID for the annotation to insert." } }, "httpMethod": "POST", "parameterOrder": [], "response": { "$ref": "Annotation" }, "scopes": [ "https://www.googleapis.com/auth/books" ] }, "delete": { "httpMethod": "DELETE", "flatPath": "books/v1/mylibrary/annotations/{annotationId}", "path": "books/v1/mylibrary/annotations/{annotationId}", "parameters": { "source": { "type": "string", "location": "query", "description": "String to identify the originator of this request." }, "annotationId": { "type": "string", "required": true, "description": "The ID for the annotation to delete.", "location": "path" } }, "id": "books.mylibrary.annotations.delete", "scopes": [ "https://www.googleapis.com/auth/books" ], "parameterOrder": [ "annotationId" ], "response": { "$ref": "Empty" }, "description": "Deletes an annotation." }, "summary": { "scopes": [ "https://www.googleapis.com/auth/books" ], "response": { "$ref": "AnnotationsSummary" }, "id": "books.mylibrary.annotations.summary", "parameters": { "volumeId": { "type": "string", "required": true, "description": "Volume id to get the summary for.", "location": "query" }, "layerIds": { "location": "query", "description": "Array of layer IDs to get the summary for.", "required": true, "type": "string", "repeated": true } }, "httpMethod": "POST", "flatPath": "books/v1/mylibrary/annotations/summary", "path": "books/v1/mylibrary/annotations/summary", "description": "Gets the summary of specified layers.", "parameterOrder": [ "layerIds", "volumeId" ] }, "update": { "parameters": { "annotationId": { "type": "string", "location": "path", "required": true, "description": "The ID for the annotation to update." }, "source": { "description": "String to identify the originator of this request.", "location": "query", "type": "string" } }, "parameterOrder": [ "annotationId" ], "response": { "$ref": "Annotation" }, "path": "books/v1/mylibrary/annotations/{annotationId}", "scopes": [ "https://www.googleapis.com/auth/books" ], "description": "Updates an existing annotation.", "flatPath": "books/v1/mylibrary/annotations/{annotationId}", "request": { "$ref": "Annotation" }, "httpMethod": "PUT", "id": "books.mylibrary.annotations.update" } } } } }, "bookshelves": { "resources": { "volumes": { "methods": { "list": { "parameterOrder": [ "userId", "shelf" ], "id": "books.bookshelves.volumes.list", "parameters": { "startIndex": { "description": "Index of the first element to return (starts at 0)", "location": "query", "type": "integer", "minimum": "0", "format": "uint32" }, "maxResults": { "type": "integer", "minimum": "0", "format": "uint32", "description": "Maximum number of results to return", "location": "query" }, "shelf": { "description": "ID of bookshelf to retrieve volumes.", "required": true, "type": "string", "location": "path" }, "source": { "description": "String to identify the originator of this request.", "type": "string", "location": "query" }, "userId": { "required": true, "type": "string", "location": "path", "description": "ID of user for whom to retrieve bookshelf volumes." }, "showPreorders": { "description": "Set to true to show pre-ordered books. Defaults to false.", "type": "boolean", "location": "query" } }, "scopes": [ "https://www.googleapis.com/auth/books" ], "path": "books/v1/users/{userId}/bookshelves/{shelf}/volumes", "httpMethod": "GET", "description": "Retrieves volumes in a specific bookshelf for the specified user.", "response": { "$ref": "Volumes" }, "flatPath": "books/v1/users/{userId}/bookshelves/{shelf}/volumes" } } } }, "methods": { "get": { "parameterOrder": [ "userId", "shelf" ], "flatPath": "books/v1/users/{userId}/bookshelves/{shelf}", "response": { "$ref": "Bookshelf" }, "httpMethod": "GET", "description": "Retrieves metadata for a specific bookshelf for the specified user.", "id": "books.bookshelves.get", "path": "books/v1/users/{userId}/bookshelves/{shelf}", "parameters": { "shelf": { "description": "ID of bookshelf to retrieve.", "required": true, "location": "path", "type": "string" }, "source": { "description": "String to identify the originator of this request.", "type": "string", "location": "query" }, "userId": { "location": "path", "type": "string", "description": "ID of user for whom to retrieve bookshelves.", "required": true } }, "scopes": [ "https://www.googleapis.com/auth/books" ] }, "list": { "id": "books.bookshelves.list", "response": { "$ref": "Bookshelves" }, "httpMethod": "GET", "description": "Retrieves a list of public bookshelves for the specified user.", "path": "books/v1/users/{userId}/bookshelves", "parameters": { "userId": { "location": "path", "required": true, "description": "ID of user for whom to retrieve bookshelves.", "type": "string" }, "source": { "location": "query", "description": "String to identify the originator of this request.", "type": "string" } }, "flatPath": "books/v1/users/{userId}/bookshelves", "scopes": [ "https://www.googleapis.com/auth/books" ], "parameterOrder": [ "userId" ] } } }, "dictionary": { "methods": { "listOfflineMetadata": { "scopes": [ "https://www.googleapis.com/auth/books" ], "flatPath": "books/v1/dictionary/listOfflineMetadata", "parameterOrder": [ "cpksver" ], "description": "Returns a list of offline dictionary metadata available", "httpMethod": "GET", "parameters": { "cpksver": { "required": true, "description": "The device/version ID from which to request the data.", "location": "query", "type": "string" } }, "response": { "$ref": "Metadata" }, "id": "books.dictionary.listOfflineMetadata", "path": "books/v1/dictionary/listOfflineMetadata" } } }, "myconfig": { "methods": { "getUserSettings": { "id": "books.myconfig.getUserSettings", "scopes": [ "https://www.googleapis.com/auth/books" ], "parameters": { "country": { "type": "string", "description": "Unused. Added only to workaround TEX mandatory request template requirement", "location": "query" } }, "flatPath": "books/v1/myconfig/getUserSettings", "httpMethod": "GET", "parameterOrder": [], "description": "Gets the current settings for the user.", "response": { "$ref": "Usersettings" }, "path": "books/v1/myconfig/getUserSettings" }, "requestAccess": { "response": { "$ref": "RequestAccessData" }, "id": "books.myconfig.requestAccess", "parameterOrder": [ "cpksver", "nonce", "source", "volumeId" ], "scopes": [ "https://www.googleapis.com/auth/books" ], "path": "books/v1/myconfig/requestAccess", "httpMethod": "POST", "description": "Request concurrent and download access restrictions.", "parameters": { "cpksver": { "location": "query", "description": "The device/version ID from which to request the restrictions.", "required": true, "type": "string" }, "nonce": { "description": "The client nonce value.", "type": "string", "required": true, "location": "query" }, "source": { "required": true, "location": "query", "type": "string", "description": "String to identify the originator of this request." }, "volumeId": { "type": "string", "location": "query", "description": "The volume to request concurrent/download restrictions for.", "required": true }, "locale": { "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.", "type": "string", "location": "query" }, "licenseTypes": { "enum": [ "LICENSE_TYPES_UNDEFINED", "BOTH", "CONCURRENT", "DOWNLOAD" ], "description": "The type of access license to request. If not specified, the default is BOTH.", "location": "query", "enumDescriptions": [ "", "Both concurrent and download licenses.", "Concurrent access license.", "Offline download access license." ], "type": "string" } }, "flatPath": "books/v1/myconfig/requestAccess" }, "syncVolumeLicenses": { "flatPath": "books/v1/myconfig/syncVolumeLicenses", "parameters": { "cpksver": { "required": true, "location": "query", "description": "The device/version ID from which to release the restriction.", "type": "string" }, "locale": { "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.", "location": "query", "type": "string" }, "features": { "repeated": true, "type": "string", "enumDescriptions": [ "", "Client supports rentals." ], "enum": [ "FEATURES_UNDEFINED", "RENTALS" ], "location": "query", "description": "List of features supported by the client, i.e., 'RENTALS'" }, "includeNonComicsSeries": { "description": "Set to true to include non-comics series. Defaults to false.", "type": "boolean", "location": "query" }, "nonce": { "description": "The client nonce value.", "required": true, "type": "string", "location": "query" }, "source": { "type": "string", "location": "query", "description": "String to identify the originator of this request.", "required": true }, "volumeIds": { "location": "query", "description": "The volume(s) to request download restrictions for.", "type": "string", "repeated": true }, "showPreorders": { "type": "boolean", "description": "Set to true to show pre-ordered books. Defaults to false.", "location": "query" } }, "description": "Request downloaded content access for specified volumes on the My eBooks shelf.", "id": "books.myconfig.syncVolumeLicenses", "response": { "$ref": "Volumes" }, "path": "books/v1/myconfig/syncVolumeLicenses", "parameterOrder": [ "cpksver", "nonce", "source" ], "httpMethod": "POST", "scopes": [ "https://www.googleapis.com/auth/books" ] }, "releaseDownloadAccess": { "id": "books.myconfig.releaseDownloadAccess", "flatPath": "books/v1/myconfig/releaseDownloadAccess", "scopes": [ "https://www.googleapis.com/auth/books" ], "parameters": { "cpksver": { "required": true, "description": "The device/version ID from which to release the restriction.", "location": "query", "type": "string" }, "volumeIds": { "description": "The volume(s) to release restrictions for.", "required": true, "location": "query", "type": "string", "repeated": true }, "locale": { "type": "string", "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.", "location": "query" }, "source": { "type": "string", "description": "String to identify the originator of this request.", "location": "query" } }, "path": "books/v1/myconfig/releaseDownloadAccess", "description": "Release downloaded content access restriction.", "httpMethod": "POST", "response": { "$ref": "DownloadAccesses" }, "parameterOrder": [ "cpksver", "volumeIds" ] }, "updateUserSettings": { "httpMethod": "POST", "flatPath": "books/v1/myconfig/updateUserSettings", "parameterOrder": [], "description": "Sets the settings for the user. If a sub-object is specified, it will overwrite the existing sub-object stored in the server. Unspecified sub-objects will retain the existing value.", "id": "books.myconfig.updateUserSettings", "request": { "$ref": "Usersettings" }, "response": { "$ref": "Usersettings" }, "scopes": [ "https://www.googleapis.com/auth/books" ], "path": "books/v1/myconfig/updateUserSettings", "parameters": {} } } }, "cloudloading": { "methods": { "deleteBook": { "path": "books/v1/cloudloading/deleteBook", "scopes": [ "https://www.googleapis.com/auth/books" ], "response": { "$ref": "Empty" }, "flatPath": "books/v1/cloudloading/deleteBook", "parameters": { "volumeId": { "type": "string", "location": "query", "description": "The id of the book to be removed.", "required": true } }, "description": "Remove the book and its contents", "httpMethod": "POST", "parameterOrder": [ "volumeId" ], "id": "books.cloudloading.deleteBook" }, "addBook": { "parameters": { "mime_type": { "type": "string", "location": "query", "description": "The document MIME type. It can be set only if the drive_document_id is set." }, "name": { "type": "string", "description": "The document name. It can be set only if the drive_document_id is set.", "location": "query" }, "upload_client_token": { "location": "query", "description": "Scotty upload token.", "type": "string" }, "drive_document_id": { "location": "query", "description": "A drive document id. The upload_client_token must not be set.", "type": "string" } }, "path": "books/v1/cloudloading/addBook", "id": "books.cloudloading.addBook", "scopes": [ "https://www.googleapis.com/auth/books" ], "httpMethod": "POST", "description": "Add a user-upload volume and triggers processing.", "response": { "$ref": "BooksCloudloadingResource" }, "flatPath": "books/v1/cloudloading/addBook", "parameterOrder": [] }, "updateBook": { "path": "books/v1/cloudloading/updateBook", "flatPath": "books/v1/cloudloading/updateBook", "request": { "$ref": "BooksCloudloadingResource" }, "parameters": {}, "parameterOrder": [], "response": { "$ref": "BooksCloudloadingResource" }, "httpMethod": "POST", "description": "Updates a user-upload volume.", "scopes": [ "https://www.googleapis.com/auth/books" ], "id": "books.cloudloading.updateBook" } } }, "familysharing": { "methods": { "unshare": { "description": "Initiates revoking content that has already been shared with the user's family. Empty response indicates success.", "httpMethod": "POST", "parameterOrder": [], "parameters": { "source": { "location": "query", "type": "string", "description": "String to identify the originator of this request." }, "volumeId": { "description": "The volume to unshare.", "location": "query", "type": "string" }, "docId": { "location": "query", "description": "The docid to unshare.", "type": "string" } }, "response": { "$ref": "Empty" }, "id": "books.familysharing.unshare", "scopes": [ "https://www.googleapis.com/auth/books" ], "path": "books/v1/familysharing/unshare", "flatPath": "books/v1/familysharing/unshare" }, "getFamilyInfo": { "response": { "$ref": "FamilyInfo" }, "httpMethod": "GET", "flatPath": "books/v1/familysharing/getFamilyInfo", "scopes": [ "https://www.googleapis.com/auth/books" ], "path": "books/v1/familysharing/getFamilyInfo", "parameters": { "source": { "type": "string", "description": "String to identify the originator of this request.", "location": "query" } }, "parameterOrder": [], "description": "Gets information regarding the family that the user is part of.", "id": "books.familysharing.getFamilyInfo" }, "share": { "id": "books.familysharing.share", "flatPath": "books/v1/familysharing/share", "path": "books/v1/familysharing/share", "parameters": { "source": { "location": "query", "type": "string", "description": "String to identify the originator of this request." }, "volumeId": { "type": "string", "description": "The volume to share.", "location": "query" }, "docId": { "description": "The docid to share.", "type": "string", "location": "query" } }, "scopes": [ "https://www.googleapis.com/auth/books" ], "response": { "$ref": "Empty" }, "httpMethod": "POST", "parameterOrder": [], "description": "Initiates sharing of the content with the user's family. Empty response indicates success." } } } }, "kind": "discovery#restDescription", "schemas": { "Volumeannotation": { "id": "Volumeannotation", "type": "object", "properties": { "annotationDataLink": { "description": "Link to get data for this annotation.", "type": "string" }, "pageIds": { "items": { "type": "string" }, "type": "array", "description": "Pages the annotation spans." }, "annotationType": { "description": "The type of annotation this is.", "type": "string" }, "layerId": { "type": "string", "description": "The Layer this annotation is for." }, "deleted": { "description": "Indicates that this annotation is deleted.", "type": "boolean" }, "id": { "description": "Unique id of this volume annotation.", "type": "string" }, "annotationDataId": { "description": "The annotation data id for this volume annotation.", "type": "string" }, "kind": { "type": "string", "description": "Resource Type" }, "selfLink": { "type": "string", "description": "URL to this resource." }, "contentRanges": { "properties": { "gbImageRange": { "$ref": "BooksAnnotationsRange", "description": "Range in GB image format for this annotation for version above." }, "contentVersion": { "type": "string", "description": "Content version applicable to ranges below." }, "gbTextRange": { "$ref": "BooksAnnotationsRange", "description": "Range in GB text format for this annotation for version above." }, "cfiRange": { "description": "Range in CFI format for this annotation for version above.", "$ref": "BooksAnnotationsRange" } }, "description": "The content ranges to identify the selected text.", "type": "object" }, "data": { "type": "string", "description": "Data for this annotation." }, "updated": { "type": "string", "description": "Timestamp for the last time this anntoation was updated. (RFC 3339 UTC date-time format)." }, "volumeId": { "description": "The Volume this annotation is for.", "type": "string" }, "selectedText": { "description": "Excerpt from the volume.", "type": "string" } } }, "DownloadAccesses": { "id": "DownloadAccesses", "properties": { "kind": { "description": "Resource type.", "type": "string" }, "downloadAccessList": { "items": { "$ref": "DownloadAccessRestriction" }, "description": "A list of download access responses.", "type": "array" } }, "type": "object" }, "Category": { "id": "Category", "properties": { "kind": { "description": "Resource type.", "type": "string" }, "items": { "items": { "type": "object", "properties": { "name": { "type": "string" }, "badgeUrl": { "type": "string" }, "categoryId": { "type": "string" } } }, "type": "array", "description": "A list of onboarding categories." } }, "type": "object" }, "Volumeannotations": { "properties": { "version": { "description": "The version string for all of the volume annotations in this layer (not just the ones in this response). Note: the version string doesn't apply to the annotation data, just the information in this response (e.g. the location of annotations in the book).", "type": "string" }, "kind": { "description": "Resource type", "type": "string" }, "nextPageToken": { "description": "Token to pass in for pagination for the next page. This will not be present if this request does not have more results.", "type": "string" }, "totalItems": { "type": "integer", "description": "The total number of volume annotations found.", "format": "int32" }, "items": { "type": "array", "description": "A list of volume annotations.", "items": { "$ref": "Volumeannotation" } } }, "id": "Volumeannotations", "type": "object" }, "Annotation": { "id": "Annotation", "type": "object", "properties": { "selectedText": { "description": "Excerpt from the volume.", "type": "string" }, "updated": { "type": "string", "description": "Timestamp for the last time this annotation was modified." }, "selfLink": { "type": "string", "description": "URL to this resource." }, "clientVersionRanges": { "properties": { "contentVersion": { "type": "string", "description": "Content version the client sent in." }, "cfiRange": { "description": "Range in CFI format for this annotation sent by client.", "$ref": "BooksAnnotationsRange" }, "gbImageRange": { "description": "Range in GB image format for this annotation sent by client.", "$ref": "BooksAnnotationsRange" }, "gbTextRange": { "$ref": "BooksAnnotationsRange", "description": "Range in GB text format for this annotation sent by client." }, "imageCfiRange": { "$ref": "BooksAnnotationsRange", "description": "Range in image CFI format for this annotation sent by client." } }, "type": "object", "description": "Selection ranges sent from the client." }, "created": { "description": "Timestamp for the created time of this annotation.", "type": "string" }, "pageIds": { "description": "Pages that this annotation spans.", "items": { "type": "string" }, "type": "array" }, "deleted": { "description": "Indicates that this annotation is deleted.", "type": "boolean" }, "data": { "description": "User-created data for this annotation.", "type": "string" }, "layerId": { "type": "string", "description": "The layer this annotation is for." }, "id": { "description": "Id of this annotation, in the form of a GUID.", "type": "string" }, "kind": { "description": "Resource type.", "type": "string" }, "currentVersionRanges": { "type": "object", "description": "Selection ranges for the most recent content version.", "properties": { "gbTextRange": { "$ref": "BooksAnnotationsRange", "description": "Range in GB text format for this annotation for version above." }, "imageCfiRange": { "description": "Range in image CFI format for this annotation for version above.", "$ref": "BooksAnnotationsRange" }, "gbImageRange": { "description": "Range in GB image format for this annotation for version above.", "$ref": "BooksAnnotationsRange" }, "cfiRange": { "$ref": "BooksAnnotationsRange", "description": "Range in CFI format for this annotation for version above." }, "contentVersion": { "description": "Content version applicable to ranges below.", "type": "string" } } }, "highlightStyle": { "description": "The highlight style for this annotation.", "type": "string" }, "afterSelectedText": { "type": "string", "description": "Anchor text after excerpt. For requests, if the user bookmarked a screen that has no flowing text on it, then this field should be empty." }, "volumeId": { "type": "string", "description": "The volume that this annotation belongs to." }, "beforeSelectedText": { "description": "Anchor text before excerpt. For requests, if the user bookmarked a screen that has no flowing text on it, then this field should be empty.", "type": "string" }, "layerSummary": { "type": "object", "properties": { "remainingCharacterCount": { "format": "int32", "type": "integer", "description": "Remaining allowed characters on this layer, especially for the \"copy\" layer." }, "limitType": { "type": "string", "description": "Type of limitation on this layer. \"limited\" or \"unlimited\" for the \"copy\" layer." }, "allowedCharacterCount": { "type": "integer", "format": "int32", "description": "Maximum allowed characters on this layer, especially for the \"copy\" layer." } } } } }, "Volume": { "properties": { "userInfo": { "properties": { "entitlementType": { "type": "integer", "format": "int32", "description": "Whether this volume is purchased, sample, pd download etc." }, "isFamilySharingDisabledByFop": { "type": "boolean", "description": "Deprecated: Replaced by familySharing." }, "isPurchased": { "type": "boolean", "description": "Whether or not this volume was purchased by the authenticated user making the request. (In LITE projection.)" }, "readingPosition": { "$ref": "ReadingPosition", "description": "The user's current reading position in the volume, if one is available. (In LITE projection.)" }, "rentalState": { "type": "string", "description": "Whether this book is an active or an expired rental." }, "familySharing": { "type": "object", "description": "Information on the ability to share with the family.", "properties": { "isSharingDisabledByFop": { "description": "Whether or not sharing this volume is temporarily disabled due to issues with the Family Wallet.", "type": "boolean" }, "isSharingAllowed": { "description": "Whether or not this volume can be shared with the family by the user. This includes sharing eligibility of both the volume and the user. If the value is true, the user can initiate a family sharing action.", "type": "boolean" }, "familyRole": { "description": "The role of the user in the family.", "type": "string" } } }, "isPreordered": { "description": "Whether or not this volume was pre-ordered by the authenticated user making the request. (In LITE projection.)", "type": "boolean" }, "isFamilySharedFromUser": { "description": "Whether or not the user shared this volume with the family.", "type": "boolean" }, "isUploaded": { "type": "boolean", "description": "Whether or not this volume was user uploaded." }, "userUploadedVolumeInfo": { "properties": { "processingState": { "type": "string" } }, "type": "object" }, "updated": { "description": "Timestamp when this volume was last modified by a user action, such as a reading position update, volume purchase or writing a review. (RFC 3339 UTC date-time format).", "type": "string" }, "copy": { "type": "object", "properties": { "limitType": { "type": "string" }, "allowedCharacterCount": { "format": "int32", "type": "integer" }, "remainingCharacterCount": { "type": "integer", "format": "int32" }, "updated": { "type": "string" } }, "description": "Copy/Paste accounting information." }, "acquisitionType": { "description": "How this volume was acquired.", "type": "integer", "format": "int32" }, "acquiredTime": { "type": "string", "description": "Timestamp when this volume was acquired by the user. (RFC 3339 UTC date-time format) Acquiring includes purchase, user upload, receiving family sharing, etc." }, "review": { "description": "This user's review of this volume, if one exists.", "$ref": "Review" }, "isFamilySharingAllowed": { "type": "boolean", "description": "Deprecated: Replaced by familySharing." }, "isFamilySharedToUser": { "description": "Whether or not the user received this volume through family sharing.", "type": "boolean" }, "isInMyBooks": { "description": "Whether or not this volume is currently in \"my books.\"", "type": "boolean" }, "rentalPeriod": { "properties": { "startUtcSec": { "type": "string", "format": "int64" }, "endUtcSec": { "format": "int64", "type": "string" } }, "description": "Period during this book is/was a valid rental.", "type": "object" } }, "type": "object", "description": "User specific information related to this volume. (e.g. page this user last read or whether they purchased this book)" }, "searchInfo": { "type": "object", "description": "Search result information related to this volume.", "properties": { "textSnippet": { "type": "string", "description": "A text snippet containing the search query." } } }, "id": { "description": "Unique identifier for a volume. (In LITE projection.)", "type": "string" }, "kind": { "description": "Resource type for a volume. (In LITE projection.)", "type": "string" }, "selfLink": { "type": "string", "description": "URL to this resource. (In LITE projection.)" }, "layerInfo": { "description": "What layers exist in this volume and high level information about them.", "properties": { "layers": { "items": { "type": "object", "properties": { "volumeAnnotationsVersion": { "description": "The current version of this layer's volume annotations. Note that this version applies only to the data in the books.layers.volumeAnnotations.* responses. The actual annotation data is versioned separately.", "type": "string" }, "layerId": { "description": "The layer id of this layer (e.g. \"geo\").", "type": "string" } } }, "type": "array", "description": "A layer should appear here if and only if the layer exists for this book." } }, "type": "object" }, "etag": { "type": "string", "description": "Opaque identifier for a specific version of a volume resource. (In LITE projection)" }, "accessInfo": { "description": "Any information about a volume related to reading or obtaining that volume text. This information can depend on country (books may be public domain in one country but not in another, e.g.).", "properties": { "pdf": { "type": "object", "properties": { "isAvailable": { "description": "Is a scanned image pdf available either as public domain or for purchase. (In LITE projection.)", "type": "boolean" }, "acsTokenLink": { "type": "string", "description": "URL to retrieve ACS token for pdf download. (In LITE projection.)" }, "downloadLink": { "type": "string", "description": "URL to download pdf. (In LITE projection.)" } }, "description": "Information about pdf content. (In LITE projection.)" }, "embeddable": { "type": "boolean", "description": "Whether this volume can be embedded in a viewport using the Embedded Viewer API." }, "country": { "description": "The two-letter ISO_3166-1 country code for which this access information is valid. (In LITE projection.)", "type": "string" }, "viewability": { "description": "The read access of a volume. Possible values are PARTIAL, ALL_PAGES, NO_PAGES or UNKNOWN. This value depends on the country listed above. A value of PARTIAL means that the publisher has allowed some portion of the volume to be viewed publicly, without purchase. This can apply to eBooks as well as non-eBooks. Public domain books will always have a value of ALL_PAGES.", "type": "string" }, "publicDomain": { "type": "boolean", "description": "Whether or not this book is public domain in the country listed above." }, "driveImportedContentLink": { "type": "string", "description": "URL to the Google Drive viewer if this volume is uploaded by the user by selecting the file from Google Drive." }, "viewOrderUrl": { "description": "For ordered but not yet processed orders, we give a URL that can be used to go to the appropriate Google Wallet page.", "type": "string" }, "downloadAccess": { "description": "Information about a volume's download license access restrictions.", "$ref": "DownloadAccessRestriction" }, "accessViewStatus": { "type": "string", "description": "Combines the access and viewability of this volume into a single status field for this user. Values can be FULL_PURCHASED, FULL_PUBLIC_DOMAIN, SAMPLE or NONE. (In LITE projection.)" }, "textToSpeechPermission": { "description": "Whether text-to-speech is permitted for this volume. Values can be ALLOWED, ALLOWED_FOR_ACCESSIBILITY, or NOT_ALLOWED.", "type": "string" }, "quoteSharingAllowed": { "description": "Whether quote sharing is allowed for this volume.", "type": "boolean" }, "webReaderLink": { "description": "URL to read this volume on the Google Books site. Link will not allow users to read non-viewable volumes.", "type": "string" }, "explicitOfflineLicenseManagement": { "type": "boolean", "description": "Whether this volume requires that the client explicitly request offline download license rather than have it done automatically when loading the content, if the client supports it." }, "epub": { "description": "Information about epub content. (In LITE projection.)", "type": "object", "properties": { "acsTokenLink": { "description": "URL to retrieve ACS token for epub download. (In LITE projection.)", "type": "string" }, "isAvailable": { "type": "boolean", "description": "Is a flowing text epub available either as public domain or for purchase. (In LITE projection.)" }, "downloadLink": { "description": "URL to download epub. (In LITE projection.)", "type": "string" } } } }, "type": "object" }, "volumeInfo": { "type": "object", "properties": { "industryIdentifiers": { "type": "array", "items": { "type": "object", "properties": { "identifier": { "type": "string", "description": "Industry specific volume identifier." }, "type": { "type": "string", "description": "Identifier type. Possible values are ISBN_10, ISBN_13, ISSN and OTHER." } } }, "description": "Industry standard identifiers for this volume." }, "panelizationSummary": { "type": "object", "properties": { "containsImageBubbles": { "type": "boolean" }, "containsEpubBubbles": { "type": "boolean" }, "imageBubbleVersion": { "type": "string" }, "epubBubbleVersion": { "type": "string" } }, "description": "A top-level summary of the panelization info in this volume." }, "readingModes": { "description": "The reading modes available for this volume.", "properties": { "image": { "type": "boolean" }, "text": { "type": "boolean" } }, "type": "object" }, "imageLinks": { "properties": { "extraLarge": { "description": "Image link for extra large size (width of ~1280 pixels). (In LITE projection)", "type": "string" }, "smallThumbnail": { "type": "string", "description": "Image link for small thumbnail size (width of ~80 pixels). (In LITE projection)" }, "small": { "description": "Image link for small size (width of ~300 pixels). (In LITE projection)", "type": "string" }, "thumbnail": { "description": "Image link for thumbnail size (width of ~128 pixels). (In LITE projection)", "type": "string" }, "large": { "description": "Image link for large size (width of ~800 pixels). (In LITE projection)", "type": "string" }, "medium": { "type": "string", "description": "Image link for medium size (width of ~575 pixels). (In LITE projection)" } }, "type": "object", "description": "A list of image links for all the sizes that are available. (In LITE projection.)" }, "printType": { "type": "string", "description": "Type of publication of this volume. Possible values are BOOK or MAGAZINE." }, "categories": { "items": { "type": "string" }, "type": "array", "description": "A list of subject categories, such as \"Fiction\", \"Suspense\", etc." }, "mainCategory": { "description": "The main category to which this volume belongs. It will be the category from the categories list returned below that has the highest weight.", "type": "string" }, "authors": { "items": { "type": "string" }, "description": "The names of the authors and/or editors for this volume. (In LITE projection)", "type": "array" }, "title": { "description": "Volume title. (In LITE projection.)", "type": "string" }, "maturityRating": { "type": "string" }, "language": { "description": "Best language for this volume (based on content). It is the two-letter ISO 639-1 code such as 'fr', 'en', etc.", "type": "string" }, "printedPageCount": { "type": "integer", "description": "Total number of printed pages in generated pdf representation.", "format": "int32" }, "averageRating": { "type": "number", "description": "The mean review rating for this volume. (min = 1.0, max = 5.0)", "format": "double" }, "contentVersion": { "type": "string", "description": "An identifier for the version of the volume content (text & images). (In LITE projection)" }, "allowAnonLogging": { "description": "Whether anonymous logging should be allowed.", "type": "boolean" }, "dimensions": { "type": "object", "description": "Physical dimensions of this volume.", "properties": { "width": { "description": "Width of this volume (in cm).", "type": "string" }, "thickness": { "type": "string", "description": "Thickness of this volume (in cm)." }, "height": { "description": "Height or length of this volume (in cm).", "type": "string" } } }, "publisher": { "description": "Publisher of this volume. (In LITE projection.)", "type": "string" }, "infoLink": { "description": "URL to view information about this volume on the Google Books site. (In LITE projection)", "type": "string" }, "canonicalVolumeLink": { "description": "Canonical URL for a volume. (In LITE projection.)", "type": "string" }, "previewLink": { "description": "URL to preview this volume on the Google Books site.", "type": "string" }, "subtitle": { "description": "Volume subtitle. (In LITE projection.)", "type": "string" }, "publishedDate": { "description": "Date of publication. (In LITE projection.)", "type": "string" }, "pageCount": { "description": "Total number of pages as per publisher metadata.", "format": "int32", "type": "integer" }, "ratingsCount": { "format": "int32", "description": "The number of review ratings for this volume.", "type": "integer" }, "seriesInfo": { "$ref": "Volumeseriesinfo" }, "description": { "description": "A synopsis of the volume. The text of the description is formatted in HTML and includes simple formatting elements, such as b, i, and br tags. (In LITE projection.)", "type": "string" }, "samplePageCount": { "description": "Total number of sample pages as per publisher metadata.", "type": "integer", "format": "int32" }, "comicsContent": { "type": "boolean", "description": "Whether the volume has comics content." } }, "description": "General volume information." }, "saleInfo": { "properties": { "buyLink": { "type": "string", "description": "URL to purchase this volume on the Google Books site. (In LITE projection)" }, "saleability": { "description": "Whether or not this book is available for sale or offered for free in the Google eBookstore for the country listed above. Possible values are FOR_SALE, FOR_RENTAL_ONLY, FOR_SALE_AND_RENTAL, FREE, NOT_FOR_SALE, or FOR_PREORDER.", "type": "string" }, "country": { "description": "The two-letter ISO_3166-1 country code for which this sale information is valid. (In LITE projection.)", "type": "string" }, "retailPrice": { "description": "The actual selling price of the book. This is the same as the suggested retail or list price unless there are offers or discounts on this volume. (In LITE projection.)", "properties": { "amount": { "type": "number", "description": "Amount in the currency listed below. (In LITE projection.)", "format": "double" }, "currencyCode": { "type": "string", "description": "An ISO 4217, three-letter currency code. (In LITE projection.)" } }, "type": "object" }, "isEbook": { "description": "Whether or not this volume is an eBook (can be added to the My eBooks shelf).", "type": "boolean" }, "offers": { "description": "Offers available for this volume (sales and rentals).", "type": "array", "items": { "type": "object", "properties": { "giftable": { "description": "Indicates whether the offer is giftable.", "type": "boolean" }, "rentalDuration": { "type": "object", "properties": { "unit": { "type": "string" }, "count": { "format": "double", "type": "number" } }, "description": "The rental duration (for rental offers only)." }, "listPrice": { "type": "object", "properties": { "amountInMicros": { "format": "double", "type": "number" }, "currencyCode": { "type": "string" } }, "description": "Offer list (=undiscounted) price in Micros." }, "retailPrice": { "description": "Offer retail (=discounted) price in Micros", "properties": { "currencyCode": { "type": "string" }, "amountInMicros": { "format": "double", "type": "number" } }, "type": "object" }, "finskyOfferType": { "format": "int32", "description": "The finsky offer type (e.g., PURCHASE=0 RENTAL=3)", "type": "integer" } } } }, "onSaleDate": { "type": "string", "description": "The date on which this book is available for sale." }, "listPrice": { "type": "object", "description": "Suggested retail price. (In LITE projection.)", "properties": { "currencyCode": { "type": "string", "description": "An ISO 4217, three-letter currency code. (In LITE projection.)" }, "amount": { "format": "double", "description": "Amount in the currency listed below. (In LITE projection.)", "type": "number" } } } }, "description": "Any information about a volume related to the eBookstore and/or purchaseability. This information can depend on the country where the request originates from (i.e. books may not be for sale in certain countries).", "type": "object" }, "recommendedInfo": { "properties": { "explanation": { "description": "A text explaining why this volume is recommended.", "type": "string" } }, "type": "object", "description": "Recommendation related information for this volume." } }, "id": "Volume", "type": "object" }, "Volume2": { "type": "object", "properties": { "nextPageToken": { "type": "string" }, "kind": { "type": "string", "description": "Resource type." }, "items": { "items": { "$ref": "Volume" }, "type": "array", "description": "A list of volumes." } }, "id": "Volume2" }, "Geolayerdata": { "id": "Geolayerdata", "properties": { "common": { "type": "object", "properties": { "previewImageUrl": { "description": "The URL for the preview image information.", "type": "string" }, "snippet": { "type": "string", "description": "The description for this location." }, "snippetUrl": { "type": "string", "description": "The URL for information for this location. Ex: wikipedia link." }, "lang": { "description": "The language of the information url and description.", "type": "string" }, "title": { "description": "The display title and localized canonical name to use when searching for this entity on Google search.", "type": "string" } } }, "kind": { "type": "string" }, "geo": { "properties": { "boundary": { "description": "The boundary of the location as a set of loops containing pairs of latitude, longitude coordinates.", "items": { "type": "string" }, "type": "array" }, "zoom": { "type": "integer", "description": "The Zoom level to use for the map. Zoom levels between 0 (the lowest zoom level, in which the entire world can be seen on one map) to 21+ (down to individual buildings). See: https: //developers.google.com/maps/documentation/staticmaps/#Zoomlevels", "format": "int32" }, "latitude": { "type": "number", "description": "The latitude of the location.", "format": "double" }, "viewport": { "type": "object", "description": "The viewport for showing this location. This is a latitude, longitude rectangle.", "properties": { "hi": { "properties": { "latitude": { "type": "number", "format": "double" }, "longitude": { "type": "number", "format": "double" } }, "type": "object" }, "lo": { "type": "object", "properties": { "latitude": { "type": "number", "format": "double" }, "longitude": { "type": "number", "format": "double" } } } } }, "countryCode": { "type": "string", "description": "The country code of the location." }, "mapType": { "description": "The type of map that should be used for this location. EX: HYBRID, ROADMAP, SATELLITE, TERRAIN", "type": "string" }, "longitude": { "type": "number", "description": "The longitude of the location.", "format": "double" }, "cachePolicy": { "description": "The cache policy active for this data. EX: UNRESTRICTED, RESTRICTED, NEVER", "type": "string" } }, "type": "object" } }, "type": "object" }, "BooksVolumesRecommendedRateResponse": { "id": "BooksVolumesRecommendedRateResponse", "properties": { "consistency_token": { "type": "string" } }, "type": "object" }, "Bookshelves": { "type": "object", "properties": { "kind": { "description": "Resource type.", "type": "string" }, "items": { "description": "A list of bookshelves.", "items": { "$ref": "Bookshelf" }, "type": "array" } }, "id": "Bookshelves" }, "Offers": { "id": "Offers", "properties": { "items": { "items": { "type": "object", "properties": { "id": { "type": "string" }, "gservicesKey": { "type": "string" }, "items": { "type": "array", "items": { "properties": { "title": { "type": "string" }, "volumeId": { "type": "string" }, "canonicalVolumeLink": { "type": "string" }, "description": { "type": "string" }, "author": { "type": "string" }, "coverUrl": { "type": "string" } }, "type": "object" } }, "artUrl": { "type": "string" } } }, "description": "A list of offers.", "type": "array" }, "kind": { "description": "Resource type.", "type": "string" } }, "type": "object" }, "ConcurrentAccessRestriction": { "id": "ConcurrentAccessRestriction", "type": "object", "properties": { "reasonCode": { "type": "string", "description": "Error/warning reason code." }, "source": { "type": "string", "description": "Client app identifier for verification. Download access and client-validation only." }, "kind": { "type": "string", "description": "Resource type." }, "timeWindowSeconds": { "description": "Time in seconds for license auto-expiration.", "format": "int32", "type": "integer" }, "nonce": { "description": "Client nonce for verification. Download access and client-validation only.", "type": "string" }, "restricted": { "type": "boolean", "description": "Whether this volume has any concurrent access restrictions." }, "signature": { "type": "string", "description": "Response signature." }, "deviceAllowed": { "type": "boolean", "description": "Whether access is granted for this (user, device, volume)." }, "maxConcurrentDevices": { "format": "int32", "description": "The maximum number of concurrent access licenses for this volume.", "type": "integer" }, "volumeId": { "description": "Identifies the volume for which this entry applies.", "type": "string" }, "message": { "description": "Error/warning message.", "type": "string" } } }, "RequestAccessData": { "id": "RequestAccessData", "properties": { "kind": { "type": "string", "description": "Resource type." }, "downloadAccess": { "description": "A download access response.", "$ref": "DownloadAccessRestriction" }, "concurrentAccess": { "$ref": "ConcurrentAccessRestriction", "description": "A concurrent access response." } }, "type": "object" }, "Series": { "properties": { "kind": { "description": "Resource type.", "type": "string" }, "series": { "items": { "properties": { "title": { "type": "string" }, "seriesSubscriptionReleaseInfo": { "properties": { "currentReleaseInfo": { "type": "object", "properties": { "currencyCode": { "type": "string" }, "releaseNumber": { "type": "string" }, "amountInMicros": { "type": "number", "format": "double" }, "releaseTime": { "type": "string" } } }, "nextReleaseInfo": { "type": "object", "properties": { "amountInMicros": { "type": "number", "format": "double" }, "releaseNumber": { "type": "string" }, "releaseTime": { "type": "string" }, "currencyCode": { "type": "string" } } }, "cancelTime": { "type": "string" }, "seriesSubscriptionType": { "type": "string" } }, "type": "object" }, "seriesId": { "type": "string" }, "subscriptionId": { "type": "string" }, "bannerImageUrl": { "type": "string" }, "isComplete": { "type": "boolean" }, "imageUrl": { "type": "string" }, "eligibleForSubscription": { "type": "boolean" }, "seriesType": { "type": "string" }, "seriesFormatType": { "type": "string" } }, "type": "object" }, "type": "array" } }, "id": "Series", "type": "object" }, "Dictlayerdata": { "properties": { "kind": { "type": "string" }, "common": { "type": "object", "properties": { "title": { "description": "The display title and localized canonical name to use when searching for this entity on Google search.", "type": "string" } } }, "dict": { "properties": { "source": { "properties": { "url": { "type": "string" }, "attribution": { "type": "string" } }, "type": "object", "description": "The source, url and attribution for this dictionary data." }, "words": { "items": { "type": "object", "properties": { "source": { "description": "The words with different meanings but not related words, e.g. \"go\" (game) and \"go\" (verb).", "type": "object", "properties": { "url": { "type": "string" }, "attribution": { "type": "string" } } }, "derivatives": { "items": { "properties": { "source": { "properties": { "url": { "type": "string" }, "attribution": { "type": "string" } }, "type": "object" }, "text": { "type": "string" } }, "type": "object" }, "type": "array" }, "examples": { "type": "array", "items": { "type": "object", "properties": { "source": { "type": "object", "properties": { "url": { "type": "string" }, "attribution": { "type": "string" } } }, "text": { "type": "string" } } } }, "senses": { "items": { "type": "object", "properties": { "syllabification": { "type": "string" }, "conjugations": { "items": { "type": "object", "properties": { "value": { "type": "string" }, "type": { "type": "string" } } }, "type": "array" }, "pronunciationUrl": { "type": "string" }, "source": { "properties": { "url": { "type": "string" }, "attribution": { "type": "string" } }, "type": "object" }, "partOfSpeech": { "type": "string" }, "synonyms": { "type": "array", "items": { "type": "object", "properties": { "source": { "type": "object", "properties": { "attribution": { "type": "string" }, "url": { "type": "string" } } }, "text": { "type": "string" } } } }, "definitions": { "items": { "type": "object", "properties": { "examples": { "type": "array", "items": { "properties": { "text": { "type": "string" }, "source": { "type": "object", "properties": { "attribution": { "type": "string" }, "url": { "type": "string" } } } }, "type": "object" } }, "definition": { "type": "string" } } }, "type": "array" }, "pronunciation": { "type": "string" } } }, "type": "array" } } }, "type": "array" } }, "type": "object" } }, "id": "Dictlayerdata", "type": "object" }, "Bookshelf": { "properties": { "title": { "type": "string", "description": "Title of this bookshelf." }, "kind": { "description": "Resource type for bookshelf metadata.", "type": "string" }, "selfLink": { "type": "string", "description": "URL to this resource." }, "access": { "description": "Whether this bookshelf is PUBLIC or PRIVATE.", "type": "string" }, "created": { "description": "Created time for this bookshelf (formatted UTC timestamp with millisecond resolution).", "type": "string" }, "description": { "type": "string", "description": "Description of this bookshelf." }, "volumeCount": { "description": "Number of volumes in this bookshelf.", "type": "integer", "format": "int32" }, "volumesLastUpdated": { "type": "string", "description": "Last time a volume was added or removed from this bookshelf (formatted UTC timestamp with millisecond resolution)." }, "updated": { "type": "string", "description": "Last modified time of this bookshelf (formatted UTC timestamp with millisecond resolution)." }, "id": { "format": "int32", "description": "Id of this bookshelf, only unique by user.", "type": "integer" } }, "type": "object", "id": "Bookshelf" }, "Layersummary": { "properties": { "contentVersion": { "type": "string", "description": "The content version this resource is for." }, "updated": { "type": "string", "description": "Timestamp for the last time an item in this layer was updated. (RFC 3339 UTC date-time format)." }, "kind": { "description": "Resource Type", "type": "string" }, "annotationCount": { "description": "The number of annotations for this layer.", "format": "int32", "type": "integer" }, "id": { "description": "Unique id of this layer summary.", "type": "string" }, "layerId": { "type": "string", "description": "The layer id for this summary." }, "volumeId": { "description": "The volume id this resource is for.", "type": "string" }, "volumeAnnotationsVersion": { "type": "string", "description": "The current version of this layer's volume annotations. Note that this version applies only to the data in the books.layers.volumeAnnotations.* responses. The actual annotation data is versioned separately." }, "selfLink": { "type": "string", "description": "URL to this resource." }, "annotationsLink": { "description": "The link to get the annotations for this layer.", "type": "string" }, "annotationsDataLink": { "type": "string", "description": "Link to get data for this annotation." }, "annotationTypes": { "description": "The list of annotation types contained for this layer.", "type": "array", "items": { "type": "string" } }, "dataCount": { "format": "int32", "type": "integer", "description": "The number of data items for this layer." } }, "type": "object", "id": "Layersummary" }, "Empty": { "type": "object", "properties": {}, "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }", "id": "Empty" }, "Layersummaries": { "properties": { "totalItems": { "type": "integer", "format": "int32", "description": "The total number of layer summaries found." }, "kind": { "type": "string", "description": "Resource type." }, "items": { "description": "A list of layer summary items.", "items": { "$ref": "Layersummary" }, "type": "array" } }, "type": "object", "id": "Layersummaries" }, "GeoAnnotationdata": { "type": "object", "id": "GeoAnnotationdata", "properties": { "selfLink": { "type": "string", "description": "URL for this resource. *" }, "volumeId": { "type": "string", "description": "The volume id for this data. *" }, "encodedData": { "description": "Base64 encoded data for this annotation data.", "format": "byte", "type": "string" }, "annotationType": { "type": "string", "description": "The type of annotation this data is for." }, "kind": { "type": "string", "description": "Resource Type" }, "id": { "description": "Unique id for this annotation data.", "type": "string" }, "layerId": { "type": "string", "description": "The Layer id for this data. *" }, "updated": { "description": "Timestamp for the last time this data was updated. (RFC 3339 UTC date-time format).", "type": "string" }, "data": { "$ref": "Geolayerdata", "description": "JSON encoded data for this geo annotation data. Emitted with name 'data' in JSON output. Either this or dict_data will be populated." } } }, "FamilyInfo": { "type": "object", "id": "FamilyInfo", "properties": { "kind": { "description": "Resource type.", "type": "string" }, "membership": { "description": "Family membership info of the user that made the request.", "type": "object", "properties": { "acquirePermission": { "type": "string", "description": "Restrictions on user buying and acquiring content." }, "allowedMaturityRating": { "description": "The maximum allowed maturity rating for the user.", "type": "string" }, "isInFamily": { "type": "boolean" }, "ageGroup": { "description": "The age group of the user.", "type": "string" }, "role": { "description": "The role of the user in the family.", "type": "string" } } } } }, "Notification": { "properties": { "targetUrl": { "type": "string" }, "reason": { "type": "string" }, "doc_id": { "type": "string" }, "crmExperimentIds": { "items": { "type": "string", "format": "int64" }, "type": "array", "description": "The list of crm experiment ids." }, "timeToExpireMs": { "format": "int64", "type": "string" }, "body": { "type": "string" }, "kind": { "type": "string", "description": "Resource type." }, "notificationGroup": { "type": "string" }, "show_notification_settings_action": { "type": "boolean" }, "pcampaign_id": { "type": "string" }, "is_document_mature": { "type": "boolean" }, "notification_type": { "type": "string" }, "title": { "type": "string" }, "doc_type": { "type": "string" }, "dont_show_notification": { "type": "boolean" }, "iconUrl": { "type": "string" } }, "type": "object", "id": "Notification" }, "ReadingPosition": { "properties": { "volumeId": { "description": "Volume id associated with this reading position.", "type": "string" }, "pdfPosition": { "description": "Position in a PDF file.", "type": "string" }, "epubCfiPosition": { "description": "Position in an EPUB as a CFI.", "type": "string" }, "gbImagePosition": { "type": "string", "description": "Position in a volume for image-based content." }, "kind": { "description": "Resource type for a reading position.", "type": "string" }, "gbTextPosition": { "type": "string", "description": "Position in a volume for text-based content." }, "updated": { "type": "string", "description": "Timestamp when this reading position was last updated (formatted UTC timestamp with millisecond resolution)." } }, "id": "ReadingPosition", "type": "object" }, "AnnotationsSummary": { "properties": { "layers": { "type": "array", "items": { "type": "object", "properties": { "limitType": { "type": "string" }, "layerId": { "type": "string" }, "remainingCharacterCount": { "type": "integer", "format": "int32" }, "allowedCharacterCount": { "type": "integer", "format": "int32" }, "updated": { "type": "string" } } } }, "kind": { "type": "string" } }, "id": "AnnotationsSummary", "type": "object" }, "Annotationsdata": { "id": "Annotationsdata", "type": "object", "properties": { "items": { "description": "A list of Annotation Data.", "type": "array", "items": { "$ref": "GeoAnnotationdata" } }, "totalItems": { "type": "integer", "description": "The total number of volume annotations found.", "format": "int32" }, "nextPageToken": { "type": "string", "description": "Token to pass in for pagination for the next page. This will not be present if this request does not have more results." }, "kind": { "description": "Resource type", "type": "string" } } }, "Volumes": { "type": "object", "properties": { "items": { "type": "array", "description": "A list of volumes.", "items": { "$ref": "Volume" } }, "kind": { "type": "string", "description": "Resource type." }, "totalItems": { "description": "Total number of volumes found. This might be greater than the number of volumes returned in this response if results have been paginated.", "format": "int32", "type": "integer" } }, "id": "Volumes" }, "BooksAnnotationsRange": { "type": "object", "id": "BooksAnnotationsRange", "properties": { "endOffset": { "description": "The offset from the ending position.", "type": "string" }, "startPosition": { "type": "string", "description": "The starting position for the range." }, "startOffset": { "type": "string", "description": "The offset from the starting position." }, "endPosition": { "description": "The ending position for the range.", "type": "string" } } }, "Review": { "type": "object", "id": "Review", "properties": { "kind": { "type": "string", "description": "Resource type for a review." }, "volumeId": { "type": "string", "description": "Volume that this review is for." }, "title": { "description": "Title for this review.", "type": "string" }, "type": { "type": "string", "description": "Source type for this review. Possible values are EDITORIAL, WEB_USER or GOOGLE_USER." }, "author": { "description": "Author of this review.", "properties": { "displayName": { "type": "string", "description": "Name of this person." } }, "type": "object" }, "fullTextUrl": { "description": "URL for the full review text, for reviews gathered from the web.", "type": "string" }, "date": { "description": "Date of this review.", "type": "string" }, "rating": { "description": "Star rating for this review. Possible values are ONE, TWO, THREE, FOUR, FIVE or NOT_RATED.", "type": "string" }, "content": { "description": "Review text.", "type": "string" }, "source": { "description": "Information regarding the source of this review, when the review is not from a Google Books user.", "properties": { "url": { "description": "URL of the source of the review.", "type": "string" }, "extraDescription": { "description": "Extra text about the source of the review.", "type": "string" }, "description": { "type": "string", "description": "Name of the source." } }, "type": "object" } } }, "DownloadAccessRestriction": { "properties": { "signature": { "type": "string", "description": "Response signature." }, "justAcquired": { "description": "If deviceAllowed, whether access was just acquired with this request.", "type": "boolean" }, "volumeId": { "description": "Identifies the volume for which this entry applies.", "type": "string" }, "maxDownloadDevices": { "type": "integer", "format": "int32", "description": "If restricted, the maximum number of content download licenses for this volume." }, "source": { "description": "Client app identifier for verification. Download access and client-validation only.", "type": "string" }, "deviceAllowed": { "type": "boolean", "description": "If restricted, whether access is granted for this (user, device, volume)." }, "kind": { "type": "string", "description": "Resource type." }, "message": { "type": "string", "description": "Error/warning message." }, "restricted": { "description": "Whether this volume has any download access restrictions.", "type": "boolean" }, "nonce": { "type": "string", "description": "Client nonce for verification. Download access and client-validation only." }, "reasonCode": { "description": "Error/warning reason code. Additional codes may be added in the future. 0 OK 100 ACCESS_DENIED_PUBLISHER_LIMIT 101 ACCESS_DENIED_LIMIT 200 WARNING_USED_LAST_ACCESS", "type": "string" }, "downloadsAcquired": { "description": "If restricted, the number of content download licenses already acquired (including the requesting client, if licensed).", "type": "integer", "format": "int32" } }, "id": "DownloadAccessRestriction", "type": "object" }, "Annotations": { "properties": { "nextPageToken": { "description": "Token to pass in for pagination for the next page. This will not be present if this request does not have more results.", "type": "string" }, "kind": { "description": "Resource type.", "type": "string" }, "totalItems": { "type": "integer", "format": "int32", "description": "Total number of annotations found. This may be greater than the number of notes returned in this response if results have been paginated." }, "items": { "type": "array", "description": "A list of annotations.", "items": { "$ref": "Annotation" } } }, "id": "Annotations", "type": "object" }, "Seriesmembership": { "id": "Seriesmembership", "properties": { "kind": { "type": "string", "description": "Resorce type." }, "nextPageToken": { "type": "string" }, "member": { "items": { "$ref": "Volume" }, "type": "array" } }, "type": "object" }, "Volumeseriesinfo": { "id": "Volumeseriesinfo", "type": "object", "properties": { "volumeSeries": { "type": "array", "items": { "type": "object", "properties": { "seriesBookType": { "description": "The book type in the context of series. Examples - Single Issue, Collection Edition, etc.", "type": "string" }, "orderNumber": { "description": "The book order number in the series.", "type": "integer", "format": "int32" }, "seriesId": { "description": "The series id.", "type": "string" }, "issue": { "description": "List of issues. Applicable only for Collection Edition and Omnibus.", "type": "array", "items": { "properties": { "issueDisplayNumber": { "type": "string" }, "issueOrderNumber": { "format": "int32", "type": "integer" } }, "type": "object" } } } } }, "shortSeriesBookTitle": { "type": "string", "description": "Short book title in the context of the series." }, "kind": { "type": "string", "description": "Resource type." }, "bookDisplayNumber": { "type": "string", "description": "The display number string. This should be used only for display purposes and the actual sequence should be inferred from the below orderNumber." } } }, "Discoveryclusters": { "type": "object", "id": "Discoveryclusters", "properties": { "kind": { "description": "Resorce type.", "type": "string" }, "totalClusters": { "format": "int32", "type": "integer" }, "clusters": { "items": { "type": "object", "properties": { "banner_with_content_container": { "type": "object", "properties": { "moreButtonText": { "type": "string" }, "moreButtonUrl": { "type": "string" }, "textColorArgb": { "type": "string" }, "maskColorArgb": { "type": "string" }, "fillColorArgb": { "type": "string" }, "imageUrl": { "type": "string" } } }, "uid": { "type": "string" }, "subTitle": { "type": "string" }, "volumes": { "items": { "$ref": "Volume" }, "type": "array" }, "title": { "type": "string" }, "totalVolumes": { "type": "integer", "format": "int32" } } }, "type": "array" } } }, "DictionaryAnnotationdata": { "id": "DictionaryAnnotationdata", "type": "object", "properties": { "updated": { "type": "string", "description": "Timestamp for the last time this data was updated. (RFC 3339 UTC date-time format)." }, "selfLink": { "type": "string", "description": "URL for this resource. *" }, "layerId": { "type": "string", "description": "The Layer id for this data. *" }, "data": { "$ref": "Dictlayerdata", "description": "JSON encoded data for this dictionary annotation data. Emitted with name 'data' in JSON output. Either this or geo_data will be populated." }, "id": { "description": "Unique id for this annotation data.", "type": "string" }, "encodedData": { "type": "string", "description": "Base64 encoded data for this annotation data.", "format": "byte" }, "volumeId": { "description": "The volume id for this data. *", "type": "string" }, "kind": { "description": "Resource Type", "type": "string" }, "annotationType": { "description": "The type of annotation this data is for.", "type": "string" } } }, "Usersettings": { "type": "object", "properties": { "kind": { "type": "string", "description": "Resource type." }, "notification": { "type": "object", "properties": { "moreFromSeries": { "properties": { "opted_state": { "type": "string" } }, "type": "object" }, "matchMyInterests": { "properties": { "opted_state": { "type": "string" } }, "type": "object" }, "rewardExpirations": { "properties": { "opted_state": { "type": "string" } }, "type": "object" }, "moreFromAuthors": { "properties": { "opted_state": { "type": "string" } }, "type": "object" }, "priceDrop": { "type": "object", "properties": { "opted_state": { "type": "string" } } } } }, "notesExport": { "type": "object", "properties": { "folderName": { "type": "string" }, "isEnabled": { "type": "boolean" } }, "description": "User settings in sub-objects, each for different purposes." } }, "id": "Usersettings" }, "BooksCloudloadingResource": { "type": "object", "properties": { "volumeId": { "type": "string" }, "title": { "type": "string" }, "author": { "type": "string" }, "processingState": { "type": "string" } }, "id": "BooksCloudloadingResource" }, "Metadata": { "id": "Metadata", "properties": { "items": { "items": { "type": "object", "properties": { "size": { "format": "int64", "type": "string" }, "version": { "type": "string", "format": "int64" }, "language": { "type": "string" }, "encrypted_key": { "type": "string" }, "download_url": { "type": "string" } } }, "description": "A list of offline dictionary metadata.", "type": "array" }, "kind": { "type": "string", "description": "Resource type." } }, "type": "object" } } }
]===]))
