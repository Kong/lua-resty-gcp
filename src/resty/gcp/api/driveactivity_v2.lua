local decode = require("cjson").new().decode
return assert(decode([===[
{ "mtlsRootUrl": "https://driveactivity.mtls.googleapis.com/", "ownerName": "Google", "version": "v2", "name": "driveactivity", "revision": "20220708", "kind": "discovery#restDescription", "icons": { "x16": "http://www.google.com/images/icons/product/search-16.gif", "x32": "http://www.google.com/images/icons/product/search-32.gif" }, "version_module": true, "basePath": "", "discoveryVersion": "v1", "description": "Provides a historical view of activity in Google Drive.", "ownerDomain": "google.com", "fullyEncodeReservedExpansion": true, "batchPath": "batch", "id": "driveactivity:v2", "title": "Drive Activity API", "rootUrl": "https://driveactivity.googleapis.com/", "parameters": { "oauth_token": { "location": "query", "type": "string", "description": "OAuth 2.0 token for the current user." }, "fields": { "description": "Selector specifying which fields to include in a partial response.", "type": "string", "location": "query" }, "key": { "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "location": "query", "type": "string" }, "quotaUser": { "location": "query", "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", "type": "string" }, "uploadType": { "type": "string", "location": "query", "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")." }, "prettyPrint": { "type": "boolean", "default": "true", "description": "Returns response with indentations and line breaks.", "location": "query" }, "alt": { "location": "query", "default": "json", "type": "string", "enum": [ "json", "media", "proto" ], "description": "Data format for response.", "enumDescriptions": [ "Responses with Content-Type of application/json", "Media download with context-dependent Content-Type", "Responses with Content-Type of application/x-protobuf" ] }, "upload_protocol": { "type": "string", "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").", "location": "query" }, "callback": { "location": "query", "description": "JSONP", "type": "string" }, "access_token": { "description": "OAuth access token.", "type": "string", "location": "query" }, "$.xgafv": { "enumDescriptions": [ "v1 error format", "v2 error format" ], "description": "V1 error format.", "enum": [ "1", "2" ], "location": "query", "type": "string" } }, "canonicalName": "Drive Activity", "documentationLink": "https://developers.google.com/drive/activity/", "schemas": { "Anyone": { "properties": {}, "id": "Anyone", "description": "Represents any user (including a logged out user).", "type": "object" }, "Move": { "description": "An object was moved.", "properties": { "addedParents": { "items": { "$ref": "TargetReference" }, "description": "The added parent object(s).", "type": "array" }, "removedParents": { "description": "The removed parent object(s).", "type": "array", "items": { "$ref": "TargetReference" } } }, "type": "object", "id": "Move" }, "QueryDriveActivityResponse": { "properties": { "activities": { "description": "List of activity requested.", "type": "array", "items": { "$ref": "DriveActivity" } }, "nextPageToken": { "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.", "type": "string" } }, "description": "Response message for querying Drive activity.", "id": "QueryDriveActivityResponse", "type": "object" }, "Delete": { "type": "object", "properties": { "type": { "type": "string", "description": "The type of delete action taken.", "enumDescriptions": [ "Deletion type is not available.", "An object was put into the trash.", "An object was deleted permanently." ], "enum": [ "TYPE_UNSPECIFIED", "TRASH", "PERMANENT_DELETE" ] } }, "id": "Delete", "description": "An object was deleted." }, "Comment": { "type": "object", "description": "A change about comments on an object.", "properties": { "suggestion": { "$ref": "Suggestion", "description": "A change on a suggestion." }, "mentionedUsers": { "items": { "$ref": "User" }, "description": "Users who are mentioned in this comment.", "type": "array" }, "post": { "$ref": "Post", "description": "A change on a regular posted comment." }, "assignment": { "$ref": "Assignment", "description": "A change on an assignment." } }, "id": "Comment" }, "PermissionChange": { "description": "A change of the permission setting on an item.", "type": "object", "id": "PermissionChange", "properties": { "addedPermissions": { "description": "The set of permissions added by this change.", "type": "array", "items": { "$ref": "Permission" } }, "removedPermissions": { "items": { "$ref": "Permission" }, "description": "The set of permissions removed by this change.", "type": "array" } } }, "User": { "properties": { "knownUser": { "description": "A known user.", "$ref": "KnownUser" }, "unknownUser": { "$ref": "UnknownUser", "description": "A user about whom nothing is currently known." }, "deletedUser": { "description": "A user whose account has since been deleted.", "$ref": "DeletedUser" } }, "id": "User", "type": "object", "description": "Information about an end user." }, "ConsolidationStrategy": { "description": "How the individual activities are consolidated. A set of activities may be consolidated into one combined activity if they are related in some way, such as one actor performing the same action on multiple targets, or multiple actors performing the same action on a single target. The strategy defines the rules for which activities are related.", "type": "object", "id": "ConsolidationStrategy", "properties": { "legacy": { "$ref": "Legacy", "description": "The individual activities are consolidated using the legacy strategy." }, "none": { "description": "The individual activities are not consolidated.", "$ref": "NoConsolidation" } } }, "DeletedUser": { "description": "A user whose account has since been deleted.", "properties": {}, "type": "object", "id": "DeletedUser" }, "Permission": { "type": "object", "properties": { "group": { "description": "The group to whom this permission applies.", "$ref": "Group" }, "domain": { "$ref": "Domain", "description": "The domain to whom this permission applies." }, "allowDiscovery": { "type": "boolean", "description": "If true, the item can be discovered (e.g. in the user's \"Shared with me\" collection) without needing a link to the item." }, "anyone": { "description": "If set, this permission applies to anyone, even logged out users.", "$ref": "Anyone" }, "user": { "description": "The user to whom this permission applies.", "$ref": "User" }, "role": { "enum": [ "ROLE_UNSPECIFIED", "OWNER", "ORGANIZER", "FILE_ORGANIZER", "EDITOR", "COMMENTER", "VIEWER", "PUBLISHED_VIEWER" ], "type": "string", "description": "Indicates the [Google Drive permissions role](https://developers.google.com/drive/web/manage-sharing#roles). The role determines a user's ability to read, write, and comment on items.", "enumDescriptions": [ "The role is not available.", "A role granting full access.", "A role granting the ability to manage people and settings.", "A role granting the ability to contribute and manage content.", "A role granting the ability to contribute content. This role is sometimes also known as \"writer\".", "A role granting the ability to view and comment on content.", "A role granting the ability to view content. This role is sometimes also known as \"reader\".", "A role granting the ability to view content only after it has been published to the web. This role is sometimes also known as \"published reader\". See https://support.google.com/sites/answer/6372880 for more information." ] } }, "description": "The permission setting of an object.", "id": "Permission" }, "ApplicationReference": { "description": "Activity in applications other than Drive.", "properties": { "type": { "enum": [ "UNSPECIFIED_REFERENCE_TYPE", "LINK", "DISCUSS" ], "description": "The reference type corresponding to this event.", "type": "string", "enumDescriptions": [ "The type is not available.", "The links of one or more Drive items were posted.", "Comments were made regarding a Drive item." ] } }, "id": "ApplicationReference", "type": "object" }, "Group": { "id": "Group", "type": "object", "description": "Information about a group.", "properties": { "email": { "type": "string", "description": "The email address of the group." }, "title": { "type": "string", "description": "The title of the group." } } }, "Target": { "type": "object", "description": "Information about the target of activity.", "properties": { "teamDrive": { "$ref": "TeamDrive", "description": "This field is deprecated; please use the `drive` field instead." }, "drive": { "description": "The target is a shared drive.", "$ref": "Drive" }, "fileComment": { "$ref": "FileComment", "description": "The target is a comment on a Drive file." }, "driveItem": { "description": "The target is a Drive item.", "$ref": "DriveItem" } }, "id": "Target" }, "Drive": { "description": "Information about a shared drive.", "properties": { "root": { "$ref": "DriveItem", "description": "The root of this shared drive." }, "name": { "type": "string", "description": "The resource name of the shared drive. The format is `COLLECTION_ID/DRIVE_ID`. Clients should not assume a specific collection ID for this resource name." }, "title": { "description": "The title of the shared drive.", "type": "string" } }, "type": "object", "id": "Drive" }, "Copy": { "type": "object", "id": "Copy", "description": "An object was created by copying an existing object.", "properties": { "originalObject": { "$ref": "TargetReference", "description": "The original object." } } }, "Action": { "description": "Information about the action.", "type": "object", "properties": { "detail": { "description": "The type and detailed information about the action.", "$ref": "ActionDetail" }, "timestamp": { "type": "string", "description": "The action occurred at this specific time.", "format": "google-datetime" }, "actor": { "$ref": "Actor", "description": "The actor responsible for this action (or empty if all actors are responsible)." }, "target": { "$ref": "Target", "description": "The target this action affects (or empty if affecting all targets). This represents the state of the target immediately after this action occurred." }, "timeRange": { "description": "The action occurred over this time range.", "$ref": "TimeRange" } }, "id": "Action" }, "File": { "id": "File", "type": "object", "properties": {}, "description": "This item is deprecated; please see `DriveFile` instead." }, "AnonymousUser": { "id": "AnonymousUser", "properties": {}, "type": "object", "description": "Empty message representing an anonymous user or indicating the authenticated user should be anonymized." }, "Actor": { "properties": { "anonymous": { "description": "An anonymous user.", "$ref": "AnonymousUser" }, "system": { "description": "A non-user actor (i.e. system triggered).", "$ref": "SystemEvent" }, "administrator": { "description": "An administrator.", "$ref": "Administrator" }, "user": { "$ref": "User", "description": "An end user." }, "impersonation": { "$ref": "Impersonation", "description": "An account acting on behalf of another." } }, "type": "object", "description": "The actor of a Drive activity.", "id": "Actor" }, "DriveItemReference": { "properties": { "driveFolder": { "description": "The Drive item is a folder. Includes information about the type of folder.", "$ref": "DriveFolder" }, "name": { "type": "string", "description": "The target Drive item. The format is `items/ITEM_ID`." }, "title": { "type": "string", "description": "The title of the Drive item." }, "driveFile": { "$ref": "DriveFile", "description": "The Drive item is a file." }, "file": { "$ref": "File", "description": "This field is deprecated; please use the `driveFile` field instead." }, "folder": { "description": "This field is deprecated; please use the `driveFolder` field instead.", "$ref": "Folder" } }, "id": "DriveItemReference", "type": "object", "description": "A lightweight reference to a Drive item, such as a file or folder." }, "SettingsChange": { "description": "Information about settings changes.", "id": "SettingsChange", "properties": { "restrictionChanges": { "description": "The set of changes made to restrictions.", "items": { "$ref": "RestrictionChange" }, "type": "array" } }, "type": "object" }, "SystemEvent": { "description": "Event triggered by system operations instead of end users.", "properties": { "type": { "enumDescriptions": [ "The event type is unspecified.", "The event is a consequence of a user account being deleted.", "The event is due to the system automatically purging trash." ], "enum": [ "TYPE_UNSPECIFIED", "USER_DELETION", "TRASH_AUTO_PURGE" ], "description": "The type of the system event that may triggered activity.", "type": "string" } }, "id": "SystemEvent", "type": "object" }, "UnknownUser": { "properties": {}, "type": "object", "description": "A user about whom nothing is currently known.", "id": "UnknownUser" }, "DriveItem": { "description": "A Drive item, such as a file or folder.", "type": "object", "properties": { "name": { "type": "string", "description": "The target Drive item. The format is `items/ITEM_ID`." }, "driveFile": { "description": "The Drive item is a file.", "$ref": "DriveFile" }, "title": { "type": "string", "description": "The title of the Drive item." }, "folder": { "description": "This field is deprecated; please use the `driveFolder` field instead.", "$ref": "Folder" }, "owner": { "$ref": "Owner", "description": "Information about the owner of this Drive item." }, "mimeType": { "description": "The MIME type of the Drive item. See https://developers.google.com/drive/v3/web/mime-types.", "type": "string" }, "file": { "description": "This field is deprecated; please use the `driveFile` field instead.", "$ref": "File" }, "driveFolder": { "$ref": "DriveFolder", "description": "The Drive item is a folder. Includes information about the type of folder." } }, "id": "DriveItem" }, "DriveActivity": { "properties": { "actors": { "description": "All actor(s) responsible for the activity.", "type": "array", "items": { "$ref": "Actor" } }, "timestamp": { "type": "string", "format": "google-datetime", "description": "The activity occurred at this specific time." }, "timeRange": { "$ref": "TimeRange", "description": "The activity occurred over this time range." }, "actions": { "description": "Details on all actions in this activity.", "type": "array", "items": { "$ref": "Action" } }, "targets": { "items": { "$ref": "Target" }, "description": "All Google Drive objects this activity is about (e.g. file, folder, drive). This represents the state of the target immediately after the actions occurred.", "type": "array" }, "primaryActionDetail": { "description": "Key information about the primary action for this activity. This is either representative, or the most important, of all actions in the activity, according to the ConsolidationStrategy in the request.", "$ref": "ActionDetail" } }, "type": "object", "id": "DriveActivity", "description": "A single Drive activity comprising one or more Actions by one or more Actors on one or more Targets. Some Action groupings occur spontaneously, such as moving an item into a shared folder triggering a permission change. Other groupings of related Actions, such as multiple Actors editing one item or moving multiple files into a new folder, are controlled by the selection of a ConsolidationStrategy in the QueryDriveActivityRequest." }, "Suggestion": { "description": "A suggestion.", "id": "Suggestion", "properties": { "subtype": { "description": "The sub-type of this event.", "enumDescriptions": [ "Subtype not available.", "A suggestion was added.", "A suggestion was deleted.", "A suggestion reply was added.", "A suggestion reply was deleted.", "A suggestion was accepted.", "A suggestion was rejected.", "An accepted suggestion was deleted.", "A rejected suggestion was deleted." ], "enum": [ "SUBTYPE_UNSPECIFIED", "ADDED", "DELETED", "REPLY_ADDED", "REPLY_DELETED", "ACCEPTED", "REJECTED", "ACCEPT_DELETED", "REJECT_DELETED" ], "type": "string" } }, "type": "object" }, "FileComment": { "type": "object", "description": "A comment on a file.", "id": "FileComment", "properties": { "parent": { "description": "The Drive item containing this comment.", "$ref": "DriveItem" }, "linkToDiscussion": { "type": "string", "description": "The link to the discussion thread containing this comment, for example, `https://docs.google.com/DOCUMENT_ID/edit?disco=THREAD_ID`." }, "legacyCommentId": { "type": "string", "description": "The comment in the discussion thread. This identifier is an opaque string compatible with the Drive API; see https://developers.google.com/drive/v3/reference/comments/get" }, "legacyDiscussionId": { "type": "string", "description": "The discussion thread to which the comment was added. This identifier is an opaque string compatible with the Drive API and references the first comment in a discussion; see https://developers.google.com/drive/v3/reference/comments/get" } } }, "TargetReference": { "type": "object", "id": "TargetReference", "properties": { "drive": { "description": "The target is a shared drive.", "$ref": "DriveReference" }, "driveItem": { "description": "The target is a Drive item.", "$ref": "DriveItemReference" }, "teamDrive": { "$ref": "TeamDriveReference", "description": "This field is deprecated; please use the `drive` field instead." } }, "description": "A lightweight reference to the target of activity." }, "Create": { "properties": { "new": { "$ref": "New", "description": "If present, indicates the object was newly created (e.g. as a blank document), not derived from a Drive object or external object." }, "copy": { "$ref": "Copy", "description": "If present, indicates the object was created by copying an existing Drive object." }, "upload": { "$ref": "Upload", "description": "If present, indicates the object originated externally and was uploaded to Drive." } }, "description": "An object was created.", "type": "object", "id": "Create" }, "Impersonation": { "properties": { "impersonatedUser": { "description": "The impersonated user.", "$ref": "User" } }, "id": "Impersonation", "type": "object", "description": "Information about an impersonation, where an admin acts on behalf of an end user. Information about the acting admin is not currently available." }, "TeamDriveReference": { "id": "TeamDriveReference", "description": "This item is deprecated; please see `DriveReference` instead.", "properties": { "name": { "type": "string", "description": "This field is deprecated; please see `DriveReference.name` instead." }, "title": { "type": "string", "description": "This field is deprecated; please see `DriveReference.title` instead." } }, "type": "object" }, "DataLeakPreventionChange": { "properties": { "type": { "type": "string", "description": "The type of Data Leak Prevention (DLP) change.", "enumDescriptions": [ "An update to the DLP state that is neither FLAGGED or CLEARED.", "Document has been flagged as containing sensitive content.", "Document is no longer flagged as containing sensitive content." ], "enum": [ "TYPE_UNSPECIFIED", "FLAGGED", "CLEARED" ] } }, "description": "A change in the object's data leak prevention status.", "id": "DataLeakPreventionChange", "type": "object" }, "NoConsolidation": { "properties": {}, "id": "NoConsolidation", "description": "A strategy which does no consolidation of individual activities.", "type": "object" }, "DriveFile": { "description": "A Drive item which is a file.", "properties": {}, "id": "DriveFile", "type": "object" }, "Administrator": { "type": "object", "properties": {}, "id": "Administrator", "description": "Empty message representing an administrator." }, "Post": { "properties": { "subtype": { "type": "string", "description": "The sub-type of this event.", "enum": [ "SUBTYPE_UNSPECIFIED", "ADDED", "DELETED", "REPLY_ADDED", "REPLY_DELETED", "RESOLVED", "REOPENED" ], "enumDescriptions": [ "Subtype not available.", "A post was added.", "A post was deleted.", "A reply was added.", "A reply was deleted.", "A posted comment was resolved.", "A posted comment was reopened." ] } }, "description": "A regular posted comment.", "type": "object", "id": "Post" }, "DriveReference": { "description": "A lightweight reference to a shared drive.", "properties": { "title": { "description": "The title of the shared drive.", "type": "string" }, "name": { "description": "The resource name of the shared drive. The format is `COLLECTION_ID/DRIVE_ID`. Clients should not assume a specific collection ID for this resource name.", "type": "string" } }, "type": "object", "id": "DriveReference" }, "DriveFolder": { "id": "DriveFolder", "type": "object", "description": "A Drive item which is a folder.", "properties": { "type": { "type": "string", "description": "The type of Drive folder.", "enumDescriptions": [ "The folder type is unknown.", "The folder is the root of a user's MyDrive.", "The folder is the root of a shared drive.", "The folder is a standard, non-root, folder." ], "enum": [ "TYPE_UNSPECIFIED", "MY_DRIVE_ROOT", "SHARED_DRIVE_ROOT", "STANDARD_FOLDER" ] } } }, "New": { "description": "An object was created from scratch.", "id": "New", "properties": {}, "type": "object" }, "Legacy": { "type": "object", "properties": {}, "id": "Legacy", "description": "A strategy which consolidates activities using the grouping rules from the legacy V1 Activity API. Similar actions occurring within a window of time can be grouped across multiple targets (such as moving a set of files at once) or multiple actors (such as several users editing the same item). Grouping rules for this strategy are specific to each type of action." }, "TimeRange": { "properties": { "startTime": { "format": "google-datetime", "type": "string", "description": "The start of the time range." }, "endTime": { "type": "string", "format": "google-datetime", "description": "The end of the time range." } }, "id": "TimeRange", "type": "object", "description": "Information about time ranges." }, "Owner": { "id": "Owner", "description": "Information about the owner of a Drive item.", "properties": { "user": { "description": "The user that owns the Drive item.", "$ref": "User" }, "teamDrive": { "$ref": "TeamDriveReference", "description": "This field is deprecated; please use the `drive` field instead." }, "domain": { "description": "The domain of the Drive item owner.", "$ref": "Domain" }, "drive": { "description": "The drive that owns the item.", "$ref": "DriveReference" } }, "type": "object" }, "KnownUser": { "id": "KnownUser", "type": "object", "properties": { "personName": { "type": "string", "description": "The identifier for this user that can be used with the People API to get more information. The format is `people/ACCOUNT_ID`. See https://developers.google.com/people/." }, "isCurrentUser": { "description": "True if this is the user making the request.", "type": "boolean" } }, "description": "A known user." }, "RestrictionChange": { "description": "Information about restriction policy changes to a feature.", "properties": { "newRestriction": { "enum": [ "RESTRICTION_UNSPECIFIED", "UNRESTRICTED", "FULLY_RESTRICTED" ], "enumDescriptions": [ "The type of restriction is not available.", "The feature is available without restriction.", "The use of this feature is fully restricted." ], "type": "string", "description": "The restriction in place after the change." }, "feature": { "enumDescriptions": [ "The feature which changed restriction settings was not available.", "When restricted, this prevents items from being shared outside the domain.", "When restricted, this prevents direct sharing of individual items.", "When restricted, this prevents actions like copy, download, and print that might result in uncontrolled duplicates of items.", "When restricted, this prevents use of Drive File Stream." ], "enum": [ "FEATURE_UNSPECIFIED", "SHARING_OUTSIDE_DOMAIN", "DIRECT_SHARING", "ITEM_DUPLICATION", "DRIVE_FILE_STREAM" ], "description": "The feature which had a change in restriction policy.", "type": "string" } }, "type": "object", "id": "RestrictionChange" }, "Folder": { "properties": { "type": { "enumDescriptions": [ "This item is deprecated; please see `DriveFolder.Type` instead.", "This item is deprecated; please see `DriveFolder.Type` instead.", "This item is deprecated; please see `DriveFolder.Type` instead.", "This item is deprecated; please see `DriveFolder.Type` instead." ], "type": "string", "enum": [ "TYPE_UNSPECIFIED", "MY_DRIVE_ROOT", "TEAM_DRIVE_ROOT", "STANDARD_FOLDER" ], "description": "This field is deprecated; please see `DriveFolder.type` instead." } }, "type": "object", "id": "Folder", "description": "This item is deprecated; please see `DriveFolder` instead." }, "QueryDriveActivityRequest": { "id": "QueryDriveActivityRequest", "description": "The request message for querying Drive activity.", "properties": { "pageToken": { "type": "string", "description": "The token identifying which page of results to return. Set this to the next_page_token value returned from a previous query to obtain the following page of results. If not set, the first page of results will be returned." }, "itemName": { "description": "Return activities for this Drive item. The format is `items/ITEM_ID`.", "type": "string" }, "consolidationStrategy": { "description": "Details on how to consolidate related actions that make up the activity. If not set, then related actions are not consolidated.", "$ref": "ConsolidationStrategy" }, "ancestorName": { "type": "string", "description": "Return activities for this Drive folder and all children and descendants. The format is `items/ITEM_ID`." }, "filter": { "description": "The filtering for items returned from this query request. The format of the filter string is a sequence of expressions, joined by an optional \"AND\", where each expression is of the form \"field operator value\". Supported fields: - `time`: Uses numerical operators on date values either in terms of milliseconds since Jan 1, 1970 or in RFC 3339 format. Examples: - `time \u003e 1452409200000 AND time \u003c= 1492812924310` - `time \u003e= \"2016-01-10T01:02:03-05:00\"` - `detail.action_detail_case`: Uses the \"has\" operator (:) and either a singular value or a list of allowed action types enclosed in parentheses. Examples: - `detail.action_detail_case: RENAME` - `detail.action_detail_case:(CREATE EDIT)` - `-detail.action_detail_case:MOVE` ", "type": "string" }, "pageSize": { "description": "The miminum number of activities desired in the response; the server will attempt to return at least this quanitity. The server may also return fewer activities if it has a partial response ready before the request times out. If not set, a default value is used.", "type": "integer", "format": "int32" } }, "type": "object" }, "TeamDrive": { "properties": { "title": { "description": "This field is deprecated; please see `Drive.title` instead.", "type": "string" }, "root": { "$ref": "DriveItem", "description": "This field is deprecated; please see `Drive.root` instead." }, "name": { "description": "This field is deprecated; please see `Drive.name` instead.", "type": "string" } }, "type": "object", "id": "TeamDrive", "description": "This item is deprecated; please see `Drive` instead." }, "Rename": { "type": "object", "id": "Rename", "description": "An object was renamed.", "properties": { "newTitle": { "description": "The new title of the drive object.", "type": "string" }, "oldTitle": { "type": "string", "description": "The previous title of the drive object." } } }, "Domain": { "properties": { "name": { "type": "string", "description": "The name of the domain, e.g. `google.com`." }, "legacyId": { "description": "An opaque string used to identify this domain.", "type": "string" } }, "id": "Domain", "type": "object", "description": "Information about a domain." }, "Restore": { "type": "object", "id": "Restore", "description": "A deleted object was restored.", "properties": { "type": { "type": "string", "description": "The type of restore action taken.", "enumDescriptions": [ "The type is not available.", "An object was restored from the trash." ], "enum": [ "TYPE_UNSPECIFIED", "UNTRASH" ] } } }, "Assignment": { "description": "A comment with an assignment.", "id": "Assignment", "type": "object", "properties": { "subtype": { "type": "string", "enumDescriptions": [ "Subtype not available.", "An assignment was added.", "An assignment was deleted.", "An assignment reply was added.", "An assignment reply was deleted.", "An assignment was resolved.", "A resolved assignment was reopened.", "An assignment was reassigned." ], "description": "The sub-type of this event.", "enum": [ "SUBTYPE_UNSPECIFIED", "ADDED", "DELETED", "REPLY_ADDED", "REPLY_DELETED", "RESOLVED", "REOPENED", "REASSIGNED" ] }, "assignedUser": { "$ref": "User", "description": "The user to whom the comment was assigned." } } }, "Edit": { "type": "object", "properties": {}, "id": "Edit", "description": "An empty message indicating an object was edited." }, "ActionDetail": { "description": "Data describing the type and additional information of an action.", "properties": { "create": { "description": "An object was created.", "$ref": "Create" }, "comment": { "description": "A change about comments was made.", "$ref": "Comment" }, "dlpChange": { "description": "A change happened in data leak prevention status.", "$ref": "DataLeakPreventionChange" }, "settingsChange": { "$ref": "SettingsChange", "description": "Settings were changed." }, "rename": { "description": "An object was renamed.", "$ref": "Rename" }, "edit": { "description": "An object was edited.", "$ref": "Edit" }, "reference": { "$ref": "ApplicationReference", "description": "An object was referenced in an application outside of Drive/Docs." }, "restore": { "description": "A deleted object was restored.", "$ref": "Restore" }, "permissionChange": { "description": "The permission on an object was changed.", "$ref": "PermissionChange" }, "delete": { "description": "An object was deleted.", "$ref": "Delete" }, "move": { "description": "An object was moved.", "$ref": "Move" } }, "id": "ActionDetail", "type": "object" }, "Upload": { "properties": {}, "id": "Upload", "description": "An object was uploaded into Drive.", "type": "object" } }, "protocol": "rest", "servicePath": "", "auth": { "oauth2": { "scopes": { "https://www.googleapis.com/auth/drive.activity.readonly": { "description": "View the activity record of files in your Google Drive" }, "https://www.googleapis.com/auth/drive.activity": { "description": "View and add to the activity record of files in your Google Drive" } } } }, "baseUrl": "https://driveactivity.googleapis.com/", "resources": { "activity": { "methods": { "query": { "parameterOrder": [], "response": { "$ref": "QueryDriveActivityResponse" }, "description": "Query past activity in Google Drive.", "flatPath": "v2/activity:query", "path": "v2/activity:query", "parameters": {}, "request": { "$ref": "QueryDriveActivityRequest" }, "httpMethod": "POST", "id": "driveactivity.activity.query", "scopes": [ "https://www.googleapis.com/auth/drive.activity", "https://www.googleapis.com/auth/drive.activity.readonly" ] } } } } }
]===]))
