local decode = require("cjson").new().decode
return assert(decode([===[
{ "parameters": { "fields": { "location": "query", "description": "Selector specifying which fields to include in a partial response.", "type": "string" }, "uploadType": { "location": "query", "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", "type": "string" }, "$.xgafv": { "type": "string", "location": "query", "enumDescriptions": [ "v1 error format", "v2 error format" ], "description": "V1 error format.", "enum": [ "1", "2" ] }, "oauth_token": { "description": "OAuth 2.0 token for the current user.", "type": "string", "location": "query" }, "upload_protocol": { "location": "query", "type": "string", "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")." }, "callback": { "location": "query", "type": "string", "description": "JSONP" }, "key": { "location": "query", "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "type": "string" }, "quotaUser": { "type": "string", "location": "query", "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters." }, "access_token": { "description": "OAuth access token.", "type": "string", "location": "query" }, "alt": { "description": "Data format for response.", "default": "json", "enumDescriptions": [ "Responses with Content-Type of application/json", "Media download with context-dependent Content-Type", "Responses with Content-Type of application/x-protobuf" ], "type": "string", "enum": [ "json", "media", "proto" ], "location": "query" }, "prettyPrint": { "default": "true", "location": "query", "description": "Returns response with indentations and line breaks.", "type": "boolean" } }, "kind": "discovery#restDescription", "documentationLink": "https://developers.google.com/android-publisher", "icons": { "x16": "http://www.google.com/images/icons/product/search-16.gif", "x32": "http://www.google.com/images/icons/product/search-32.gif" }, "revision": "20220713", "name": "androidpublisher", "batchPath": "batch", "basePath": "", "title": "Google Play Android Developer API", "auth": { "oauth2": { "scopes": { "https://www.googleapis.com/auth/androidpublisher": { "description": "View and manage your Google Play Developer account" } } } }, "baseUrl": "https://androidpublisher.googleapis.com/", "resources": { "systemapks": { "resources": { "variants": { "methods": { "list": { "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "httpMethod": "GET", "parameters": { "packageName": { "location": "path", "required": true, "type": "string", "description": "Package name of the app." }, "versionCode": { "required": true, "format": "int64", "description": "The version code of the App Bundle.", "type": "string", "location": "path" } }, "parameterOrder": [ "packageName", "versionCode" ], "description": "Returns the list of previously created system APK variants.", "path": "androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants", "flatPath": "androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants", "id": "androidpublisher.systemapks.variants.list", "response": { "$ref": "SystemApksListResponse" } }, "get": { "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "path": "androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants/{variantId}", "flatPath": "androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants/{variantId}", "id": "androidpublisher.systemapks.variants.get", "httpMethod": "GET", "parameterOrder": [ "packageName", "versionCode", "variantId" ], "parameters": { "variantId": { "format": "uint32", "location": "path", "type": "integer", "required": true, "description": "The ID of a previously created system APK variant." }, "packageName": { "description": "Package name of the app.", "location": "path", "required": true, "type": "string" }, "versionCode": { "location": "path", "format": "int64", "required": true, "type": "string", "description": "The version code of the App Bundle." } }, "description": "Returns a previously created system APK variant.", "response": { "$ref": "Variant" } }, "create": { "flatPath": "androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants", "parameterOrder": [ "packageName", "versionCode" ], "parameters": { "packageName": { "location": "path", "description": "Package name of the app.", "type": "string", "required": true }, "versionCode": { "location": "path", "type": "string", "description": "The version code of the App Bundle.", "required": true, "format": "int64" } }, "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "path": "androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants", "request": { "$ref": "Variant" }, "response": { "$ref": "Variant" }, "description": "Creates an APK which is suitable for inclusion in a system image from an already uploaded Android App Bundle.", "httpMethod": "POST", "id": "androidpublisher.systemapks.variants.create" }, "download": { "httpMethod": "GET", "parameters": { "variantId": { "description": "The ID of a previously created system APK variant.", "location": "path", "required": true, "type": "integer", "format": "uint32" }, "versionCode": { "description": "The version code of the App Bundle.", "required": true, "format": "int64", "type": "string", "location": "path" }, "packageName": { "description": "Package name of the app.", "required": true, "type": "string", "location": "path" } }, "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "flatPath": "androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants/{variantId}:download", "id": "androidpublisher.systemapks.variants.download", "path": "androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants/{variantId}:download", "supportsMediaDownload": true, "description": "Downloads a previously created system APK which is suitable for inclusion in a system image.", "parameterOrder": [ "packageName", "versionCode", "variantId" ], "useMediaDownloadService": true } } } } }, "generatedapks": { "methods": { "list": { "path": "androidpublisher/v3/applications/{packageName}/generatedApks/{versionCode}", "parameterOrder": [ "packageName", "versionCode" ], "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "httpMethod": "GET", "flatPath": "androidpublisher/v3/applications/{packageName}/generatedApks/{versionCode}", "id": "androidpublisher.generatedapks.list", "response": { "$ref": "GeneratedApksListResponse" }, "parameters": { "versionCode": { "location": "path", "format": "int32", "type": "integer", "description": "Version code of the app bundle.", "required": true }, "packageName": { "location": "path", "type": "string", "description": "Package name of the app.", "required": true } }, "description": "Returns download metadata for all APKs that were generated from a given app bundle." }, "download": { "id": "androidpublisher.generatedapks.download", "path": "androidpublisher/v3/applications/{packageName}/generatedApks/{versionCode}/downloads/{downloadId}:download", "httpMethod": "GET", "parameterOrder": [ "packageName", "versionCode", "downloadId" ], "flatPath": "androidpublisher/v3/applications/{packageName}/generatedApks/{versionCode}/downloads/{downloadId}:download", "description": "Downloads a single signed APK generated from an app bundle.", "parameters": { "versionCode": { "type": "integer", "format": "int32", "location": "path", "description": "Version code of the app bundle.", "required": true }, "downloadId": { "location": "path", "type": "string", "description": "Download ID, which uniquely identifies the APK to download. Can be obtained from the response of `generatedapks.list` method.", "required": true }, "packageName": { "location": "path", "type": "string", "description": "Package name of the app.", "required": true } }, "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "supportsMediaDownload": true, "useMediaDownloadService": true } } }, "inappproducts": { "methods": { "patch": { "parameterOrder": [ "packageName", "sku" ], "request": { "$ref": "InAppProduct" }, "description": "Patches an in-app product (i.e. a managed product or a subscriptions).", "id": "androidpublisher.inappproducts.patch", "response": { "$ref": "InAppProduct" }, "httpMethod": "PATCH", "parameters": { "autoConvertMissingPrices": { "description": "If true the prices for all regions targeted by the parent app that don't have a price specified for this in-app product will be auto converted to the target currency based on the default price. Defaults to false.", "type": "boolean", "location": "query" }, "sku": { "location": "path", "description": "Unique identifier for the in-app product.", "type": "string", "required": true }, "packageName": { "description": "Package name of the app.", "type": "string", "location": "path", "required": true } }, "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "path": "androidpublisher/v3/applications/{packageName}/inappproducts/{sku}", "flatPath": "androidpublisher/v3/applications/{packageName}/inappproducts/{sku}" }, "get": { "parameterOrder": [ "packageName", "sku" ], "response": { "$ref": "InAppProduct" }, "flatPath": "androidpublisher/v3/applications/{packageName}/inappproducts/{sku}", "path": "androidpublisher/v3/applications/{packageName}/inappproducts/{sku}", "httpMethod": "GET", "description": "Gets an in-app product, which can be a managed product or a subscription.", "id": "androidpublisher.inappproducts.get", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "parameters": { "packageName": { "location": "path", "required": true, "type": "string", "description": "Package name of the app." }, "sku": { "location": "path", "type": "string", "description": "Unique identifier for the in-app product.", "required": true } } }, "delete": { "httpMethod": "DELETE", "id": "androidpublisher.inappproducts.delete", "parameterOrder": [ "packageName", "sku" ], "flatPath": "androidpublisher/v3/applications/{packageName}/inappproducts/{sku}", "description": "Deletes an in-app product (i.e. a managed product or a subscriptions).", "path": "androidpublisher/v3/applications/{packageName}/inappproducts/{sku}", "parameters": { "packageName": { "type": "string", "required": true, "location": "path", "description": "Package name of the app." }, "sku": { "type": "string", "location": "path", "required": true, "description": "Unique identifier for the in-app product." } }, "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ] }, "insert": { "parameterOrder": [ "packageName" ], "response": { "$ref": "InAppProduct" }, "httpMethod": "POST", "request": { "$ref": "InAppProduct" }, "flatPath": "androidpublisher/v3/applications/{packageName}/inappproducts", "id": "androidpublisher.inappproducts.insert", "parameters": { "packageName": { "required": true, "type": "string", "location": "path", "description": "Package name of the app." }, "autoConvertMissingPrices": { "location": "query", "type": "boolean", "description": "If true the prices for all regions targeted by the parent app that don't have a price specified for this in-app product will be auto converted to the target currency based on the default price. Defaults to false." } }, "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "description": "Creates an in-app product (i.e. a managed product or a subscriptions).", "path": "androidpublisher/v3/applications/{packageName}/inappproducts" }, "update": { "request": { "$ref": "InAppProduct" }, "path": "androidpublisher/v3/applications/{packageName}/inappproducts/{sku}", "id": "androidpublisher.inappproducts.update", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "parameters": { "packageName": { "description": "Package name of the app.", "required": true, "type": "string", "location": "path" }, "allowMissing": { "location": "query", "description": "If set to true, and the in-app product with the given package_name and sku doesn't exist, the in-app product will be created.", "type": "boolean" }, "autoConvertMissingPrices": { "location": "query", "description": "If true the prices for all regions targeted by the parent app that don't have a price specified for this in-app product will be auto converted to the target currency based on the default price. Defaults to false.", "type": "boolean" }, "sku": { "description": "Unique identifier for the in-app product.", "location": "path", "type": "string", "required": true } }, "httpMethod": "PUT", "description": "Updates an in-app product (i.e. a managed product or a subscriptions).", "parameterOrder": [ "packageName", "sku" ], "response": { "$ref": "InAppProduct" }, "flatPath": "androidpublisher/v3/applications/{packageName}/inappproducts/{sku}" }, "list": { "response": { "$ref": "InappproductsListResponse" }, "flatPath": "androidpublisher/v3/applications/{packageName}/inappproducts", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "description": "Lists all in-app products - both managed products and subscriptions. If an app has a large number of in-app products, the response may be paginated. In this case the response field `tokenPagination.nextPageToken` will be set and the caller should provide its value as a `token` request parameter to retrieve the next page.", "parameters": { "packageName": { "type": "string", "required": true, "description": "Package name of the app.", "location": "path" }, "token": { "type": "string", "description": "Pagination token. If empty, list starts at the first product.", "location": "query" }, "startIndex": { "format": "uint32", "location": "query", "type": "integer", "description": "Deprecated and ignored. Set the `token` parameter to rertieve the next page." }, "maxResults": { "description": "Deprecated and ignored. The page size is determined by the server.", "format": "uint32", "type": "integer", "location": "query" } }, "parameterOrder": [ "packageName" ], "id": "androidpublisher.inappproducts.list", "httpMethod": "GET", "path": "androidpublisher/v3/applications/{packageName}/inappproducts" } } }, "internalappsharingartifacts": { "methods": { "uploadbundle": { "description": "Uploads an app bundle to internal app sharing. If you are using the Google API client libraries, please increase the timeout of the http request before calling this endpoint (a timeout of 2 minutes is recommended). See [Timeouts and Errors](https://developers.google.com/api-client-library/java/google-api-java-client/errors) for an example in java.", "parameters": { "packageName": { "type": "string", "required": true, "description": "Package name of the app.", "location": "path" } }, "parameterOrder": [ "packageName" ], "mediaUpload": { "accept": [ "application/octet-stream" ], "protocols": { "resumable": { "multipart": true, "path": "/resumable/upload/androidpublisher/v3/applications/internalappsharing/{packageName}/artifacts/bundle" }, "simple": { "path": "/upload/androidpublisher/v3/applications/internalappsharing/{packageName}/artifacts/bundle", "multipart": true } }, "maxSize": "10737418240" }, "path": "androidpublisher/v3/applications/internalappsharing/{packageName}/artifacts/bundle", "flatPath": "androidpublisher/v3/applications/internalappsharing/{packageName}/artifacts/bundle", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "httpMethod": "POST", "id": "androidpublisher.internalappsharingartifacts.uploadbundle", "supportsMediaUpload": true, "response": { "$ref": "InternalAppSharingArtifact" } }, "uploadapk": { "supportsMediaUpload": true, "parameterOrder": [ "packageName" ], "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "path": "androidpublisher/v3/applications/internalappsharing/{packageName}/artifacts/apk", "description": "Uploads an APK to internal app sharing. If you are using the Google API client libraries, please increase the timeout of the http request before calling this endpoint (a timeout of 2 minutes is recommended). See [Timeouts and Errors](https://developers.google.com/api-client-library/java/google-api-java-client/errors) for an example in java.", "parameters": { "packageName": { "location": "path", "description": "Package name of the app.", "required": true, "type": "string" } }, "mediaUpload": { "accept": [ "application/octet-stream", "application/vnd.android.package-archive" ], "maxSize": "1073741824", "protocols": { "simple": { "path": "/upload/androidpublisher/v3/applications/internalappsharing/{packageName}/artifacts/apk", "multipart": true }, "resumable": { "multipart": true, "path": "/resumable/upload/androidpublisher/v3/applications/internalappsharing/{packageName}/artifacts/apk" } } }, "flatPath": "androidpublisher/v3/applications/internalappsharing/{packageName}/artifacts/apk", "response": { "$ref": "InternalAppSharingArtifact" }, "httpMethod": "POST", "id": "androidpublisher.internalappsharingartifacts.uploadapk" } } }, "grants": { "methods": { "patch": { "request": { "$ref": "Grant" }, "response": { "$ref": "Grant" }, "description": "Updates access for the user to the given package.", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "parameters": { "updateMask": { "location": "query", "description": "Optional. The list of fields to be updated.", "format": "google-fieldmask", "type": "string" }, "name": { "location": "path", "required": true, "description": "Required. Resource name for this grant, following the pattern \"developers/{developer}/users/{email}/grants/{package_name}\". If this grant is for a draft app, the app ID will be used in this resource name instead of the package name.", "type": "string", "pattern": "^developers/[^/]+/users/[^/]+/grants/[^/]+$" } }, "httpMethod": "PATCH", "parameterOrder": [ "name" ], "path": "androidpublisher/v3/{+name}", "flatPath": "androidpublisher/v3/developers/{developersId}/users/{usersId}/grants/{grantsId}", "id": "androidpublisher.grants.patch" }, "delete": { "flatPath": "androidpublisher/v3/developers/{developersId}/users/{usersId}/grants/{grantsId}", "parameters": { "name": { "pattern": "^developers/[^/]+/users/[^/]+/grants/[^/]+$", "location": "path", "description": "Required. The name of the grant to delete. Format: developers/{developer}/users/{email}/grants/{package_name}", "type": "string", "required": true } }, "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "parameterOrder": [ "name" ], "httpMethod": "DELETE", "description": "Removes all access for the user to the given package or developer account.", "path": "androidpublisher/v3/{+name}", "id": "androidpublisher.grants.delete" }, "create": { "path": "androidpublisher/v3/{+parent}/grants", "parameters": { "parent": { "pattern": "^developers/[^/]+/users/[^/]+$", "description": "Required. The user which needs permission. Format: developers/{developer}/users/{user}", "required": true, "location": "path", "type": "string" } }, "response": { "$ref": "Grant" }, "request": { "$ref": "Grant" }, "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "flatPath": "androidpublisher/v3/developers/{developersId}/users/{usersId}/grants", "httpMethod": "POST", "parameterOrder": [ "parent" ], "id": "androidpublisher.grants.create", "description": "Grant access for a user to the given package." } } }, "purchases": { "resources": { "subscriptions": { "methods": { "acknowledge": { "path": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:acknowledge", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "id": "androidpublisher.purchases.subscriptions.acknowledge", "flatPath": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:acknowledge", "request": { "$ref": "SubscriptionPurchasesAcknowledgeRequest" }, "httpMethod": "POST", "parameterOrder": [ "packageName", "subscriptionId", "token" ], "description": "Acknowledges a subscription purchase.", "parameters": { "packageName": { "location": "path", "type": "string", "required": true, "description": "The package name of the application for which this subscription was purchased (for example, 'com.some.thing')." }, "token": { "type": "string", "location": "path", "required": true, "description": "The token provided to the user's device when the subscription was purchased." }, "subscriptionId": { "type": "string", "location": "path", "required": true, "description": "The purchased subscription ID (for example, 'monthly001')." } } }, "get": { "parameterOrder": [ "packageName", "subscriptionId", "token" ], "id": "androidpublisher.purchases.subscriptions.get", "response": { "$ref": "SubscriptionPurchase" }, "httpMethod": "GET", "path": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}", "parameters": { "token": { "required": true, "location": "path", "description": "The token provided to the user's device when the subscription was purchased.", "type": "string" }, "packageName": { "required": true, "location": "path", "type": "string", "description": "The package name of the application for which this subscription was purchased (for example, 'com.some.thing')." }, "subscriptionId": { "required": true, "location": "path", "description": "The purchased subscription ID (for example, 'monthly001').", "type": "string" } }, "flatPath": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}", "description": "Checks whether a user's subscription purchase is valid and returns its expiry time.", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ] }, "cancel": { "description": "Cancels a user's subscription purchase. The subscription remains valid until its expiration time.", "id": "androidpublisher.purchases.subscriptions.cancel", "flatPath": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:cancel", "parameterOrder": [ "packageName", "subscriptionId", "token" ], "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "httpMethod": "POST", "path": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:cancel", "parameters": { "packageName": { "type": "string", "description": "The package name of the application for which this subscription was purchased (for example, 'com.some.thing').", "location": "path", "required": true }, "subscriptionId": { "required": true, "description": "The purchased subscription ID (for example, 'monthly001').", "location": "path", "type": "string" }, "token": { "location": "path", "type": "string", "description": "The token provided to the user's device when the subscription was purchased.", "required": true } } }, "defer": { "parameterOrder": [ "packageName", "subscriptionId", "token" ], "response": { "$ref": "SubscriptionPurchasesDeferResponse" }, "description": "Defers a user's subscription purchase until a specified future expiration time.", "id": "androidpublisher.purchases.subscriptions.defer", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "flatPath": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:defer", "parameters": { "token": { "description": "The token provided to the user's device when the subscription was purchased.", "type": "string", "required": true, "location": "path" }, "packageName": { "required": true, "description": "The package name of the application for which this subscription was purchased (for example, 'com.some.thing').", "location": "path", "type": "string" }, "subscriptionId": { "description": "The purchased subscription ID (for example, 'monthly001').", "required": true, "type": "string", "location": "path" } }, "path": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:defer", "httpMethod": "POST", "request": { "$ref": "SubscriptionPurchasesDeferRequest" } }, "refund": { "path": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:refund", "id": "androidpublisher.purchases.subscriptions.refund", "parameters": { "token": { "type": "string", "required": true, "description": "The token provided to the user's device when the subscription was purchased.", "location": "path" }, "subscriptionId": { "description": "\"The purchased subscription ID (for example, 'monthly001').", "location": "path", "required": true, "type": "string" }, "packageName": { "description": "The package name of the application for which this subscription was purchased (for example, 'com.some.thing').", "location": "path", "required": true, "type": "string" } }, "httpMethod": "POST", "flatPath": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:refund", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "parameterOrder": [ "packageName", "subscriptionId", "token" ], "description": "Refunds a user's subscription purchase, but the subscription remains valid until its expiration time and it will continue to recur." }, "revoke": { "flatPath": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:revoke", "parameterOrder": [ "packageName", "subscriptionId", "token" ], "description": "Refunds and immediately revokes a user's subscription purchase. Access to the subscription will be terminated immediately and it will stop recurring.", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "httpMethod": "POST", "id": "androidpublisher.purchases.subscriptions.revoke", "path": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:revoke", "parameters": { "packageName": { "required": true, "location": "path", "description": "The package name of the application for which this subscription was purchased (for example, 'com.some.thing').", "type": "string" }, "token": { "required": true, "type": "string", "description": "The token provided to the user's device when the subscription was purchased.", "location": "path" }, "subscriptionId": { "location": "path", "type": "string", "required": true, "description": "The purchased subscription ID (for example, 'monthly001')." } } } } }, "subscriptionsv2": { "methods": { "get": { "description": "Get metadata about a subscription", "flatPath": "androidpublisher/v3/applications/{packageName}/purchases/subscriptionsv2/tokens/{token}", "path": "androidpublisher/v3/applications/{packageName}/purchases/subscriptionsv2/tokens/{token}", "httpMethod": "GET", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "response": { "$ref": "SubscriptionPurchaseV2" }, "id": "androidpublisher.purchases.subscriptionsv2.get", "parameterOrder": [ "packageName", "token" ], "parameters": { "token": { "required": true, "description": "Required. The token provided to the user's device when the subscription was purchased.", "location": "path", "type": "string" }, "packageName": { "type": "string", "required": true, "location": "path", "description": "The package of the application for which this subscription was purchased (for example, 'com.some.thing')." } } } } }, "products": { "methods": { "acknowledge": { "parameterOrder": [ "packageName", "productId", "token" ], "httpMethod": "POST", "flatPath": "androidpublisher/v3/applications/{packageName}/purchases/products/{productId}/tokens/{token}:acknowledge", "request": { "$ref": "ProductPurchasesAcknowledgeRequest" }, "id": "androidpublisher.purchases.products.acknowledge", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "parameters": { "productId": { "required": true, "location": "path", "description": "The inapp product SKU (for example, 'com.some.thing.inapp1').", "type": "string" }, "packageName": { "required": true, "type": "string", "description": "The package name of the application the inapp product was sold in (for example, 'com.some.thing').", "location": "path" }, "token": { "location": "path", "description": "The token provided to the user's device when the inapp product was purchased.", "required": true, "type": "string" } }, "description": "Acknowledges a purchase of an inapp item.", "path": "androidpublisher/v3/applications/{packageName}/purchases/products/{productId}/tokens/{token}:acknowledge" }, "get": { "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "httpMethod": "GET", "parameterOrder": [ "packageName", "productId", "token" ], "flatPath": "androidpublisher/v3/applications/{packageName}/purchases/products/{productId}/tokens/{token}", "id": "androidpublisher.purchases.products.get", "parameters": { "token": { "type": "string", "required": true, "description": "The token provided to the user's device when the inapp product was purchased.", "location": "path" }, "packageName": { "type": "string", "location": "path", "description": "The package name of the application the inapp product was sold in (for example, 'com.some.thing').", "required": true }, "productId": { "location": "path", "description": "The inapp product SKU (for example, 'com.some.thing.inapp1').", "type": "string", "required": true } }, "description": "Checks the purchase and consumption status of an inapp item.", "response": { "$ref": "ProductPurchase" }, "path": "androidpublisher/v3/applications/{packageName}/purchases/products/{productId}/tokens/{token}" } } }, "voidedpurchases": { "methods": { "list": { "response": { "$ref": "VoidedPurchasesListResponse" }, "httpMethod": "GET", "description": "Lists the purchases that were canceled, refunded or charged-back.", "parameterOrder": [ "packageName" ], "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "flatPath": "androidpublisher/v3/applications/{packageName}/purchases/voidedpurchases", "path": "androidpublisher/v3/applications/{packageName}/purchases/voidedpurchases", "id": "androidpublisher.purchases.voidedpurchases.list", "parameters": { "endTime": { "type": "string", "description": "The time, in milliseconds since the Epoch, of the newest voided purchase that you want to see in the response. The value of this parameter cannot be greater than the current time and is ignored if a pagination token is set. Default value is current time. Note: This filter is applied on the time at which the record is seen as voided by our systems and not the actual voided time returned in the response.", "format": "int64", "location": "query" }, "startIndex": { "format": "uint32", "description": "Defines the index of the first element to return. This can only be used if indexed paging is enabled.", "type": "integer", "location": "query" }, "token": { "location": "query", "type": "string", "description": "Defines the token of the page to return, usually taken from TokenPagination. This can only be used if token paging is enabled." }, "maxResults": { "format": "uint32", "description": "Defines how many results the list operation should return. The default number depends on the resource collection.", "type": "integer", "location": "query" }, "type": { "type": "integer", "description": "The type of voided purchases that you want to see in the response. Possible values are: 0. Only voided in-app product purchases will be returned in the response. This is the default value. 1. Both voided in-app purchases and voided subscription purchases will be returned in the response. Note: Before requesting to receive voided subscription purchases, you must switch to use orderId in the response which uniquely identifies one-time purchases and subscriptions. Otherwise, you will receive multiple subscription orders with the same PurchaseToken, because subscription renewal orders share the same PurchaseToken.", "format": "int32", "location": "query" }, "startTime": { "description": "The time, in milliseconds since the Epoch, of the oldest voided purchase that you want to see in the response. The value of this parameter cannot be older than 30 days and is ignored if a pagination token is set. Default value is current time minus 30 days. Note: This filter is applied on the time at which the record is seen as voided by our systems and not the actual voided time returned in the response.", "type": "string", "location": "query", "format": "int64" }, "packageName": { "type": "string", "location": "path", "description": "The package name of the application for which voided purchases need to be returned (for example, 'com.some.thing').", "required": true } } } } } } }, "reviews": { "methods": { "list": { "path": "androidpublisher/v3/applications/{packageName}/reviews", "parameterOrder": [ "packageName" ], "description": "Lists all reviews.", "response": { "$ref": "ReviewsListResponse" }, "id": "androidpublisher.reviews.list", "parameters": { "translationLanguage": { "description": "Language localization code.", "type": "string", "location": "query" }, "packageName": { "required": true, "location": "path", "type": "string", "description": "Package name of the app." }, "startIndex": { "location": "query", "description": "The index of the first element to return.", "type": "integer", "format": "uint32" }, "token": { "type": "string", "description": "Pagination token. If empty, list starts at the first review.", "location": "query" }, "maxResults": { "format": "uint32", "type": "integer", "description": "How many results the list operation should return.", "location": "query" } }, "httpMethod": "GET", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "flatPath": "androidpublisher/v3/applications/{packageName}/reviews" }, "get": { "parameters": { "packageName": { "location": "path", "type": "string", "description": "Package name of the app.", "required": true }, "translationLanguage": { "description": "Language localization code.", "type": "string", "location": "query" }, "reviewId": { "location": "path", "type": "string", "description": "Unique identifier for a review.", "required": true } }, "flatPath": "androidpublisher/v3/applications/{packageName}/reviews/{reviewId}", "id": "androidpublisher.reviews.get", "response": { "$ref": "Review" }, "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "description": "Gets a single review.", "httpMethod": "GET", "path": "androidpublisher/v3/applications/{packageName}/reviews/{reviewId}", "parameterOrder": [ "packageName", "reviewId" ] }, "reply": { "path": "androidpublisher/v3/applications/{packageName}/reviews/{reviewId}:reply", "httpMethod": "POST", "response": { "$ref": "ReviewsReplyResponse" }, "parameterOrder": [ "packageName", "reviewId" ], "id": "androidpublisher.reviews.reply", "description": "Replies to a single review, or updates an existing reply.", "parameters": { "reviewId": { "description": "Unique identifier for a review.", "required": true, "location": "path", "type": "string" }, "packageName": { "required": true, "description": "Package name of the app.", "location": "path", "type": "string" } }, "request": { "$ref": "ReviewsReplyRequest" }, "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "flatPath": "androidpublisher/v3/applications/{packageName}/reviews/{reviewId}:reply" } } }, "applications": { "resources": { "deviceTierConfigs": { "methods": { "get": { "id": "androidpublisher.applications.deviceTierConfigs.get", "flatPath": "androidpublisher/v3/applications/{packageName}/deviceTierConfigs/{deviceTierConfigId}", "httpMethod": "GET", "path": "androidpublisher/v3/applications/{packageName}/deviceTierConfigs/{deviceTierConfigId}", "response": { "$ref": "DeviceTierConfig" }, "description": "Returns a particular device tier config.", "parameterOrder": [ "packageName", "deviceTierConfigId" ], "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "parameters": { "deviceTierConfigId": { "format": "int64", "location": "path", "description": "Required. Id of an existing device tier config.", "type": "string", "required": true }, "packageName": { "required": true, "location": "path", "description": "Package name of the app.", "type": "string" } } }, "list": { "path": "androidpublisher/v3/applications/{packageName}/deviceTierConfigs", "parameterOrder": [ "packageName" ], "flatPath": "androidpublisher/v3/applications/{packageName}/deviceTierConfigs", "response": { "$ref": "ListDeviceTierConfigsResponse" }, "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "id": "androidpublisher.applications.deviceTierConfigs.list", "httpMethod": "GET", "description": "Returns created device tier configs, ordered by descending creation time.", "parameters": { "pageSize": { "format": "int32", "description": "The maximum number of device tier configs to return. The service may return fewer than this value. If unspecified, at most 10 device tier configs will be returned. The maximum value for this field is 100; values above 100 will be coerced to 100. Device tier configs will be ordered by descending creation time.", "location": "query", "type": "integer" }, "packageName": { "type": "string", "required": true, "location": "path", "description": "Package name of the app." }, "pageToken": { "description": "A page token, received from a previous `ListDeviceTierConfigs` call. Provide this to retrieve the subsequent page.", "type": "string", "location": "query" } } }, "create": { "description": "Creates a new device tier config for an app.", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "parameterOrder": [ "packageName" ], "flatPath": "androidpublisher/v3/applications/{packageName}/deviceTierConfigs", "httpMethod": "POST", "id": "androidpublisher.applications.deviceTierConfigs.create", "path": "androidpublisher/v3/applications/{packageName}/deviceTierConfigs", "parameters": { "packageName": { "type": "string", "description": "Package name of the app.", "location": "path", "required": true }, "allowUnknownDevices": { "location": "query", "description": "Whether the service should accept device IDs that are unknown to Play's device catalog.", "type": "boolean" } }, "request": { "$ref": "DeviceTierConfig" }, "response": { "$ref": "DeviceTierConfig" } } } } } }, "edits": { "methods": { "get": { "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}", "httpMethod": "GET", "response": { "$ref": "AppEdit" }, "parameters": { "editId": { "required": true, "description": "Identifier of the edit.", "type": "string", "location": "path" }, "packageName": { "required": true, "type": "string", "location": "path", "description": "Package name of the app." } }, "id": "androidpublisher.edits.get", "parameterOrder": [ "packageName", "editId" ], "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "description": "Gets an app edit." }, "insert": { "response": { "$ref": "AppEdit" }, "request": { "$ref": "AppEdit" }, "path": "androidpublisher/v3/applications/{packageName}/edits", "description": "Creates a new edit for an app.", "parameterOrder": [ "packageName" ], "flatPath": "androidpublisher/v3/applications/{packageName}/edits", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "parameters": { "packageName": { "type": "string", "required": true, "description": "Package name of the app.", "location": "path" } }, "id": "androidpublisher.edits.insert", "httpMethod": "POST" }, "commit": { "httpMethod": "POST", "response": { "$ref": "AppEdit" }, "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}:commit", "parameters": { "editId": { "required": true, "location": "path", "type": "string", "description": "Identifier of the edit." }, "packageName": { "type": "string", "required": true, "description": "Package name of the app.", "location": "path" }, "changesNotSentForReview": { "description": "Indicates that the changes in this edit will not be reviewed until they are explicitly sent for review from the Google Play Console UI. These changes will be added to any other changes that are not yet sent for review.", "type": "boolean", "location": "query" } }, "description": "Commits an app edit.", "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}:commit", "parameterOrder": [ "packageName", "editId" ], "id": "androidpublisher.edits.commit", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ] }, "validate": { "parameters": { "editId": { "location": "path", "description": "Identifier of the edit.", "type": "string", "required": true }, "packageName": { "location": "path", "type": "string", "description": "Package name of the app.", "required": true } }, "id": "androidpublisher.edits.validate", "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}:validate", "parameterOrder": [ "packageName", "editId" ], "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}:validate", "description": "Validates an app edit.", "response": { "$ref": "AppEdit" }, "httpMethod": "POST", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ] }, "delete": { "parameterOrder": [ "packageName", "editId" ], "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}", "httpMethod": "DELETE", "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}", "id": "androidpublisher.edits.delete", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "parameters": { "editId": { "type": "string", "required": true, "description": "Identifier of the edit.", "location": "path" }, "packageName": { "description": "Package name of the app.", "required": true, "type": "string", "location": "path" } }, "description": "Deletes an app edit." } }, "resources": { "countryavailability": { "methods": { "get": { "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/countryAvailability/{track}", "parameterOrder": [ "packageName", "editId", "track" ], "parameters": { "packageName": { "description": "Package name of the app.", "location": "path", "required": true, "type": "string" }, "editId": { "required": true, "description": "Identifier of the edit.", "location": "path", "type": "string" }, "track": { "required": true, "description": "The track to read from.", "location": "path", "type": "string" } }, "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "httpMethod": "GET", "response": { "$ref": "TrackCountryAvailability" }, "id": "androidpublisher.edits.countryavailability.get", "description": "Gets country availability.", "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/countryAvailability/{track}" } } }, "bundles": { "methods": { "upload": { "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "parameterOrder": [ "packageName", "editId" ], "response": { "$ref": "Bundle" }, "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/bundles", "id": "androidpublisher.edits.bundles.upload", "parameters": { "ackBundleInstallationWarning": { "location": "query", "type": "boolean", "description": "Must be set to true if the app bundle installation may trigger a warning on user devices (for example, if installation size may be over a threshold, typically 100 MB)." }, "editId": { "description": "Identifier of the edit.", "required": true, "type": "string", "location": "path" }, "packageName": { "required": true, "description": "Package name of the app.", "location": "path", "type": "string" } }, "httpMethod": "POST", "mediaUpload": { "protocols": { "simple": { "path": "/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/bundles", "multipart": true }, "resumable": { "path": "/resumable/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/bundles", "multipart": true } }, "maxSize": "10737418240", "accept": [ "application/octet-stream" ] }, "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/bundles", "supportsMediaUpload": true, "description": "Uploads a new Android App Bundle to this edit. If you are using the Google API client libraries, please increase the timeout of the http request before calling this endpoint (a timeout of 2 minutes is recommended). See [Timeouts and Errors](https://developers.google.com/api-client-library/java/google-api-java-client/errors) for an example in java." }, "list": { "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "description": "Lists all current Android App Bundles of the app and edit.", "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/bundles", "httpMethod": "GET", "parameterOrder": [ "packageName", "editId" ], "parameters": { "packageName": { "description": "Package name of the app.", "required": true, "location": "path", "type": "string" }, "editId": { "location": "path", "type": "string", "required": true, "description": "Identifier of the edit." } }, "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/bundles", "id": "androidpublisher.edits.bundles.list", "response": { "$ref": "BundlesListResponse" } } } }, "expansionfiles": { "methods": { "get": { "parameterOrder": [ "packageName", "editId", "apkVersionCode", "expansionFileType" ], "parameters": { "apkVersionCode": { "required": true, "format": "int32", "type": "integer", "location": "path", "description": "The version code of the APK whose expansion file configuration is being read or modified." }, "expansionFileType": { "type": "string", "enum": [ "expansionFileTypeUnspecified", "main", "patch" ], "description": "The file type of the file configuration which is being read or modified.", "required": true, "enumDescriptions": [ "Unspecified expansion file type.", "Main expansion file.", "Patch expansion file." ], "location": "path" }, "packageName": { "location": "path", "type": "string", "description": "Package name of the app.", "required": true }, "editId": { "required": true, "description": "Identifier of the edit.", "type": "string", "location": "path" } }, "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}", "httpMethod": "GET", "id": "androidpublisher.edits.expansionfiles.get", "response": { "$ref": "ExpansionFile" }, "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}", "description": "Fetches the expansion file configuration for the specified APK." }, "upload": { "id": "androidpublisher.edits.expansionfiles.upload", "supportsMediaUpload": true, "mediaUpload": { "maxSize": "2147483648", "accept": [ "application/octet-stream" ], "protocols": { "resumable": { "path": "/resumable/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}", "multipart": true }, "simple": { "path": "/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}", "multipart": true } } }, "parameterOrder": [ "packageName", "editId", "apkVersionCode", "expansionFileType" ], "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "httpMethod": "POST", "parameters": { "apkVersionCode": { "description": "The version code of the APK whose expansion file configuration is being read or modified.", "required": true, "location": "path", "type": "integer", "format": "int32" }, "expansionFileType": { "type": "string", "location": "path", "enumDescriptions": [ "Unspecified expansion file type.", "Main expansion file.", "Patch expansion file." ], "description": "The file type of the expansion file configuration which is being updated.", "enum": [ "expansionFileTypeUnspecified", "main", "patch" ], "required": true }, "packageName": { "location": "path", "required": true, "description": "Package name of the app.", "type": "string" }, "editId": { "required": true, "location": "path", "type": "string", "description": "Identifier of the edit." } }, "description": "Uploads a new expansion file and attaches to the specified APK.", "response": { "$ref": "ExpansionFilesUploadResponse" }, "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}" }, "update": { "description": "Updates the APK's expansion file configuration to reference another APK's expansion file. To add a new expansion file use the Upload method.", "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}", "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}", "parameters": { "editId": { "description": "Identifier of the edit.", "type": "string", "location": "path", "required": true }, "expansionFileType": { "enum": [ "expansionFileTypeUnspecified", "main", "patch" ], "description": "The file type of the file configuration which is being read or modified.", "enumDescriptions": [ "Unspecified expansion file type.", "Main expansion file.", "Patch expansion file." ], "type": "string", "location": "path", "required": true }, "packageName": { "location": "path", "type": "string", "description": "Package name of the app.", "required": true }, "apkVersionCode": { "required": true, "type": "integer", "description": "The version code of the APK whose expansion file configuration is being read or modified.", "format": "int32", "location": "path" } }, "response": { "$ref": "ExpansionFile" }, "httpMethod": "PUT", "request": { "$ref": "ExpansionFile" }, "id": "androidpublisher.edits.expansionfiles.update", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "parameterOrder": [ "packageName", "editId", "apkVersionCode", "expansionFileType" ] }, "patch": { "parameterOrder": [ "packageName", "editId", "apkVersionCode", "expansionFileType" ], "request": { "$ref": "ExpansionFile" }, "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "parameters": { "editId": { "type": "string", "location": "path", "description": "Identifier of the edit.", "required": true }, "expansionFileType": { "description": "The file type of the expansion file configuration which is being updated.", "enum": [ "expansionFileTypeUnspecified", "main", "patch" ], "type": "string", "required": true, "enumDescriptions": [ "Unspecified expansion file type.", "Main expansion file.", "Patch expansion file." ], "location": "path" }, "apkVersionCode": { "location": "path", "required": true, "type": "integer", "format": "int32", "description": "The version code of the APK whose expansion file configuration is being read or modified." }, "packageName": { "location": "path", "description": "Package name of the app.", "type": "string", "required": true } }, "description": "Patches the APK's expansion file configuration to reference another APK's expansion file. To add a new expansion file use the Upload method.", "httpMethod": "PATCH", "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}", "response": { "$ref": "ExpansionFile" }, "id": "androidpublisher.edits.expansionfiles.patch", "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}" } } }, "details": { "methods": { "update": { "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/details", "id": "androidpublisher.edits.details.update", "description": "Updates details of an app.", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "response": { "$ref": "AppDetails" }, "request": { "$ref": "AppDetails" }, "parameters": { "editId": { "required": true, "type": "string", "description": "Identifier of the edit.", "location": "path" }, "packageName": { "location": "path", "required": true, "description": "Package name of the app.", "type": "string" } }, "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/details", "httpMethod": "PUT", "parameterOrder": [ "packageName", "editId" ] }, "patch": { "request": { "$ref": "AppDetails" }, "parameters": { "packageName": { "description": "Package name of the app.", "type": "string", "location": "path", "required": true }, "editId": { "required": true, "description": "Identifier of the edit.", "type": "string", "location": "path" } }, "description": "Patches details of an app.", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "parameterOrder": [ "packageName", "editId" ], "httpMethod": "PATCH", "response": { "$ref": "AppDetails" }, "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/details", "id": "androidpublisher.edits.details.patch", "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/details" }, "get": { "id": "androidpublisher.edits.details.get", "response": { "$ref": "AppDetails" }, "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/details", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "parameterOrder": [ "packageName", "editId" ], "description": "Gets details of an app.", "httpMethod": "GET", "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/details", "parameters": { "packageName": { "type": "string", "location": "path", "required": true, "description": "Package name of the app." }, "editId": { "description": "Identifier of the edit.", "type": "string", "location": "path", "required": true } } } } }, "deobfuscationfiles": { "methods": { "upload": { "supportsMediaUpload": true, "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/deobfuscationFiles/{deobfuscationFileType}", "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/deobfuscationFiles/{deobfuscationFileType}", "parameters": { "deobfuscationFileType": { "enum": [ "deobfuscationFileTypeUnspecified", "proguard", "nativeCode" ], "enumDescriptions": [ "Unspecified deobfuscation file type.", "Proguard deobfuscation file type.", "Native debugging symbols file type." ], "location": "path", "type": "string", "description": "The type of the deobfuscation file.", "required": true }, "apkVersionCode": { "format": "int32", "required": true, "description": "The version code of the APK whose Deobfuscation File is being uploaded.", "type": "integer", "location": "path" }, "editId": { "required": true, "type": "string", "location": "path", "description": "Unique identifier for this edit." }, "packageName": { "type": "string", "required": true, "location": "path", "description": "Unique identifier for the Android app." } }, "httpMethod": "POST", "mediaUpload": { "maxSize": "629145600", "protocols": { "simple": { "path": "/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/deobfuscationFiles/{deobfuscationFileType}", "multipart": true }, "resumable": { "path": "/resumable/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/deobfuscationFiles/{deobfuscationFileType}", "multipart": true } }, "accept": [ "application/octet-stream" ] }, "id": "androidpublisher.edits.deobfuscationfiles.upload", "description": "Uploads a new deobfuscation file and attaches to the specified APK.", "response": { "$ref": "DeobfuscationFilesUploadResponse" }, "parameterOrder": [ "packageName", "editId", "apkVersionCode", "deobfuscationFileType" ], "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ] } } }, "tracks": { "methods": { "update": { "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/tracks/{track}", "id": "androidpublisher.edits.tracks.update", "httpMethod": "PUT", "parameters": { "packageName": { "type": "string", "location": "path", "required": true, "description": "Package name of the app." }, "editId": { "description": "Identifier of the edit.", "required": true, "location": "path", "type": "string" }, "track": { "required": true, "description": "Identifier of the track.", "location": "path", "type": "string" } }, "request": { "$ref": "Track" }, "response": { "$ref": "Track" }, "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "description": "Updates a track.", "parameterOrder": [ "packageName", "editId", "track" ], "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/tracks/{track}" }, "get": { "httpMethod": "GET", "id": "androidpublisher.edits.tracks.get", "description": "Gets a track.", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/tracks/{track}", "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/tracks/{track}", "parameterOrder": [ "packageName", "editId", "track" ], "parameters": { "track": { "description": "Identifier of the track.", "type": "string", "location": "path", "required": true }, "editId": { "description": "Identifier of the edit.", "required": true, "location": "path", "type": "string" }, "packageName": { "description": "Package name of the app.", "location": "path", "type": "string", "required": true } }, "response": { "$ref": "Track" } }, "list": { "response": { "$ref": "TracksListResponse" }, "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/tracks", "parameterOrder": [ "packageName", "editId" ], "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "httpMethod": "GET", "id": "androidpublisher.edits.tracks.list", "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/tracks", "parameters": { "packageName": { "description": "Package name of the app.", "required": true, "location": "path", "type": "string" }, "editId": { "required": true, "location": "path", "type": "string", "description": "Identifier of the edit." } }, "description": "Lists all tracks." }, "patch": { "id": "androidpublisher.edits.tracks.patch", "request": { "$ref": "Track" }, "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/tracks/{track}", "response": { "$ref": "Track" }, "parameterOrder": [ "packageName", "editId", "track" ], "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "description": "Patches a track.", "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/tracks/{track}", "parameters": { "packageName": { "required": true, "location": "path", "type": "string", "description": "Package name of the app." }, "track": { "location": "path", "required": true, "type": "string", "description": "Identifier of the track." }, "editId": { "type": "string", "location": "path", "description": "Identifier of the edit.", "required": true } }, "httpMethod": "PATCH" } } }, "testers": { "methods": { "get": { "description": "Gets testers. Note: Testers resource does not support email lists.", "parameterOrder": [ "packageName", "editId", "track" ], "id": "androidpublisher.edits.testers.get", "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/testers/{track}", "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/testers/{track}", "response": { "$ref": "Testers" }, "parameters": { "track": { "description": "The track to read from.", "type": "string", "location": "path", "required": true }, "editId": { "location": "path", "required": true, "type": "string", "description": "Identifier of the edit." }, "packageName": { "type": "string", "location": "path", "description": "Package name of the app.", "required": true } }, "httpMethod": "GET", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ] }, "patch": { "parameters": { "editId": { "location": "path", "type": "string", "required": true, "description": "Identifier of the edit." }, "track": { "location": "path", "required": true, "description": "The track to update.", "type": "string" }, "packageName": { "type": "string", "location": "path", "required": true, "description": "Package name of the app." } }, "response": { "$ref": "Testers" }, "httpMethod": "PATCH", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "parameterOrder": [ "packageName", "editId", "track" ], "id": "androidpublisher.edits.testers.patch", "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/testers/{track}", "request": { "$ref": "Testers" }, "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/testers/{track}", "description": "Patches testers. Note: Testers resource does not support email lists." }, "update": { "id": "androidpublisher.edits.testers.update", "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/testers/{track}", "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/testers/{track}", "description": "Updates testers. Note: Testers resource does not support email lists.", "httpMethod": "PUT", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "request": { "$ref": "Testers" }, "parameters": { "editId": { "required": true, "location": "path", "description": "Identifier of the edit.", "type": "string" }, "packageName": { "type": "string", "description": "Package name of the app.", "required": true, "location": "path" }, "track": { "location": "path", "type": "string", "required": true, "description": "The track to update." } }, "parameterOrder": [ "packageName", "editId", "track" ], "response": { "$ref": "Testers" } } } }, "apks": { "methods": { "addexternallyhosted": { "parameters": { "packageName": { "location": "path", "type": "string", "description": "Package name of the app.", "required": true }, "editId": { "location": "path", "type": "string", "description": "Identifier of the edit.", "required": true } }, "request": { "$ref": "ApksAddExternallyHostedRequest" }, "response": { "$ref": "ApksAddExternallyHostedResponse" }, "httpMethod": "POST", "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/externallyHosted", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "id": "androidpublisher.edits.apks.addexternallyhosted", "description": "Creates a new APK without uploading the APK itself to Google Play, instead hosting the APK at a specified URL. This function is only available to organizations using Managed Play whose application is configured to restrict distribution to the organizations.", "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/externallyHosted", "parameterOrder": [ "packageName", "editId" ] }, "upload": { "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "supportsMediaUpload": true, "parameterOrder": [ "packageName", "editId" ], "response": { "$ref": "Apk" }, "id": "androidpublisher.edits.apks.upload", "description": "Uploads an APK and adds to the current edit.", "httpMethod": "POST", "mediaUpload": { "protocols": { "resumable": { "multipart": true, "path": "/resumable/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks" }, "simple": { "multipart": true, "path": "/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks" } }, "maxSize": "10737418240", "accept": [ "application/octet-stream", "application/vnd.android.package-archive" ] }, "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks", "parameters": { "packageName": { "description": "Package name of the app.", "required": true, "location": "path", "type": "string" }, "editId": { "required": true, "location": "path", "description": "Identifier of the edit.", "type": "string" } } }, "list": { "parameters": { "editId": { "description": "Identifier of the edit.", "required": true, "location": "path", "type": "string" }, "packageName": { "required": true, "location": "path", "type": "string", "description": "Package name of the app." } }, "response": { "$ref": "ApksListResponse" }, "parameterOrder": [ "packageName", "editId" ], "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks", "description": "Lists all current APKs of the app and edit.", "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks", "id": "androidpublisher.edits.apks.list", "httpMethod": "GET", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ] } } }, "listings": { "methods": { "list": { "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings", "parameterOrder": [ "packageName", "editId" ], "id": "androidpublisher.edits.listings.list", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "description": "Lists all localized store listings.", "httpMethod": "GET", "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings", "parameters": { "editId": { "description": "Identifier of the edit.", "type": "string", "required": true, "location": "path" }, "packageName": { "type": "string", "description": "Package name of the app.", "required": true, "location": "path" } }, "response": { "$ref": "ListingsListResponse" } }, "patch": { "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}", "request": { "$ref": "Listing" }, "parameterOrder": [ "packageName", "editId", "language" ], "parameters": { "language": { "description": "Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German).", "location": "path", "type": "string", "required": true }, "editId": { "required": true, "type": "string", "location": "path", "description": "Identifier of the edit." }, "packageName": { "type": "string", "description": "Package name of the app.", "required": true, "location": "path" } }, "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "description": "Patches a localized store listing.", "id": "androidpublisher.edits.listings.patch", "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}", "response": { "$ref": "Listing" }, "httpMethod": "PATCH" }, "deleteall": { "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings", "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings", "parameterOrder": [ "packageName", "editId" ], "httpMethod": "DELETE", "parameters": { "editId": { "description": "Identifier of the edit.", "location": "path", "type": "string", "required": true }, "packageName": { "description": "Package name of the app.", "location": "path", "type": "string", "required": true } }, "description": "Deletes all store listings.", "id": "androidpublisher.edits.listings.deleteall", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ] }, "update": { "parameterOrder": [ "packageName", "editId", "language" ], "request": { "$ref": "Listing" }, "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}", "parameters": { "packageName": { "required": true, "location": "path", "type": "string", "description": "Package name of the app." }, "language": { "type": "string", "location": "path", "description": "Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German).", "required": true }, "editId": { "required": true, "description": "Identifier of the edit.", "type": "string", "location": "path" } }, "response": { "$ref": "Listing" }, "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "httpMethod": "PUT", "id": "androidpublisher.edits.listings.update", "description": "Creates or updates a localized store listing." }, "get": { "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}", "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}", "parameters": { "language": { "location": "path", "description": "Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German).", "type": "string", "required": true }, "editId": { "required": true, "type": "string", "description": "Identifier of the edit.", "location": "path" }, "packageName": { "location": "path", "required": true, "type": "string", "description": "Package name of the app." } }, "description": "Gets a localized store listing.", "httpMethod": "GET", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "parameterOrder": [ "packageName", "editId", "language" ], "id": "androidpublisher.edits.listings.get", "response": { "$ref": "Listing" } }, "delete": { "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "httpMethod": "DELETE", "parameterOrder": [ "packageName", "editId", "language" ], "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}", "parameters": { "language": { "type": "string", "required": true, "location": "path", "description": "Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German)." }, "editId": { "required": true, "location": "path", "type": "string", "description": "Identifier of the edit." }, "packageName": { "type": "string", "description": "Package name of the app.", "location": "path", "required": true } }, "description": "Deletes a localized store listing.", "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}", "id": "androidpublisher.edits.listings.delete" } } }, "images": { "methods": { "deleteall": { "parameterOrder": [ "packageName", "editId", "language", "imageType" ], "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "id": "androidpublisher.edits.images.deleteall", "httpMethod": "DELETE", "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}", "description": "Deletes all images for the specified language and image type. Returns an empty response if no images are found.", "response": { "$ref": "ImagesDeleteAllResponse" }, "parameters": { "language": { "required": true, "location": "path", "type": "string", "description": "Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German). Providing a language that is not supported by the App is a no-op." }, "packageName": { "description": "Package name of the app.", "location": "path", "type": "string", "required": true }, "editId": { "location": "path", "description": "Identifier of the edit.", "required": true, "type": "string" }, "imageType": { "type": "string", "enum": [ "appImageTypeUnspecified", "phoneScreenshots", "sevenInchScreenshots", "tenInchScreenshots", "tvScreenshots", "wearScreenshots", "icon", "featureGraphic", "tvBanner" ], "description": "Type of the Image. Providing an image type that refers to no images is a no-op.", "location": "path", "enumDescriptions": [ "Unspecified type. Do not use.", "Phone screenshot.", "Seven inch screenshot.", "Ten inch screenshot.", "TV screenshot.", "Wear screenshot.", "Icon.", "Feature graphic.", "TV banner." ], "required": true } }, "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}" }, "delete": { "parameterOrder": [ "packageName", "editId", "language", "imageType", "imageId" ], "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}/{imageId}", "id": "androidpublisher.edits.images.delete", "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}/{imageId}", "description": "Deletes the image (specified by id) from the edit.", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "httpMethod": "DELETE", "parameters": { "imageType": { "description": "Type of the Image.", "enum": [ "appImageTypeUnspecified", "phoneScreenshots", "sevenInchScreenshots", "tenInchScreenshots", "tvScreenshots", "wearScreenshots", "icon", "featureGraphic", "tvBanner" ], "enumDescriptions": [ "Unspecified type. Do not use.", "Phone screenshot.", "Seven inch screenshot.", "Ten inch screenshot.", "TV screenshot.", "Wear screenshot.", "Icon.", "Feature graphic.", "TV banner." ], "required": true, "location": "path", "type": "string" }, "packageName": { "description": "Package name of the app.", "location": "path", "type": "string", "required": true }, "language": { "location": "path", "required": true, "description": "Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German).", "type": "string" }, "editId": { "type": "string", "description": "Identifier of the edit.", "location": "path", "required": true }, "imageId": { "location": "path", "description": "Unique identifier an image within the set of images attached to this edit.", "type": "string", "required": true } } }, "upload": { "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "parameterOrder": [ "packageName", "editId", "language", "imageType" ], "parameters": { "imageType": { "enum": [ "appImageTypeUnspecified", "phoneScreenshots", "sevenInchScreenshots", "tenInchScreenshots", "tvScreenshots", "wearScreenshots", "icon", "featureGraphic", "tvBanner" ], "description": "Type of the Image.", "type": "string", "location": "path", "required": true, "enumDescriptions": [ "Unspecified type. Do not use.", "Phone screenshot.", "Seven inch screenshot.", "Ten inch screenshot.", "TV screenshot.", "Wear screenshot.", "Icon.", "Feature graphic.", "TV banner." ] }, "editId": { "description": "Identifier of the edit.", "location": "path", "type": "string", "required": true }, "language": { "type": "string", "location": "path", "description": "Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German). Providing a language that is not supported by the App is a no-op.", "required": true }, "packageName": { "description": "Package name of the app.", "location": "path", "required": true, "type": "string" } }, "mediaUpload": { "maxSize": "15728640", "accept": [ "image/*" ], "protocols": { "resumable": { "multipart": true, "path": "/resumable/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}" }, "simple": { "multipart": true, "path": "/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}" } } }, "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}", "id": "androidpublisher.edits.images.upload", "description": "Uploads an image of the specified language and image type, and adds to the edit.", "supportsMediaUpload": true, "response": { "$ref": "ImagesUploadResponse" }, "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}", "httpMethod": "POST" }, "list": { "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}", "parameterOrder": [ "packageName", "editId", "language", "imageType" ], "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "description": "Lists all images. The response may be empty.", "id": "androidpublisher.edits.images.list", "parameters": { "editId": { "required": true, "location": "path", "description": "Identifier of the edit.", "type": "string" }, "packageName": { "type": "string", "description": "Package name of the app.", "required": true, "location": "path" }, "imageType": { "required": true, "type": "string", "location": "path", "description": "Type of the Image. Providing an image type that refers to no images will return an empty response.", "enum": [ "appImageTypeUnspecified", "phoneScreenshots", "sevenInchScreenshots", "tenInchScreenshots", "tvScreenshots", "wearScreenshots", "icon", "featureGraphic", "tvBanner" ], "enumDescriptions": [ "Unspecified type. Do not use.", "Phone screenshot.", "Seven inch screenshot.", "Ten inch screenshot.", "TV screenshot.", "Wear screenshot.", "Icon.", "Feature graphic.", "TV banner." ] }, "language": { "location": "path", "type": "string", "required": true, "description": "Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German). There must be a store listing for the specified language." } }, "httpMethod": "GET", "response": { "$ref": "ImagesListResponse" } } } } } }, "users": { "methods": { "patch": { "parameterOrder": [ "name" ], "parameters": { "name": { "pattern": "^developers/[^/]+/users/[^/]+$", "location": "path", "required": true, "description": "Required. Resource name for this user, following the pattern \"developers/{developer}/users/{email}\".", "type": "string" }, "updateMask": { "description": "Optional. The list of fields to be updated.", "format": "google-fieldmask", "type": "string", "location": "query" } }, "description": "Updates access for the user to the developer account.", "path": "androidpublisher/v3/{+name}", "id": "androidpublisher.users.patch", "httpMethod": "PATCH", "request": { "$ref": "User" }, "flatPath": "androidpublisher/v3/developers/{developersId}/users/{usersId}", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "response": { "$ref": "User" } }, "delete": { "path": "androidpublisher/v3/{+name}", "flatPath": "androidpublisher/v3/developers/{developersId}/users/{usersId}", "description": "Removes all access for the user to the given developer account.", "httpMethod": "DELETE", "id": "androidpublisher.users.delete", "parameterOrder": [ "name" ], "parameters": { "name": { "required": true, "description": "Required. The name of the user to delete. Format: developers/{developer}/users/{email}", "pattern": "^developers/[^/]+/users/[^/]+$", "location": "path", "type": "string" } }, "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ] }, "create": { "httpMethod": "POST", "request": { "$ref": "User" }, "parameters": { "parent": { "location": "path", "type": "string", "description": "Required. The developer account to add the user to. Format: developers/{developer}", "required": true, "pattern": "^developers/[^/]+$" } }, "flatPath": "androidpublisher/v3/developers/{developersId}/users", "id": "androidpublisher.users.create", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "parameterOrder": [ "parent" ], "response": { "$ref": "User" }, "path": "androidpublisher/v3/{+parent}/users", "description": "Grant access for a user to the given developer account." }, "list": { "path": "androidpublisher/v3/{+parent}/users", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "httpMethod": "GET", "description": "Lists all users with access to a developer account.", "flatPath": "androidpublisher/v3/developers/{developersId}/users", "id": "androidpublisher.users.list", "parameters": { "pageSize": { "location": "query", "type": "integer", "format": "int32", "description": "The maximum number of results to return. This must be set to -1 to disable pagination." }, "pageToken": { "location": "query", "description": "A token received from a previous call to this method, in order to retrieve further results.", "type": "string" }, "parent": { "location": "path", "description": "Required. The developer account to fetch users from. Format: developers/{developer}", "required": true, "pattern": "^developers/[^/]+$", "type": "string" } }, "response": { "$ref": "ListUsersResponse" }, "parameterOrder": [ "parent" ] } } }, "monetization": { "methods": { "convertRegionPrices": { "id": "androidpublisher.monetization.convertRegionPrices", "flatPath": "androidpublisher/v3/applications/{packageName}/pricing:convertRegionPrices", "response": { "$ref": "ConvertRegionPricesResponse" }, "request": { "$ref": "ConvertRegionPricesRequest" }, "path": "androidpublisher/v3/applications/{packageName}/pricing:convertRegionPrices", "parameters": { "packageName": { "description": "Required. The app package name.", "required": true, "type": "string", "location": "path" } }, "parameterOrder": [ "packageName" ], "description": "Calculates the region prices, using today's exchange rate and country-specific pricing patterns, based on the price in the request for a set of regions.", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "httpMethod": "POST" } }, "resources": { "subscriptions": { "resources": { "basePlans": { "methods": { "activate": { "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "parameterOrder": [ "packageName", "productId", "basePlanId" ], "request": { "$ref": "ActivateBasePlanRequest" }, "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}:activate", "parameters": { "packageName": { "description": "Required. The parent app (package name) of the base plan to activate.", "location": "path", "required": true, "type": "string" }, "basePlanId": { "description": "Required. The unique base plan ID of the base plan to activate.", "location": "path", "type": "string", "required": true }, "productId": { "location": "path", "required": true, "description": "Required. The parent subscription (ID) of the base plan to activate.", "type": "string" } }, "response": { "$ref": "Subscription" }, "description": "Activates a base plan. Once activated, base plans will be available to new subscribers.", "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}:activate", "httpMethod": "POST", "id": "androidpublisher.monetization.subscriptions.basePlans.activate" }, "delete": { "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "httpMethod": "DELETE", "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}", "parameters": { "productId": { "required": true, "location": "path", "description": "Required. The parent subscription (ID) of the base plan to delete.", "type": "string" }, "basePlanId": { "description": "Required. The unique offer ID of the base plan to delete.", "location": "path", "required": true, "type": "string" }, "packageName": { "description": "Required. The parent app (package name) of the base plan to delete.", "required": true, "location": "path", "type": "string" } }, "id": "androidpublisher.monetization.subscriptions.basePlans.delete", "description": "Deletes a base plan. Can only be done for draft base plans. This action is irreversible.", "parameterOrder": [ "packageName", "productId", "basePlanId" ], "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}" }, "migratePrices": { "id": "androidpublisher.monetization.subscriptions.basePlans.migratePrices", "description": "Migrates subscribers who are receiving an historical subscription price to the currently-offered price for the specified region. Requests will cause price change notifications to be sent to users who are currently receiving an historical price older than the supplied timestamp. Subscribers who do not agree to the new price will have their subscription ended at the next renewal.", "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}:migratePrices", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}:migratePrices", "response": { "$ref": "MigrateBasePlanPricesResponse" }, "parameterOrder": [ "packageName", "productId", "basePlanId" ], "httpMethod": "POST", "parameters": { "productId": { "description": "Required. The ID of the subscription to update. Must be equal to the product_id field on the Subscription resource.", "type": "string", "location": "path", "required": true }, "basePlanId": { "location": "path", "required": true, "description": "Required. The unique base plan ID of the base plan to update prices on.", "type": "string" }, "packageName": { "type": "string", "location": "path", "required": true, "description": "Required. Package name of the parent app. Must be equal to the package_name field on the Subscription resource." } }, "request": { "$ref": "MigrateBasePlanPricesRequest" } }, "deactivate": { "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}:deactivate", "parameters": { "productId": { "type": "string", "location": "path", "description": "Required. The parent subscription (ID) of the base plan to deactivate.", "required": true }, "basePlanId": { "location": "path", "required": true, "description": "Required. The unique base plan ID of the base plan to deactivate.", "type": "string" }, "packageName": { "location": "path", "description": "Required. The parent app (package name) of the base plan to deactivate.", "required": true, "type": "string" } }, "id": "androidpublisher.monetization.subscriptions.basePlans.deactivate", "httpMethod": "POST", "request": { "$ref": "DeactivateBasePlanRequest" }, "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "response": { "$ref": "Subscription" }, "description": "Deactivates a base plan. Once deactivated, the base plan will become unavailable to new subscribers, but existing subscribers will maintain their subscription", "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}:deactivate", "parameterOrder": [ "packageName", "productId", "basePlanId" ] } }, "resources": { "offers": { "methods": { "patch": { "id": "androidpublisher.monetization.subscriptions.basePlans.offers.patch", "description": "Updates an existing subscription offer.", "parameters": { "offerId": { "location": "path", "required": true, "type": "string", "description": "Required. Immutable. Unique ID of this subscription offer. Must be unique within the base plan." }, "packageName": { "location": "path", "type": "string", "required": true, "description": "Required. Immutable. The package name of the app the parent subscription belongs to." }, "regionsVersion.version": { "type": "string", "location": "query", "description": "Required. A string representing version of the available regions being used for the specified resource. The current version is 2022/01." }, "updateMask": { "description": "Required. The list of fields to be updated.", "format": "google-fieldmask", "location": "query", "type": "string" }, "productId": { "required": true, "type": "string", "location": "path", "description": "Required. Immutable. The ID of the parent subscription this offer belongs to." }, "basePlanId": { "type": "string", "description": "Required. Immutable. The ID of the base plan to which this offer is an extension.", "required": true, "location": "path" } }, "httpMethod": "PATCH", "response": { "$ref": "SubscriptionOffer" }, "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers/{offerId}", "request": { "$ref": "SubscriptionOffer" }, "parameterOrder": [ "packageName", "productId", "basePlanId", "offerId" ], "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers/{offerId}" }, "activate": { "description": "Activates a subscription offer. Once activated, subscription offers will be available to new subscribers.", "httpMethod": "POST", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "parameters": { "productId": { "required": true, "type": "string", "location": "path", "description": "Required. The parent subscription (ID) of the offer to activate." }, "basePlanId": { "location": "path", "required": true, "type": "string", "description": "Required. The parent base plan (ID) of the offer to activate." }, "offerId": { "description": "Required. The unique offer ID of the offer to activate.", "location": "path", "required": true, "type": "string" }, "packageName": { "required": true, "description": "Required. The parent app (package name) of the offer to activate.", "location": "path", "type": "string" } }, "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers/{offerId}:activate", "request": { "$ref": "ActivateSubscriptionOfferRequest" }, "parameterOrder": [ "packageName", "productId", "basePlanId", "offerId" ], "response": { "$ref": "SubscriptionOffer" }, "id": "androidpublisher.monetization.subscriptions.basePlans.offers.activate", "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers/{offerId}:activate" }, "delete": { "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers/{offerId}", "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers/{offerId}", "parameters": { "productId": { "location": "path", "required": true, "description": "Required. The parent subscription (ID) of the offer to delete.", "type": "string" }, "offerId": { "required": true, "description": "Required. The unique offer ID of the offer to delete.", "location": "path", "type": "string" }, "packageName": { "description": "Required. The parent app (package name) of the offer to delete.", "required": true, "location": "path", "type": "string" }, "basePlanId": { "location": "path", "required": true, "type": "string", "description": "Required. The parent base plan (ID) of the offer to delete." } }, "httpMethod": "DELETE", "id": "androidpublisher.monetization.subscriptions.basePlans.offers.delete", "parameterOrder": [ "packageName", "productId", "basePlanId", "offerId" ], "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "description": "Deletes a subscription offer. Can only be done for draft offers. This action is irreversible." }, "get": { "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers/{offerId}", "httpMethod": "GET", "response": { "$ref": "SubscriptionOffer" }, "parameters": { "productId": { "location": "path", "type": "string", "required": true, "description": "Required. The parent subscription (ID) of the offer to get." }, "offerId": { "required": true, "location": "path", "type": "string", "description": "Required. The unique offer ID of the offer to get." }, "basePlanId": { "location": "path", "type": "string", "required": true, "description": "Required. The parent base plan (ID) of the offer to get." }, "packageName": { "required": true, "location": "path", "type": "string", "description": "Required. The parent app (package name) of the offer to get." } }, "description": "Reads a single offer", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers/{offerId}", "parameterOrder": [ "packageName", "productId", "basePlanId", "offerId" ], "id": "androidpublisher.monetization.subscriptions.basePlans.offers.get" }, "create": { "parameterOrder": [ "packageName", "productId", "basePlanId" ], "request": { "$ref": "SubscriptionOffer" }, "parameters": { "offerId": { "type": "string", "location": "query", "description": "Required. The ID to use for the offer. For the requirements on this format, see the documentation of the offer_id field on the SubscriptionOffer resource." }, "productId": { "type": "string", "description": "Required. The parent subscription (ID) for which the offer should be created. Must be equal to the product_id field on the SubscriptionOffer resource.", "required": true, "location": "path" }, "basePlanId": { "description": "Required. The parent base plan (ID) for which the offer should be created. Must be equal to the base_plan_id field on the SubscriptionOffer resource.", "location": "path", "required": true, "type": "string" }, "regionsVersion.version": { "description": "Required. A string representing version of the available regions being used for the specified resource. The current version is 2022/01.", "location": "query", "type": "string" }, "packageName": { "description": "Required. The parent app (package name) for which the offer should be created. Must be equal to the package_name field on the Subscription resource.", "required": true, "type": "string", "location": "path" } }, "description": "Creates a new subscription offer. Only auto-renewing base plans can have subscription offers. The offer state will be DRAFT until it is activated.", "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers", "httpMethod": "POST", "response": { "$ref": "SubscriptionOffer" }, "id": "androidpublisher.monetization.subscriptions.basePlans.offers.create", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers" }, "list": { "response": { "$ref": "ListSubscriptionOffersResponse" }, "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers", "description": "Lists all offers under a given subscription.", "httpMethod": "GET", "parameterOrder": [ "packageName", "productId", "basePlanId" ], "parameters": { "basePlanId": { "required": true, "location": "path", "type": "string", "description": "Required. The parent base plan (ID) for which the offers should be read. May be specified as '-' to read all offers under a subscription." }, "pageSize": { "description": "The maximum number of subscriptions to return. The service may return fewer than this value. If unspecified, at most 50 subscriptions will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.", "location": "query", "type": "integer", "format": "int32" }, "pageToken": { "description": "A page token, received from a previous `ListSubscriptionsOffers` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListSubscriptionOffers` must match the call that provided the page token.", "location": "query", "type": "string" }, "packageName": { "required": true, "location": "path", "type": "string", "description": "Required. The parent app (package name) for which the subscriptions should be read." }, "productId": { "type": "string", "required": true, "location": "path", "description": "Required. The parent subscription (ID) for which the offers should be read." } }, "id": "androidpublisher.monetization.subscriptions.basePlans.offers.list", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers" }, "deactivate": { "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers/{offerId}:deactivate", "parameters": { "packageName": { "required": true, "description": "Required. The parent app (package name) of the offer to deactivate.", "type": "string", "location": "path" }, "productId": { "type": "string", "location": "path", "required": true, "description": "Required. The parent subscription (ID) of the offer to deactivate." }, "offerId": { "type": "string", "description": "Required. The unique offer ID of the offer to deactivate.", "location": "path", "required": true }, "basePlanId": { "description": "Required. The parent base plan (ID) of the offer to deactivate.", "required": true, "type": "string", "location": "path" } }, "request": { "$ref": "DeactivateSubscriptionOfferRequest" }, "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers/{offerId}:deactivate", "parameterOrder": [ "packageName", "productId", "basePlanId", "offerId" ], "description": "Deactivates a subscription offer. Once deactivated, existing subscribers will maintain their subscription, but the offer will become unavailable to new subscribers.", "response": { "$ref": "SubscriptionOffer" }, "httpMethod": "POST", "id": "androidpublisher.monetization.subscriptions.basePlans.offers.deactivate" } } } } } }, "methods": { "delete": { "description": "Deletes a subscription. A subscription can only be deleted if it has never had a base plan published.", "parameters": { "packageName": { "type": "string", "description": "Required. The parent app (package name) of the app of the subscription to delete.", "location": "path", "required": true }, "productId": { "description": "Required. The unique product ID of the subscription to delete.", "location": "path", "type": "string", "required": true } }, "httpMethod": "DELETE", "id": "androidpublisher.monetization.subscriptions.delete", "parameterOrder": [ "packageName", "productId" ], "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}", "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}" }, "archive": { "id": "androidpublisher.monetization.subscriptions.archive", "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}:archive", "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}:archive", "parameters": { "productId": { "required": true, "type": "string", "description": "Required. The unique product ID of the subscription to delete.", "location": "path" }, "packageName": { "required": true, "location": "path", "description": "Required. The parent app (package name) of the app of the subscription to delete.", "type": "string" } }, "response": { "$ref": "Subscription" }, "httpMethod": "POST", "description": "Archives a subscription. Can only be done if at least one base plan was active in the past, and no base plan is available for new or existing subscribers currently. This action is irreversible, and the subscription ID will remain reserved.", "parameterOrder": [ "packageName", "productId" ], "request": { "$ref": "ArchiveSubscriptionRequest" }, "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ] }, "get": { "httpMethod": "GET", "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "response": { "$ref": "Subscription" }, "parameters": { "productId": { "required": true, "type": "string", "description": "Required. The unique product ID of the subscription to get.", "location": "path" }, "packageName": { "description": "Required. The parent app (package name) of the subscription to get.", "required": true, "type": "string", "location": "path" } }, "id": "androidpublisher.monetization.subscriptions.get", "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}", "parameterOrder": [ "packageName", "productId" ], "description": "Reads a single subscription." }, "create": { "httpMethod": "POST", "parameters": { "packageName": { "required": true, "location": "path", "description": "Required. The parent app (package name) for which the subscription should be created. Must be equal to the package_name field on the Subscription resource.", "type": "string" }, "regionsVersion.version": { "location": "query", "type": "string", "description": "Required. A string representing version of the available regions being used for the specified resource. The current version is 2022/01." }, "productId": { "description": "Required. The ID to use for the subscription. For the requirements on this format, see the documentation of the product_id field on the Subscription resource.", "location": "query", "type": "string" } }, "id": "androidpublisher.monetization.subscriptions.create", "description": "Creates a new subscription. Newly added base plans will remain in draft state until activated.", "response": { "$ref": "Subscription" }, "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "parameterOrder": [ "packageName" ], "request": { "$ref": "Subscription" }, "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions", "path": "androidpublisher/v3/applications/{packageName}/subscriptions" }, "patch": { "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}", "response": { "$ref": "Subscription" }, "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}", "parameterOrder": [ "packageName", "productId" ], "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "request": { "$ref": "Subscription" }, "httpMethod": "PATCH", "parameters": { "packageName": { "required": true, "location": "path", "type": "string", "description": "Immutable. Package name of the parent app." }, "regionsVersion.version": { "location": "query", "type": "string", "description": "Required. A string representing version of the available regions being used for the specified resource. The current version is 2022/01." }, "updateMask": { "location": "query", "type": "string", "description": "Required. The list of fields to be updated.", "format": "google-fieldmask" }, "productId": { "location": "path", "type": "string", "required": true, "description": "Immutable. Unique product ID of the product. Unique within the parent app. Product IDs must be composed of lower-case letters (a-z), numbers (0-9), underscores (_) and dots (.). It must start with a lower-case letter or number, and be between 1 and 40 (inclusive) characters in length." } }, "id": "androidpublisher.monetization.subscriptions.patch", "description": "Updates an existing subscription." }, "list": { "parameterOrder": [ "packageName" ], "description": "Lists all subscriptions under a given app.", "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions", "parameters": { "showArchived": { "location": "query", "type": "boolean", "description": "Whether archived subscriptions should be included in the response. Defaults to false." }, "pageToken": { "type": "string", "location": "query", "description": "A page token, received from a previous `ListSubscriptions` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListSubscriptions` must match the call that provided the page token." }, "pageSize": { "description": "The maximum number of subscriptions to return. The service may return fewer than this value. If unspecified, at most 50 subscriptions will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.", "format": "int32", "type": "integer", "location": "query" }, "packageName": { "location": "path", "required": true, "description": "Required. The parent app (package name) for which the subscriptions should be read.", "type": "string" } }, "path": "androidpublisher/v3/applications/{packageName}/subscriptions", "response": { "$ref": "ListSubscriptionsResponse" }, "httpMethod": "GET", "id": "androidpublisher.monetization.subscriptions.list", "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ] } } } } }, "orders": { "methods": { "refund": { "scopes": [ "https://www.googleapis.com/auth/androidpublisher" ], "id": "androidpublisher.orders.refund", "httpMethod": "POST", "parameters": { "orderId": { "description": "The order ID provided to the user when the subscription or in-app order was purchased.", "location": "path", "required": true, "type": "string" }, "revoke": { "location": "query", "description": "Whether to revoke the purchased item. If set to true, access to the subscription or in-app item will be terminated immediately. If the item is a recurring subscription, all future payments will also be terminated. Consumed in-app items need to be handled by developer's app. (optional).", "type": "boolean" }, "packageName": { "type": "string", "description": "The package name of the application for which this subscription or in-app item was purchased (for example, 'com.some.thing').", "required": true, "location": "path" } }, "description": "Refunds a user's subscription or in-app purchase order. Orders older than 1 year cannot be refunded.", "parameterOrder": [ "packageName", "orderId" ], "path": "androidpublisher/v3/applications/{packageName}/orders/{orderId}:refund", "flatPath": "androidpublisher/v3/applications/{packageName}/orders/{orderId}:refund" } } } }, "schemas": { "SubscriptionListing": { "description": "The consumer-visible metadata of a subscription.", "id": "SubscriptionListing", "properties": { "benefits": { "description": "A list of benefits shown to the user on platforms such as the Play Store and in restoration flows in the language of this listing. Plain text. Ordered list of at most four benefits.", "type": "array", "items": { "type": "string" } }, "title": { "description": "Required. The title of this subscription in the language of this listing. Plain text.", "type": "string" }, "description": { "type": "string", "description": "The description of this subscription in the language of this listing. Maximum length - 80 characters. Plain text." }, "languageCode": { "description": "Required. The language of this listing, as defined by BCP-47, e.g. \"en-US\".", "type": "string" } }, "type": "object" }, "ListDeviceTierConfigsResponse": { "description": "Response listing existing device tier configs.", "type": "object", "properties": { "nextPageToken": { "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.", "type": "string" }, "deviceTierConfigs": { "description": "Device tier configs created by the developer.", "items": { "$ref": "DeviceTierConfig" }, "type": "array" } }, "id": "ListDeviceTierConfigsResponse" }, "MigrateBasePlanPricesRequest": { "id": "MigrateBasePlanPricesRequest", "properties": { "regionsVersion": { "description": "Required. The version of the available regions being used for the regional_price_migrations.", "$ref": "RegionsVersion" }, "regionalPriceMigrations": { "items": { "$ref": "RegionalPriceMigrationConfig" }, "type": "array", "description": "Required. The regional prices to update." } }, "description": "Request message for MigrateBasePlanPrices.", "type": "object" }, "TargetingRuleScope": { "type": "object", "properties": { "specificSubscriptionInApp": { "type": "string", "description": "The scope of the current targeting rule is the subscription with the specified subscription ID. Must be a subscription within the same parent app." } }, "description": "Defines the scope of subscriptions which a targeting rule can match to target offers to users based on past or current entitlement.", "id": "TargetingRuleScope" }, "DeveloperComment": { "properties": { "text": { "description": "The content of the comment, i.e. reply body.", "type": "string" }, "lastModified": { "description": "The last time at which this comment was updated.", "$ref": "Timestamp" } }, "description": "Developer entry from conversation between user and developer.", "id": "DeveloperComment", "type": "object" }, "ListingsListResponse": { "description": "Response listing all localized listings.", "id": "ListingsListResponse", "properties": { "kind": { "description": "The kind of this response (\"androidpublisher#listingsListResponse\").", "type": "string" }, "listings": { "type": "array", "description": "All localized listings.", "items": { "$ref": "Listing" } } }, "type": "object" }, "ConvertedOtherRegionsPrice": { "description": "Converted other regions prices.", "type": "object", "properties": { "eurPrice": { "$ref": "Money", "description": "Price in EUR to use for the \"Other regions\" location exclusive of taxes." }, "usdPrice": { "description": "Price in USD to use for the \"Other regions\" location exclusive of taxes.", "$ref": "Money" } }, "id": "ConvertedOtherRegionsPrice" }, "SubscriptionPurchasesAcknowledgeRequest": { "type": "object", "description": "Request for the purchases.subscriptions.acknowledge API.", "properties": { "developerPayload": { "type": "string", "description": "Payload to attach to the purchase." } }, "id": "SubscriptionPurchasesAcknowledgeRequest" }, "RegionalTaxRateInfo": { "description": "Specified details about taxation in a given geographical region.", "id": "RegionalTaxRateInfo", "type": "object", "properties": { "taxTier": { "description": "Tax tier to specify reduced tax rate. Developers who sell digital news, magazines, newspapers, books, or audiobooks in various regions may be eligible for reduced tax rates. [Learn more](https://support.google.com/googleplay/android-developer/answer/10463498).", "type": "string", "enum": [ "TAX_TIER_UNSPECIFIED", "TAX_TIER_BOOKS_1", "TAX_TIER_NEWS_1", "TAX_TIER_NEWS_2", "TAX_TIER_MUSIC_OR_AUDIO_1", "TAX_TIER_LIVE_OR_BROADCAST_1" ], "enumDescriptions": [ "", "", "", "", "", "" ] }, "eligibleForStreamingServiceTaxRate": { "type": "boolean", "description": "You must tell us if your app contains streaming products to correctly charge US state and local sales tax. Field only supported in United States." } } }, "OtherRegionsSubscriptionOfferConfig": { "type": "object", "properties": { "otherRegionsNewSubscriberAvailability": { "type": "boolean", "description": "Whether the subscription offer in any new locations Play may launch in the future. If not specified, this will default to false." } }, "id": "OtherRegionsSubscriptionOfferConfig", "description": "Configuration for any new locations Play may launch in specified on a subscription offer." }, "CancelSurveyResult": { "properties": { "reason": { "enumDescriptions": [ "Unspecified cancel survey reason.", "Not enough usage of the subscription.", "Technical issues while using the app.", "Cost related issues.", "The user found a better app.", "Other reasons." ], "type": "string", "enum": [ "CANCEL_SURVEY_REASON_UNSPECIFIED", "CANCEL_SURVEY_REASON_NOT_ENOUGH_USAGE", "CANCEL_SURVEY_REASON_TECHNICAL_ISSUES", "CANCEL_SURVEY_REASON_COST_RELATED", "CANCEL_SURVEY_REASON_FOUND_BETTER_APP", "CANCEL_SURVEY_REASON_OTHERS" ], "description": "The reason the user selected in the cancel survey." }, "reasonUserInput": { "type": "string", "description": "Only set for CANCEL_SURVEY_REASON_OTHERS. This is the user's freeform response to the survey." } }, "type": "object", "id": "CancelSurveyResult", "description": "Result of the cancel survey when the subscription was canceled by the user." }, "Apk": { "description": "Information about an APK. The resource for ApksService.", "properties": { "binary": { "$ref": "ApkBinary", "description": "Information about the binary payload of this APK." }, "versionCode": { "type": "integer", "description": "The version code of the APK, as specified in the manifest file.", "format": "int32" } }, "id": "Apk", "type": "object" }, "Grant": { "type": "object", "description": "An access grant resource.", "properties": { "appLevelPermissions": { "items": { "type": "string", "enum": [ "APP_LEVEL_PERMISSION_UNSPECIFIED", "CAN_ACCESS_APP", "CAN_VIEW_FINANCIAL_DATA", "CAN_MANAGE_PERMISSIONS", "CAN_REPLY_TO_REVIEWS", "CAN_MANAGE_PUBLIC_APKS", "CAN_MANAGE_TRACK_APKS", "CAN_MANAGE_TRACK_USERS", "CAN_MANAGE_PUBLIC_LISTING", "CAN_MANAGE_DRAFT_APPS", "CAN_MANAGE_ORDERS" ], "enumDescriptions": [ "Unknown or unspecified permission.", "View app information (read-only).", "View financial data.", "Admin (all permissions).", "Reply to reviews.", "Release to production, exclude devices, and use app signing by Google Play.", "Release to testing tracks.", "Manage testing tracks and edit tester lists.", "Manage store presence.", "Edit and delete draft apps.", "Manage orders and subscriptions." ] }, "description": "The permissions granted to the user for this app.", "type": "array" }, "packageName": { "type": "string", "description": "Immutable. The package name of the app. This will be empty for draft apps." }, "name": { "description": "Required. Resource name for this grant, following the pattern \"developers/{developer}/users/{email}/grants/{package_name}\". If this grant is for a draft app, the app ID will be used in this resource name instead of the package name.", "type": "string" } }, "id": "Grant" }, "SystemFeature": { "id": "SystemFeature", "properties": { "name": { "type": "string", "description": "The name of the feature." } }, "type": "object", "description": "Representation of a system feature." }, "DeviceMetadata": { "description": "Characteristics of the user's device.", "properties": { "ramMb": { "type": "integer", "format": "int32", "description": "Device RAM in Megabytes, e.g. \"2048\"" }, "screenHeightPx": { "type": "integer", "description": "Screen height in pixels", "format": "int32" }, "screenWidthPx": { "description": "Screen width in pixels", "type": "integer", "format": "int32" }, "productName": { "description": "Device model name (e.g. Droid)", "type": "string" }, "cpuMake": { "type": "string", "description": "Device CPU make, e.g. \"Qualcomm\"" }, "manufacturer": { "type": "string", "description": "Device manufacturer (e.g. Motorola)" }, "glEsVersion": { "format": "int32", "type": "integer", "description": "OpenGL version" }, "nativePlatform": { "description": "Comma separated list of native platforms (e.g. \"arm\", \"arm7\")", "type": "string" }, "screenDensityDpi": { "type": "integer", "format": "int32", "description": "Screen density in DPI" }, "deviceClass": { "description": "Device class (e.g. tablet)", "type": "string" }, "cpuModel": { "type": "string", "description": "Device CPU model, e.g. \"MSM8974\"" } }, "id": "DeviceMetadata", "type": "object" }, "AppDetails": { "description": "The app details. The resource for DetailsService.", "id": "AppDetails", "properties": { "contactPhone": { "type": "string", "description": "The user-visible support telephone number for this app." }, "contactWebsite": { "description": "The user-visible website for this app.", "type": "string" }, "contactEmail": { "type": "string", "description": "The user-visible support email for this app." }, "defaultLanguage": { "type": "string", "description": "Default language code, in BCP 47 format (eg \"en-US\")." } }, "type": "object" }, "SystemApksListResponse": { "description": "Response to list previously created system APK variants.", "id": "SystemApksListResponse", "properties": { "variants": { "items": { "$ref": "Variant" }, "type": "array", "description": "All system APK variants created." } }, "type": "object" }, "TrackCountryAvailability": { "properties": { "countries": { "description": "A list of one or more countries where artifacts in this track are available. This list includes all countries that are targeted by the track, even if only specific carriers are targeted in that country.", "items": { "$ref": "TrackTargetedCountry" }, "type": "array" }, "syncWithProduction": { "type": "boolean", "description": "Whether this track's availability is synced with the default production track. See https://support.google.com/googleplay/android-developer/answer/7550024 for more information on syncing country availability with production. Note that if this is true, the returned \"countries\" and \"rest_of_world\" fields will reflect the values for the default production track." }, "restOfWorld": { "description": "Whether artifacts in this track are available to \"rest of the world\" countries.", "type": "boolean" } }, "id": "TrackCountryAvailability", "description": "Resource for per-track country availability information.", "type": "object" }, "SubscriptionPriceChange": { "type": "object", "description": "Contains the price change information for a subscription that can be used to control the user journey for the price change in the app. This can be in the form of seeking confirmation from the user or tailoring the experience for a successful conversion.", "properties": { "state": { "type": "integer", "format": "int32", "description": "The current state of the price change. Possible values are: 0. Outstanding: State for a pending price change waiting for the user to agree. In this state, you can optionally seek confirmation from the user using the In-App API. 1. Accepted: State for an accepted price change that the subscription will renew with unless it's canceled. The price change takes effect on a future date when the subscription renews. Note that the change might not occur when the subscription is renewed next." }, "newPrice": { "description": "The new price the subscription will renew with if the price change is accepted by the user.", "$ref": "Price" } }, "id": "SubscriptionPriceChange" }, "Image": { "properties": { "sha1": { "description": "A sha1 hash of the image.", "type": "string" }, "url": { "type": "string", "description": "A URL that will serve a preview of the image." }, "id": { "type": "string", "description": "A unique id representing this image." }, "sha256": { "type": "string", "description": "A sha256 hash of the image." } }, "id": "Image", "type": "object", "description": "An uploaded image. The resource for ImagesService." }, "RegionalPriceMigrationConfig": { "properties": { "regionCode": { "description": "Required. Region code this configuration applies to, as defined by ISO 3166-2, e.g. \"US\".", "type": "string" }, "oldestAllowedPriceVersionTime": { "type": "string", "format": "google-datetime", "description": "Required. The cutoff time for historical prices that subscribers can remain paying. Subscribers who are on a price that was created before this cutoff time will be migrated to the currently-offered price. These subscribers will receive a notification that they will be paying a different price. Subscribers who do not agree to the new price will have their subscription ended at the next renewal." } }, "type": "object", "id": "RegionalPriceMigrationConfig", "description": "Configuration for a price migration." }, "SubscriptionDeferralInfo": { "id": "SubscriptionDeferralInfo", "description": "A SubscriptionDeferralInfo contains the data needed to defer a subscription purchase to a future expiry time.", "properties": { "expectedExpiryTimeMillis": { "description": "The expected expiry time for the subscription. If the current expiry time for the subscription is not the value specified here, the deferral will not occur.", "format": "int64", "type": "string" }, "desiredExpiryTimeMillis": { "format": "int64", "description": "The desired next expiry time to assign to the subscription, in milliseconds since the Epoch. The given time must be later/greater than the current expiry time for the subscription.", "type": "string" } }, "type": "object" }, "ReviewReplyResult": { "id": "ReviewReplyResult", "description": "The result of replying/updating a reply to review.", "type": "object", "properties": { "lastEdited": { "description": "The time at which the reply took effect.", "$ref": "Timestamp" }, "replyText": { "description": "The reply text that was applied.", "type": "string" } } }, "ReviewsListResponse": { "id": "ReviewsListResponse", "description": "Response listing reviews.", "type": "object", "properties": { "tokenPagination": { "description": "Pagination token, to handle a number of products that is over one page.", "$ref": "TokenPagination" }, "reviews": { "description": "List of reviews.", "items": { "$ref": "Review" }, "type": "array" }, "pageInfo": { "$ref": "PageInfo", "description": "Information about the current page." } } }, "ArchiveSubscriptionRequest": { "type": "object", "id": "ArchiveSubscriptionRequest", "description": "Request message for ArchiveSubscription.", "properties": {} }, "DeviceTier": { "type": "object", "id": "DeviceTier", "description": "A single device tier. Devices matching any of the device groups in device_group_names are considered to match the tier.", "properties": { "deviceGroupNames": { "items": { "type": "string" }, "description": "Groups of devices included in this tier. These groups must be defined explicitly under device_groups in this configuration.", "type": "array" }, "level": { "description": "The priority level of the tier. Tiers are evaluated in descending order of level: the highest level tier has the highest priority. The highest tier matching a given device is selected for that device. You should use a contiguous range of levels for your tiers in a tier set; tier levels in a tier set must be unique. For instance, if your tier set has 4 tiers (including the global fallback), you should define tiers 1, 2 and 3 in this configuration. Note: tier 0 is implicitly defined as a global fallback and selected for devices that don't match any of the tiers explicitly defined here. You mustn't define level 0 explicitly in this configuration.", "format": "int32", "type": "integer" } } }, "GeneratedStandaloneApk": { "properties": { "variantId": { "description": "ID of the generated variant.", "type": "integer", "format": "int32" }, "downloadId": { "type": "string", "description": "Download ID, which uniquely identifies the APK to download. Should be supplied to `generatedapks.download` method." } }, "id": "GeneratedStandaloneApk", "description": "Download metadata for a standalone APK.", "type": "object" }, "DeviceSelector": { "id": "DeviceSelector", "properties": { "includedDeviceIds": { "items": { "$ref": "DeviceId" }, "description": "Device models included by this selector.", "type": "array" }, "requiredSystemFeatures": { "type": "array", "description": "A device needs to have all these system features to be included by the selector.", "items": { "$ref": "SystemFeature" } }, "excludedDeviceIds": { "items": { "$ref": "DeviceId" }, "type": "array", "description": "Device models excluded by this selector, even if they match all other conditions." }, "deviceRam": { "description": "Conditions on the device's RAM.", "$ref": "DeviceRam" }, "forbiddenSystemFeatures": { "items": { "$ref": "SystemFeature" }, "type": "array", "description": "A device that has any of these system features is excluded by this selector, even if it matches all other conditions." } }, "type": "object", "description": "Selector for a device group. A selector consists of a set of conditions on the device that should all match (logical AND) to determine a device group eligibility. For instance, if a selector specifies RAM conditions, device model inclusion and device model exclusion, a device is considered to match if: device matches RAM conditions AND device matches one of the included device models AND device doesn't match excluded device models" }, "ExpansionFile": { "description": "An expansion file. The resource for ExpansionFilesService.", "id": "ExpansionFile", "properties": { "referencesVersion": { "description": "If set, this APK's expansion file references another APK's expansion file. The file_size field will not be set.", "type": "integer", "format": "int32" }, "fileSize": { "description": "If set, this field indicates that this APK has an expansion file uploaded to it: this APK does not reference another APK's expansion file. The field's value is the size of the uploaded expansion file in bytes.", "type": "string", "format": "int64" } }, "type": "object" }, "IntroductoryPriceInfo": { "properties": { "introductoryPriceCurrencyCode": { "description": "ISO 4217 currency code for the introductory subscription price. For example, if the price is specified in British pounds sterling, price_currency_code is \"GBP\".", "type": "string" }, "introductoryPricePeriod": { "type": "string", "description": "Introductory price period, specified in ISO 8601 format. Common values are (but not limited to) \"P1W\" (one week), \"P1M\" (one month), \"P3M\" (three months), \"P6M\" (six months), and \"P1Y\" (one year)." }, "introductoryPriceCycles": { "description": "The number of billing period to offer introductory pricing.", "format": "int32", "type": "integer" }, "introductoryPriceAmountMicros": { "description": "Introductory price of the subscription, not including tax. The currency is the same as price_currency_code. Price is expressed in micro-units, where 1,000,000 micro-units represents one unit of the currency. For example, if the subscription price is €1.99, price_amount_micros is 1990000.", "format": "int64", "type": "string" } }, "type": "object", "description": "Contains the introductory price information for a subscription.", "id": "IntroductoryPriceInfo" }, "TrackTargetedCountry": { "type": "object", "properties": { "countryCode": { "type": "string", "description": "The country to target, as a two-letter CLDR code." } }, "description": "Representation of a single country where the contents of a track are available.", "id": "TrackTargetedCountry" }, "Review": { "type": "object", "id": "Review", "properties": { "comments": { "items": { "$ref": "Comment" }, "type": "array", "description": "A repeated field containing comments for the review." }, "authorName": { "description": "The name of the user who wrote the review.", "type": "string" }, "reviewId": { "type": "string", "description": "Unique identifier for this review." } }, "description": "An Android app review." }, "DeviceId": { "type": "object", "id": "DeviceId", "properties": { "buildDevice": { "type": "string", "description": "Value of Build.DEVICE." }, "buildBrand": { "type": "string", "description": "Value of Build.BRAND." } }, "description": "Identifier of a device." }, "SubscriptionCancelSurveyResult": { "description": "Information provided by the user when they complete the subscription cancellation flow (cancellation reason survey).", "properties": { "cancelSurveyReason": { "type": "integer", "format": "int32", "description": "The cancellation reason the user chose in the survey. Possible values are: 0. Other 1. I don't use this service enough 2. Technical issues 3. Cost-related reasons 4. I found a better app" }, "userInputCancelReason": { "type": "string", "description": "The customized input cancel reason from the user. Only present when cancelReason is 0." } }, "id": "SubscriptionCancelSurveyResult", "type": "object" }, "GeneratedAssetPackSlice": { "type": "object", "id": "GeneratedAssetPackSlice", "description": "Download metadata for an asset pack slice.", "properties": { "sliceId": { "type": "string", "description": "Asset slice ID." }, "version": { "type": "string", "description": "Asset module version.", "format": "int64" }, "downloadId": { "description": "Download ID, which uniquely identifies the APK to download. Should be supplied to `generatedapks.download` method.", "type": "string" }, "moduleName": { "type": "string", "description": "Name of the module that this asset slice belongs to." } } }, "Track": { "type": "object", "properties": { "track": { "type": "string", "description": "Identifier of the track." }, "releases": { "description": "In a read request, represents all active releases in the track. In an update request, represents desired changes.", "type": "array", "items": { "$ref": "TrackRelease" } } }, "id": "Track", "description": "A track configuration. The resource for TracksService." }, "MigrateBasePlanPricesResponse": { "description": "Response message for MigrateBasePlanPrices.", "properties": {}, "id": "MigrateBasePlanPricesResponse", "type": "object" }, "User": { "description": "A user resource.", "type": "object", "properties": { "partial": { "description": "Output only. Whether there are more permissions for the user that are not represented here. This can happen if the caller does not have permission to manage all apps in the account. This is also `true` if this user is the account owner. If this field is `true`, it should be taken as a signal that this user cannot be fully managed via the API. That is, the API caller is not be able to manage all of the permissions this user holds, either because it doesn't know about them or because the user is the account owner.", "readOnly": true, "type": "boolean" }, "grants": { "description": "Output only. Per-app permissions for the user.", "items": { "$ref": "Grant" }, "type": "array", "readOnly": true }, "accessState": { "enum": [ "ACCESS_STATE_UNSPECIFIED", "INVITED", "INVITATION_EXPIRED", "ACCESS_GRANTED", "ACCESS_EXPIRED" ], "readOnly": true, "type": "string", "enumDescriptions": [ "Unknown or unspecified access state.", "User is invited but has not yet accepted the invitation.", "Invitation has expired.", "User has accepted an invitation and has access to the Play Console.", "Account access has expired." ], "description": "Output only. The state of the user's access to the Play Console." }, "email": { "type": "string", "description": "Immutable. The user's email address." }, "developerAccountPermissions": { "type": "array", "description": "Permissions for the user which apply across the developer account.", "items": { "enumDescriptions": [ "Unknown or unspecified permission.", "View app information and download bulk reports (read-only).", "View financial data, orders, and cancellation survey responses.", "Admin (all permissions).", "Edit Play Games Services projects.", "Publish Play Games Services projects.", "Reply to reviews.", "Release to production, exclude devices, and use app signing by Google Play.", "Release to testing tracks.", "Manage testing tracks and edit tester lists.", "Manage store presence.", "Create, edit, and delete draft apps.", "Create and publish private apps to your organization.", "Choose whether apps are public, or only available to your organization.", "Manage orders and subscriptions." ], "type": "string", "enum": [ "DEVELOPER_LEVEL_PERMISSION_UNSPECIFIED", "CAN_SEE_ALL_APPS", "CAN_VIEW_FINANCIAL_DATA_GLOBAL", "CAN_MANAGE_PERMISSIONS_GLOBAL", "CAN_EDIT_GAMES_GLOBAL", "CAN_PUBLISH_GAMES_GLOBAL", "CAN_REPLY_TO_REVIEWS_GLOBAL", "CAN_MANAGE_PUBLIC_APKS_GLOBAL", "CAN_MANAGE_TRACK_APKS_GLOBAL", "CAN_MANAGE_TRACK_USERS_GLOBAL", "CAN_MANAGE_PUBLIC_LISTING_GLOBAL", "CAN_MANAGE_DRAFT_APPS_GLOBAL", "CAN_CREATE_MANAGED_PLAY_APPS_GLOBAL", "CAN_CHANGE_MANAGED_PLAY_SETTING_GLOBAL", "CAN_MANAGE_ORDERS_GLOBAL" ] } }, "expirationTime": { "format": "google-datetime", "description": "The time at which the user's access expires, if set. When setting this value, it must always be in the future.", "type": "string" }, "name": { "type": "string", "description": "Required. Resource name for this user, following the pattern \"developers/{developer}/users/{email}\"." } }, "id": "User" }, "ExpansionFilesUploadResponse": { "properties": { "expansionFile": { "$ref": "ExpansionFile", "description": "The uploaded expansion file configuration." } }, "description": "Response for uploading an expansion file.", "type": "object", "id": "ExpansionFilesUploadResponse" }, "VoidedPurchase": { "properties": { "voidedTimeMillis": { "description": "The time at which the purchase was canceled/refunded/charged-back, in milliseconds since the epoch (Jan 1, 1970).", "format": "int64", "type": "string" }, "voidedReason": { "format": "int32", "type": "integer", "description": "The reason why the purchase was voided, possible values are: 0. Other 1. Remorse 2. Not_received 3. Defective 4. Accidental_purchase 5. Fraud 6. Friendly_fraud 7. Chargeback" }, "purchaseToken": { "type": "string", "description": "The token which uniquely identifies a one-time purchase or subscription. To uniquely identify subscription renewals use order_id (available starting from version 3 of the API)." }, "voidedSource": { "type": "integer", "description": "The initiator of voided purchase, possible values are: 0. User 1. Developer 2. Google", "format": "int32" }, "orderId": { "type": "string", "description": "The order id which uniquely identifies a one-time purchase, subscription purchase, or subscription renewal." }, "kind": { "description": "This kind represents a voided purchase object in the androidpublisher service.", "type": "string" }, "purchaseTimeMillis": { "type": "string", "description": "The time at which the purchase was made, in milliseconds since the epoch (Jan 1, 1970).", "format": "int64" } }, "description": "A VoidedPurchase resource indicates a purchase that was either canceled/refunded/charged-back.", "id": "VoidedPurchase", "type": "object" }, "Price": { "properties": { "currency": { "type": "string", "description": "3 letter Currency code, as defined by ISO 4217. See java/com/google/common/money/CurrencyCode.java" }, "priceMicros": { "description": "Price in 1/million of the currency base unit, represented as a string.", "type": "string" } }, "id": "Price", "type": "object", "description": "Definition of a price, i.e. currency and units." }, "AutoRenewingBasePlanType": { "properties": { "legacyCompatible": { "description": "Whether the renewing base plan is backward compatible. The backward compatible base plan is returned by the Google Play Billing Library deprecated method querySkuDetailsAsync(). Only one renewing base plan can be marked as legacy compatible for a given subscription.", "type": "boolean" }, "resubscribeState": { "enumDescriptions": [ "Unspecified state.", "Resubscribe is active.", "Resubscribe is inactive." ], "description": "Whether users should be able to resubscribe to this base plan in Google Play surfaces. Defaults to RESUBSCRIBE_STATE_ACTIVE if not specified.", "enum": [ "RESUBSCRIBE_STATE_UNSPECIFIED", "RESUBSCRIBE_STATE_ACTIVE", "RESUBSCRIBE_STATE_INACTIVE" ], "type": "string" }, "billingPeriodDuration": { "description": "Required. Subscription period, specified in ISO 8601 format. For a list of acceptable billing periods, refer to the help center.", "type": "string" }, "prorationMode": { "description": "The proration mode for the base plan determines what happens when a user switches to this plan from another base plan. If unspecified, defaults to CHARGE_ON_NEXT_BILLING_DATE.", "type": "string", "enum": [ "SUBSCRIPTION_PRORATION_MODE_UNSPECIFIED", "SUBSCRIPTION_PRORATION_MODE_CHARGE_ON_NEXT_BILLING_DATE", "SUBSCRIPTION_PRORATION_MODE_CHARGE_FULL_PRICE_IMMEDIATELY" ], "enumDescriptions": [ "Unspecified mode.", "Users will be charged for their new base plan at the end of their current billing period.", "Users will be charged for their new base plan immediately and in full. Any remaining period of their existing subscription will be used to extend the duration of the new billing plan." ] }, "gracePeriodDuration": { "description": "Grace period of the subscription, specified in ISO 8601 format. Acceptable values are P0D (zero days), P3D (3 days), P7D (7 days), P14D (14 days), and P30D (30 days). If not specified, a default value will be used based on the recurring period duration.", "type": "string" } }, "type": "object", "description": "Represents a base plan that automatically renews at the end of its subscription period.", "id": "AutoRenewingBasePlanType" }, "UserInitiatedCancellation": { "properties": { "cancelSurveyResult": { "$ref": "CancelSurveyResult", "description": "Information provided by the user when they complete the subscription cancellation flow (cancellation reason survey)." }, "cancelTime": { "type": "string", "description": "The time at which the subscription was canceled by the user. The user might still have access to the subscription after this time. Use line_items.expiry_time to determine if a user still has access.", "format": "google-datetime" } }, "id": "UserInitiatedCancellation", "type": "object", "description": "Information specific to cancellations initiated by users." }, "DeobfuscationFilesUploadResponse": { "description": "Responses for the upload.", "id": "DeobfuscationFilesUploadResponse", "type": "object", "properties": { "deobfuscationFile": { "description": "The uploaded Deobfuscation File configuration.", "$ref": "DeobfuscationFile" } } }, "DeactivateSubscriptionOfferRequest": { "type": "object", "description": "Request message for DeactivateSubscriptionOffer.", "id": "DeactivateSubscriptionOfferRequest", "properties": {} }, "AutoRenewingPlan": { "properties": { "autoRenewEnabled": { "description": "If the subscription is currently set to auto-renew, e.g. the user has not canceled the subscription", "type": "boolean" } }, "description": "Information related to an auto renewing plan.", "type": "object", "id": "AutoRenewingPlan" }, "ProductPurchasesAcknowledgeRequest": { "description": "Request for the product.purchases.acknowledge API.", "properties": { "developerPayload": { "type": "string", "description": "Payload to attach to the purchase." } }, "type": "object", "id": "ProductPurchasesAcknowledgeRequest" }, "InternalAppSharingArtifact": { "id": "InternalAppSharingArtifact", "type": "object", "properties": { "downloadUrl": { "type": "string", "description": "The download URL generated for the uploaded artifact. Users that are authorized to download can follow the link to the Play Store app to install it." }, "certificateFingerprint": { "description": "The sha256 fingerprint of the certificate used to sign the generated artifact.", "type": "string" }, "sha256": { "description": "The sha256 hash of the artifact represented as a lowercase hexadecimal number, matching the output of the sha256sum command.", "type": "string" } }, "description": "An artifact resource which gets created when uploading an APK or Android App Bundle through internal app sharing." }, "ConvertedRegionPrice": { "id": "ConvertedRegionPrice", "description": "A converted region price.", "type": "object", "properties": { "regionCode": { "description": "The region code of the region.", "type": "string" }, "price": { "description": "The converted price tax inclusive.", "$ref": "Money" }, "taxAmount": { "description": "The tax amount of the converted price.", "$ref": "Money" } } }, "ReviewsReplyResponse": { "description": "Response on status of replying to a review.", "properties": { "result": { "$ref": "ReviewReplyResult", "description": "The result of replying/updating a reply to review." } }, "type": "object", "id": "ReviewsReplyResponse" }, "Money": { "properties": { "units": { "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.", "format": "int64", "type": "string" }, "nanos": { "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.", "format": "int32", "type": "integer" }, "currencyCode": { "type": "string", "description": "The three-letter currency code defined in ISO 4217." } }, "description": "Represents an amount of money with its currency type.", "type": "object", "id": "Money" }, "InAppProduct": { "properties": { "packageName": { "type": "string", "description": "Package name of the parent app." }, "prices": { "additionalProperties": { "$ref": "Price" }, "description": "Prices per buyer region. None of these can be zero, as in-app products are never free. Map key is region code, as defined by ISO 3166-2.", "type": "object" }, "managedProductTaxesAndComplianceSettings": { "description": "Details about taxes and legal compliance. Only applicable to managed products.", "$ref": "ManagedProductTaxAndComplianceSettings" }, "defaultLanguage": { "type": "string", "description": "Default language of the localized data, as defined by BCP-47. e.g. \"en-US\"." }, "status": { "type": "string", "enum": [ "statusUnspecified", "active", "inactive" ], "enumDescriptions": [ "Unspecified status.", "The product is published and active in the store.", "The product is not published and therefore inactive in the store." ], "description": "The status of the product, e.g. whether it's active." }, "gracePeriod": { "type": "string", "description": "Grace period of the subscription, specified in ISO 8601 format. Allows developers to give their subscribers a grace period when the payment for the new recurrence period is declined. Acceptable values are P0D (zero days), P3D (three days), P7D (seven days), P14D (14 days), and P30D (30 days)." }, "sku": { "description": "Stock-keeping-unit (SKU) of the product, unique within an app.", "type": "string" }, "subscriptionPeriod": { "description": "Subscription period, specified in ISO 8601 format. Acceptable values are P1W (one week), P1M (one month), P3M (three months), P6M (six months), and P1Y (one year).", "type": "string" }, "defaultPrice": { "description": "Default price. Cannot be zero, as in-app products are never free. Always in the developer's Checkout merchant currency.", "$ref": "Price" }, "purchaseType": { "type": "string", "enum": [ "purchaseTypeUnspecified", "managedUser", "subscription" ], "enumDescriptions": [ "Unspecified purchase type.", "The default product type - one time purchase.", "In-app product with a recurring period." ], "description": "The type of the product, e.g. a recurring subscription." }, "subscriptionTaxesAndComplianceSettings": { "description": "Details about taxes and legal compliance. Only applicable to subscription products.", "$ref": "SubscriptionTaxAndComplianceSettings" }, "trialPeriod": { "type": "string", "description": "Trial period, specified in ISO 8601 format. Acceptable values are anything between P7D (seven days) and P999D (999 days)." }, "listings": { "description": "List of localized title and description data. Map key is the language of the localized data, as defined by BCP-47, e.g. \"en-US\".", "type": "object", "additionalProperties": { "$ref": "InAppProductListing" } } }, "type": "object", "description": "An in-app product. The resource for InappproductsService.", "id": "InAppProduct" }, "DeviceGroup": { "description": "LINT.IfChange A group of devices. A group is defined by a set of device selectors. A device belongs to the group if it matches any selector (logical OR).", "id": "DeviceGroup", "properties": { "deviceSelectors": { "description": "Device selectors for this group. A device matching any of the selectors is included in this group.", "items": { "$ref": "DeviceSelector" }, "type": "array" }, "name": { "description": "The name of the group.", "type": "string" } }, "type": "object" }, "SubscriptionOfferTargeting": { "description": "Defines the rule a user needs to satisfy to receive this offer.", "type": "object", "id": "SubscriptionOfferTargeting", "properties": { "acquisitionRule": { "$ref": "AcquisitionTargetingRule", "description": "Offer targeting rule for new user acquisition." }, "upgradeRule": { "$ref": "UpgradeTargetingRule", "description": "Offer targeting rule for upgrading users' existing plans." } } }, "ExternallyHostedApk": { "id": "ExternallyHostedApk", "properties": { "fileSize": { "description": "The file size in bytes of this APK.", "type": "string", "format": "int64" }, "applicationLabel": { "description": "The application label.", "type": "string" }, "externallyHostedUrl": { "type": "string", "description": "The URL at which the APK is hosted. This must be an https URL." }, "minimumSdk": { "type": "integer", "description": "The minimum SDK targeted by this APK.", "format": "int32" }, "fileSha1Base64": { "type": "string", "description": "The sha1 checksum of this APK, represented as a base64 encoded byte array." }, "maximumSdk": { "description": "The maximum SDK supported by this APK (optional).", "format": "int32", "type": "integer" }, "nativeCodes": { "type": "array", "items": { "type": "string" }, "description": "The native code environments supported by this APK (optional)." }, "iconBase64": { "type": "string", "description": "The icon image from the APK, as a base64 encoded byte array." }, "usesFeatures": { "type": "array", "description": "The features required by this APK (optional).", "items": { "type": "string" } }, "packageName": { "type": "string", "description": "The package name." }, "versionName": { "type": "string", "description": "The version name of this APK." }, "fileSha256Base64": { "type": "string", "description": "The sha256 checksum of this APK, represented as a base64 encoded byte array." }, "certificateBase64s": { "type": "array", "description": "A certificate (or array of certificates if a certificate-chain is used) used to sign this APK, represented as a base64 encoded byte array.", "items": { "type": "string" } }, "usesPermissions": { "type": "array", "items": { "$ref": "UsesPermission" }, "description": "The permissions requested by this APK." }, "versionCode": { "description": "The version code of this APK.", "format": "int32", "type": "integer" } }, "type": "object", "description": "Defines an APK available for this application that is hosted externally and not uploaded to Google Play. This function is only available to organizations using Managed Play whose application is configured to restrict distribution to the organizations." }, "SubscriptionPurchase": { "type": "object", "description": "A SubscriptionPurchase resource indicates the status of a user's subscription purchase.", "properties": { "cancelReason": { "description": "The reason why a subscription was canceled or is not auto-renewing. Possible values are: 0. User canceled the subscription 1. Subscription was canceled by the system, for example because of a billing problem 2. Subscription was replaced with a new subscription 3. Subscription was canceled by the developer", "format": "int32", "type": "integer" }, "familyName": { "type": "string", "description": "The family name of the user when the subscription was purchased. Only present for purchases made with 'Subscribe with Google'." }, "countryCode": { "type": "string", "description": "ISO 3166-1 alpha-2 billing country/region code of the user at the time the subscription was granted." }, "profileId": { "type": "string", "description": "The Google profile id of the user when the subscription was purchased. Only present for purchases made with 'Subscribe with Google'." }, "obfuscatedExternalAccountId": { "description": "An obfuscated version of the id that is uniquely associated with the user's account in your app. Present for the following purchases: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh If account linking happened as part of the subscription purchase flow. LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh It was specified using https://developer.android.com/reference/com/android/billingclient/api/BillingFlowParams.Builder#setobfuscatedaccountid when the purchase was made.", "type": "string" }, "paymentState": { "type": "integer", "format": "int32", "description": "The payment state of the subscription. Possible values are: 0. Payment pending 1. Payment received 2. Free trial 3. Pending deferred upgrade/downgrade Not present for canceled, expired subscriptions." }, "startTimeMillis": { "description": "Time at which the subscription was granted, in milliseconds since the Epoch.", "type": "string", "format": "int64" }, "promotionCode": { "type": "string", "description": "The promotion code applied on this purchase. This field is only set if a vanity code promotion is applied when the subscription was purchased." }, "obfuscatedExternalProfileId": { "description": "An obfuscated version of the id that is uniquely associated with the user's profile in your app. Only present if specified using https://developer.android.com/reference/com/android/billingclient/api/BillingFlowParams.Builder#setobfuscatedprofileid when the purchase was made.", "type": "string" }, "linkedPurchaseToken": { "type": "string", "description": "The purchase token of the originating purchase if this subscription is one of the following: 0. Re-signup of a canceled but non-lapsed subscription 1. Upgrade/downgrade from a previous subscription For example, suppose a user originally signs up and you receive purchase token X, then the user cancels and goes through the resignup flow (before their subscription lapses) and you receive purchase token Y, and finally the user upgrades their subscription and you receive purchase token Z. If you call this API with purchase token Z, this field will be set to Y. If you call this API with purchase token Y, this field will be set to X. If you call this API with purchase token X, this field will not be set." }, "emailAddress": { "description": "The email address of the user when the subscription was purchased. Only present for purchases made with 'Subscribe with Google'.", "type": "string" }, "cancelSurveyResult": { "description": "Information provided by the user when they complete the subscription cancellation flow (cancellation reason survey).", "$ref": "SubscriptionCancelSurveyResult" }, "autoResumeTimeMillis": { "type": "string", "format": "int64", "description": "Time at which the subscription will be automatically resumed, in milliseconds since the Epoch. Only present if the user has requested to pause the subscription." }, "purchaseType": { "format": "int32", "type": "integer", "description": "The type of purchase of the subscription. This field is only set if this purchase was not made using the standard in-app billing flow. Possible values are: 0. Test (i.e. purchased from a license testing account) 1. Promo (i.e. purchased using a promo code)" }, "kind": { "type": "string", "description": "This kind represents a subscriptionPurchase object in the androidpublisher service." }, "userCancellationTimeMillis": { "description": "The time at which the subscription was canceled by the user, in milliseconds since the epoch. Only present if cancelReason is 0.", "format": "int64", "type": "string" }, "autoRenewing": { "type": "boolean", "description": "Whether the subscription will automatically be renewed when it reaches its current expiry time." }, "introductoryPriceInfo": { "$ref": "IntroductoryPriceInfo", "description": "Introductory price information of the subscription. This is only present when the subscription was purchased with an introductory price. This field does not indicate the subscription is currently in introductory price period." }, "profileName": { "type": "string", "description": "The profile name of the user when the subscription was purchased. Only present for purchases made with 'Subscribe with Google'." }, "priceCurrencyCode": { "type": "string", "description": "ISO 4217 currency code for the subscription price. For example, if the price is specified in British pounds sterling, price_currency_code is \"GBP\"." }, "orderId": { "description": "The order id of the latest recurring order associated with the purchase of the subscription. If the subscription was canceled because payment was declined, this will be the order id from the payment declined order.", "type": "string" }, "priceAmountMicros": { "description": "Price of the subscription, For tax exclusive countries, the price doesn't include tax. For tax inclusive countries, the price includes tax. Price is expressed in micro-units, where 1,000,000 micro-units represents one unit of the currency. For example, if the subscription price is €1.99, price_amount_micros is 1990000.", "format": "int64", "type": "string" }, "givenName": { "description": "The given name of the user when the subscription was purchased. Only present for purchases made with 'Subscribe with Google'.", "type": "string" }, "promotionType": { "description": "The type of promotion applied on this purchase. This field is only set if a promotion is applied when the subscription was purchased. Possible values are: 0. One time code 1. Vanity code", "type": "integer", "format": "int32" }, "acknowledgementState": { "type": "integer", "description": "The acknowledgement state of the subscription product. Possible values are: 0. Yet to be acknowledged 1. Acknowledged", "format": "int32" }, "priceChange": { "description": "The latest price change information available. This is present only when there is an upcoming price change for the subscription yet to be applied. Once the subscription renews with the new price or the subscription is canceled, no price change information will be returned.", "$ref": "SubscriptionPriceChange" }, "externalAccountId": { "description": "User account identifier in the third-party service. Only present if account linking happened as part of the subscription purchase flow.", "type": "string" }, "expiryTimeMillis": { "type": "string", "format": "int64", "description": "Time at which the subscription will expire, in milliseconds since the Epoch." }, "developerPayload": { "type": "string", "description": "A developer-specified string that contains supplemental information about an order." } }, "id": "SubscriptionPurchase" }, "RegionalSubscriptionOfferConfig": { "properties": { "regionCode": { "type": "string", "description": "Required. Immutable. Region code this configuration applies to, as defined by ISO 3166-2, e.g. \"US\"." }, "newSubscriberAvailability": { "type": "boolean", "description": "Whether the subscription offer in the specified region is available for new subscribers. Existing subscribers will not have their subscription cancelled if this value is set to false. If not specified, this will default to false." } }, "description": "Configuration for a subscription offer in a single region.", "type": "object", "id": "RegionalSubscriptionOfferConfig" }, "PrepaidPlan": { "id": "PrepaidPlan", "description": "Information related to a prepaid plan.", "type": "object", "properties": { "allowExtendAfterTime": { "type": "string", "description": "After this time, the subscription is allowed for a new top-up purchase. Not present if the subscription is already extended by a top-up purchase.", "format": "google-datetime" } } }, "ImagesListResponse": { "description": "Response listing all images.", "properties": { "images": { "items": { "$ref": "Image" }, "description": "All listed Images.", "type": "array" } }, "type": "object", "id": "ImagesListResponse" }, "AcquisitionTargetingRule": { "description": "Represents a targeting rule of the form: User never had {scope} before.", "id": "AcquisitionTargetingRule", "type": "object", "properties": { "scope": { "description": "Required. The scope of subscriptions this rule considers. Only allows \"this subscription\" and \"any subscription in app\".", "$ref": "TargetingRuleScope" } } }, "ImagesUploadResponse": { "id": "ImagesUploadResponse", "properties": { "image": { "$ref": "Image", "description": "The uploaded image." } }, "type": "object", "description": "Response for uploading an image." }, "ProductPurchase": { "properties": { "orderId": { "description": "The order id associated with the purchase of the inapp product.", "type": "string" }, "developerPayload": { "type": "string", "description": "A developer-specified string that contains supplemental information about an order." }, "obfuscatedExternalProfileId": { "type": "string", "description": "An obfuscated version of the id that is uniquely associated with the user's profile in your app. Only present if specified using https://developer.android.com/reference/com/android/billingclient/api/BillingFlowParams.Builder#setobfuscatedprofileid when the purchase was made." }, "quantity": { "description": "The quantity associated with the purchase of the inapp product. If not present, the quantity is 1.", "format": "int32", "type": "integer" }, "productId": { "description": "The inapp product SKU. May not be present.", "type": "string" }, "regionCode": { "description": "ISO 3166-1 alpha-2 billing region code of the user at the time the product was granted.", "type": "string" }, "purchaseTimeMillis": { "description": "The time the product was purchased, in milliseconds since the epoch (Jan 1, 1970).", "format": "int64", "type": "string" }, "obfuscatedExternalAccountId": { "type": "string", "description": "An obfuscated version of the id that is uniquely associated with the user's account in your app. Only present if specified using https://developer.android.com/reference/com/android/billingclient/api/BillingFlowParams.Builder#setobfuscatedaccountid when the purchase was made." }, "purchaseType": { "description": "The type of purchase of the inapp product. This field is only set if this purchase was not made using the standard in-app billing flow. Possible values are: 0. Test (i.e. purchased from a license testing account) 1. Promo (i.e. purchased using a promo code) 2. Rewarded (i.e. from watching a video ad instead of paying)", "type": "integer", "format": "int32" }, "consumptionState": { "type": "integer", "format": "int32", "description": "The consumption state of the inapp product. Possible values are: 0. Yet to be consumed 1. Consumed" }, "purchaseState": { "description": "The purchase state of the order. Possible values are: 0. Purchased 1. Canceled 2. Pending", "type": "integer", "format": "int32" }, "purchaseToken": { "type": "string", "description": "The purchase token generated to identify this purchase. May not be present." }, "kind": { "description": "This kind represents an inappPurchase object in the androidpublisher service.", "type": "string" }, "acknowledgementState": { "type": "integer", "format": "int32", "description": "The acknowledgement state of the inapp product. Possible values are: 0. Yet to be acknowledged 1. Acknowledged" } }, "description": "A ProductPurchase resource indicates the status of a user's inapp product purchase.", "type": "object", "id": "ProductPurchase" }, "ManagedProductTaxAndComplianceSettings": { "id": "ManagedProductTaxAndComplianceSettings", "properties": { "eeaWithdrawalRightType": { "description": "Digital content or service classification for products distributed to users in the European Economic Area (EEA). The withdrawal regime under EEA consumer laws depends on this classification. Refer to the [Help Center article](https://support.google.com/googleplay/android-developer/answer/10463498) for more information.", "type": "string", "enumDescriptions": [ "", "", "" ], "enum": [ "WITHDRAWAL_RIGHT_TYPE_UNSPECIFIED", "WITHDRAWAL_RIGHT_DIGITAL_CONTENT", "WITHDRAWAL_RIGHT_SERVICE" ] }, "taxRateInfoByRegionCode": { "description": "A mapping from region code to tax rate details. The keys are region codes as defined by Unicode's \"CLDR\".", "type": "object", "additionalProperties": { "$ref": "RegionalTaxRateInfo" } } }, "description": "Details about taxation and legal compliance for managed products.", "type": "object" }, "ListSubscriptionsResponse": { "type": "object", "description": "Response message for ListSubscriptions.", "id": "ListSubscriptionsResponse", "properties": { "subscriptions": { "items": { "$ref": "Subscription" }, "type": "array", "description": "The subscriptions from the specified app." }, "nextPageToken": { "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.", "type": "string" } } }, "Bundle": { "type": "object", "properties": { "sha1": { "description": "A sha1 hash of the upload payload, encoded as a hex string and matching the output of the sha1sum command.", "type": "string" }, "versionCode": { "description": "The version code of the Android App Bundle, as specified in the Android App Bundle's base module APK manifest file.", "type": "integer", "format": "int32" }, "sha256": { "description": "A sha256 hash of the upload payload, encoded as a hex string and matching the output of the sha256sum command.", "type": "string" } }, "id": "Bundle", "description": "Information about an app bundle. The resource for BundlesService." }, "UserComment": { "type": "object", "description": "User entry from conversation between user and developer.", "id": "UserComment", "properties": { "androidOsVersion": { "description": "Integer Android SDK version of the user's device at the time the review was written, e.g. 23 is Marshmallow. May be absent.", "type": "integer", "format": "int32" }, "lastModified": { "$ref": "Timestamp", "description": "The last time at which this comment was updated." }, "appVersionCode": { "description": "Integer version code of the app as installed at the time the review was written. May be absent.", "format": "int32", "type": "integer" }, "device": { "description": "Codename for the reviewer's device, e.g. klte, flounder. May be absent.", "type": "string" }, "reviewerLanguage": { "type": "string", "description": "Language code for the reviewer. This is taken from the device settings so is not guaranteed to match the language the review is written in. May be absent." }, "starRating": { "format": "int32", "description": "The star rating associated with the review, from 1 to 5.", "type": "integer" }, "deviceMetadata": { "$ref": "DeviceMetadata", "description": "Information about the characteristics of the user's device." }, "text": { "description": "The content of the comment, i.e. review body. In some cases users have been able to write a review with separate title and body; in those cases the title and body are concatenated and separated by a tab character.", "type": "string" }, "thumbsUpCount": { "type": "integer", "description": "Number of users who have given this review a thumbs up.", "format": "int32" }, "thumbsDownCount": { "type": "integer", "format": "int32", "description": "Number of users who have given this review a thumbs down." }, "originalText": { "description": "Untranslated text of the review, where the review was translated. If the review was not translated this is left blank.", "type": "string" }, "appVersionName": { "description": "String version name of the app as installed at the time the review was written. May be absent.", "type": "string" } } }, "ExternalAccountIdentifiers": { "type": "object", "properties": { "obfuscatedExternalAccountId": { "description": "An obfuscated version of the id that is uniquely associated with the user's account in your app. Present for the following purchases: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh If account linking happened as part of the subscription purchase flow. LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh It was specified using https://developer.android.com/reference/com/android/billingclient/api/BillingFlowParams.Builder#setobfuscatedaccountid when the purchase was made.", "type": "string" }, "obfuscatedExternalProfileId": { "type": "string", "description": "An obfuscated version of the id that is uniquely associated with the user's profile in your app. Only present if specified using https://developer.android.com/reference/com/android/billingclient/api/BillingFlowParams.Builder#setobfuscatedprofileid when the purchase was made." }, "externalAccountId": { "description": "User account identifier in the third-party service. Only present if account linking happened as part of the subscription purchase flow.", "type": "string" } }, "description": "User account identifier in the third-party service.", "id": "ExternalAccountIdentifiers" }, "ReviewsReplyRequest": { "properties": { "replyText": { "type": "string", "description": "The text to set as the reply. Replies of more than approximately 350 characters will be rejected. HTML tags will be stripped." } }, "description": "Request to reply to review or update existing reply.", "id": "ReviewsReplyRequest", "type": "object" }, "PageInfo": { "description": "Information about the current page. List operations that supports paging return only one \"page\" of results. This protocol buffer message describes the page that has been returned.", "properties": { "startIndex": { "description": "Index of the first result returned in the current page.", "type": "integer", "format": "int32" }, "resultPerPage": { "description": "Maximum number of results returned in one page. ! The number of results included in the API response.", "format": "int32", "type": "integer" }, "totalResults": { "type": "integer", "description": "Total number of results available on the backend ! The total number of results in the result set.", "format": "int32" } }, "type": "object", "id": "PageInfo" }, "OtherRegionsSubscriptionOfferPhaseConfig": { "type": "object", "description": "Configuration for any new locations Play may launch in for a single offer phase.", "properties": { "relativeDiscount": { "format": "double", "description": "The fraction of the base plan price prorated over the phase duration that the user pays for this offer phase. For example, if the base plan price for this region is $12 for a period of 1 year, then a 50% discount for a phase of a duration of 3 months would correspond to a price of $1.50. The discount must be specified as a fraction strictly larger than 0 and strictly smaller than 1. The resulting price will be rounded to the nearest billable unit (e.g. cents for USD). The relative discount is considered invalid if the discounted price ends up being smaller than the minimum price allowed in any new locations Play may launch in.", "type": "number" }, "otherRegionsPrices": { "description": "The absolute price the user pays for this offer phase. The price must not be smaller than the minimum price allowed for any new locations Play may launch in.", "$ref": "OtherRegionsSubscriptionOfferPhasePrices" }, "absoluteDiscounts": { "description": "The absolute amount of money subtracted from the base plan price prorated over the phase duration that the user pays for this offer phase. For example, if the base plan price for this region is $12 for a period of 1 year, then a $1 absolute discount for a phase of a duration of 3 months would correspond to a price of $2. The resulting price may not be smaller than the minimum price allowed for any new locations Play may launch in.", "$ref": "OtherRegionsSubscriptionOfferPhasePrices" } }, "id": "OtherRegionsSubscriptionOfferPhaseConfig" }, "ConvertRegionPricesRequest": { "id": "ConvertRegionPricesRequest", "properties": { "price": { "$ref": "Money", "description": "The intital price to convert other regions from. Tax exclusive." } }, "description": "Request message for ConvertRegionPrices.", "type": "object" }, "SubscriptionTaxAndComplianceSettings": { "properties": { "taxRateInfoByRegionCode": { "additionalProperties": { "$ref": "RegionalTaxRateInfo" }, "description": "A mapping from region code to tax rate details. The keys are region codes as defined by Unicode's \"CLDR\".", "type": "object" }, "eeaWithdrawalRightType": { "enum": [ "WITHDRAWAL_RIGHT_TYPE_UNSPECIFIED", "WITHDRAWAL_RIGHT_DIGITAL_CONTENT", "WITHDRAWAL_RIGHT_SERVICE" ], "enumDescriptions": [ "", "", "" ], "description": "Digital content or service classification for products distributed to users in the European Economic Area (EEA). The withdrawal regime under EEA consumer laws depends on this classification. Refer to the [Help Center article](https://support.google.com/googleplay/android-developer/answer/10463498) for more information.", "type": "string" } }, "type": "object", "id": "SubscriptionTaxAndComplianceSettings", "description": "Details about taxation, Google Play policy and legal compliance for subscription products." }, "TokenPagination": { "description": "Pagination information returned by a List operation when token pagination is enabled. List operations that supports paging return only one \"page\" of results. This protocol buffer message describes the page that has been returned. When using token pagination, clients should use the next/previous token to get another page of the result. The presence or absence of next/previous token indicates whether a next/previous page is available and provides a mean of accessing this page. ListRequest.page_token should be set to either next_page_token or previous_page_token to access another page.", "id": "TokenPagination", "properties": { "previousPageToken": { "type": "string" }, "nextPageToken": { "description": "Tokens to pass to the standard list field 'page_token'. Whenever available, tokens are preferred over manipulating start_index.", "type": "string" } }, "type": "object" }, "TrackRelease": { "type": "object", "description": "A release within a track.", "id": "TrackRelease", "properties": { "releaseNotes": { "items": { "$ref": "LocalizedText" }, "description": "A description of what is new in this release.", "type": "array" }, "countryTargeting": { "$ref": "CountryTargeting", "description": "Restricts a release to a specific set of countries." }, "userFraction": { "format": "double", "type": "number", "description": "Fraction of users who are eligible for a staged release. 0 \u003c fraction \u003c 1. Can only be set when status is \"inProgress\" or \"halted\"." }, "versionCodes": { "items": { "format": "int64", "type": "string" }, "description": "Version codes of all APKs in the release. Must include version codes to retain from previous releases.", "type": "array" }, "status": { "type": "string", "description": "The status of the release.", "enumDescriptions": [ "Unspecified status.", "The release's APKs are not being served to users.", "The release's APKs are being served to a fraction of users, determined by 'user_fraction'.", "The release's APKs will no longer be served to users. Users who already have these APKs are unaffected.", "The release will have no further changes. Its APKs are being served to all users, unless they are eligible to APKs of a more recent release." ], "enum": [ "statusUnspecified", "draft", "inProgress", "halted", "completed" ] }, "inAppUpdatePriority": { "type": "integer", "description": "In-app update priority of the release. All newly added APKs in the release will be considered at this priority. Can take values in the range [0, 5], with 5 the highest priority. Defaults to 0. in_app_update_priority can not be updated once the release is rolled out. See https://developer.android.com/guide/playcore/in-app-updates.", "format": "int32" }, "name": { "type": "string", "description": "The release name. Not required to be unique. If not set, the name is generated from the APK's version_name. If the release contains multiple APKs, the name is generated from the date." } } }, "InappproductsListResponse": { "description": "Response listing all in-app products.", "properties": { "kind": { "description": "The kind of this response (\"androidpublisher#inappproductsListResponse\").", "type": "string" }, "tokenPagination": { "$ref": "TokenPagination", "description": "Pagination token, to handle a number of products that is over one page." }, "inappproduct": { "items": { "$ref": "InAppProduct" }, "type": "array", "description": "All in-app products." }, "pageInfo": { "$ref": "PageInfo", "description": "Deprecated and unset." } }, "id": "InappproductsListResponse", "type": "object" }, "CountryTargeting": { "description": "Country targeting specification.", "id": "CountryTargeting", "type": "object", "properties": { "includeRestOfWorld": { "type": "boolean", "description": "Include \"rest of world\" as well as explicitly targeted countries." }, "countries": { "description": "Countries to target, specified as two letter [CLDR codes](https://unicode.org/cldr/charts/latest/supplemental/territory_containment_un_m_49.html).", "items": { "type": "string" }, "type": "array" } } }, "SubscriptionPurchaseV2": { "type": "object", "id": "SubscriptionPurchaseV2", "properties": { "externalAccountIdentifiers": { "description": "User account identifier in the third-party service.", "$ref": "ExternalAccountIdentifiers" }, "subscribeWithGoogleInfo": { "$ref": "SubscribeWithGoogleInfo", "description": "User profile associated with purchases made with 'Subscribe with Google'." }, "kind": { "type": "string", "description": "This kind represents a SubscriptionPurchaseV2 object in the androidpublisher service." }, "subscriptionState": { "type": "string", "enumDescriptions": [ "Unspecified subscription state.", "Subscription was created but awaiting payment during signup. In this state, all items are awaiting payment.", "Subscription is active. - (1) If the subscription is an auto renewing plan, at least one item is auto_renew_enabled and not expired. - (2) If the subscription is a prepaid plan, at least one item is not expired.", "Subscription is paused. The state is only available when the subscription is an auto renewing plan. In this state, all items are in paused state.", "Subscription is in grace period. The state is only available when the subscription is an auto renewing plan. In this state, all items are in grace period.", "Subscription is on hold (suspended). The state is only available when the subscription is an auto renewing plan. In this state, all items are on hold.", "Subscription is canceled but not expired yet. The state is only available when the subscription is an auto renewing plan. All items have auto_renew_enabled set to false.", "Subscription is expired. All items have expiry_time in the past." ], "description": "The current state of the subscription.", "enum": [ "SUBSCRIPTION_STATE_UNSPECIFIED", "SUBSCRIPTION_STATE_PENDING", "SUBSCRIPTION_STATE_ACTIVE", "SUBSCRIPTION_STATE_PAUSED", "SUBSCRIPTION_STATE_IN_GRACE_PERIOD", "SUBSCRIPTION_STATE_ON_HOLD", "SUBSCRIPTION_STATE_CANCELED", "SUBSCRIPTION_STATE_EXPIRED" ] }, "lineItems": { "type": "array", "items": { "$ref": "SubscriptionPurchaseLineItem" }, "description": "Item-level info for a subscription purchase. The items in the same purchase should be either all with AutoRenewingPlan or all with PrepaidPlan." }, "latestOrderId": { "type": "string", "description": "The order id of the latest order associated with the purchase of the subscription. For autoRenewing subscription, this is the order id of signup order if it is not renewed yet, or the last recurring order id (success, pending, or declined order). For prepaid subscription, this is the order id associated with the queried purchase token." }, "canceledStateContext": { "description": "Additional context around canceled subscriptions. Only present if the subscription currently has subscription_state SUBSCRIPTION_STATE_CANCELED.", "$ref": "CanceledStateContext" }, "linkedPurchaseToken": { "description": "The purchase token of the old subscription if this subscription is one of the following: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh Re-signup of a canceled but non-lapsed subscription LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh Upgrade/downgrade from a previous subscription. LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh Convert from prepaid to auto renewing subscription. LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh Convert from an auto renewing subscription to prepaid. LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh Topup a prepaid subscription.", "type": "string" }, "acknowledgementState": { "enum": [ "ACKNOWLEDGEMENT_STATE_UNSPECIFIED", "ACKNOWLEDGEMENT_STATE_PENDING", "ACKNOWLEDGEMENT_STATE_ACKNOWLEDGED" ], "description": "The acknowledgement state of the subscription.", "enumDescriptions": [ "Unspecified acknowledgement state.", "The subscription is not acknowledged yet.", "The subscription is acknowledged." ], "type": "string" }, "startTime": { "format": "google-datetime", "type": "string", "description": "Time at which the subscription was granted. Not set for pending subscriptions (subscription was created but awaiting payment during signup)." }, "regionCode": { "description": "ISO 3166-1 alpha-2 billing country/region code of the user at the time the subscription was granted.", "type": "string" }, "pausedStateContext": { "$ref": "PausedStateContext", "description": "Additional context around paused subscriptions. Only present if the subscription currently has subscription_state SUBSCRIPTION_STATE_PAUSED." }, "testPurchase": { "$ref": "TestPurchase", "description": "Only present if this subscription purchase is a test purchase." } }, "description": "Indicates the status of a user's subscription purchase." }, "InAppProductListing": { "description": "Store listing of a single in-app product.", "id": "InAppProductListing", "type": "object", "properties": { "title": { "type": "string", "description": "Title for the store listing." }, "description": { "type": "string", "description": "Description for the store listing." }, "benefits": { "description": "Localized entitlement benefits for a subscription.", "items": { "type": "string" }, "type": "array" } } }, "DeactivateBasePlanRequest": { "id": "DeactivateBasePlanRequest", "type": "object", "properties": {}, "description": "Request message for DeactivateBasePlan." }, "ListUsersResponse": { "description": "A response containing one or more users with access to an account.", "properties": { "users": { "items": { "$ref": "User" }, "description": "The resulting users.", "type": "array" }, "nextPageToken": { "description": "A token to pass to subsequent calls in order to retrieve subsequent results. This will not be set if there are no more results to return.", "type": "string" } }, "type": "object", "id": "ListUsersResponse" }, "ApksAddExternallyHostedResponse": { "id": "ApksAddExternallyHostedResponse", "description": "Response for creating a new externally hosted APK.", "type": "object", "properties": { "externallyHostedApk": { "description": "The definition of the externally-hosted APK and where it is located.", "$ref": "ExternallyHostedApk" } } }, "AppEdit": { "type": "object", "properties": { "expiryTimeSeconds": { "type": "string", "readOnly": true, "description": "Output only. The time (as seconds since Epoch) at which the edit will expire and will be no longer valid for use." }, "id": { "description": "Output only. Identifier of the edit. Can be used in subsequent API calls.", "type": "string", "readOnly": true } }, "description": "An app edit. The resource for EditsService.", "id": "AppEdit" }, "UsesPermission": { "description": "A permission used by this APK.", "properties": { "name": { "description": "The name of the permission requested.", "type": "string" }, "maxSdkVersion": { "type": "integer", "description": "Optionally, the maximum SDK version for which the permission is required.", "format": "int32" } }, "type": "object", "id": "UsesPermission" }, "Timestamp": { "description": "A Timestamp represents a point in time independent of any time zone or local calendar, encoded as a count of seconds and fractions of seconds at nanosecond resolution. The count is relative to an epoch at UTC midnight on January 1, 1970.", "id": "Timestamp", "properties": { "seconds": { "format": "int64", "description": "Represents seconds of UTC time since Unix epoch.", "type": "string" }, "nanos": { "type": "integer", "format": "int32", "description": "Non-negative fractions of a second at nanosecond resolution. Must be from 0 to 999,999,999 inclusive." } }, "type": "object" }, "BasePlan": { "properties": { "prepaidBasePlanType": { "$ref": "PrepaidBasePlanType", "description": "Set when the base plan does not automatically renew at the end of the billing period." }, "basePlanId": { "type": "string", "description": "Required. Immutable. The unique identifier of this base plan. Must be unique within the subscription, and conform with RFC-1034. That is, this ID can only contain lower-case letters (a-z), numbers (0-9), and hyphens (-), and be at most 63 characters." }, "otherRegionsConfig": { "$ref": "OtherRegionsBasePlanConfig", "description": "Pricing information for any new locations Play may launch in the future. If omitted, the BasePlan will not be automatically available any new locations Play may launch in the future." }, "regionalConfigs": { "description": "Region-specific information for this base plan.", "items": { "$ref": "RegionalBasePlanConfig" }, "type": "array" }, "autoRenewingBasePlanType": { "description": "Set when the base plan automatically renews at a regular interval.", "$ref": "AutoRenewingBasePlanType" }, "offerTags": { "type": "array", "description": "List of up to 20 custom tags specified for this base plan, and returned to the app through the billing library. Subscription offers for this base plan will also receive these offer tags in the billing library.", "items": { "$ref": "OfferTag" } }, "state": { "enum": [ "STATE_UNSPECIFIED", "DRAFT", "ACTIVE", "INACTIVE" ], "readOnly": true, "description": "Output only. The state of the base plan, i.e. whether it's active. Draft and inactive base plans can be activated or deleted. Active base plans can be made inactive. Inactive base plans can be canceled. This field cannot be changed by updating the resource. Use the dedicated endpoints instead.", "enumDescriptions": [ "Unspecified state.", "The base plan is currently in a draft state, and hasn't been activated. It can be safely deleted at this point.", "The base plan is active and available for new subscribers.", "The base plan is inactive and only available for existing subscribers." ], "type": "string" } }, "type": "object", "description": "A single base plan for a subscription.", "id": "BasePlan" }, "SubscribeWithGoogleInfo": { "type": "object", "id": "SubscribeWithGoogleInfo", "properties": { "profileId": { "description": "The Google profile id of the user when the subscription was purchased.", "type": "string" }, "emailAddress": { "description": "The email address of the user when the subscription was purchased.", "type": "string" }, "familyName": { "type": "string", "description": "The family name of the user when the subscription was purchased." }, "profileName": { "type": "string", "description": "The profile name of the user when the subscription was purchased." }, "givenName": { "type": "string", "description": "The given name of the user when the subscription was purchased." } }, "description": "Information associated with purchases made with 'Subscribe with Google'." }, "PrepaidBasePlanType": { "type": "object", "id": "PrepaidBasePlanType", "description": "Represents a base plan that does not automatically renew at the end of the base plan, and must be manually renewed by the user.", "properties": { "billingPeriodDuration": { "type": "string", "description": "Required. Subscription period, specified in ISO 8601 format. For a list of acceptable billing periods, refer to the help center." }, "timeExtension": { "description": "Whether users should be able to extend this prepaid base plan in Google Play surfaces. Defaults to TIME_EXTENSION_ACTIVE if not specified.", "enum": [ "TIME_EXTENSION_UNSPECIFIED", "TIME_EXTENSION_ACTIVE", "TIME_EXTENSION_INACTIVE" ], "enumDescriptions": [ "Unspecified state.", "Time extension is active. Users are allowed to top-up or extend their prepaid plan.", "Time extension is inactive. Users cannot top-up or extend their prepaid plan." ], "type": "string" } } }, "DeviceTierSet": { "type": "object", "properties": { "deviceTiers": { "type": "array", "description": "Device tiers belonging to the set.", "items": { "$ref": "DeviceTier" } } }, "id": "DeviceTierSet", "description": "A set of device tiers. A tier set determines what variation of app content gets served to a specific device, for device-targeted content. You should assign a priority level to each tier, which determines the ordering by which they are evaluated by Play. See the documentation of DeviceTier.level for more details." }, "DeobfuscationFile": { "type": "object", "description": "Represents a deobfuscation file.", "id": "DeobfuscationFile", "properties": { "symbolType": { "description": "The type of the deobfuscation file.", "type": "string", "enum": [ "deobfuscationFileTypeUnspecified", "proguard", "nativeCode" ], "enumDescriptions": [ "Unspecified deobfuscation file type.", "Proguard deobfuscation file type.", "Native debugging symbols file type." ] } } }, "PausedStateContext": { "description": "Information specific to a subscription in paused state.", "type": "object", "properties": { "autoResumeTime": { "format": "google-datetime", "type": "string", "description": "Time at which the subscription will be automatically resumed." } }, "id": "PausedStateContext" }, "ImagesDeleteAllResponse": { "id": "ImagesDeleteAllResponse", "properties": { "deleted": { "type": "array", "description": "The deleted images.", "items": { "$ref": "Image" } } }, "type": "object", "description": "Response for deleting all images." }, "OtherRegionsSubscriptionOfferPhasePrices": { "id": "OtherRegionsSubscriptionOfferPhasePrices", "type": "object", "description": "Pricing information for any new locations Play may launch in.", "properties": { "eurPrice": { "description": "Required. Price in EUR to use for any new locations Play may launch in.", "$ref": "Money" }, "usdPrice": { "description": "Required. Price in USD to use for any new locations Play may launch in.", "$ref": "Money" } } }, "SubscriptionPurchasesDeferResponse": { "type": "object", "id": "SubscriptionPurchasesDeferResponse", "properties": { "newExpiryTimeMillis": { "type": "string", "format": "int64", "description": "The new expiry time for the subscription in milliseconds since the Epoch." } }, "description": "Response for the purchases.subscriptions.defer API." }, "ConvertRegionPricesResponse": { "properties": { "convertedRegionPrices": { "description": "Map from region code to converted region price.", "type": "object", "additionalProperties": { "$ref": "ConvertedRegionPrice" } }, "convertedOtherRegionsPrice": { "$ref": "ConvertedOtherRegionsPrice", "description": "Converted other regions prices in USD and EUR, to use for countries where Play doesn't support a country's local currency." } }, "type": "object", "id": "ConvertRegionPricesResponse", "description": "Response message for ConvertRegionPrices." }, "CanceledStateContext": { "description": "Information specific to a subscription in canceled state.", "properties": { "systemInitiatedCancellation": { "description": "Subscription was canceled by the system, for example because of a billing problem.", "$ref": "SystemInitiatedCancellation" }, "userInitiatedCancellation": { "$ref": "UserInitiatedCancellation", "description": "Subscription was canceled by user." }, "developerInitiatedCancellation": { "$ref": "DeveloperInitiatedCancellation", "description": "Subscription was canceled by the developer." }, "replacementCancellation": { "description": "Subscription was replaced by a new subscription.", "$ref": "ReplacementCancellation" } }, "type": "object", "id": "CanceledStateContext" }, "SystemInitiatedCancellation": { "description": "Information specific to cancellations initiated by Google system.", "id": "SystemInitiatedCancellation", "properties": {}, "type": "object" }, "DeviceTierConfig": { "description": "LINT.IfChange Configuration describing device targeting criteria for the content of an app.", "properties": { "deviceGroups": { "items": { "$ref": "DeviceGroup" }, "description": "Definition of device groups for the app.", "type": "array" }, "deviceTierConfigId": { "readOnly": true, "format": "int64", "type": "string", "description": "Output only. The device tier config ID." }, "deviceTierSet": { "description": "Definition of the set of device tiers for the app.", "$ref": "DeviceTierSet" } }, "type": "object", "id": "DeviceTierConfig" }, "SubscriptionPurchasesDeferRequest": { "properties": { "deferralInfo": { "description": "The information about the new desired expiry time for the subscription.", "$ref": "SubscriptionDeferralInfo" } }, "type": "object", "id": "SubscriptionPurchasesDeferRequest", "description": "Request for the purchases.subscriptions.defer API." }, "TestPurchase": { "id": "TestPurchase", "properties": {}, "type": "object", "description": "Whether this subscription purchase is a test purchase." }, "OtherRegionsBasePlanConfig": { "id": "OtherRegionsBasePlanConfig", "description": "Pricing information for any new locations Play may launch in.", "type": "object", "properties": { "usdPrice": { "$ref": "Money", "description": "Required. Price in USD to use for any new locations Play may launch in." }, "newSubscriberAvailability": { "type": "boolean", "description": "Whether the base plan is available for new subscribers in any new locations Play may launch in. If not specified, this will default to false." }, "eurPrice": { "$ref": "Money", "description": "Required. Price in EUR to use for any new locations Play may launch in." } } }, "Variant": { "properties": { "deviceSpec": { "description": "The device spec used to generate the APK.", "$ref": "DeviceSpec" }, "variantId": { "format": "uint32", "description": "Output only. The ID of a previously created system APK variant.", "readOnly": true, "type": "integer" } }, "id": "Variant", "description": "APK that is suitable for inclusion in a system image. The resource of SystemApksService.", "type": "object" }, "Comment": { "id": "Comment", "properties": { "developerComment": { "description": "A comment from a developer.", "$ref": "DeveloperComment" }, "userComment": { "description": "A comment from a user.", "$ref": "UserComment" } }, "description": "An entry of conversation between user and developer.", "type": "object" }, "GeneratedApksPerSigningKey": { "description": "Download metadata for split, standalone and universal APKs, as well as asset pack slices, signed with a given key.", "id": "GeneratedApksPerSigningKey", "properties": { "generatedStandaloneApks": { "type": "array", "items": { "$ref": "GeneratedStandaloneApk" }, "description": "List of generated standalone APKs, signed with a key corresponding to certificate_sha256_hash." }, "generatedSplitApks": { "description": "List of generated split APKs, signed with a key corresponding to certificate_sha256_hash.", "type": "array", "items": { "$ref": "GeneratedSplitApk" } }, "certificateSha256Hash": { "description": "SHA256 hash of the APK signing public key certificate.", "type": "string" }, "generatedAssetPackSlices": { "items": { "$ref": "GeneratedAssetPackSlice" }, "description": "List of asset pack slices which will be served for this app bundle, signed with a key corresponding to certificate_sha256_hash.", "type": "array" }, "generatedUniversalApk": { "description": "Generated universal APK, signed with a key corresponding to certificate_sha256_hash. This field is not set if no universal APK was generated for this signing key.", "$ref": "GeneratedUniversalApk" } }, "type": "object" }, "LocalizedText": { "properties": { "text": { "type": "string", "description": "The text in the given language." }, "language": { "type": "string", "description": "Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German)." } }, "type": "object", "description": "Localized text in given language.", "id": "LocalizedText" }, "RegionsVersion": { "properties": { "version": { "type": "string", "description": "Required. A string representing version of the available regions being used for the specified resource. The current version is 2022/01." } }, "id": "RegionsVersion", "type": "object", "description": "The version of the available regions being used for the specified resource." }, "Listing": { "id": "Listing", "description": "A localized store listing. The resource for ListingsService.", "type": "object", "properties": { "fullDescription": { "description": "Full description of the app.", "type": "string" }, "title": { "type": "string", "description": "Localized title of the app." }, "language": { "description": "Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German).", "type": "string" }, "shortDescription": { "type": "string", "description": "Short description of the app." }, "video": { "type": "string", "description": "URL of a promotional YouTube video for the app." } } }, "ActivateBasePlanRequest": { "properties": {}, "type": "object", "description": "Request message for ActivateBasePlan.", "id": "ActivateBasePlanRequest" }, "ReplacementCancellation": { "description": "Information specific to cancellations caused by subscription replacement.", "id": "ReplacementCancellation", "type": "object", "properties": {} }, "ApkBinary": { "id": "ApkBinary", "type": "object", "properties": { "sha1": { "description": "A sha1 hash of the APK payload, encoded as a hex string and matching the output of the sha1sum command.", "type": "string" }, "sha256": { "type": "string", "description": "A sha256 hash of the APK payload, encoded as a hex string and matching the output of the sha256sum command." } }, "description": "Represents the binary payload of an APK." }, "SubscriptionOfferPhase": { "properties": { "otherRegionsConfig": { "$ref": "OtherRegionsSubscriptionOfferPhaseConfig", "description": "Pricing information for any new locations Play may launch in." }, "recurrenceCount": { "format": "int32", "type": "integer", "description": "Required. The number of times this phase repeats. If this offer phase is not free, each recurrence charges the user the price of this offer phase." }, "regionalConfigs": { "items": { "$ref": "RegionalSubscriptionOfferPhaseConfig" }, "type": "array", "description": "Required. The region-specific configuration of this offer phase. This list must contain exactly one entry for each region for which the subscription offer has a regional config." }, "duration": { "type": "string", "description": "Required. The duration of a single recurrence of this phase. Specified in ISO 8601 format." } }, "id": "SubscriptionOfferPhase", "type": "object", "description": "A single phase of a subscription offer." }, "TracksListResponse": { "type": "object", "properties": { "kind": { "type": "string", "description": "The kind of this response (\"androidpublisher#tracksListResponse\")." }, "tracks": { "description": "All tracks.", "items": { "$ref": "Track" }, "type": "array" } }, "id": "TracksListResponse", "description": "Response listing all tracks." }, "BundlesListResponse": { "properties": { "bundles": { "type": "array", "items": { "$ref": "Bundle" }, "description": "All app bundles." }, "kind": { "description": "The kind of this response (\"androidpublisher#bundlesListResponse\").", "type": "string" } }, "type": "object", "id": "BundlesListResponse", "description": "Response listing all app bundles." }, "ActivateSubscriptionOfferRequest": { "type": "object", "description": "Request message for ActivateSubscriptionOffer.", "id": "ActivateSubscriptionOfferRequest", "properties": {} }, "Subscription": { "id": "Subscription", "type": "object", "description": "A single subscription for an app.", "properties": { "basePlans": { "description": "The set of base plans for this subscription. Represents the prices and duration of the subscription if no other offers apply.", "type": "array", "items": { "$ref": "BasePlan" } }, "packageName": { "type": "string", "description": "Immutable. Package name of the parent app." }, "productId": { "description": "Immutable. Unique product ID of the product. Unique within the parent app. Product IDs must be composed of lower-case letters (a-z), numbers (0-9), underscores (_) and dots (.). It must start with a lower-case letter or number, and be between 1 and 40 (inclusive) characters in length.", "type": "string" }, "listings": { "type": "array", "items": { "$ref": "SubscriptionListing" }, "description": "Required. List of localized listings for this subscription. Must contain at least an entry for the default language of the parent app." }, "taxAndComplianceSettings": { "$ref": "SubscriptionTaxAndComplianceSettings", "description": "Details about taxes and legal compliance." }, "archived": { "type": "boolean", "readOnly": true, "description": "Output only. Whether this subscription is archived. Archived subscriptions are not available to any subscriber any longer, cannot be updated, and are not returned in list requests unless the show archived flag is passed in." } } }, "DeviceSpec": { "description": "The device spec used to generate a system APK.", "id": "DeviceSpec", "type": "object", "properties": { "screenDensity": { "description": "Screen dpi.", "format": "uint32", "type": "integer" }, "supportedLocales": { "type": "array", "description": "All installed locales represented as BCP-47 strings, e.g. \"en-US\".", "items": { "type": "string" } }, "supportedAbis": { "items": { "type": "string" }, "description": "Supported ABI architectures in the order of preference. The values should be the string as reported by the platform, e.g. \"armeabi-v7a\", \"x86_64\".", "type": "array" } } }, "GeneratedUniversalApk": { "id": "GeneratedUniversalApk", "type": "object", "description": "Download metadata for a universal APK.", "properties": { "downloadId": { "type": "string", "description": "Download ID, which uniquely identifies the APK to download. Should be supplied to `generatedapks.download` method." } } }, "ApksAddExternallyHostedRequest": { "properties": { "externallyHostedApk": { "$ref": "ExternallyHostedApk", "description": "The definition of the externally-hosted APK and where it is located." } }, "description": "Request to create a new externally hosted APK.", "type": "object", "id": "ApksAddExternallyHostedRequest" }, "RegionalBasePlanConfig": { "id": "RegionalBasePlanConfig", "description": "Configuration for a base plan specific to a region.", "type": "object", "properties": { "regionCode": { "description": "Required. Region code this configuration applies to, as defined by ISO 3166-2, e.g. \"US\".", "type": "string" }, "price": { "$ref": "Money", "description": "The price of the base plan in the specified region. Must be set if the base plan is available to new subscribers. Must be set in the currency that is linked to the specified region." }, "newSubscriberAvailability": { "description": "Whether the base plan in the specified region is available for new subscribers. Existing subscribers will not have their subscription canceled if this value is set to false. If not specified, this will default to false.", "type": "boolean" } } }, "Testers": { "properties": { "googleGroups": { "type": "array", "description": "All testing Google Groups, as email addresses.", "items": { "type": "string" } } }, "description": "The testers of an app. The resource for TestersService. Note: while it is possible in the Play Console UI to add testers via email lists, email lists are not supported by this resource.", "id": "Testers", "type": "object" }, "SubscriptionOffer": { "description": "A single, temporary offer", "id": "SubscriptionOffer", "properties": { "regionalConfigs": { "description": "Required. The region-specific configuration of this offer. Must contain at least one entry.", "type": "array", "items": { "$ref": "RegionalSubscriptionOfferConfig" } }, "packageName": { "type": "string", "description": "Required. Immutable. The package name of the app the parent subscription belongs to." }, "state": { "readOnly": true, "enumDescriptions": [ "Default value, should never be used.", "The subscription offer is not and has never been available to users.", "The subscription offer is available to new and existing users.", "The subscription offer is not available to new users. Existing users retain access." ], "description": "Output only. The current state of this offer. Can be changed using Activate and Deactivate actions. NB: the base plan state supersedes this state, so an active offer may not be available if the base plan is not active.", "type": "string", "enum": [ "STATE_UNSPECIFIED", "DRAFT", "ACTIVE", "INACTIVE" ] }, "otherRegionsConfig": { "$ref": "OtherRegionsSubscriptionOfferConfig", "description": "The configuration for any new locations Play may launch in the future." }, "targeting": { "description": "The requirements that users need to fulfil to be eligible for this offer. Represents the requirements that Play will evaluate to decide whether an offer should be returned. Developers may further filter these offers themselves.", "$ref": "SubscriptionOfferTargeting" }, "phases": { "description": "Required. The phases of this subscription offer. Must contain at least one entry, and may contain at most five. Users will always receive all these phases in the specified order. Phases may not be added, removed, or reordered after initial creation.", "items": { "$ref": "SubscriptionOfferPhase" }, "type": "array" }, "offerTags": { "description": "List of up to 20 custom tags specified for this offer, and returned to the app through the billing library.", "type": "array", "items": { "$ref": "OfferTag" } }, "offerId": { "description": "Required. Immutable. Unique ID of this subscription offer. Must be unique within the base plan.", "type": "string" }, "productId": { "description": "Required. Immutable. The ID of the parent subscription this offer belongs to.", "type": "string" }, "basePlanId": { "type": "string", "description": "Required. Immutable. The ID of the base plan to which this offer is an extension." } }, "type": "object" }, "GeneratedApksListResponse": { "id": "GeneratedApksListResponse", "type": "object", "description": "Response to list generated APKs.", "properties": { "generatedApks": { "items": { "$ref": "GeneratedApksPerSigningKey" }, "description": "All generated APKs, grouped by the APK signing key.", "type": "array" } } }, "UpgradeTargetingRule": { "properties": { "oncePerUser": { "description": "Limit this offer to only once per user. If set to true, a user can never be eligible for this offer again if they ever subscribed to this offer.", "type": "boolean" }, "billingPeriodDuration": { "type": "string", "description": "The specific billing period duration, specified in ISO 8601 format, that a user must be currently subscribed to to be eligible for this rule. If not specified, users subscribed to any billing period are matched." }, "scope": { "description": "Required. The scope of subscriptions this rule considers. Only allows \"this subscription\" and \"specific subscription in app\".", "$ref": "TargetingRuleScope" } }, "id": "UpgradeTargetingRule", "type": "object", "description": "Represents a targeting rule of the form: User currently has {scope} [with billing period {billing_period}]." }, "ApksListResponse": { "id": "ApksListResponse", "properties": { "kind": { "type": "string", "description": "The kind of this response (\"androidpublisher#apksListResponse\")." }, "apks": { "type": "array", "description": "All APKs.", "items": { "$ref": "Apk" } } }, "description": "Response listing all APKs.", "type": "object" }, "RegionalSubscriptionOfferPhaseConfig": { "description": "Configuration for a single phase of a subscription offer in a single region.", "type": "object", "id": "RegionalSubscriptionOfferPhaseConfig", "properties": { "relativeDiscount": { "format": "double", "type": "number", "description": "The fraction of the base plan price prorated over the phase duration that the user pays for this offer phase. For example, if the base plan price for this region is $12 for a period of 1 year, then a 50% discount for a phase of a duration of 3 months would correspond to a price of $1.50. The discount must be specified as a fraction strictly larger than 0 and strictly smaller than 1. The resulting price will be rounded to the nearest billable unit (e.g. cents for USD). The relative discount is considered invalid if the discounted price ends up being smaller than the minimum price allowed in this region." }, "regionCode": { "type": "string", "description": "Required. Immutable. The region to which this config applies." }, "price": { "$ref": "Money", "description": "The absolute price the user pays for this offer phase. The price must not be smaller than the minimum price allowed for this region." }, "absoluteDiscount": { "$ref": "Money", "description": "The absolute amount of money subtracted from the base plan price prorated over the phase duration that the user pays for this offer phase. For example, if the base plan price for this region is $12 for a period of 1 year, then a $1 absolute discount for a phase of a duration of 3 months would correspond to a price of $2. The resulting price may not be smaller than the minimum price allowed for this region." } } }, "OfferTag": { "properties": { "tag": { "type": "string", "description": "Must conform with RFC-1034. That is, this string can only contain lower-case letters (a-z), numbers (0-9), and hyphens (-), and be at most 20 characters." } }, "type": "object", "id": "OfferTag", "description": "Represents a custom tag specified for base plans and subscription offers." }, "GeneratedSplitApk": { "description": "Download metadata for a split APK.", "type": "object", "properties": { "downloadId": { "description": "Download ID, which uniquely identifies the APK to download. Should be supplied to `generatedapks.download` method.", "type": "string" }, "moduleName": { "description": "Name of the module that this APK belongs to.", "type": "string" }, "splitId": { "description": "Split ID. Empty for the main split of the base module.", "type": "string" }, "variantId": { "description": "ID of the generated variant.", "format": "int32", "type": "integer" } }, "id": "GeneratedSplitApk" }, "VoidedPurchasesListResponse": { "description": "Response for the voidedpurchases.list API.", "properties": { "pageInfo": { "$ref": "PageInfo", "description": "General pagination information." }, "voidedPurchases": { "type": "array", "items": { "$ref": "VoidedPurchase" } }, "tokenPagination": { "$ref": "TokenPagination", "description": "Pagination information for token pagination." } }, "type": "object", "id": "VoidedPurchasesListResponse" }, "DeveloperInitiatedCancellation": { "type": "object", "properties": {}, "description": "Information specific to cancellations initiated by developers.", "id": "DeveloperInitiatedCancellation" }, "ListSubscriptionOffersResponse": { "description": "Response message for ListSubscriptionOffers.", "type": "object", "properties": { "nextPageToken": { "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.", "type": "string" }, "subscriptionOffers": { "items": { "$ref": "SubscriptionOffer" }, "type": "array", "description": "The subscription offers from the specified subscription." } }, "id": "ListSubscriptionOffersResponse" }, "SubscriptionPurchaseLineItem": { "id": "SubscriptionPurchaseLineItem", "type": "object", "properties": { "productId": { "description": "The purchased product ID (for example, 'monthly001').", "type": "string" }, "expiryTime": { "format": "google-datetime", "type": "string", "description": "Time at which the subscription expired or will expire unless the access is extended (ex. renews)." }, "prepaidPlan": { "$ref": "PrepaidPlan", "description": "The item is prepaid." }, "autoRenewingPlan": { "$ref": "AutoRenewingPlan", "description": "The item is auto renewing." } }, "description": "Item-level info for a subscription purchase." }, "DeviceRam": { "type": "object", "properties": { "maxBytes": { "type": "string", "description": "Maximum RAM in bytes (bound excluded).", "format": "int64" }, "minBytes": { "description": "Minimum RAM in bytes (bound included).", "type": "string", "format": "int64" } }, "id": "DeviceRam", "description": "Conditions about a device's RAM capabilities." } }, "discoveryVersion": "v1", "protocol": "rest", "ownerName": "Google", "servicePath": "", "canonicalName": "Android Publisher", "mtlsRootUrl": "https://androidpublisher.mtls.googleapis.com/", "id": "androidpublisher:v3", "version": "v3", "description": "Lets Android application developers access their Google Play accounts.", "ownerDomain": "google.com", "rootUrl": "https://androidpublisher.googleapis.com/" }
]===]))
