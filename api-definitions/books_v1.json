{
  "baseUrl": "https://books.googleapis.com/",
  "resources": {
    "cloudloading": {
      "methods": {
        "addBook": {
          "parameters": {
            "upload_client_token": {
              "location": "query",
              "type": "string",
              "description": "Scotty upload token."
            },
            "name": {
              "type": "string",
              "description": "The document name. It can be set only if the drive_document_id is set.",
              "location": "query"
            },
            "mime_type": {
              "type": "string",
              "location": "query",
              "description": "The document MIME type. It can be set only if the drive_document_id is set."
            },
            "drive_document_id": {
              "type": "string",
              "description": "A drive document id. The upload_client_token must not be set.",
              "location": "query"
            }
          },
          "id": "books.cloudloading.addBook",
          "parameterOrder": [],
          "description": "Add a user-upload volume and triggers processing.",
          "response": {
            "$ref": "BooksCloudloadingResource"
          },
          "flatPath": "books/v1/cloudloading/addBook",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "httpMethod": "POST",
          "path": "books/v1/cloudloading/addBook"
        },
        "deleteBook": {
          "description": "Remove the book and its contents",
          "response": {
            "$ref": "Empty"
          },
          "path": "books/v1/cloudloading/deleteBook",
          "id": "books.cloudloading.deleteBook",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameterOrder": [
            "volumeId"
          ],
          "httpMethod": "POST",
          "flatPath": "books/v1/cloudloading/deleteBook",
          "parameters": {
            "volumeId": {
              "type": "string",
              "location": "query",
              "required": true,
              "description": "The id of the book to be removed."
            }
          }
        },
        "updateBook": {
          "id": "books.cloudloading.updateBook",
          "parameters": {},
          "response": {
            "$ref": "BooksCloudloadingResource"
          },
          "flatPath": "books/v1/cloudloading/updateBook",
          "description": "Updates a user-upload volume.",
          "path": "books/v1/cloudloading/updateBook",
          "parameterOrder": [],
          "request": {
            "$ref": "BooksCloudloadingResource"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "httpMethod": "POST"
        }
      }
    },
    "bookshelves": {
      "resources": {
        "volumes": {
          "methods": {
            "list": {
              "description": "Retrieves volumes in a specific bookshelf for the specified user.",
              "flatPath": "books/v1/users/{userId}/bookshelves/{shelf}/volumes",
              "parameters": {
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "startIndex": {
                  "format": "uint32",
                  "type": "integer",
                  "location": "query",
                  "description": "Index of the first element to return (starts at 0)",
                  "minimum": "0"
                },
                "maxResults": {
                  "type": "integer",
                  "description": "Maximum number of results to return",
                  "format": "uint32",
                  "location": "query",
                  "minimum": "0"
                },
                "shelf": {
                  "location": "path",
                  "type": "string",
                  "description": "ID of bookshelf to retrieve volumes.",
                  "required": true
                },
                "showPreorders": {
                  "type": "boolean",
                  "location": "query",
                  "description": "Set to true to show pre-ordered books. Defaults to false."
                },
                "userId": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "ID of user for whom to retrieve bookshelf volumes."
                }
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "userId",
                "shelf"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "id": "books.bookshelves.volumes.list",
              "response": {
                "$ref": "Volumes"
              },
              "path": "books/v1/users/{userId}/bookshelves/{shelf}/volumes"
            }
          }
        }
      },
      "methods": {
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/users/{userId}/bookshelves/{shelf}",
          "description": "Retrieves metadata for a specific bookshelf for the specified user.",
          "parameterOrder": [
            "userId",
            "shelf"
          ],
          "response": {
            "$ref": "Bookshelf"
          },
          "flatPath": "books/v1/users/{userId}/bookshelves/{shelf}",
          "parameters": {
            "userId": {
              "required": true,
              "type": "string",
              "description": "ID of user for whom to retrieve bookshelves.",
              "location": "path"
            },
            "shelf": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "ID of bookshelf to retrieve."
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "type": "string",
              "location": "query"
            }
          },
          "id": "books.bookshelves.get",
          "httpMethod": "GET"
        },
        "list": {
          "parameters": {
            "source": {
              "description": "String to identify the originator of this request.",
              "location": "query",
              "type": "string"
            },
            "userId": {
              "description": "ID of user for whom to retrieve bookshelves.",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "id": "books.bookshelves.list",
          "parameterOrder": [
            "userId"
          ],
          "path": "books/v1/users/{userId}/bookshelves",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "response": {
            "$ref": "Bookshelves"
          },
          "httpMethod": "GET",
          "flatPath": "books/v1/users/{userId}/bookshelves",
          "description": "Retrieves a list of public bookshelves for the specified user."
        }
      }
    },
    "myconfig": {
      "methods": {
        "requestAccess": {
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "response": {
            "$ref": "RequestAccessData"
          },
          "parameterOrder": [
            "cpksver",
            "nonce",
            "source",
            "volumeId"
          ],
          "id": "books.myconfig.requestAccess",
          "flatPath": "books/v1/myconfig/requestAccess",
          "parameters": {
            "nonce": {
              "description": "The client nonce value.",
              "type": "string",
              "required": true,
              "location": "query"
            },
            "cpksver": {
              "type": "string",
              "location": "query",
              "description": "The device/version ID from which to request the restrictions.",
              "required": true
            },
            "licenseTypes": {
              "enumDescriptions": [
                "",
                "Both concurrent and download licenses.",
                "Concurrent access license.",
                "Offline download access license."
              ],
              "description": "The type of access license to request. If not specified, the default is BOTH.",
              "location": "query",
              "type": "string",
              "enum": [
                "LICENSE_TYPES_UNDEFINED",
                "BOTH",
                "CONCURRENT",
                "DOWNLOAD"
              ]
            },
            "locale": {
              "type": "string",
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.",
              "location": "query"
            },
            "source": {
              "location": "query",
              "type": "string",
              "description": "String to identify the originator of this request.",
              "required": true
            },
            "volumeId": {
              "required": true,
              "type": "string",
              "description": "The volume to request concurrent/download restrictions for.",
              "location": "query"
            }
          },
          "description": "Request concurrent and download access restrictions.",
          "path": "books/v1/myconfig/requestAccess"
        },
        "getUserSettings": {
          "parameters": {
            "country": {
              "type": "string",
              "location": "query",
              "description": "Unused. Added only to workaround TEX mandatory request template requirement"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/myconfig/getUserSettings",
          "response": {
            "$ref": "Usersettings"
          },
          "flatPath": "books/v1/myconfig/getUserSettings",
          "httpMethod": "GET",
          "parameterOrder": [],
          "description": "Gets the current settings for the user.",
          "id": "books.myconfig.getUserSettings"
        },
        "syncVolumeLicenses": {
          "path": "books/v1/myconfig/syncVolumeLicenses",
          "id": "books.myconfig.syncVolumeLicenses",
          "flatPath": "books/v1/myconfig/syncVolumeLicenses",
          "response": {
            "$ref": "Volumes"
          },
          "description": "Request downloaded content access for specified volumes on the My eBooks shelf.",
          "parameterOrder": [
            "cpksver",
            "nonce",
            "source"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "httpMethod": "POST",
          "parameters": {
            "locale": {
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.",
              "location": "query",
              "type": "string"
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "type": "string",
              "required": true,
              "location": "query"
            },
            "includeNonComicsSeries": {
              "description": "Set to true to include non-comics series. Defaults to false.",
              "type": "boolean",
              "location": "query"
            },
            "cpksver": {
              "location": "query",
              "type": "string",
              "description": "The device/version ID from which to release the restriction.",
              "required": true
            },
            "volumeIds": {
              "location": "query",
              "repeated": true,
              "type": "string",
              "description": "The volume(s) to request download restrictions for."
            },
            "features": {
              "enum": [
                "FEATURES_UNDEFINED",
                "RENTALS"
              ],
              "description": "List of features supported by the client, i.e., 'RENTALS'",
              "type": "string",
              "location": "query",
              "enumDescriptions": [
                "",
                "Client supports rentals."
              ],
              "repeated": true
            },
            "nonce": {
              "required": true,
              "type": "string",
              "location": "query",
              "description": "The client nonce value."
            },
            "showPreorders": {
              "type": "boolean",
              "description": "Set to true to show pre-ordered books. Defaults to false.",
              "location": "query"
            }
          }
        },
        "updateUserSettings": {
          "parameterOrder": [],
          "request": {
            "$ref": "Usersettings"
          },
          "description": "Sets the settings for the user. If a sub-object is specified, it will overwrite the existing sub-object stored in the server. Unspecified sub-objects will retain the existing value.",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/myconfig/updateUserSettings",
          "path": "books/v1/myconfig/updateUserSettings",
          "response": {
            "$ref": "Usersettings"
          },
          "parameters": {},
          "httpMethod": "POST",
          "id": "books.myconfig.updateUserSettings"
        },
        "releaseDownloadAccess": {
          "parameterOrder": [
            "cpksver",
            "volumeIds"
          ],
          "path": "books/v1/myconfig/releaseDownloadAccess",
          "parameters": {
            "cpksver": {
              "type": "string",
              "location": "query",
              "required": true,
              "description": "The device/version ID from which to release the restriction."
            },
            "locale": {
              "location": "query",
              "type": "string",
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US."
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "type": "string",
              "location": "query"
            },
            "volumeIds": {
              "type": "string",
              "location": "query",
              "description": "The volume(s) to release restrictions for.",
              "repeated": true,
              "required": true
            }
          },
          "description": "Release downloaded content access restriction.",
          "id": "books.myconfig.releaseDownloadAccess",
          "response": {
            "$ref": "DownloadAccesses"
          },
          "flatPath": "books/v1/myconfig/releaseDownloadAccess",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ]
        }
      }
    },
    "volumes": {
      "methods": {
        "list": {
          "httpMethod": "GET",
          "parameters": {
            "filter": {
              "description": "Filter search results.",
              "type": "string",
              "enum": [
                "FILTER_UNDEFINED",
                "ebooks",
                "free-ebooks",
                "full",
                "paid-ebooks",
                "partial"
              ],
              "enumDescriptions": [
                "",
                "All Google eBooks.",
                "Google eBook with full volume text viewability.",
                "Public can view entire volume text.",
                "Google eBook with a price.",
                "Public able to see parts of text."
              ],
              "location": "query"
            },
            "orderBy": {
              "enumDescriptions": [
                "",
                "Most recently published.",
                "Relevance to search terms."
              ],
              "type": "string",
              "enum": [
                "ORDER_BY_UNDEFINED",
                "newest",
                "relevance"
              ],
              "location": "query",
              "description": "Sort search results."
            },
            "showPreorders": {
              "location": "query",
              "description": "Set to true to show books available for preorder. Defaults to false.",
              "type": "boolean"
            },
            "maxResults": {
              "description": "Maximum number of results to return.",
              "location": "query",
              "minimum": "0",
              "format": "uint32",
              "maximum": "40",
              "type": "integer"
            },
            "q": {
              "location": "query",
              "description": "Full-text search query string.",
              "type": "string",
              "required": true
            },
            "maxAllowedMaturityRating": {
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ],
              "location": "query",
              "type": "string",
              "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.",
              "enumDescriptions": [
                "",
                "Show books which are rated mature or lower.",
                "Show books which are rated not mature."
              ]
            },
            "partner": {
              "description": "Restrict and brand results for partner ID.",
              "type": "string",
              "location": "query"
            },
            "printType": {
              "enumDescriptions": [
                "",
                "All volume content types.",
                "Just books.",
                "Just magazines."
              ],
              "enum": [
                "PRINT_TYPE_UNDEFINED",
                "ALL",
                "BOOKS",
                "MAGAZINES"
              ],
              "type": "string",
              "description": "Restrict to books or magazines.",
              "location": "query"
            },
            "download": {
              "location": "query",
              "enumDescriptions": [
                "",
                "All volumes with epub."
              ],
              "enum": [
                "DOWNLOAD_UNDEFINED",
                "EPUB"
              ],
              "description": "Restrict to volumes by download availability.",
              "type": "string"
            },
            "startIndex": {
              "format": "uint32",
              "description": "Index of the first result to return (starts at 0)",
              "minimum": "0",
              "type": "integer",
              "location": "query"
            },
            "libraryRestrict": {
              "enum": [
                "LIBRARY_RESTRICT_UNDEFINED",
                "my-library",
                "no-restrict"
              ],
              "type": "string",
              "location": "query",
              "enumDescriptions": [
                "",
                "Restrict to the user's library, any shelf.",
                "Do not restrict based on user's library."
              ],
              "description": "Restrict search to this user's library."
            },
            "projection": {
              "type": "string",
              "description": "Restrict information returned to a set of selected fields.",
              "enumDescriptions": [
                "",
                "Includes all volume data.",
                "Includes a subset of fields in volumeInfo and accessInfo."
              ],
              "enum": [
                "PROJECTION_UNDEFINED",
                "FULL",
                "LITE"
              ],
              "location": "query"
            },
            "source": {
              "type": "string",
              "description": "String to identify the originator of this request.",
              "location": "query"
            },
            "langRestrict": {
              "location": "query",
              "type": "string",
              "description": "Restrict results to books with this language code."
            }
          },
          "flatPath": "books/v1/volumes",
          "parameterOrder": [
            "q"
          ],
          "path": "books/v1/volumes",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "description": "Performs a book search.",
          "response": {
            "$ref": "Volumes"
          },
          "id": "books.volumes.list"
        },
        "get": {
          "flatPath": "books/v1/volumes/{volumeId}",
          "path": "books/v1/volumes/{volumeId}",
          "description": "Gets volume information for a single volume.",
          "httpMethod": "GET",
          "response": {
            "$ref": "Volume"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameterOrder": [
            "volumeId"
          ],
          "parameters": {
            "partner": {
              "location": "query",
              "description": "Brand results for partner ID.",
              "type": "string"
            },
            "projection": {
              "location": "query",
              "type": "string",
              "enum": [
                "PROJECTION_UNDEFINED",
                "FULL",
                "LITE"
              ],
              "description": "Restrict information returned to a set of selected fields.",
              "enumDescriptions": [
                "",
                "Includes all volume data.",
                "Includes a subset of fields in volumeInfo and accessInfo."
              ]
            },
            "country": {
              "type": "string",
              "description": "ISO-3166-1 code to override the IP-based location.",
              "location": "query"
            },
            "user_library_consistent_read": {
              "location": "query",
              "type": "boolean"
            },
            "includeNonComicsSeries": {
              "type": "boolean",
              "description": "Set to true to include non-comics series. Defaults to false.",
              "location": "query"
            },
            "volumeId": {
              "required": true,
              "type": "string",
              "description": "ID of volume to retrieve.",
              "location": "path"
            },
            "source": {
              "location": "query",
              "type": "string",
              "description": "string to identify the originator of this request."
            }
          },
          "id": "books.volumes.get"
        }
      },
      "resources": {
        "recommended": {
          "methods": {
            "list": {
              "parameterOrder": [],
              "id": "books.volumes.recommended.list",
              "path": "books/v1/volumes/recommended",
              "flatPath": "books/v1/volumes/recommended",
              "description": "Return a list of recommended books for the current user.",
              "httpMethod": "GET",
              "parameters": {
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                },
                "locale": {
                  "type": "string",
                  "location": "query",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations."
                },
                "maxAllowedMaturityRating": {
                  "location": "query",
                  "enum": [
                    "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                    "MATURE",
                    "not-mature"
                  ],
                  "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.",
                  "enumDescriptions": [
                    "",
                    "Show books which are rated mature or lower.",
                    "Show books which are rated not mature."
                  ],
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "response": {
                "$ref": "Volumes"
              }
            },
            "rate": {
              "httpMethod": "POST",
              "path": "books/v1/volumes/recommended/rate",
              "description": "Rate a recommended book for the current user.",
              "parameterOrder": [
                "rating",
                "volumeId"
              ],
              "response": {
                "$ref": "BooksVolumesRecommendedRateResponse"
              },
              "flatPath": "books/v1/volumes/recommended/rate",
              "parameters": {
                "volumeId": {
                  "required": true,
                  "location": "query",
                  "type": "string",
                  "description": "ID of the source volume."
                },
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                },
                "rating": {
                  "required": true,
                  "type": "string",
                  "enumDescriptions": [
                    "",
                    "Rating indicating a dismissal due to ownership.",
                    "Rating indicating a negative dismissal of a volume."
                  ],
                  "description": "Rating to be given to the volume.",
                  "enum": [
                    "RATING_UNDEFINED",
                    "HAVE_IT",
                    "NOT_INTERESTED"
                  ],
                  "location": "query"
                },
                "locale": {
                  "location": "query",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.",
                  "type": "string"
                }
              },
              "id": "books.volumes.recommended.rate",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ]
            }
          }
        },
        "mybooks": {
          "methods": {
            "list": {
              "parameters": {
                "acquireMethod": {
                  "enum": [
                    "ACQUIRE_METHOD_UNDEFINED",
                    "FAMILY_SHARED",
                    "PREORDERED",
                    "PREVIOUSLY_RENTED",
                    "PUBLIC_DOMAIN",
                    "PURCHASED",
                    "RENTED",
                    "SAMPLE",
                    "UPLOADED"
                  ],
                  "repeated": true,
                  "description": "How the book was acquired",
                  "location": "query",
                  "enumDescriptions": [
                    "",
                    "Books acquired via Family Sharing",
                    "Preordered books (not yet available)",
                    "User-rented books past their expiration time",
                    "Public domain books",
                    "Purchased books",
                    "User-rented books",
                    "Sample books",
                    "User uploaded books"
                  ],
                  "type": "string"
                },
                "maxResults": {
                  "maximum": "100",
                  "location": "query",
                  "minimum": "0",
                  "type": "integer",
                  "format": "uint32",
                  "description": "Maximum number of results to return."
                },
                "startIndex": {
                  "minimum": "0",
                  "location": "query",
                  "type": "integer",
                  "description": "Index of the first result to return (starts at 0)",
                  "format": "uint32"
                },
                "locale": {
                  "type": "string",
                  "location": "query",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex:'en_US'. Used for generating recommendations."
                },
                "country": {
                  "description": "ISO-3166-1 code to override the IP-based location.",
                  "location": "query",
                  "type": "string"
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "processingState": {
                  "location": "query",
                  "repeated": true,
                  "enum": [
                    "PROCESSING_STATE_UNDEFINED",
                    "COMPLETED_FAILED",
                    "COMPLETED_SUCCESS",
                    "RUNNING"
                  ],
                  "type": "string",
                  "enumDescriptions": [
                    "",
                    "The volume processing hase failed.",
                    "The volume processing was completed.",
                    "The volume processing is not completed."
                  ],
                  "description": "The processing state of the user uploaded volumes to be returned. Applicable only if the UPLOADED is specified in the acquireMethod."
                }
              },
              "httpMethod": "GET",
              "id": "books.volumes.mybooks.list",
              "response": {
                "$ref": "Volumes"
              },
              "parameterOrder": [],
              "path": "books/v1/volumes/mybooks",
              "description": "Return a list of books in My Library.",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/volumes/mybooks"
            }
          }
        },
        "useruploaded": {
          "methods": {
            "list": {
              "httpMethod": "GET",
              "id": "books.volumes.useruploaded.list",
              "parameterOrder": [],
              "response": {
                "$ref": "Volumes"
              },
              "path": "books/v1/volumes/useruploaded",
              "description": "Return a list of books uploaded by the current user.",
              "parameters": {
                "locale": {
                  "location": "query",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.",
                  "type": "string"
                },
                "maxResults": {
                  "location": "query",
                  "maximum": "40",
                  "type": "integer",
                  "format": "uint32",
                  "description": "Maximum number of results to return.",
                  "minimum": "0"
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "processingState": {
                  "description": "The processing state of the user uploaded volumes to be returned.",
                  "type": "string",
                  "location": "query",
                  "repeated": true,
                  "enum": [
                    "PROCESSING_STATE_UNDEFINED",
                    "COMPLETED_FAILED",
                    "COMPLETED_SUCCESS",
                    "RUNNING"
                  ],
                  "enumDescriptions": [
                    "",
                    "The volume processing hase failed.",
                    "The volume processing was completed.",
                    "The volume processing is not completed."
                  ]
                },
                "startIndex": {
                  "description": "Index of the first result to return (starts at 0)",
                  "type": "integer",
                  "minimum": "0",
                  "format": "uint32",
                  "location": "query"
                },
                "volumeId": {
                  "location": "query",
                  "description": "The ids of the volumes to be returned. If not specified all that match the processingState are returned.",
                  "type": "string",
                  "repeated": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/volumes/useruploaded"
            }
          }
        },
        "associated": {
          "methods": {
            "list": {
              "flatPath": "books/v1/volumes/{volumeId}/associated",
              "parameters": {
                "maxAllowedMaturityRating": {
                  "enum": [
                    "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                    "MATURE",
                    "not-mature"
                  ],
                  "type": "string",
                  "location": "query",
                  "enumDescriptions": [
                    "",
                    "Show books which are rated mature or lower.",
                    "Show books which are rated not mature."
                  ],
                  "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out."
                },
                "volumeId": {
                  "type": "string",
                  "location": "path",
                  "description": "ID of the source volume.",
                  "required": true
                },
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                },
                "locale": {
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.",
                  "type": "string",
                  "location": "query"
                },
                "association": {
                  "enum": [
                    "ASSOCIATION_UNDEFINED",
                    "end-of-sample",
                    "end-of-volume",
                    "related-for-play"
                  ],
                  "type": "string",
                  "enumDescriptions": [
                    "",
                    "Recommendations for display end-of-sample.",
                    "Recommendations for display end-of-volume.",
                    "Related volumes for Play Store."
                  ],
                  "location": "query",
                  "description": "Association type."
                }
              },
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameterOrder": [
                "volumeId"
              ],
              "description": "Return a list of associated books.",
              "response": {
                "$ref": "Volumes"
              },
              "path": "books/v1/volumes/{volumeId}/associated",
              "id": "books.volumes.associated.list"
            }
          }
        }
      }
    },
    "promooffer": {
      "methods": {
        "dismiss": {
          "flatPath": "books/v1/promooffer/dismiss",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "httpMethod": "POST",
          "parameterOrder": [],
          "parameters": {
            "offerId": {
              "type": "string",
              "location": "query",
              "description": "Offer to dimiss"
            },
            "manufacturer": {
              "location": "query",
              "type": "string",
              "description": "device manufacturer"
            },
            "device": {
              "type": "string",
              "description": "device device",
              "location": "query"
            },
            "serial": {
              "description": "device serial",
              "location": "query",
              "type": "string"
            },
            "androidId": {
              "location": "query",
              "type": "string",
              "description": "device android_id"
            },
            "model": {
              "location": "query",
              "type": "string",
              "description": "device model"
            },
            "product": {
              "type": "string",
              "description": "device product",
              "location": "query"
            }
          },
          "description": "Marks the promo offer as dismissed.",
          "path": "books/v1/promooffer/dismiss",
          "id": "books.promooffer.dismiss",
          "response": {
            "$ref": "Empty"
          }
        },
        "accept": {
          "parameters": {
            "manufacturer": {
              "location": "query",
              "type": "string",
              "description": "device manufacturer"
            },
            "serial": {
              "type": "string",
              "description": "device serial",
              "location": "query"
            },
            "androidId": {
              "description": "device android_id",
              "type": "string",
              "location": "query"
            },
            "product": {
              "description": "device product",
              "location": "query",
              "type": "string"
            },
            "volumeId": {
              "type": "string",
              "description": "Volume id to exercise the offer",
              "location": "query"
            },
            "model": {
              "description": "device model",
              "location": "query",
              "type": "string"
            },
            "device": {
              "type": "string",
              "location": "query",
              "description": "device device"
            },
            "offerId": {
              "type": "string",
              "location": "query"
            }
          },
          "parameterOrder": [],
          "path": "books/v1/promooffer/accept",
          "httpMethod": "POST",
          "flatPath": "books/v1/promooffer/accept",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "id": "books.promooffer.accept",
          "description": "Accepts the promo offer.",
          "response": {
            "$ref": "Empty"
          }
        },
        "get": {
          "httpMethod": "GET",
          "parameters": {
            "androidId": {
              "location": "query",
              "type": "string",
              "description": "device android_id"
            },
            "serial": {
              "description": "device serial",
              "location": "query",
              "type": "string"
            },
            "product": {
              "location": "query",
              "type": "string",
              "description": "device product"
            },
            "model": {
              "description": "device model",
              "location": "query",
              "type": "string"
            },
            "manufacturer": {
              "type": "string",
              "description": "device manufacturer",
              "location": "query"
            },
            "device": {
              "type": "string",
              "location": "query",
              "description": "device device"
            }
          },
          "flatPath": "books/v1/promooffer/get",
          "response": {
            "$ref": "Offers"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameterOrder": [],
          "id": "books.promooffer.get",
          "description": "Returns a list of promo offers available to the user",
          "path": "books/v1/promooffer/get"
        }
      }
    },
    "series": {
      "methods": {
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/series/get",
          "path": "books/v1/series/get",
          "parameters": {
            "series_id": {
              "description": "String that identifies the series",
              "location": "query",
              "repeated": true,
              "type": "string",
              "required": true
            }
          },
          "response": {
            "$ref": "Series"
          },
          "description": "Returns Series metadata for the given series ids.",
          "parameterOrder": [
            "series_id"
          ],
          "httpMethod": "GET",
          "id": "books.series.get"
        }
      },
      "resources": {
        "membership": {
          "methods": {
            "get": {
              "description": "Returns Series membership data given the series id.",
              "parameterOrder": [
                "series_id"
              ],
              "httpMethod": "GET",
              "flatPath": "books/v1/series/membership/get",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "response": {
                "$ref": "Seriesmembership"
              },
              "parameters": {
                "series_id": {
                  "required": true,
                  "type": "string",
                  "description": "String that identifies the series",
                  "location": "query"
                },
                "page_size": {
                  "location": "query",
                  "format": "uint32",
                  "type": "integer",
                  "description": "Number of maximum results per page to be included in the response."
                },
                "page_token": {
                  "description": "The value of the nextToken from the previous page.",
                  "type": "string",
                  "location": "query"
                }
              },
              "path": "books/v1/series/membership/get",
              "id": "books.series.membership.get"
            }
          }
        }
      }
    },
    "personalizedstream": {
      "methods": {
        "get": {
          "flatPath": "books/v1/personalizedstream/get",
          "parameters": {
            "maxAllowedMaturityRating": {
              "location": "query",
              "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.",
              "enumDescriptions": [
                "",
                "Show books which are rated mature or lower.",
                "Show books which are rated not mature."
              ],
              "type": "string",
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ]
            },
            "source": {
              "type": "string",
              "location": "query",
              "description": "String to identify the originator of this request."
            },
            "locale": {
              "location": "query",
              "type": "string",
              "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations."
            }
          },
          "description": "Returns a stream of personalized book clusters",
          "parameterOrder": [],
          "httpMethod": "GET",
          "response": {
            "$ref": "Discoveryclusters"
          },
          "path": "books/v1/personalizedstream/get",
          "id": "books.personalizedstream.get",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ]
        }
      }
    },
    "mylibrary": {
      "resources": {
        "bookshelves": {
          "methods": {
            "addVolume": {
              "path": "books/v1/mylibrary/bookshelves/{shelf}/addVolume",
              "httpMethod": "POST",
              "id": "books.mylibrary.bookshelves.addVolume",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "reason": {
                  "location": "query",
                  "description": "The reason for which the book is added to the library.",
                  "enum": [
                    "REASON_UNDEFINED",
                    "IOS_PREX",
                    "IOS_SEARCH",
                    "ONBOARDING"
                  ],
                  "enumDescriptions": [
                    "",
                    "Volumes added from the PREX flow on iOS.",
                    "Volumes added from the Search flow on iOS.",
                    "Volumes added from the Onboarding flow."
                  ],
                  "type": "string"
                },
                "shelf": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "ID of bookshelf to which to add a volume."
                },
                "volumeId": {
                  "required": true,
                  "description": "ID of volume to add.",
                  "location": "query",
                  "type": "string"
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                }
              },
              "description": "Adds a volume to a bookshelf.",
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/addVolume",
              "parameterOrder": [
                "shelf",
                "volumeId"
              ],
              "response": {
                "$ref": "Empty"
              }
            },
            "clearVolumes": {
              "parameterOrder": [
                "shelf"
              ],
              "id": "books.mylibrary.bookshelves.clearVolumes",
              "httpMethod": "POST",
              "parameters": {
                "shelf": {
                  "location": "path",
                  "required": true,
                  "description": "ID of bookshelf from which to remove a volume.",
                  "type": "string"
                },
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/clearVolumes",
              "response": {
                "$ref": "Empty"
              },
              "description": "Clears all volumes from a bookshelf.",
              "path": "books/v1/mylibrary/bookshelves/{shelf}/clearVolumes"
            },
            "removeVolume": {
              "parameters": {
                "shelf": {
                  "description": "ID of bookshelf from which to remove a volume.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "volumeId": {
                  "type": "string",
                  "required": true,
                  "description": "ID of volume to remove.",
                  "location": "query"
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "reason": {
                  "description": "The reason for which the book is removed from the library.",
                  "type": "string",
                  "location": "query",
                  "enumDescriptions": [
                    "",
                    "Samples removed from the Onboarding flow."
                  ],
                  "enum": [
                    "REASON_UNDEFINED",
                    "ONBOARDING"
                  ]
                }
              },
              "id": "books.mylibrary.bookshelves.removeVolume",
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/removeVolume",
              "response": {
                "$ref": "Empty"
              },
              "httpMethod": "POST",
              "description": "Removes a volume from a bookshelf.",
              "parameterOrder": [
                "shelf",
                "volumeId"
              ],
              "path": "books/v1/mylibrary/bookshelves/{shelf}/removeVolume",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ]
            },
            "moveVolume": {
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/moveVolume",
              "httpMethod": "POST",
              "path": "books/v1/mylibrary/bookshelves/{shelf}/moveVolume",
              "parameters": {
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                },
                "volumeId": {
                  "description": "ID of volume to move.",
                  "required": true,
                  "location": "query",
                  "type": "string"
                },
                "shelf": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "ID of bookshelf with the volume."
                },
                "volumePosition": {
                  "format": "int32",
                  "required": true,
                  "description": "Position on shelf to move the item (0 puts the item before the current first item, 1 puts it between the first and the second and so on.)",
                  "type": "integer",
                  "location": "query"
                }
              },
              "parameterOrder": [
                "shelf",
                "volumeId",
                "volumePosition"
              ],
              "id": "books.mylibrary.bookshelves.moveVolume",
              "description": "Moves a volume within a bookshelf.",
              "response": {
                "$ref": "Empty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ]
            },
            "list": {
              "flatPath": "books/v1/mylibrary/bookshelves",
              "response": {
                "$ref": "Bookshelves"
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "path": "books/v1/mylibrary/bookshelves",
              "parameterOrder": [],
              "id": "books.mylibrary.bookshelves.list",
              "httpMethod": "GET",
              "description": "Retrieves a list of bookshelves belonging to the authenticated user.",
              "parameters": {
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                }
              }
            },
            "get": {
              "id": "books.mylibrary.bookshelves.get",
              "description": "Retrieves metadata for a specific bookshelf belonging to the authenticated user.",
              "parameters": {
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                },
                "shelf": {
                  "type": "string",
                  "description": "ID of bookshelf to retrieve.",
                  "location": "path",
                  "required": true
                }
              },
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameterOrder": [
                "shelf"
              ],
              "path": "books/v1/mylibrary/bookshelves/{shelf}",
              "response": {
                "$ref": "Bookshelf"
              },
              "httpMethod": "GET"
            }
          },
          "resources": {
            "volumes": {
              "methods": {
                "list": {
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/books"
                  ],
                  "path": "books/v1/mylibrary/bookshelves/{shelf}/volumes",
                  "parameterOrder": [
                    "shelf"
                  ],
                  "parameters": {
                    "projection": {
                      "type": "string",
                      "description": "Restrict information returned to a set of selected fields.",
                      "enum": [
                        "PROJECTION_UNDEFINED",
                        "FULL",
                        "LITE"
                      ],
                      "location": "query",
                      "enumDescriptions": [
                        "",
                        "Includes all volume data.",
                        "Includes a subset of fields in volumeInfo and accessInfo."
                      ]
                    },
                    "source": {
                      "type": "string",
                      "description": "String to identify the originator of this request.",
                      "location": "query"
                    },
                    "maxResults": {
                      "format": "uint32",
                      "type": "integer",
                      "minimum": "0",
                      "description": "Maximum number of results to return",
                      "location": "query"
                    },
                    "shelf": {
                      "description": "The bookshelf ID or name retrieve volumes for.",
                      "location": "path",
                      "type": "string",
                      "required": true
                    },
                    "q": {
                      "description": "Full-text search query string in this bookshelf.",
                      "location": "query",
                      "type": "string"
                    },
                    "showPreorders": {
                      "location": "query",
                      "description": "Set to true to show pre-ordered books. Defaults to false.",
                      "type": "boolean"
                    },
                    "startIndex": {
                      "minimum": "0",
                      "format": "uint32",
                      "type": "integer",
                      "location": "query",
                      "description": "Index of the first element to return (starts at 0)"
                    },
                    "country": {
                      "description": "ISO-3166-1 code to override the IP-based location.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "description": "Gets volume information for volumes on a bookshelf.",
                  "response": {
                    "$ref": "Volumes"
                  },
                  "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/volumes",
                  "id": "books.mylibrary.bookshelves.volumes.list"
                }
              }
            }
          }
        },
        "annotations": {
          "methods": {
            "list": {
              "response": {
                "$ref": "Annotations"
              },
              "flatPath": "books/v1/mylibrary/annotations",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "path": "books/v1/mylibrary/annotations",
              "id": "books.mylibrary.annotations.list",
              "description": "Retrieves a list of annotations, possibly filtered.",
              "httpMethod": "GET",
              "parameters": {
                "updatedMax": {
                  "location": "query",
                  "type": "string",
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive)."
                },
                "contentVersion": {
                  "type": "string",
                  "location": "query",
                  "description": "The content version for the requested volume."
                },
                "showDeleted": {
                  "location": "query",
                  "description": "Set to true to return deleted annotations. updatedMin must be in the request to use this. Defaults to false.",
                  "type": "boolean"
                },
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                },
                "maxResults": {
                  "type": "integer",
                  "minimum": "0",
                  "format": "uint32",
                  "location": "query",
                  "description": "Maximum number of results to return",
                  "maximum": "40"
                },
                "updatedMin": {
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive).",
                  "type": "string",
                  "location": "query"
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "The value of the nextToken from the previous page."
                },
                "volumeId": {
                  "location": "query",
                  "type": "string",
                  "description": "The volume to restrict annotations to."
                },
                "layerId": {
                  "description": "The layer ID to limit annotation by.",
                  "type": "string",
                  "location": "query"
                },
                "layerIds": {
                  "location": "query",
                  "type": "string",
                  "description": "The layer ID(s) to limit annotation by.",
                  "repeated": true
                }
              },
              "parameterOrder": []
            },
            "summary": {
              "parameterOrder": [
                "layerIds",
                "volumeId"
              ],
              "response": {
                "$ref": "AnnotationsSummary"
              },
              "parameters": {
                "volumeId": {
                  "location": "query",
                  "type": "string",
                  "description": "Volume id to get the summary for.",
                  "required": true
                },
                "layerIds": {
                  "type": "string",
                  "repeated": true,
                  "description": "Array of layer IDs to get the summary for.",
                  "required": true,
                  "location": "query"
                }
              },
              "description": "Gets the summary of specified layers.",
              "id": "books.mylibrary.annotations.summary",
              "path": "books/v1/mylibrary/annotations/summary",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "httpMethod": "POST",
              "flatPath": "books/v1/mylibrary/annotations/summary"
            },
            "delete": {
              "httpMethod": "DELETE",
              "flatPath": "books/v1/mylibrary/annotations/{annotationId}",
              "description": "Deletes an annotation.",
              "parameters": {
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "annotationId": {
                  "location": "path",
                  "type": "string",
                  "description": "The ID for the annotation to delete.",
                  "required": true
                }
              },
              "id": "books.mylibrary.annotations.delete",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "response": {
                "$ref": "Empty"
              },
              "path": "books/v1/mylibrary/annotations/{annotationId}",
              "parameterOrder": [
                "annotationId"
              ]
            },
            "update": {
              "flatPath": "books/v1/mylibrary/annotations/{annotationId}",
              "response": {
                "$ref": "Annotation"
              },
              "description": "Updates an existing annotation.",
              "id": "books.mylibrary.annotations.update",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "httpMethod": "PUT",
              "path": "books/v1/mylibrary/annotations/{annotationId}",
              "request": {
                "$ref": "Annotation"
              },
              "parameters": {
                "annotationId": {
                  "type": "string",
                  "description": "The ID for the annotation to update.",
                  "location": "path",
                  "required": true
                },
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                }
              },
              "parameterOrder": [
                "annotationId"
              ]
            },
            "insert": {
              "parameterOrder": [],
              "path": "books/v1/mylibrary/annotations",
              "response": {
                "$ref": "Annotation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "annotationId": {
                  "type": "string",
                  "location": "query",
                  "description": "The ID for the annotation to insert."
                },
                "country": {
                  "location": "query",
                  "type": "string",
                  "description": "ISO-3166-1 code to override the IP-based location."
                },
                "showOnlySummaryInResponse": {
                  "type": "boolean",
                  "location": "query",
                  "description": "Requests that only the summary of the specified layer be provided in the response."
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                }
              },
              "flatPath": "books/v1/mylibrary/annotations",
              "description": "Inserts a new annotation.",
              "httpMethod": "POST",
              "request": {
                "$ref": "Annotation"
              },
              "id": "books.mylibrary.annotations.insert"
            }
          }
        },
        "readingpositions": {
          "methods": {
            "get": {
              "parameterOrder": [
                "volumeId"
              ],
              "path": "books/v1/mylibrary/readingpositions/{volumeId}",
              "parameters": {
                "volumeId": {
                  "type": "string",
                  "description": "ID of volume for which to retrieve a reading position.",
                  "required": true,
                  "location": "path"
                },
                "contentVersion": {
                  "type": "string",
                  "location": "query",
                  "description": "Volume content version for which this reading position is requested."
                },
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                }
              },
              "id": "books.mylibrary.readingpositions.get",
              "description": "Retrieves my reading position information for a volume.",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "response": {
                "$ref": "ReadingPosition"
              },
              "flatPath": "books/v1/mylibrary/readingpositions/{volumeId}"
            },
            "setPosition": {
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                },
                "timestamp": {
                  "description": "RFC 3339 UTC format timestamp associated with this reading position.",
                  "required": true,
                  "type": "string",
                  "location": "query"
                },
                "position": {
                  "type": "string",
                  "location": "query",
                  "required": true,
                  "description": "Position string for the new volume reading position."
                },
                "deviceCookie": {
                  "description": "Random persistent device cookie optional on set position.",
                  "type": "string",
                  "location": "query"
                },
                "action": {
                  "enumDescriptions": [
                    "",
                    "User chose bookmark within volume.",
                    "User selected chapter from list.",
                    "Next page event.",
                    "Previous page event.",
                    "User navigated to page.",
                    "User chose search results within volume."
                  ],
                  "type": "string",
                  "enum": [
                    "ACTION_UNDEFINED",
                    "bookmark",
                    "chapter",
                    "next-page",
                    "prev-page",
                    "scroll",
                    "search"
                  ],
                  "description": "Action that caused this reading position to be set.",
                  "location": "query"
                },
                "contentVersion": {
                  "description": "Volume content version for which this reading position applies.",
                  "location": "query",
                  "type": "string"
                },
                "volumeId": {
                  "type": "string",
                  "required": true,
                  "description": "ID of volume for which to update the reading position.",
                  "location": "path"
                }
              },
              "httpMethod": "POST",
              "description": "Sets my reading position information for a volume.",
              "id": "books.mylibrary.readingpositions.setPosition",
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "volumeId",
                "position",
                "timestamp"
              ],
              "flatPath": "books/v1/mylibrary/readingpositions/{volumeId}/setPosition",
              "path": "books/v1/mylibrary/readingpositions/{volumeId}/setPosition"
            }
          }
        }
      }
    },
    "familysharing": {
      "methods": {
        "getFamilyInfo": {
          "flatPath": "books/v1/familysharing/getFamilyInfo",
          "description": "Gets information regarding the family that the user is part of.",
          "response": {
            "$ref": "FamilyInfo"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "httpMethod": "GET",
          "path": "books/v1/familysharing/getFamilyInfo",
          "parameters": {
            "source": {
              "location": "query",
              "type": "string",
              "description": "String to identify the originator of this request."
            }
          },
          "id": "books.familysharing.getFamilyInfo",
          "parameterOrder": []
        },
        "unshare": {
          "httpMethod": "POST",
          "parameters": {
            "volumeId": {
              "description": "The volume to unshare.",
              "location": "query",
              "type": "string"
            },
            "source": {
              "location": "query",
              "type": "string",
              "description": "String to identify the originator of this request."
            },
            "docId": {
              "type": "string",
              "description": "The docid to unshare.",
              "location": "query"
            }
          },
          "path": "books/v1/familysharing/unshare",
          "flatPath": "books/v1/familysharing/unshare",
          "response": {
            "$ref": "Empty"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "description": "Initiates revoking content that has already been shared with the user's family. Empty response indicates success.",
          "parameterOrder": [],
          "id": "books.familysharing.unshare"
        },
        "share": {
          "flatPath": "books/v1/familysharing/share",
          "id": "books.familysharing.share",
          "parameterOrder": [],
          "parameters": {
            "volumeId": {
              "type": "string",
              "description": "The volume to share.",
              "location": "query"
            },
            "source": {
              "location": "query",
              "type": "string",
              "description": "String to identify the originator of this request."
            },
            "docId": {
              "location": "query",
              "description": "The docid to share.",
              "type": "string"
            }
          },
          "response": {
            "$ref": "Empty"
          },
          "httpMethod": "POST",
          "description": "Initiates sharing of the content with the user's family. Empty response indicates success.",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/familysharing/share"
        }
      }
    },
    "notification": {
      "methods": {
        "get": {
          "path": "books/v1/notification/get",
          "parameterOrder": [
            "notification_id"
          ],
          "flatPath": "books/v1/notification/get",
          "parameters": {
            "source": {
              "description": "String to identify the originator of this request.",
              "location": "query",
              "type": "string"
            },
            "locale": {
              "type": "string",
              "location": "query",
              "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating notification title and body."
            },
            "notification_id": {
              "description": "String to identify the notification.",
              "type": "string",
              "location": "query",
              "required": true
            }
          },
          "description": "Returns notification details for a given notification id.",
          "httpMethod": "GET",
          "id": "books.notification.get",
          "response": {
            "$ref": "Notification"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ]
        }
      }
    },
    "onboarding": {
      "methods": {
        "listCategories": {
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/onboarding/listCategories",
          "description": "List categories for onboarding experience.",
          "flatPath": "books/v1/onboarding/listCategories",
          "parameters": {
            "locale": {
              "location": "query",
              "description": "ISO-639-1 language and ISO-3166-1 country code. Default is en-US if unset.",
              "type": "string"
            }
          },
          "id": "books.onboarding.listCategories",
          "response": {
            "$ref": "Category"
          },
          "httpMethod": "GET"
        },
        "listCategoryVolumes": {
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameters": {
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "The value of the nextToken from the previous page."
            },
            "locale": {
              "location": "query",
              "type": "string",
              "description": "ISO-639-1 language and ISO-3166-1 country code. Default is en-US if unset."
            },
            "pageSize": {
              "type": "integer",
              "description": "Number of maximum results per page to be included in the response.",
              "location": "query",
              "format": "uint32"
            },
            "categoryId": {
              "location": "query",
              "repeated": true,
              "type": "string",
              "description": "List of category ids requested."
            },
            "maxAllowedMaturityRating": {
              "description": "The maximum allowed maturity rating of returned volumes. Books with a higher maturity rating are filtered out.",
              "enumDescriptions": [
                "",
                "Show books which are rated mature or lower.",
                "Show books which are rated not mature."
              ],
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ],
              "location": "query",
              "type": "string"
            }
          },
          "httpMethod": "GET",
          "description": "List available volumes under categories for onboarding experience.",
          "parameterOrder": [],
          "id": "books.onboarding.listCategoryVolumes",
          "path": "books/v1/onboarding/listCategoryVolumes",
          "flatPath": "books/v1/onboarding/listCategoryVolumes",
          "response": {
            "$ref": "Volume2"
          }
        }
      }
    },
    "layers": {
      "methods": {
        "get": {
          "path": "books/v1/volumes/{volumeId}/layersummary/{summaryId}",
          "flatPath": "books/v1/volumes/{volumeId}/layersummary/{summaryId}",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameterOrder": [
            "volumeId",
            "summaryId"
          ],
          "description": "Gets the layer summary for a volume.",
          "httpMethod": "GET",
          "id": "books.layers.get",
          "parameters": {
            "summaryId": {
              "description": "The ID for the layer to get the summary for.",
              "required": true,
              "type": "string",
              "location": "path"
            },
            "contentVersion": {
              "location": "query",
              "description": "The content version for the requested volume.",
              "type": "string"
            },
            "volumeId": {
              "description": "The volume to retrieve layers for.",
              "location": "path",
              "type": "string",
              "required": true
            },
            "source": {
              "location": "query",
              "type": "string",
              "description": "String to identify the originator of this request."
            }
          },
          "response": {
            "$ref": "Layersummary"
          }
        },
        "list": {
          "path": "books/v1/volumes/{volumeId}/layersummary",
          "httpMethod": "GET",
          "description": "List the layer summaries for a volume.",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "id": "books.layers.list",
          "response": {
            "$ref": "Layersummaries"
          },
          "parameterOrder": [
            "volumeId"
          ],
          "flatPath": "books/v1/volumes/{volumeId}/layersummary",
          "parameters": {
            "source": {
              "type": "string",
              "description": "String to identify the originator of this request.",
              "location": "query"
            },
            "volumeId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "The volume to retrieve layers for."
            },
            "pageToken": {
              "description": "The value of the nextToken from the previous page.",
              "location": "query",
              "type": "string"
            },
            "maxResults": {
              "format": "uint32",
              "description": "Maximum number of results to return",
              "type": "integer",
              "minimum": "0",
              "maximum": "200",
              "location": "query"
            },
            "contentVersion": {
              "description": "The content version for the requested volume.",
              "location": "query",
              "type": "string"
            }
          }
        }
      },
      "resources": {
        "annotationData": {
          "methods": {
            "list": {
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/data",
              "parameters": {
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                },
                "maxResults": {
                  "maximum": "200",
                  "location": "query",
                  "type": "integer",
                  "minimum": "0",
                  "description": "Maximum number of results to return",
                  "format": "uint32"
                },
                "volumeId": {
                  "description": "The volume to retrieve annotation data for.",
                  "location": "path",
                  "type": "string",
                  "required": true
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "The value of the nextToken from the previous page."
                },
                "h": {
                  "type": "integer",
                  "description": "The requested pixel height for any images. If height is provided width must also be provided.",
                  "location": "query",
                  "format": "int32"
                },
                "w": {
                  "type": "integer",
                  "description": "The requested pixel width for any images. If width is provided height must also be provided.",
                  "location": "query",
                  "format": "int32"
                },
                "locale": {
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'.",
                  "location": "query",
                  "type": "string"
                },
                "annotationDataId": {
                  "repeated": true,
                  "location": "query",
                  "type": "string",
                  "description": "The list of Annotation Data Ids to retrieve. Pagination is ignored if this is set."
                },
                "updatedMin": {
                  "location": "query",
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive).",
                  "type": "string"
                },
                "contentVersion": {
                  "required": true,
                  "type": "string",
                  "description": "The content version for the requested volume.",
                  "location": "query"
                },
                "scale": {
                  "type": "integer",
                  "minimum": "0",
                  "location": "query",
                  "description": "The requested scale for the image.",
                  "format": "int32"
                },
                "updatedMax": {
                  "location": "query",
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive).",
                  "type": "string"
                },
                "layerId": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "The ID for the layer to get the annotation data."
                }
              },
              "response": {
                "$ref": "Annotationsdata"
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "id": "books.layers.annotationData.list",
              "httpMethod": "GET",
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/data",
              "description": "Gets the annotation data for a volume and layer.",
              "parameterOrder": [
                "volumeId",
                "layerId",
                "contentVersion"
              ]
            },
            "get": {
              "httpMethod": "GET",
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/data/{annotationDataId}",
              "description": "Gets the annotation data.",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "scale": {
                  "minimum": "0",
                  "format": "int32",
                  "location": "query",
                  "type": "integer",
                  "description": "The requested scale for the image."
                },
                "annotationDataId": {
                  "type": "string",
                  "location": "path",
                  "description": "The ID of the annotation data to retrieve.",
                  "required": true
                },
                "w": {
                  "description": "The requested pixel width for any images. If width is provided height must also be provided.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                },
                "allowWebDefinitions": {
                  "location": "query",
                  "description": "For the dictionary layer. Whether or not to allow web definitions.",
                  "type": "boolean"
                },
                "layerId": {
                  "location": "path",
                  "type": "string",
                  "description": "The ID for the layer to get the annotations.",
                  "required": true
                },
                "locale": {
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'.",
                  "type": "string",
                  "location": "query"
                },
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                },
                "h": {
                  "type": "integer",
                  "location": "query",
                  "description": "The requested pixel height for any images. If height is provided width must also be provided.",
                  "format": "int32"
                },
                "contentVersion": {
                  "description": "The content version for the volume you are trying to retrieve.",
                  "required": true,
                  "location": "query",
                  "type": "string"
                },
                "volumeId": {
                  "required": true,
                  "description": "The volume to retrieve annotations for.",
                  "location": "path",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "volumeId",
                "layerId",
                "annotationDataId",
                "contentVersion"
              ],
              "id": "books.layers.annotationData.get",
              "response": {
                "$ref": "DictionaryAnnotationdata"
              },
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/data/{annotationDataId}"
            }
          }
        },
        "volumeAnnotations": {
          "methods": {
            "list": {
              "description": "Gets the volume annotations for a volume and layer.",
              "id": "books.layers.volumeAnnotations.list",
              "parameters": {
                "maxResults": {
                  "format": "uint32",
                  "type": "integer",
                  "minimum": "0",
                  "location": "query",
                  "maximum": "200",
                  "description": "Maximum number of results to return"
                },
                "contentVersion": {
                  "type": "string",
                  "required": true,
                  "description": "The content version for the requested volume.",
                  "location": "query"
                },
                "locale": {
                  "type": "string",
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'.",
                  "location": "query"
                },
                "endOffset": {
                  "type": "string",
                  "location": "query",
                  "description": "The end offset to end retrieving data from."
                },
                "updatedMin": {
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive).",
                  "type": "string",
                  "location": "query"
                },
                "showDeleted": {
                  "type": "boolean",
                  "description": "Set to true to return deleted annotations. updatedMin must be in the request to use this. Defaults to false.",
                  "location": "query"
                },
                "startOffset": {
                  "type": "string",
                  "location": "query",
                  "description": "The start offset to start retrieving data from."
                },
                "pageToken": {
                  "description": "The value of the nextToken from the previous page.",
                  "type": "string",
                  "location": "query"
                },
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                },
                "volumeId": {
                  "type": "string",
                  "location": "path",
                  "description": "The volume to retrieve annotations for.",
                  "required": true
                },
                "volumeAnnotationsVersion": {
                  "location": "query",
                  "type": "string",
                  "description": "The version of the volume annotations that you are requesting."
                },
                "layerId": {
                  "type": "string",
                  "description": "The ID for the layer to get the annotations.",
                  "location": "path",
                  "required": true
                },
                "startPosition": {
                  "description": "The start position to start retrieving data from.",
                  "location": "query",
                  "type": "string"
                },
                "updatedMax": {
                  "location": "query",
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive).",
                  "type": "string"
                },
                "endPosition": {
                  "type": "string",
                  "location": "query",
                  "description": "The end position to end retrieving data from."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}",
              "httpMethod": "GET",
              "parameterOrder": [
                "volumeId",
                "layerId",
                "contentVersion"
              ],
              "response": {
                "$ref": "Volumeannotations"
              },
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}"
            },
            "get": {
              "id": "books.layers.volumeAnnotations.get",
              "description": "Gets the volume annotation.",
              "response": {
                "$ref": "Volumeannotation"
              },
              "parameterOrder": [
                "volumeId",
                "layerId",
                "annotationId"
              ],
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/annotations/{annotationId}",
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/annotations/{annotationId}",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "annotationId": {
                  "required": true,
                  "description": "The ID of the volume annotation to retrieve.",
                  "location": "path",
                  "type": "string"
                },
                "locale": {
                  "type": "string",
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'.",
                  "location": "query"
                },
                "volumeId": {
                  "type": "string",
                  "location": "path",
                  "description": "The volume to retrieve annotations for.",
                  "required": true
                },
                "layerId": {
                  "required": true,
                  "description": "The ID for the layer to get the annotations.",
                  "location": "path",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "dictionary": {
      "methods": {
        "listOfflineMetadata": {
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameters": {
            "cpksver": {
              "required": true,
              "type": "string",
              "location": "query",
              "description": "The device/version ID from which to request the data."
            }
          },
          "response": {
            "$ref": "Metadata"
          },
          "parameterOrder": [
            "cpksver"
          ],
          "path": "books/v1/dictionary/listOfflineMetadata",
          "httpMethod": "GET",
          "flatPath": "books/v1/dictionary/listOfflineMetadata",
          "description": "Returns a list of offline dictionary metadata available",
          "id": "books.dictionary.listOfflineMetadata"
        }
      }
    }
  },
  "schemas": {
    "Annotation": {
      "properties": {
        "id": {
          "description": "Id of this annotation, in the form of a GUID.",
          "type": "string"
        },
        "volumeId": {
          "description": "The volume that this annotation belongs to.",
          "type": "string"
        },
        "selfLink": {
          "type": "string",
          "description": "URL to this resource."
        },
        "afterSelectedText": {
          "description": "Anchor text after excerpt. For requests, if the user bookmarked a screen that has no flowing text on it, then this field should be empty.",
          "type": "string"
        },
        "pageIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Pages that this annotation spans."
        },
        "beforeSelectedText": {
          "type": "string",
          "description": "Anchor text before excerpt. For requests, if the user bookmarked a screen that has no flowing text on it, then this field should be empty."
        },
        "data": {
          "description": "User-created data for this annotation.",
          "type": "string"
        },
        "updated": {
          "type": "string",
          "description": "Timestamp for the last time this annotation was modified."
        },
        "layerSummary": {
          "type": "object",
          "properties": {
            "limitType": {
              "type": "string",
              "description": "Type of limitation on this layer. \"limited\" or \"unlimited\" for the \"copy\" layer."
            },
            "remainingCharacterCount": {
              "type": "integer",
              "description": "Remaining allowed characters on this layer, especially for the \"copy\" layer.",
              "format": "int32"
            },
            "allowedCharacterCount": {
              "description": "Maximum allowed characters on this layer, especially for the \"copy\" layer.",
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "created": {
          "type": "string",
          "description": "Timestamp for the created time of this annotation."
        },
        "layerId": {
          "description": "The layer this annotation is for.",
          "type": "string"
        },
        "selectedText": {
          "type": "string",
          "description": "Excerpt from the volume."
        },
        "clientVersionRanges": {
          "description": "Selection ranges sent from the client.",
          "type": "object",
          "properties": {
            "contentVersion": {
              "type": "string",
              "description": "Content version the client sent in."
            },
            "gbImageRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in GB image format for this annotation sent by client."
            },
            "cfiRange": {
              "description": "Range in CFI format for this annotation sent by client.",
              "$ref": "BooksAnnotationsRange"
            },
            "imageCfiRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in image CFI format for this annotation sent by client."
            },
            "gbTextRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in GB text format for this annotation sent by client."
            }
          }
        },
        "currentVersionRanges": {
          "type": "object",
          "properties": {
            "gbImageRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in GB image format for this annotation for version above."
            },
            "contentVersion": {
              "description": "Content version applicable to ranges below.",
              "type": "string"
            },
            "imageCfiRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in image CFI format for this annotation for version above."
            },
            "gbTextRange": {
              "description": "Range in GB text format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            },
            "cfiRange": {
              "description": "Range in CFI format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            }
          },
          "description": "Selection ranges for the most recent content version."
        },
        "deleted": {
          "type": "boolean",
          "description": "Indicates that this annotation is deleted."
        },
        "highlightStyle": {
          "description": "The highlight style for this annotation.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Annotation"
    },
    "Empty": {
      "type": "object",
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "id": "Empty"
    },
    "AnnotationsSummary": {
      "id": "AnnotationsSummary",
      "type": "object",
      "properties": {
        "layers": {
          "items": {
            "type": "object",
            "properties": {
              "limitType": {
                "type": "string"
              },
              "remainingCharacterCount": {
                "type": "integer",
                "format": "int32"
              },
              "updated": {
                "type": "string"
              },
              "allowedCharacterCount": {
                "format": "int32",
                "type": "integer"
              },
              "layerId": {
                "type": "string"
              }
            }
          },
          "type": "array"
        },
        "kind": {
          "type": "string"
        }
      }
    },
    "Seriesmembership": {
      "id": "Seriesmembership",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resorce type."
        },
        "nextPageToken": {
          "type": "string"
        },
        "member": {
          "type": "array",
          "items": {
            "$ref": "Volume"
          }
        }
      },
      "type": "object"
    },
    "Volume": {
      "type": "object",
      "properties": {
        "searchInfo": {
          "properties": {
            "textSnippet": {
              "type": "string",
              "description": "A text snippet containing the search query."
            }
          },
          "type": "object",
          "description": "Search result information related to this volume."
        },
        "recommendedInfo": {
          "description": "Recommendation related information for this volume.",
          "type": "object",
          "properties": {
            "explanation": {
              "description": "A text explaining why this volume is recommended.",
              "type": "string"
            }
          }
        },
        "selfLink": {
          "description": "URL to this resource. (In LITE projection.)",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for a volume. (In LITE projection.)"
        },
        "etag": {
          "type": "string",
          "description": "Opaque identifier for a specific version of a volume resource. (In LITE projection)"
        },
        "saleInfo": {
          "description": "Any information about a volume related to the eBookstore and/or purchaseability. This information can depend on the country where the request originates from (i.e. books may not be for sale in certain countries).",
          "type": "object",
          "properties": {
            "isEbook": {
              "description": "Whether or not this volume is an eBook (can be added to the My eBooks shelf).",
              "type": "boolean"
            },
            "listPrice": {
              "properties": {
                "currencyCode": {
                  "type": "string",
                  "description": "An ISO 4217, three-letter currency code. (In LITE projection.)"
                },
                "amount": {
                  "type": "number",
                  "format": "double",
                  "description": "Amount in the currency listed below. (In LITE projection.)"
                }
              },
              "description": "Suggested retail price. (In LITE projection.)",
              "type": "object"
            },
            "saleability": {
              "description": "Whether or not this book is available for sale or offered for free in the Google eBookstore for the country listed above. Possible values are FOR_SALE, FOR_RENTAL_ONLY, FOR_SALE_AND_RENTAL, FREE, NOT_FOR_SALE, or FOR_PREORDER.",
              "type": "string"
            },
            "country": {
              "type": "string",
              "description": "The two-letter ISO_3166-1 country code for which this sale information is valid. (In LITE projection.)"
            },
            "retailPrice": {
              "type": "object",
              "description": "The actual selling price of the book. This is the same as the suggested retail or list price unless there are offers or discounts on this volume. (In LITE projection.)",
              "properties": {
                "currencyCode": {
                  "description": "An ISO 4217, three-letter currency code. (In LITE projection.)",
                  "type": "string"
                },
                "amount": {
                  "format": "double",
                  "description": "Amount in the currency listed below. (In LITE projection.)",
                  "type": "number"
                }
              }
            },
            "buyLink": {
              "description": "URL to purchase this volume on the Google Books site. (In LITE projection)",
              "type": "string"
            },
            "offers": {
              "items": {
                "properties": {
                  "retailPrice": {
                    "description": "Offer retail (=discounted) price in Micros",
                    "properties": {
                      "currencyCode": {
                        "type": "string"
                      },
                      "amountInMicros": {
                        "type": "number",
                        "format": "double"
                      }
                    },
                    "type": "object"
                  },
                  "listPrice": {
                    "description": "Offer list (=undiscounted) price in Micros.",
                    "properties": {
                      "currencyCode": {
                        "type": "string"
                      },
                      "amountInMicros": {
                        "type": "number",
                        "format": "double"
                      }
                    },
                    "type": "object"
                  },
                  "finskyOfferType": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The finsky offer type (e.g., PURCHASE=0 RENTAL=3)"
                  },
                  "rentalDuration": {
                    "properties": {
                      "count": {
                        "type": "number",
                        "format": "double"
                      },
                      "unit": {
                        "type": "string"
                      }
                    },
                    "description": "The rental duration (for rental offers only).",
                    "type": "object"
                  },
                  "giftable": {
                    "type": "boolean",
                    "description": "Indicates whether the offer is giftable."
                  }
                },
                "type": "object"
              },
              "description": "Offers available for this volume (sales and rentals).",
              "type": "array"
            },
            "onSaleDate": {
              "type": "string",
              "description": "The date on which this book is available for sale."
            }
          }
        },
        "userInfo": {
          "type": "object",
          "properties": {
            "review": {
              "$ref": "Review",
              "description": "This user's review of this volume, if one exists."
            },
            "isUploaded": {
              "description": "Whether or not this volume was user uploaded.",
              "type": "boolean"
            },
            "rentalPeriod": {
              "description": "Period during this book is/was a valid rental.",
              "type": "object",
              "properties": {
                "endUtcSec": {
                  "type": "string",
                  "format": "int64"
                },
                "startUtcSec": {
                  "type": "string",
                  "format": "int64"
                }
              }
            },
            "isPurchased": {
              "type": "boolean",
              "description": "Whether or not this volume was purchased by the authenticated user making the request. (In LITE projection.)"
            },
            "rentalState": {
              "type": "string",
              "description": "Whether this book is an active or an expired rental."
            },
            "isFamilySharedFromUser": {
              "type": "boolean",
              "description": "Whether or not the user shared this volume with the family."
            },
            "entitlementType": {
              "type": "integer",
              "format": "int32",
              "description": "Whether this volume is purchased, sample, pd download etc."
            },
            "familySharing": {
              "type": "object",
              "properties": {
                "isSharingAllowed": {
                  "type": "boolean",
                  "description": "Whether or not this volume can be shared with the family by the user. This includes sharing eligibility of both the volume and the user. If the value is true, the user can initiate a family sharing action."
                },
                "familyRole": {
                  "type": "string",
                  "description": "The role of the user in the family."
                },
                "isSharingDisabledByFop": {
                  "type": "boolean",
                  "description": "Whether or not sharing this volume is temporarily disabled due to issues with the Family Wallet."
                }
              },
              "description": "Information on the ability to share with the family."
            },
            "isFamilySharingAllowed": {
              "description": "Deprecated: Replaced by familySharing.",
              "type": "boolean"
            },
            "isFamilySharedToUser": {
              "description": "Whether or not the user received this volume through family sharing.",
              "type": "boolean"
            },
            "userUploadedVolumeInfo": {
              "type": "object",
              "properties": {
                "processingState": {
                  "type": "string"
                }
              }
            },
            "copy": {
              "properties": {
                "updated": {
                  "type": "string"
                },
                "remainingCharacterCount": {
                  "format": "int32",
                  "type": "integer"
                },
                "limitType": {
                  "type": "string"
                },
                "allowedCharacterCount": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "description": "Copy/Paste accounting information.",
              "type": "object"
            },
            "acquiredTime": {
              "type": "string",
              "description": "Timestamp when this volume was acquired by the user. (RFC 3339 UTC date-time format) Acquiring includes purchase, user upload, receiving family sharing, etc."
            },
            "isPreordered": {
              "type": "boolean",
              "description": "Whether or not this volume was pre-ordered by the authenticated user making the request. (In LITE projection.)"
            },
            "updated": {
              "description": "Timestamp when this volume was last modified by a user action, such as a reading position update, volume purchase or writing a review. (RFC 3339 UTC date-time format).",
              "type": "string"
            },
            "readingPosition": {
              "description": "The user's current reading position in the volume, if one is available. (In LITE projection.)",
              "$ref": "ReadingPosition"
            },
            "isInMyBooks": {
              "type": "boolean",
              "description": "Whether or not this volume is currently in \"my books.\""
            },
            "isFamilySharingDisabledByFop": {
              "type": "boolean",
              "description": "Deprecated: Replaced by familySharing."
            },
            "acquisitionType": {
              "description": "How this volume was acquired.",
              "format": "int32",
              "type": "integer"
            }
          },
          "description": "User specific information related to this volume. (e.g. page this user last read or whether they purchased this book)"
        },
        "accessInfo": {
          "type": "object",
          "properties": {
            "publicDomain": {
              "description": "Whether or not this book is public domain in the country listed above.",
              "type": "boolean"
            },
            "country": {
              "description": "The two-letter ISO_3166-1 country code for which this access information is valid. (In LITE projection.)",
              "type": "string"
            },
            "driveImportedContentLink": {
              "type": "string",
              "description": "URL to the Google Drive viewer if this volume is uploaded by the user by selecting the file from Google Drive."
            },
            "textToSpeechPermission": {
              "type": "string",
              "description": "Whether text-to-speech is permitted for this volume. Values can be ALLOWED, ALLOWED_FOR_ACCESSIBILITY, or NOT_ALLOWED."
            },
            "explicitOfflineLicenseManagement": {
              "type": "boolean",
              "description": "Whether this volume requires that the client explicitly request offline download license rather than have it done automatically when loading the content, if the client supports it."
            },
            "embeddable": {
              "type": "boolean",
              "description": "Whether this volume can be embedded in a viewport using the Embedded Viewer API."
            },
            "webReaderLink": {
              "description": "URL to read this volume on the Google Books site. Link will not allow users to read non-viewable volumes.",
              "type": "string"
            },
            "quoteSharingAllowed": {
              "description": "Whether quote sharing is allowed for this volume.",
              "type": "boolean"
            },
            "epub": {
              "type": "object",
              "properties": {
                "isAvailable": {
                  "type": "boolean",
                  "description": "Is a flowing text epub available either as public domain or for purchase. (In LITE projection.)"
                },
                "downloadLink": {
                  "type": "string",
                  "description": "URL to download epub. (In LITE projection.)"
                },
                "acsTokenLink": {
                  "description": "URL to retrieve ACS token for epub download. (In LITE projection.)",
                  "type": "string"
                }
              },
              "description": "Information about epub content. (In LITE projection.)"
            },
            "viewability": {
              "type": "string",
              "description": "The read access of a volume. Possible values are PARTIAL, ALL_PAGES, NO_PAGES or UNKNOWN. This value depends on the country listed above. A value of PARTIAL means that the publisher has allowed some portion of the volume to be viewed publicly, without purchase. This can apply to eBooks as well as non-eBooks. Public domain books will always have a value of ALL_PAGES."
            },
            "pdf": {
              "properties": {
                "downloadLink": {
                  "description": "URL to download pdf. (In LITE projection.)",
                  "type": "string"
                },
                "isAvailable": {
                  "description": "Is a scanned image pdf available either as public domain or for purchase. (In LITE projection.)",
                  "type": "boolean"
                },
                "acsTokenLink": {
                  "type": "string",
                  "description": "URL to retrieve ACS token for pdf download. (In LITE projection.)"
                }
              },
              "description": "Information about pdf content. (In LITE projection.)",
              "type": "object"
            },
            "viewOrderUrl": {
              "description": "For ordered but not yet processed orders, we give a URL that can be used to go to the appropriate Google Wallet page.",
              "type": "string"
            },
            "downloadAccess": {
              "$ref": "DownloadAccessRestriction",
              "description": "Information about a volume's download license access restrictions."
            },
            "accessViewStatus": {
              "type": "string",
              "description": "Combines the access and viewability of this volume into a single status field for this user. Values can be FULL_PURCHASED, FULL_PUBLIC_DOMAIN, SAMPLE or NONE. (In LITE projection.)"
            }
          },
          "description": "Any information about a volume related to reading or obtaining that volume text. This information can depend on country (books may be public domain in one country but not in another, e.g.)."
        },
        "volumeInfo": {
          "properties": {
            "printType": {
              "type": "string",
              "description": "Type of publication of this volume. Possible values are BOOK or MAGAZINE."
            },
            "language": {
              "description": "Best language for this volume (based on content). It is the two-letter ISO 639-1 code such as 'fr', 'en', etc.",
              "type": "string"
            },
            "categories": {
              "items": {
                "type": "string"
              },
              "description": "A list of subject categories, such as \"Fiction\", \"Suspense\", etc.",
              "type": "array"
            },
            "contentVersion": {
              "type": "string",
              "description": "An identifier for the version of the volume content (text & images). (In LITE projection)"
            },
            "previewLink": {
              "description": "URL to preview this volume on the Google Books site.",
              "type": "string"
            },
            "averageRating": {
              "format": "double",
              "type": "number",
              "description": "The mean review rating for this volume. (min = 1.0, max = 5.0)"
            },
            "publishedDate": {
              "type": "string",
              "description": "Date of publication. (In LITE projection.)"
            },
            "industryIdentifiers": {
              "description": "Industry standard identifiers for this volume.",
              "items": {
                "properties": {
                  "identifier": {
                    "description": "Industry specific volume identifier.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Identifier type. Possible values are ISBN_10, ISBN_13, ISSN and OTHER.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "printedPageCount": {
              "format": "int32",
              "description": "Total number of printed pages in generated pdf representation.",
              "type": "integer"
            },
            "samplePageCount": {
              "format": "int32",
              "type": "integer",
              "description": "Total number of sample pages as per publisher metadata."
            },
            "publisher": {
              "description": "Publisher of this volume. (In LITE projection.)",
              "type": "string"
            },
            "maturityRating": {
              "type": "string"
            },
            "allowAnonLogging": {
              "type": "boolean",
              "description": "Whether anonymous logging should be allowed."
            },
            "imageLinks": {
              "properties": {
                "smallThumbnail": {
                  "description": "Image link for small thumbnail size (width of ~80 pixels). (In LITE projection)",
                  "type": "string"
                },
                "large": {
                  "description": "Image link for large size (width of ~800 pixels). (In LITE projection)",
                  "type": "string"
                },
                "thumbnail": {
                  "type": "string",
                  "description": "Image link for thumbnail size (width of ~128 pixels). (In LITE projection)"
                },
                "small": {
                  "description": "Image link for small size (width of ~300 pixels). (In LITE projection)",
                  "type": "string"
                },
                "medium": {
                  "description": "Image link for medium size (width of ~575 pixels). (In LITE projection)",
                  "type": "string"
                },
                "extraLarge": {
                  "type": "string",
                  "description": "Image link for extra large size (width of ~1280 pixels). (In LITE projection)"
                }
              },
              "type": "object",
              "description": "A list of image links for all the sizes that are available. (In LITE projection.)"
            },
            "infoLink": {
              "type": "string",
              "description": "URL to view information about this volume on the Google Books site. (In LITE projection)"
            },
            "readingModes": {
              "description": "The reading modes available for this volume.",
              "properties": {
                "image": {
                  "type": "boolean"
                },
                "text": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "pageCount": {
              "format": "int32",
              "description": "Total number of pages as per publisher metadata.",
              "type": "integer"
            },
            "ratingsCount": {
              "type": "integer",
              "format": "int32",
              "description": "The number of review ratings for this volume."
            },
            "canonicalVolumeLink": {
              "type": "string",
              "description": "Canonical URL for a volume. (In LITE projection.)"
            },
            "panelizationSummary": {
              "type": "object",
              "properties": {
                "imageBubbleVersion": {
                  "type": "string"
                },
                "containsEpubBubbles": {
                  "type": "boolean"
                },
                "epubBubbleVersion": {
                  "type": "string"
                },
                "containsImageBubbles": {
                  "type": "boolean"
                }
              },
              "description": "A top-level summary of the panelization info in this volume."
            },
            "authors": {
              "description": "The names of the authors and/or editors for this volume. (In LITE projection)",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "comicsContent": {
              "type": "boolean",
              "description": "Whether the volume has comics content."
            },
            "subtitle": {
              "description": "Volume subtitle. (In LITE projection.)",
              "type": "string"
            },
            "dimensions": {
              "description": "Physical dimensions of this volume.",
              "type": "object",
              "properties": {
                "width": {
                  "description": "Width of this volume (in cm).",
                  "type": "string"
                },
                "height": {
                  "type": "string",
                  "description": "Height or length of this volume (in cm)."
                },
                "thickness": {
                  "type": "string",
                  "description": "Thickness of this volume (in cm)."
                }
              }
            },
            "description": {
              "type": "string",
              "description": "A synopsis of the volume. The text of the description is formatted in HTML and includes simple formatting elements, such as b, i, and br tags. (In LITE projection.)"
            },
            "seriesInfo": {
              "$ref": "Volumeseriesinfo"
            },
            "title": {
              "type": "string",
              "description": "Volume title. (In LITE projection.)"
            },
            "mainCategory": {
              "type": "string",
              "description": "The main category to which this volume belongs. It will be the category from the categories list returned below that has the highest weight."
            }
          },
          "type": "object",
          "description": "General volume information."
        },
        "kind": {
          "type": "string",
          "description": "Resource type for a volume. (In LITE projection.)"
        },
        "layerInfo": {
          "type": "object",
          "description": "What layers exist in this volume and high level information about them.",
          "properties": {
            "layers": {
              "items": {
                "properties": {
                  "volumeAnnotationsVersion": {
                    "description": "The current version of this layer's volume annotations. Note that this version applies only to the data in the books.layers.volumeAnnotations.* responses. The actual annotation data is versioned separately.",
                    "type": "string"
                  },
                  "layerId": {
                    "description": "The layer id of this layer (e.g. \"geo\").",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array",
              "description": "A layer should appear here if and only if the layer exists for this book."
            }
          }
        }
      },
      "id": "Volume"
    },
    "BooksVolumesRecommendedRateResponse": {
      "type": "object",
      "properties": {
        "consistency_token": {
          "type": "string"
        }
      },
      "id": "BooksVolumesRecommendedRateResponse"
    },
    "Annotations": {
      "type": "object",
      "id": "Annotations",
      "properties": {
        "nextPageToken": {
          "description": "Token to pass in for pagination for the next page. This will not be present if this request does not have more results.",
          "type": "string"
        },
        "totalItems": {
          "type": "integer",
          "description": "Total number of annotations found. This may be greater than the number of notes returned in this response if results have been paginated.",
          "format": "int32"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "Annotation"
          },
          "description": "A list of annotations."
        }
      }
    },
    "DownloadAccessRestriction": {
      "id": "DownloadAccessRestriction",
      "properties": {
        "deviceAllowed": {
          "description": "If restricted, whether access is granted for this (user, device, volume).",
          "type": "boolean"
        },
        "maxDownloadDevices": {
          "format": "int32",
          "description": "If restricted, the maximum number of content download licenses for this volume.",
          "type": "integer"
        },
        "downloadsAcquired": {
          "type": "integer",
          "format": "int32",
          "description": "If restricted, the number of content download licenses already acquired (including the requesting client, if licensed)."
        },
        "source": {
          "type": "string",
          "description": "Client app identifier for verification. Download access and client-validation only."
        },
        "message": {
          "type": "string",
          "description": "Error/warning message."
        },
        "restricted": {
          "type": "boolean",
          "description": "Whether this volume has any download access restrictions."
        },
        "reasonCode": {
          "description": "Error/warning reason code. Additional codes may be added in the future. 0 OK 100 ACCESS_DENIED_PUBLISHER_LIMIT 101 ACCESS_DENIED_LIMIT 200 WARNING_USED_LAST_ACCESS",
          "type": "string"
        },
        "volumeId": {
          "type": "string",
          "description": "Identifies the volume for which this entry applies."
        },
        "signature": {
          "description": "Response signature.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "nonce": {
          "type": "string",
          "description": "Client nonce for verification. Download access and client-validation only."
        },
        "justAcquired": {
          "type": "boolean",
          "description": "If deviceAllowed, whether access was just acquired with this request."
        }
      },
      "type": "object"
    },
    "Metadata": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "items": {
          "type": "array",
          "description": "A list of offline dictionary metadata.",
          "items": {
            "properties": {
              "download_url": {
                "type": "string"
              },
              "encrypted_key": {
                "type": "string"
              },
              "size": {
                "format": "int64",
                "type": "string"
              },
              "version": {
                "format": "int64",
                "type": "string"
              },
              "language": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "id": "Metadata"
    },
    "ReadingPosition": {
      "id": "ReadingPosition",
      "type": "object",
      "properties": {
        "gbImagePosition": {
          "type": "string",
          "description": "Position in a volume for image-based content."
        },
        "updated": {
          "type": "string",
          "description": "Timestamp when this reading position was last updated (formatted UTC timestamp with millisecond resolution)."
        },
        "epubCfiPosition": {
          "description": "Position in an EPUB as a CFI.",
          "type": "string"
        },
        "volumeId": {
          "type": "string",
          "description": "Volume id associated with this reading position."
        },
        "pdfPosition": {
          "type": "string",
          "description": "Position in a PDF file."
        },
        "kind": {
          "description": "Resource type for a reading position.",
          "type": "string"
        },
        "gbTextPosition": {
          "description": "Position in a volume for text-based content.",
          "type": "string"
        }
      }
    },
    "Bookshelves": {
      "properties": {
        "items": {
          "description": "A list of bookshelves.",
          "items": {
            "$ref": "Bookshelf"
          },
          "type": "array"
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        }
      },
      "id": "Bookshelves",
      "type": "object"
    },
    "FamilyInfo": {
      "type": "object",
      "properties": {
        "membership": {
          "properties": {
            "role": {
              "description": "The role of the user in the family.",
              "type": "string"
            },
            "isInFamily": {
              "type": "boolean"
            },
            "ageGroup": {
              "type": "string",
              "description": "The age group of the user."
            },
            "acquirePermission": {
              "type": "string",
              "description": "Restrictions on user buying and acquiring content."
            },
            "allowedMaturityRating": {
              "description": "The maximum allowed maturity rating for the user.",
              "type": "string"
            }
          },
          "description": "Family membership info of the user that made the request.",
          "type": "object"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      },
      "id": "FamilyInfo"
    },
    "RequestAccessData": {
      "id": "RequestAccessData",
      "properties": {
        "downloadAccess": {
          "description": "A download access response.",
          "$ref": "DownloadAccessRestriction"
        },
        "concurrentAccess": {
          "$ref": "ConcurrentAccessRestriction",
          "description": "A concurrent access response."
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Series": {
      "properties": {
        "series": {
          "items": {
            "type": "object",
            "properties": {
              "isComplete": {
                "type": "boolean"
              },
              "seriesSubscriptionReleaseInfo": {
                "type": "object",
                "properties": {
                  "nextReleaseInfo": {
                    "properties": {
                      "currencyCode": {
                        "type": "string"
                      },
                      "releaseTime": {
                        "type": "string"
                      },
                      "releaseNumber": {
                        "type": "string"
                      },
                      "amountInMicros": {
                        "type": "number",
                        "format": "double"
                      }
                    },
                    "type": "object"
                  },
                  "currentReleaseInfo": {
                    "type": "object",
                    "properties": {
                      "releaseNumber": {
                        "type": "string"
                      },
                      "releaseTime": {
                        "type": "string"
                      },
                      "amountInMicros": {
                        "type": "number",
                        "format": "double"
                      },
                      "currencyCode": {
                        "type": "string"
                      }
                    }
                  },
                  "seriesSubscriptionType": {
                    "type": "string"
                  },
                  "cancelTime": {
                    "type": "string"
                  }
                }
              },
              "subscriptionId": {
                "type": "string"
              },
              "seriesId": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "bannerImageUrl": {
                "type": "string"
              },
              "eligibleForSubscription": {
                "type": "boolean"
              },
              "seriesType": {
                "type": "string"
              },
              "seriesFormatType": {
                "type": "string"
              },
              "imageUrl": {
                "type": "string"
              }
            }
          },
          "type": "array"
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        }
      },
      "id": "Series",
      "type": "object"
    },
    "Offers": {
      "type": "object",
      "id": "Offers",
      "properties": {
        "items": {
          "description": "A list of offers.",
          "type": "array",
          "items": {
            "properties": {
              "items": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "author": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "coverUrl": {
                      "type": "string"
                    },
                    "volumeId": {
                      "type": "string"
                    },
                    "canonicalVolumeLink": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                }
              },
              "gservicesKey": {
                "type": "string"
              },
              "artUrl": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      }
    },
    "BooksAnnotationsRange": {
      "properties": {
        "endOffset": {
          "description": "The offset from the ending position.",
          "type": "string"
        },
        "endPosition": {
          "type": "string",
          "description": "The ending position for the range."
        },
        "startPosition": {
          "description": "The starting position for the range.",
          "type": "string"
        },
        "startOffset": {
          "type": "string",
          "description": "The offset from the starting position."
        }
      },
      "id": "BooksAnnotationsRange",
      "type": "object"
    },
    "Bookshelf": {
      "id": "Bookshelf",
      "type": "object",
      "properties": {
        "access": {
          "description": "Whether this bookshelf is PUBLIC or PRIVATE.",
          "type": "string"
        },
        "volumeCount": {
          "format": "int32",
          "description": "Number of volumes in this bookshelf.",
          "type": "integer"
        },
        "updated": {
          "description": "Last modified time of this bookshelf (formatted UTC timestamp with millisecond resolution).",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Description of this bookshelf."
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "description": "Id of this bookshelf, only unique by user."
        },
        "kind": {
          "description": "Resource type for bookshelf metadata.",
          "type": "string"
        },
        "title": {
          "type": "string",
          "description": "Title of this bookshelf."
        },
        "volumesLastUpdated": {
          "type": "string",
          "description": "Last time a volume was added or removed from this bookshelf (formatted UTC timestamp with millisecond resolution)."
        },
        "selfLink": {
          "type": "string",
          "description": "URL to this resource."
        },
        "created": {
          "type": "string",
          "description": "Created time for this bookshelf (formatted UTC timestamp with millisecond resolution)."
        }
      }
    },
    "Layersummary": {
      "properties": {
        "volumeId": {
          "description": "The volume id this resource is for.",
          "type": "string"
        },
        "updated": {
          "description": "Timestamp for the last time an item in this layer was updated. (RFC 3339 UTC date-time format).",
          "type": "string"
        },
        "layerId": {
          "description": "The layer id for this summary.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Resource Type"
        },
        "selfLink": {
          "description": "URL to this resource.",
          "type": "string"
        },
        "dataCount": {
          "description": "The number of data items for this layer.",
          "format": "int32",
          "type": "integer"
        },
        "contentVersion": {
          "type": "string",
          "description": "The content version this resource is for."
        },
        "volumeAnnotationsVersion": {
          "description": "The current version of this layer's volume annotations. Note that this version applies only to the data in the books.layers.volumeAnnotations.* responses. The actual annotation data is versioned separately.",
          "type": "string"
        },
        "annotationsDataLink": {
          "type": "string",
          "description": "Link to get data for this annotation."
        },
        "annotationTypes": {
          "description": "The list of annotation types contained for this layer.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "annotationsLink": {
          "type": "string",
          "description": "The link to get the annotations for this layer."
        },
        "id": {
          "type": "string",
          "description": "Unique id of this layer summary."
        },
        "annotationCount": {
          "description": "The number of annotations for this layer.",
          "type": "integer",
          "format": "int32"
        }
      },
      "id": "Layersummary",
      "type": "object"
    },
    "Dictlayerdata": {
      "id": "Dictlayerdata",
      "type": "object",
      "properties": {
        "dict": {
          "type": "object",
          "properties": {
            "words": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "source": {
                    "properties": {
                      "attribution": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "description": "The words with different meanings but not related words, e.g. \"go\" (game) and \"go\" (verb).",
                    "type": "object"
                  },
                  "derivatives": {
                    "items": {
                      "properties": {
                        "source": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string"
                            },
                            "attribution": {
                              "type": "string"
                            }
                          }
                        },
                        "text": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "examples": {
                    "items": {
                      "properties": {
                        "source": {
                          "properties": {
                            "url": {
                              "type": "string"
                            },
                            "attribution": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "text": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "senses": {
                    "items": {
                      "type": "object",
                      "properties": {
                        "source": {
                          "type": "object",
                          "properties": {
                            "attribution": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          }
                        },
                        "syllabification": {
                          "type": "string"
                        },
                        "conjugations": {
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            }
                          },
                          "type": "array"
                        },
                        "pronunciationUrl": {
                          "type": "string"
                        },
                        "synonyms": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "text": {
                                "type": "string"
                              },
                              "source": {
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "type": "string"
                                  },
                                  "attribution": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "type": "object"
                          }
                        },
                        "definitions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "definition": {
                                "type": "string"
                              },
                              "examples": {
                                "items": {
                                  "properties": {
                                    "source": {
                                      "properties": {
                                        "attribution": {
                                          "type": "string"
                                        },
                                        "url": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              }
                            }
                          }
                        },
                        "partOfSpeech": {
                          "type": "string"
                        },
                        "pronunciation": {
                          "type": "string"
                        }
                      }
                    },
                    "type": "array"
                  }
                }
              }
            },
            "source": {
              "properties": {
                "url": {
                  "type": "string"
                },
                "attribution": {
                  "type": "string"
                }
              },
              "description": "The source, url and attribution for this dictionary data.",
              "type": "object"
            }
          }
        },
        "common": {
          "properties": {
            "title": {
              "type": "string",
              "description": "The display title and localized canonical name to use when searching for this entity on Google search."
            }
          },
          "type": "object"
        },
        "kind": {
          "type": "string"
        }
      }
    },
    "Volume2": {
      "type": "object",
      "id": "Volume2",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "items": {
          "type": "array",
          "description": "A list of volumes.",
          "items": {
            "$ref": "Volume"
          }
        },
        "nextPageToken": {
          "type": "string"
        }
      }
    },
    "Notification": {
      "properties": {
        "reason": {
          "type": "string"
        },
        "show_notification_settings_action": {
          "type": "boolean"
        },
        "timeToExpireMs": {
          "format": "int64",
          "type": "string"
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "doc_type": {
          "type": "string"
        },
        "dont_show_notification": {
          "type": "boolean"
        },
        "title": {
          "type": "string"
        },
        "is_document_mature": {
          "type": "boolean"
        },
        "notification_type": {
          "type": "string"
        },
        "crmExperimentIds": {
          "items": {
            "type": "string",
            "format": "int64"
          },
          "description": "The list of crm experiment ids.",
          "type": "array"
        },
        "body": {
          "type": "string"
        },
        "doc_id": {
          "type": "string"
        },
        "targetUrl": {
          "type": "string"
        },
        "notificationGroup": {
          "type": "string"
        },
        "iconUrl": {
          "type": "string"
        },
        "pcampaign_id": {
          "type": "string"
        }
      },
      "type": "object",
      "id": "Notification"
    },
    "Category": {
      "properties": {
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "items": {
          "type": "array",
          "description": "A list of onboarding categories.",
          "items": {
            "type": "object",
            "properties": {
              "categoryId": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "badgeUrl": {
                "type": "string"
              }
            }
          }
        }
      },
      "type": "object",
      "id": "Category"
    },
    "Usersettings": {
      "id": "Usersettings",
      "type": "object",
      "properties": {
        "notification": {
          "type": "object",
          "properties": {
            "moreFromAuthors": {
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "moreFromSeries": {
              "type": "object",
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              }
            },
            "priceDrop": {
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "rewardExpirations": {
              "type": "object",
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              }
            },
            "matchMyInterests": {
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "notesExport": {
          "type": "object",
          "properties": {
            "isEnabled": {
              "type": "boolean"
            },
            "folderName": {
              "type": "string"
            }
          },
          "description": "User settings in sub-objects, each for different purposes."
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        }
      }
    },
    "Review": {
      "id": "Review",
      "type": "object",
      "properties": {
        "title": {
          "description": "Title for this review.",
          "type": "string"
        },
        "type": {
          "description": "Source type for this review. Possible values are EDITORIAL, WEB_USER or GOOGLE_USER.",
          "type": "string"
        },
        "volumeId": {
          "description": "Volume that this review is for.",
          "type": "string"
        },
        "author": {
          "properties": {
            "displayName": {
              "description": "Name of this person.",
              "type": "string"
            }
          },
          "description": "Author of this review.",
          "type": "object"
        },
        "content": {
          "type": "string",
          "description": "Review text."
        },
        "kind": {
          "type": "string",
          "description": "Resource type for a review."
        },
        "date": {
          "description": "Date of this review.",
          "type": "string"
        },
        "rating": {
          "type": "string",
          "description": "Star rating for this review. Possible values are ONE, TWO, THREE, FOUR, FIVE or NOT_RATED."
        },
        "source": {
          "description": "Information regarding the source of this review, when the review is not from a Google Books user.",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL of the source of the review."
            },
            "description": {
              "description": "Name of the source.",
              "type": "string"
            },
            "extraDescription": {
              "description": "Extra text about the source of the review.",
              "type": "string"
            }
          }
        },
        "fullTextUrl": {
          "type": "string",
          "description": "URL for the full review text, for reviews gathered from the web."
        }
      }
    },
    "Discoveryclusters": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "Resorce type.",
          "type": "string"
        },
        "clusters": {
          "items": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "totalVolumes": {
                "format": "int32",
                "type": "integer"
              },
              "banner_with_content_container": {
                "type": "object",
                "properties": {
                  "fillColorArgb": {
                    "type": "string"
                  },
                  "imageUrl": {
                    "type": "string"
                  },
                  "textColorArgb": {
                    "type": "string"
                  },
                  "moreButtonUrl": {
                    "type": "string"
                  },
                  "maskColorArgb": {
                    "type": "string"
                  },
                  "moreButtonText": {
                    "type": "string"
                  }
                }
              },
              "uid": {
                "type": "string"
              },
              "volumes": {
                "type": "array",
                "items": {
                  "$ref": "Volume"
                }
              },
              "subTitle": {
                "type": "string"
              }
            }
          },
          "type": "array"
        },
        "totalClusters": {
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "Discoveryclusters"
    },
    "Layersummaries": {
      "properties": {
        "items": {
          "type": "array",
          "description": "A list of layer summary items.",
          "items": {
            "$ref": "Layersummary"
          }
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "totalItems": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of layer summaries found."
        }
      },
      "type": "object",
      "id": "Layersummaries"
    },
    "ConcurrentAccessRestriction": {
      "type": "object",
      "properties": {
        "maxConcurrentDevices": {
          "format": "int32",
          "type": "integer",
          "description": "The maximum number of concurrent access licenses for this volume."
        },
        "restricted": {
          "description": "Whether this volume has any concurrent access restrictions.",
          "type": "boolean"
        },
        "timeWindowSeconds": {
          "format": "int32",
          "description": "Time in seconds for license auto-expiration.",
          "type": "integer"
        },
        "message": {
          "type": "string",
          "description": "Error/warning message."
        },
        "deviceAllowed": {
          "description": "Whether access is granted for this (user, device, volume).",
          "type": "boolean"
        },
        "nonce": {
          "type": "string",
          "description": "Client nonce for verification. Download access and client-validation only."
        },
        "reasonCode": {
          "type": "string",
          "description": "Error/warning reason code."
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "signature": {
          "description": "Response signature.",
          "type": "string"
        },
        "volumeId": {
          "type": "string",
          "description": "Identifies the volume for which this entry applies."
        },
        "source": {
          "description": "Client app identifier for verification. Download access and client-validation only.",
          "type": "string"
        }
      },
      "id": "ConcurrentAccessRestriction"
    },
    "Annotationsdata": {
      "type": "object",
      "id": "Annotationsdata",
      "properties": {
        "totalItems": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of volume annotations found."
        },
        "items": {
          "description": "A list of Annotation Data.",
          "type": "array",
          "items": {
            "$ref": "GeoAnnotationdata"
          }
        },
        "kind": {
          "description": "Resource type",
          "type": "string"
        },
        "nextPageToken": {
          "description": "Token to pass in for pagination for the next page. This will not be present if this request does not have more results.",
          "type": "string"
        }
      }
    },
    "DownloadAccesses": {
      "type": "object",
      "properties": {
        "downloadAccessList": {
          "description": "A list of download access responses.",
          "type": "array",
          "items": {
            "$ref": "DownloadAccessRestriction"
          }
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        }
      },
      "id": "DownloadAccesses"
    },
    "DictionaryAnnotationdata": {
      "type": "object",
      "properties": {
        "encodedData": {
          "format": "byte",
          "description": "Base64 encoded data for this annotation data.",
          "type": "string"
        },
        "volumeId": {
          "type": "string",
          "description": "The volume id for this data. *"
        },
        "annotationType": {
          "type": "string",
          "description": "The type of annotation this data is for."
        },
        "layerId": {
          "type": "string",
          "description": "The Layer id for this data. *"
        },
        "data": {
          "description": "JSON encoded data for this dictionary annotation data. Emitted with name 'data' in JSON output. Either this or geo_data will be populated.",
          "$ref": "Dictlayerdata"
        },
        "updated": {
          "description": "Timestamp for the last time this data was updated. (RFC 3339 UTC date-time format).",
          "type": "string"
        },
        "id": {
          "description": "Unique id for this annotation data.",
          "type": "string"
        },
        "kind": {
          "description": "Resource Type",
          "type": "string"
        },
        "selfLink": {
          "type": "string",
          "description": "URL for this resource. *"
        }
      },
      "id": "DictionaryAnnotationdata"
    },
    "Volumeseriesinfo": {
      "id": "Volumeseriesinfo",
      "type": "object",
      "properties": {
        "shortSeriesBookTitle": {
          "type": "string",
          "description": "Short book title in the context of the series."
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "volumeSeries": {
          "items": {
            "type": "object",
            "properties": {
              "seriesId": {
                "description": "The series id.",
                "type": "string"
              },
              "seriesBookType": {
                "type": "string",
                "description": "The book type in the context of series. Examples - Single Issue, Collection Edition, etc."
              },
              "issue": {
                "description": "List of issues. Applicable only for Collection Edition and Omnibus.",
                "type": "array",
                "items": {
                  "properties": {
                    "issueDisplayNumber": {
                      "type": "string"
                    },
                    "issueOrderNumber": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "type": "object"
                }
              },
              "orderNumber": {
                "description": "The book order number in the series.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "type": "array"
        },
        "bookDisplayNumber": {
          "description": "The display number string. This should be used only for display purposes and the actual sequence should be inferred from the below orderNumber.",
          "type": "string"
        }
      }
    },
    "BooksCloudloadingResource": {
      "properties": {
        "title": {
          "type": "string"
        },
        "volumeId": {
          "type": "string"
        },
        "processingState": {
          "type": "string"
        },
        "author": {
          "type": "string"
        }
      },
      "id": "BooksCloudloadingResource",
      "type": "object"
    },
    "Volumes": {
      "properties": {
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "totalItems": {
          "format": "int32",
          "description": "Total number of volumes found. This might be greater than the number of volumes returned in this response if results have been paginated.",
          "type": "integer"
        },
        "items": {
          "description": "A list of volumes.",
          "type": "array",
          "items": {
            "$ref": "Volume"
          }
        }
      },
      "type": "object",
      "id": "Volumes"
    },
    "GeoAnnotationdata": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique id for this annotation data."
        },
        "data": {
          "description": "JSON encoded data for this geo annotation data. Emitted with name 'data' in JSON output. Either this or dict_data will be populated.",
          "$ref": "Geolayerdata"
        },
        "updated": {
          "description": "Timestamp for the last time this data was updated. (RFC 3339 UTC date-time format).",
          "type": "string"
        },
        "volumeId": {
          "type": "string",
          "description": "The volume id for this data. *"
        },
        "encodedData": {
          "type": "string",
          "format": "byte",
          "description": "Base64 encoded data for this annotation data."
        },
        "selfLink": {
          "description": "URL for this resource. *",
          "type": "string"
        },
        "layerId": {
          "description": "The Layer id for this data. *",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Resource Type"
        },
        "annotationType": {
          "description": "The type of annotation this data is for.",
          "type": "string"
        }
      },
      "id": "GeoAnnotationdata",
      "type": "object"
    },
    "Volumeannotations": {
      "id": "Volumeannotations",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Resource type",
          "type": "string"
        },
        "version": {
          "description": "The version string for all of the volume annotations in this layer (not just the ones in this response). Note: the version string doesn't apply to the annotation data, just the information in this response (e.g. the location of annotations in the book).",
          "type": "string"
        },
        "items": {
          "type": "array",
          "description": "A list of volume annotations.",
          "items": {
            "$ref": "Volumeannotation"
          }
        },
        "totalItems": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of volume annotations found."
        },
        "nextPageToken": {
          "description": "Token to pass in for pagination for the next page. This will not be present if this request does not have more results.",
          "type": "string"
        }
      }
    },
    "Volumeannotation": {
      "type": "object",
      "properties": {
        "volumeId": {
          "type": "string",
          "description": "The Volume this annotation is for."
        },
        "annotationDataId": {
          "description": "The annotation data id for this volume annotation.",
          "type": "string"
        },
        "annotationType": {
          "description": "The type of annotation this is.",
          "type": "string"
        },
        "selfLink": {
          "type": "string",
          "description": "URL to this resource."
        },
        "layerId": {
          "description": "The Layer this annotation is for.",
          "type": "string"
        },
        "id": {
          "description": "Unique id of this volume annotation.",
          "type": "string"
        },
        "contentRanges": {
          "properties": {
            "gbImageRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in GB image format for this annotation for version above."
            },
            "cfiRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in CFI format for this annotation for version above."
            },
            "contentVersion": {
              "type": "string",
              "description": "Content version applicable to ranges below."
            },
            "gbTextRange": {
              "description": "Range in GB text format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            }
          },
          "type": "object",
          "description": "The content ranges to identify the selected text."
        },
        "annotationDataLink": {
          "type": "string",
          "description": "Link to get data for this annotation."
        },
        "updated": {
          "description": "Timestamp for the last time this anntoation was updated. (RFC 3339 UTC date-time format).",
          "type": "string"
        },
        "pageIds": {
          "description": "Pages the annotation spans.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deleted": {
          "description": "Indicates that this annotation is deleted.",
          "type": "boolean"
        },
        "data": {
          "type": "string",
          "description": "Data for this annotation."
        },
        "selectedText": {
          "description": "Excerpt from the volume.",
          "type": "string"
        },
        "kind": {
          "description": "Resource Type",
          "type": "string"
        }
      },
      "id": "Volumeannotation"
    },
    "Geolayerdata": {
      "properties": {
        "geo": {
          "properties": {
            "longitude": {
              "type": "number",
              "description": "The longitude of the location.",
              "format": "double"
            },
            "cachePolicy": {
              "type": "string",
              "description": "The cache policy active for this data. EX: UNRESTRICTED, RESTRICTED, NEVER"
            },
            "countryCode": {
              "description": "The country code of the location.",
              "type": "string"
            },
            "boundary": {
              "items": {
                "type": "string"
              },
              "description": "The boundary of the location as a set of loops containing pairs of latitude, longitude coordinates.",
              "type": "array"
            },
            "mapType": {
              "description": "The type of map that should be used for this location. EX: HYBRID, ROADMAP, SATELLITE, TERRAIN",
              "type": "string"
            },
            "zoom": {
              "type": "integer",
              "description": "The Zoom level to use for the map. Zoom levels between 0 (the lowest zoom level, in which the entire world can be seen on one map) to 21+ (down to individual buildings). See: https: //developers.google.com/maps/documentation/staticmaps/#Zoomlevels",
              "format": "int32"
            },
            "viewport": {
              "properties": {
                "lo": {
                  "properties": {
                    "latitude": {
                      "format": "double",
                      "type": "number"
                    },
                    "longitude": {
                      "type": "number",
                      "format": "double"
                    }
                  },
                  "type": "object"
                },
                "hi": {
                  "properties": {
                    "longitude": {
                      "format": "double",
                      "type": "number"
                    },
                    "latitude": {
                      "format": "double",
                      "type": "number"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object",
              "description": "The viewport for showing this location. This is a latitude, longitude rectangle."
            },
            "latitude": {
              "description": "The latitude of the location.",
              "type": "number",
              "format": "double"
            }
          },
          "type": "object"
        },
        "kind": {
          "type": "string"
        },
        "common": {
          "type": "object",
          "properties": {
            "lang": {
              "description": "The language of the information url and description.",
              "type": "string"
            },
            "snippet": {
              "type": "string",
              "description": "The description for this location."
            },
            "title": {
              "description": "The display title and localized canonical name to use when searching for this entity on Google search.",
              "type": "string"
            },
            "snippetUrl": {
              "description": "The URL for information for this location. Ex: wikipedia link.",
              "type": "string"
            },
            "previewImageUrl": {
              "description": "The URL for the preview image information.",
              "type": "string"
            }
          }
        }
      },
      "type": "object",
      "id": "Geolayerdata"
    }
  },
  "ownerName": "Google",
  "batchPath": "batch",
  "parameters": {
    "alt": {
      "description": "Data format for response.",
      "type": "string",
      "default": "json",
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "prettyPrint": {
      "type": "boolean",
      "default": "true",
      "location": "query",
      "description": "Returns response with indentations and line breaks."
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    }
  },
  "protocol": "rest",
  "discoveryVersion": "v1",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "version": "v1",
  "documentationLink": "https://code.google.com/apis/books/docs/v1/getting_started.html",
  "description": "The Google Books API allows clients to access the Google Books repository.",
  "kind": "discovery#restDescription",
  "name": "books",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/books": {
          "description": "Manage your books"
        }
      }
    }
  },
  "rootUrl": "https://books.googleapis.com/",
  "id": "books:v1",
  "revision": "20220803",
  "title": "Books API",
  "mtlsRootUrl": "https://books.mtls.googleapis.com/",
  "servicePath": "",
  "ownerDomain": "google.com",
  "basePath": "",
  "version_module": true
}
