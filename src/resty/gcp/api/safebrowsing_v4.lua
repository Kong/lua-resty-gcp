local decode = require("cjson").new().decode
return assert(decode([===[
{ "mtlsRootUrl": "https://safebrowsing.mtls.googleapis.com/", "protocol": "rest", "title": "Safe Browsing API", "kind": "discovery#restDescription", "baseUrl": "https://safebrowsing.googleapis.com/", "basePath": "", "ownerName": "Google", "documentationLink": "https://developers.google.com/safe-browsing/", "parameters": { "upload_protocol": { "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").", "location": "query", "type": "string" }, "callback": { "location": "query", "type": "string", "description": "JSONP" }, "$.xgafv": { "location": "query", "type": "string", "enum": [ "1", "2" ], "enumDescriptions": [ "v1 error format", "v2 error format" ], "description": "V1 error format." }, "access_token": { "description": "OAuth access token.", "type": "string", "location": "query" }, "alt": { "enumDescriptions": [ "Responses with Content-Type of application/json", "Media download with context-dependent Content-Type", "Responses with Content-Type of application/x-protobuf" ], "location": "query", "enum": [ "json", "media", "proto" ], "description": "Data format for response.", "default": "json", "type": "string" }, "fields": { "location": "query", "type": "string", "description": "Selector specifying which fields to include in a partial response." }, "oauth_token": { "type": "string", "description": "OAuth 2.0 token for the current user.", "location": "query" }, "uploadType": { "type": "string", "location": "query", "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")." }, "prettyPrint": { "location": "query", "type": "boolean", "default": "true", "description": "Returns response with indentations and line breaks." }, "quotaUser": { "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", "location": "query", "type": "string" }, "key": { "location": "query", "type": "string", "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token." } }, "description": "Enables client applications to check web resources (most commonly URLs) against Google-generated lists of unsafe web resources. The Safe Browsing APIs are for non-commercial use only. If you need to use APIs to detect malicious URLs for commercial purposes – meaning “for sale or revenue-generating purposes” – please refer to the Web Risk API.", "schemas": { "GoogleSecuritySafebrowsingV4RiceDeltaEncoding": { "type": "object", "description": "The Rice-Golomb encoded data. Used for sending compressed 4-byte hashes or compressed removal indices.", "properties": { "numEntries": { "format": "int32", "type": "integer", "description": "The number of entries that are delta encoded in the encoded data. If only a single integer was encoded, this will be zero and the single value will be stored in `first_value`." }, "riceParameter": { "format": "int32", "description": "The Golomb-Rice parameter, which is a number between 2 and 28. This field is missing (that is, zero) if `num_entries` is zero.", "type": "integer" }, "firstValue": { "type": "string", "description": "The offset of the first entry in the encoded data, or, if only a single integer was encoded, that single integer's value. If the field is empty or missing, assume zero.", "format": "int64" }, "encodedData": { "description": "The encoded deltas that are encoded using the Golomb-Rice coder.", "format": "byte", "type": "string" } }, "id": "GoogleSecuritySafebrowsingV4RiceDeltaEncoding" }, "GoogleSecuritySafebrowsingV4FetchThreatListUpdatesResponse": { "id": "GoogleSecuritySafebrowsingV4FetchThreatListUpdatesResponse", "properties": { "listUpdateResponses": { "type": "array", "description": "The list updates requested by the clients. The number of responses here may be less than the number of requests sent by clients. This is the case, for example, if the server has no updates for a particular list.", "items": { "$ref": "GoogleSecuritySafebrowsingV4FetchThreatListUpdatesResponseListUpdateResponse" } }, "minimumWaitDuration": { "description": "The minimum duration the client must wait before issuing any update request. If this field is not set clients may update as soon as they want.", "format": "google-duration", "type": "string" } }, "type": "object" }, "GoogleSecuritySafebrowsingV4ThreatHitThreatSource": { "id": "GoogleSecuritySafebrowsingV4ThreatHitThreatSource", "description": "A single resource related to a threat hit.", "properties": { "remoteIp": { "description": "The remote IP of the resource in ASCII format. Either IPv4 or IPv6.", "type": "string" }, "referrer": { "description": "Referrer of the resource. Only set if the referrer is available.", "type": "string" }, "type": { "type": "string", "enumDescriptions": [ "Unknown.", "The URL that matched the threat list (for which GetFullHash returned a valid hash).", "The final top-level URL of the tab that the client was browsing when the match occurred.", "A redirect URL that was fetched before hitting the final TAB_URL.", "A resource loaded within the final TAB_URL." ], "description": "The type of source reported.", "enum": [ "THREAT_SOURCE_TYPE_UNSPECIFIED", "MATCHING_URL", "TAB_URL", "TAB_REDIRECT", "TAB_RESOURCE" ] }, "url": { "description": "The URL of the resource.", "type": "string" } }, "type": "object" }, "GoogleSecuritySafebrowsingV4RawHashes": { "description": "The uncompressed threat entries in hash format of a particular prefix length. Hashes can be anywhere from 4 to 32 bytes in size. A large majority are 4 bytes, but some hashes are lengthened if they collide with the hash of a popular URL. Used for sending ThreatEntrySet to clients that do not support compression, or when sending non-4-byte hashes to clients that do support compression.", "id": "GoogleSecuritySafebrowsingV4RawHashes", "properties": { "prefixSize": { "type": "integer", "description": "The number of bytes for each prefix encoded below. This field can be anywhere from 4 (shortest prefix) to 32 (full SHA256 hash).", "format": "int32" }, "rawHashes": { "description": "The hashes, in binary format, concatenated into one long string. Hashes are sorted in lexicographic order. For JSON API users, hashes are base64-encoded.", "type": "string", "format": "byte" } }, "type": "object" }, "GoogleSecuritySafebrowsingV4FindThreatMatchesResponse": { "type": "object", "properties": { "matches": { "description": "The threat list matches.", "type": "array", "items": { "$ref": "GoogleSecuritySafebrowsingV4ThreatMatch" } } }, "id": "GoogleSecuritySafebrowsingV4FindThreatMatchesResponse" }, "GoogleSecuritySafebrowsingV4ThreatMatch": { "properties": { "threat": { "description": "The threat matching this threat.", "$ref": "GoogleSecuritySafebrowsingV4ThreatEntry" }, "platformType": { "type": "string", "description": "The platform type matching this threat.", "enumDescriptions": [ "Unknown platform.", "Threat posed to Windows.", "Threat posed to Linux.", "Threat posed to Android.", "Threat posed to OS X.", "Threat posed to iOS.", "Threat posed to at least one of the defined platforms.", "Threat posed to all defined platforms.", "Threat posed to Chrome." ], "enum": [ "PLATFORM_TYPE_UNSPECIFIED", "WINDOWS", "LINUX", "ANDROID", "OSX", "IOS", "ANY_PLATFORM", "ALL_PLATFORMS", "CHROME" ] }, "threatEntryMetadata": { "$ref": "GoogleSecuritySafebrowsingV4ThreatEntryMetadata", "description": "Optional metadata associated with this threat." }, "threatType": { "enum": [ "THREAT_TYPE_UNSPECIFIED", "MALWARE", "SOCIAL_ENGINEERING", "UNWANTED_SOFTWARE", "POTENTIALLY_HARMFUL_APPLICATION", "SOCIAL_ENGINEERING_INTERNAL", "API_ABUSE", "MALICIOUS_BINARY", "CSD_WHITELIST", "CSD_DOWNLOAD_WHITELIST", "CLIENT_INCIDENT", "CLIENT_INCIDENT_WHITELIST", "APK_MALWARE_OFFLINE", "SUBRESOURCE_FILTER", "SUSPICIOUS", "TRICK_TO_BILL", "HIGH_CONFIDENCE_ALLOWLIST", "ACCURACY_TIPS", "SOCIAL_ENGINEERING_LOWER_PRECISION" ], "type": "string", "description": "The threat type matching this threat.", "enumDescriptions": [ "Unknown.", "Malware threat type.", "Social engineering threat type.", "Unwanted software threat type.", "Potentially harmful application threat type.", "Social engineering threat type for internal use.", "API abuse threat type.", "Malicious binary threat type.", "Client side detection whitelist threat type.", "Client side download detection whitelist threat type.", "Client incident threat type.", "Whitelist used when detecting client incident threats. This enum was never launched and should be re-used for the next list.", "List used for offline APK checks in PAM.", "Patterns to be used for activating the subresource filter. Interstitial will not be shown for patterns from this list.", "Entities that are suspected to present a threat.", "Trick-to-bill threat list.", "Safe list to ship hashes of known safe URL expressions.", "List from the Jigsaw team to show accuracy tips in Chrome. See go/sb-accuracytips.", "Lower precision phishing list for WebRisk. See go/lower-precision-blocklists-enterprise." ] }, "threatEntryType": { "enum": [ "THREAT_ENTRY_TYPE_UNSPECIFIED", "URL", "EXECUTABLE", "IP_RANGE", "CHROME_EXTENSION", "FILENAME", "CERT" ], "type": "string", "enumDescriptions": [ "Unspecified.", "A URL.", "An executable program.", "An IP range.", "Chrome extension.", "Filename.", "CERT" ], "description": "The threat entry type matching this threat." }, "cacheDuration": { "type": "string", "description": "The cache lifetime for the returned match. Clients must not cache this response for more than this duration to avoid false positives.", "format": "google-duration" } }, "id": "GoogleSecuritySafebrowsingV4ThreatMatch", "type": "object", "description": "A match when checking a threat entry in the Safe Browsing threat lists." }, "GoogleSecuritySafebrowsingV4FetchThreatListUpdatesRequestListUpdateRequest": { "properties": { "platformType": { "type": "string", "enumDescriptions": [ "Unknown platform.", "Threat posed to Windows.", "Threat posed to Linux.", "Threat posed to Android.", "Threat posed to OS X.", "Threat posed to iOS.", "Threat posed to at least one of the defined platforms.", "Threat posed to all defined platforms.", "Threat posed to Chrome." ], "enum": [ "PLATFORM_TYPE_UNSPECIFIED", "WINDOWS", "LINUX", "ANDROID", "OSX", "IOS", "ANY_PLATFORM", "ALL_PLATFORMS", "CHROME" ], "description": "The type of platform at risk by entries present in the list." }, "threatType": { "enum": [ "THREAT_TYPE_UNSPECIFIED", "MALWARE", "SOCIAL_ENGINEERING", "UNWANTED_SOFTWARE", "POTENTIALLY_HARMFUL_APPLICATION", "SOCIAL_ENGINEERING_INTERNAL", "API_ABUSE", "MALICIOUS_BINARY", "CSD_WHITELIST", "CSD_DOWNLOAD_WHITELIST", "CLIENT_INCIDENT", "CLIENT_INCIDENT_WHITELIST", "APK_MALWARE_OFFLINE", "SUBRESOURCE_FILTER", "SUSPICIOUS", "TRICK_TO_BILL", "HIGH_CONFIDENCE_ALLOWLIST", "ACCURACY_TIPS", "SOCIAL_ENGINEERING_LOWER_PRECISION" ], "enumDescriptions": [ "Unknown.", "Malware threat type.", "Social engineering threat type.", "Unwanted software threat type.", "Potentially harmful application threat type.", "Social engineering threat type for internal use.", "API abuse threat type.", "Malicious binary threat type.", "Client side detection whitelist threat type.", "Client side download detection whitelist threat type.", "Client incident threat type.", "Whitelist used when detecting client incident threats. This enum was never launched and should be re-used for the next list.", "List used for offline APK checks in PAM.", "Patterns to be used for activating the subresource filter. Interstitial will not be shown for patterns from this list.", "Entities that are suspected to present a threat.", "Trick-to-bill threat list.", "Safe list to ship hashes of known safe URL expressions.", "List from the Jigsaw team to show accuracy tips in Chrome. See go/sb-accuracytips.", "Lower precision phishing list for WebRisk. See go/lower-precision-blocklists-enterprise." ], "description": "The type of threat posed by entries present in the list.", "type": "string" }, "state": { "type": "string", "format": "byte", "description": "The current state of the client for the requested list (the encrypted client state that was received from the last successful list update)." }, "threatEntryType": { "enum": [ "THREAT_ENTRY_TYPE_UNSPECIFIED", "URL", "EXECUTABLE", "IP_RANGE", "CHROME_EXTENSION", "FILENAME", "CERT" ], "enumDescriptions": [ "Unspecified.", "A URL.", "An executable program.", "An IP range.", "Chrome extension.", "Filename.", "CERT" ], "type": "string", "description": "The types of entries present in the list." }, "constraints": { "description": "The constraints associated with this request.", "$ref": "GoogleSecuritySafebrowsingV4FetchThreatListUpdatesRequestListUpdateRequestConstraints" } }, "description": "A single list update request.", "type": "object", "id": "GoogleSecuritySafebrowsingV4FetchThreatListUpdatesRequestListUpdateRequest" }, "GoogleSecuritySafebrowsingV4ThreatHitUserInfo": { "properties": { "regionCode": { "description": "The UN M.49 region code associated with the user's location.", "type": "string" }, "userId": { "type": "string", "description": "Unique user identifier defined by the client.", "format": "byte" } }, "id": "GoogleSecuritySafebrowsingV4ThreatHitUserInfo", "description": "Details about the user that encountered the threat.", "type": "object" }, "GoogleSecuritySafebrowsingV4ThreatEntrySet": { "description": "A set of threats that should be added or removed from a client's local database.", "id": "GoogleSecuritySafebrowsingV4ThreatEntrySet", "type": "object", "properties": { "compressionType": { "enumDescriptions": [ "Unknown.", "Raw, uncompressed data.", "Rice-Golomb encoded data." ], "enum": [ "COMPRESSION_TYPE_UNSPECIFIED", "RAW", "RICE" ], "type": "string", "description": "The compression type for the entries in this set." }, "riceIndices": { "$ref": "GoogleSecuritySafebrowsingV4RiceDeltaEncoding", "description": "The encoded local, lexicographically-sorted list indices, using a Golomb-Rice encoding. Used for sending compressed removal indices. The removal indices (uint32) are sorted in ascending order, then delta encoded and stored as encoded_data." }, "rawHashes": { "description": "The raw SHA256-formatted entries.", "$ref": "GoogleSecuritySafebrowsingV4RawHashes" }, "riceHashes": { "$ref": "GoogleSecuritySafebrowsingV4RiceDeltaEncoding", "description": "The encoded 4-byte prefixes of SHA256-formatted entries, using a Golomb-Rice encoding. The hashes are converted to uint32, sorted in ascending order, then delta encoded and stored as encoded_data." }, "rawIndices": { "$ref": "GoogleSecuritySafebrowsingV4RawIndices", "description": "The raw removal indices for a local list." } } }, "GoogleProtobufEmpty": { "type": "object", "id": "GoogleProtobufEmpty", "properties": {}, "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }" }, "GoogleSecuritySafebrowsingV4FindThreatMatchesRequest": { "id": "GoogleSecuritySafebrowsingV4FindThreatMatchesRequest", "type": "object", "properties": { "client": { "$ref": "GoogleSecuritySafebrowsingV4ClientInfo", "description": "The client metadata." }, "threatInfo": { "description": "The lists and entries to be checked for matches.", "$ref": "GoogleSecuritySafebrowsingV4ThreatInfo" } }, "description": "Request to check entries against lists." }, "GoogleSecuritySafebrowsingV4ClientInfo": { "id": "GoogleSecuritySafebrowsingV4ClientInfo", "type": "object", "description": "The client metadata associated with Safe Browsing API requests.", "properties": { "clientId": { "description": "A client ID that (hopefully) uniquely identifies the client implementation of the Safe Browsing API.", "type": "string" }, "clientVersion": { "description": "The version of the client implementation.", "type": "string" } } }, "GoogleSecuritySafebrowsingV4ThreatEntryMetadata": { "id": "GoogleSecuritySafebrowsingV4ThreatEntryMetadata", "properties": { "entries": { "description": "The metadata entries.", "items": { "$ref": "GoogleSecuritySafebrowsingV4ThreatEntryMetadataMetadataEntry" }, "type": "array" } }, "type": "object", "description": "The metadata associated with a specific threat entry. The client is expected to know the metadata key/value pairs associated with each threat type." }, "GoogleSecuritySafebrowsingV4Checksum": { "id": "GoogleSecuritySafebrowsingV4Checksum", "properties": { "sha256": { "type": "string", "description": "The SHA256 hash of the client state; that is, of the sorted list of all hashes present in the database.", "format": "byte" } }, "description": "The expected state of a client's local database.", "type": "object" }, "GoogleSecuritySafebrowsingV4FetchThreatListUpdatesRequestListUpdateRequestConstraints": { "properties": { "maxDatabaseEntries": { "description": "Sets the maximum number of entries that the client is willing to have in the local database for the specified list. This should be a power of 2 between 2**10 and 2**20. If zero, no database size limit is set.", "type": "integer", "format": "int32" }, "deviceLocation": { "description": "A client's physical location, expressed as a ISO 31166-1 alpha-2 region code.", "type": "string" }, "maxUpdateEntries": { "type": "integer", "description": "The maximum size in number of entries. The update will not contain more entries than this value. This should be a power of 2 between 2**10 and 2**20. If zero, no update size limit is set.", "format": "int32" }, "region": { "description": "Requests the list for a specific geographic location. If not set the server may pick that value based on the user's IP address. Expects ISO 3166-1 alpha-2 format.", "type": "string" }, "supportedCompressions": { "type": "array", "items": { "enum": [ "COMPRESSION_TYPE_UNSPECIFIED", "RAW", "RICE" ], "enumDescriptions": [ "Unknown.", "Raw, uncompressed data.", "Rice-Golomb encoded data." ], "type": "string" }, "description": "The compression types supported by the client." }, "language": { "type": "string", "description": "Requests the lists for a specific language. Expects ISO 639 alpha-2 format." } }, "id": "GoogleSecuritySafebrowsingV4FetchThreatListUpdatesRequestListUpdateRequestConstraints", "description": "The constraints for this update.", "type": "object" }, "GoogleSecuritySafebrowsingV4ThreatEntry": { "type": "object", "id": "GoogleSecuritySafebrowsingV4ThreatEntry", "properties": { "digest": { "description": "The digest of an executable in SHA256 format. The API supports both binary and hex digests. For JSON requests, digests are base64-encoded.", "type": "string", "format": "byte" }, "url": { "description": "A URL.", "type": "string" }, "hash": { "type": "string", "format": "byte", "description": "A hash prefix, consisting of the most significant 4-32 bytes of a SHA256 hash. This field is in binary format. For JSON requests, hashes are base64-encoded." } }, "description": "An individual threat; for example, a malicious URL or its hash representation. Only one of these fields should be set." }, "GoogleSecuritySafebrowsingV4ListThreatListsResponse": { "type": "object", "properties": { "threatLists": { "description": "The lists available for download by the client.", "type": "array", "items": { "$ref": "GoogleSecuritySafebrowsingV4ThreatListDescriptor" } } }, "id": "GoogleSecuritySafebrowsingV4ListThreatListsResponse" }, "GoogleSecuritySafebrowsingV4FetchThreatListUpdatesResponseListUpdateResponse": { "type": "object", "description": "An update to an individual list.", "properties": { "removals": { "type": "array", "description": "A set of entries to remove from a local threat type's list. In practice, this field is empty or contains exactly one ThreatEntrySet.", "items": { "$ref": "GoogleSecuritySafebrowsingV4ThreatEntrySet" } }, "platformType": { "enumDescriptions": [ "Unknown platform.", "Threat posed to Windows.", "Threat posed to Linux.", "Threat posed to Android.", "Threat posed to OS X.", "Threat posed to iOS.", "Threat posed to at least one of the defined platforms.", "Threat posed to all defined platforms.", "Threat posed to Chrome." ], "description": "The platform type for which data is returned.", "enum": [ "PLATFORM_TYPE_UNSPECIFIED", "WINDOWS", "LINUX", "ANDROID", "OSX", "IOS", "ANY_PLATFORM", "ALL_PLATFORMS", "CHROME" ], "type": "string" }, "responseType": { "enum": [ "RESPONSE_TYPE_UNSPECIFIED", "PARTIAL_UPDATE", "FULL_UPDATE" ], "enumDescriptions": [ "Unknown.", "Partial updates are applied to the client's existing local database.", "Full updates replace the client's entire local database. This means that either the client was seriously out-of-date or the client is believed to be corrupt." ], "type": "string", "description": "The type of response. This may indicate that an action is required by the client when the response is received." }, "additions": { "description": "A set of entries to add to a local threat type's list. Repeated to allow for a combination of compressed and raw data to be sent in a single response.", "items": { "$ref": "GoogleSecuritySafebrowsingV4ThreatEntrySet" }, "type": "array" }, "threatEntryType": { "description": "The format of the threats.", "enum": [ "THREAT_ENTRY_TYPE_UNSPECIFIED", "URL", "EXECUTABLE", "IP_RANGE", "CHROME_EXTENSION", "FILENAME", "CERT" ], "enumDescriptions": [ "Unspecified.", "A URL.", "An executable program.", "An IP range.", "Chrome extension.", "Filename.", "CERT" ], "type": "string" }, "checksum": { "description": "The expected SHA256 hash of the client state; that is, of the sorted list of all hashes present in the database after applying the provided update. If the client state doesn't match the expected state, the client must disregard this update and retry later.", "$ref": "GoogleSecuritySafebrowsingV4Checksum" }, "threatType": { "description": "The threat type for which data is returned.", "enumDescriptions": [ "Unknown.", "Malware threat type.", "Social engineering threat type.", "Unwanted software threat type.", "Potentially harmful application threat type.", "Social engineering threat type for internal use.", "API abuse threat type.", "Malicious binary threat type.", "Client side detection whitelist threat type.", "Client side download detection whitelist threat type.", "Client incident threat type.", "Whitelist used when detecting client incident threats. This enum was never launched and should be re-used for the next list.", "List used for offline APK checks in PAM.", "Patterns to be used for activating the subresource filter. Interstitial will not be shown for patterns from this list.", "Entities that are suspected to present a threat.", "Trick-to-bill threat list.", "Safe list to ship hashes of known safe URL expressions.", "List from the Jigsaw team to show accuracy tips in Chrome. See go/sb-accuracytips.", "Lower precision phishing list for WebRisk. See go/lower-precision-blocklists-enterprise." ], "enum": [ "THREAT_TYPE_UNSPECIFIED", "MALWARE", "SOCIAL_ENGINEERING", "UNWANTED_SOFTWARE", "POTENTIALLY_HARMFUL_APPLICATION", "SOCIAL_ENGINEERING_INTERNAL", "API_ABUSE", "MALICIOUS_BINARY", "CSD_WHITELIST", "CSD_DOWNLOAD_WHITELIST", "CLIENT_INCIDENT", "CLIENT_INCIDENT_WHITELIST", "APK_MALWARE_OFFLINE", "SUBRESOURCE_FILTER", "SUSPICIOUS", "TRICK_TO_BILL", "HIGH_CONFIDENCE_ALLOWLIST", "ACCURACY_TIPS", "SOCIAL_ENGINEERING_LOWER_PRECISION" ], "type": "string" }, "newClientState": { "type": "string", "description": "The new client state, in encrypted format. Opaque to clients.", "format": "byte" } }, "id": "GoogleSecuritySafebrowsingV4FetchThreatListUpdatesResponseListUpdateResponse" }, "GoogleSecuritySafebrowsingV4FetchThreatListUpdatesRequest": { "type": "object", "properties": { "client": { "$ref": "GoogleSecuritySafebrowsingV4ClientInfo", "description": "The client metadata." }, "listUpdateRequests": { "type": "array", "items": { "$ref": "GoogleSecuritySafebrowsingV4FetchThreatListUpdatesRequestListUpdateRequest" }, "description": "The requested threat list updates." } }, "id": "GoogleSecuritySafebrowsingV4FetchThreatListUpdatesRequest", "description": "Describes a Safe Browsing API update request. Clients can request updates for multiple lists in a single request. The server may not respond to all requests, if the server has no updates for that list. NOTE: Field index 2 is unused. NEXT: 5" }, "GoogleSecuritySafebrowsingV4ThreatInfo": { "properties": { "platformTypes": { "type": "array", "description": "The platform types to be checked.", "items": { "enumDescriptions": [ "Unknown platform.", "Threat posed to Windows.", "Threat posed to Linux.", "Threat posed to Android.", "Threat posed to OS X.", "Threat posed to iOS.", "Threat posed to at least one of the defined platforms.", "Threat posed to all defined platforms.", "Threat posed to Chrome." ], "enum": [ "PLATFORM_TYPE_UNSPECIFIED", "WINDOWS", "LINUX", "ANDROID", "OSX", "IOS", "ANY_PLATFORM", "ALL_PLATFORMS", "CHROME" ], "type": "string" } }, "threatEntryTypes": { "type": "array", "description": "The entry types to be checked.", "items": { "enumDescriptions": [ "Unspecified.", "A URL.", "An executable program.", "An IP range.", "Chrome extension.", "Filename.", "CERT" ], "enum": [ "THREAT_ENTRY_TYPE_UNSPECIFIED", "URL", "EXECUTABLE", "IP_RANGE", "CHROME_EXTENSION", "FILENAME", "CERT" ], "type": "string" } }, "threatEntries": { "type": "array", "description": "The threat entries to be checked.", "items": { "$ref": "GoogleSecuritySafebrowsingV4ThreatEntry" } }, "threatTypes": { "items": { "enumDescriptions": [ "Unknown.", "Malware threat type.", "Social engineering threat type.", "Unwanted software threat type.", "Potentially harmful application threat type.", "Social engineering threat type for internal use.", "API abuse threat type.", "Malicious binary threat type.", "Client side detection whitelist threat type.", "Client side download detection whitelist threat type.", "Client incident threat type.", "Whitelist used when detecting client incident threats. This enum was never launched and should be re-used for the next list.", "List used for offline APK checks in PAM.", "Patterns to be used for activating the subresource filter. Interstitial will not be shown for patterns from this list.", "Entities that are suspected to present a threat.", "Trick-to-bill threat list.", "Safe list to ship hashes of known safe URL expressions.", "List from the Jigsaw team to show accuracy tips in Chrome. See go/sb-accuracytips.", "Lower precision phishing list for WebRisk. See go/lower-precision-blocklists-enterprise." ], "type": "string", "enum": [ "THREAT_TYPE_UNSPECIFIED", "MALWARE", "SOCIAL_ENGINEERING", "UNWANTED_SOFTWARE", "POTENTIALLY_HARMFUL_APPLICATION", "SOCIAL_ENGINEERING_INTERNAL", "API_ABUSE", "MALICIOUS_BINARY", "CSD_WHITELIST", "CSD_DOWNLOAD_WHITELIST", "CLIENT_INCIDENT", "CLIENT_INCIDENT_WHITELIST", "APK_MALWARE_OFFLINE", "SUBRESOURCE_FILTER", "SUSPICIOUS", "TRICK_TO_BILL", "HIGH_CONFIDENCE_ALLOWLIST", "ACCURACY_TIPS", "SOCIAL_ENGINEERING_LOWER_PRECISION" ] }, "description": "The threat types to be checked.", "type": "array" } }, "description": "The information regarding one or more threats that a client submits when checking for matches in threat lists.", "type": "object", "id": "GoogleSecuritySafebrowsingV4ThreatInfo" }, "GoogleSecuritySafebrowsingV4ThreatEntryMetadataMetadataEntry": { "description": "A single metadata entry.", "id": "GoogleSecuritySafebrowsingV4ThreatEntryMetadataMetadataEntry", "type": "object", "properties": { "value": { "format": "byte", "type": "string", "description": "The metadata entry value. For JSON requests, the value is base64-encoded." }, "key": { "type": "string", "description": "The metadata entry key. For JSON requests, the key is base64-encoded.", "format": "byte" } } }, "GoogleSecuritySafebrowsingV4FindFullHashesResponse": { "id": "GoogleSecuritySafebrowsingV4FindFullHashesResponse", "properties": { "matches": { "description": "The full hashes that matched the requested prefixes.", "type": "array", "items": { "$ref": "GoogleSecuritySafebrowsingV4ThreatMatch" } }, "negativeCacheDuration": { "description": "For requested entities that did not match the threat list, how long to cache the response.", "type": "string", "format": "google-duration" }, "minimumWaitDuration": { "description": "The minimum duration the client must wait before issuing any find hashes request. If this field is not set, clients can issue a request as soon as they want.", "type": "string", "format": "google-duration" } }, "type": "object" }, "GoogleSecuritySafebrowsingV4ThreatHit": { "id": "GoogleSecuritySafebrowsingV4ThreatHit", "type": "object", "properties": { "resources": { "items": { "$ref": "GoogleSecuritySafebrowsingV4ThreatHitThreatSource" }, "description": "The resources related to the threat hit.", "type": "array" }, "clientInfo": { "$ref": "GoogleSecuritySafebrowsingV4ClientInfo", "description": "Client-reported identification." }, "platformType": { "enumDescriptions": [ "Unknown platform.", "Threat posed to Windows.", "Threat posed to Linux.", "Threat posed to Android.", "Threat posed to OS X.", "Threat posed to iOS.", "Threat posed to at least one of the defined platforms.", "Threat posed to all defined platforms.", "Threat posed to Chrome." ], "enum": [ "PLATFORM_TYPE_UNSPECIFIED", "WINDOWS", "LINUX", "ANDROID", "OSX", "IOS", "ANY_PLATFORM", "ALL_PLATFORMS", "CHROME" ], "type": "string", "description": "The platform type reported." }, "userInfo": { "description": "Details about the user that encountered the threat.", "$ref": "GoogleSecuritySafebrowsingV4ThreatHitUserInfo" }, "threatType": { "type": "string", "enum": [ "THREAT_TYPE_UNSPECIFIED", "MALWARE", "SOCIAL_ENGINEERING", "UNWANTED_SOFTWARE", "POTENTIALLY_HARMFUL_APPLICATION", "SOCIAL_ENGINEERING_INTERNAL", "API_ABUSE", "MALICIOUS_BINARY", "CSD_WHITELIST", "CSD_DOWNLOAD_WHITELIST", "CLIENT_INCIDENT", "CLIENT_INCIDENT_WHITELIST", "APK_MALWARE_OFFLINE", "SUBRESOURCE_FILTER", "SUSPICIOUS", "TRICK_TO_BILL", "HIGH_CONFIDENCE_ALLOWLIST", "ACCURACY_TIPS", "SOCIAL_ENGINEERING_LOWER_PRECISION" ], "description": "The threat type reported.", "enumDescriptions": [ "Unknown.", "Malware threat type.", "Social engineering threat type.", "Unwanted software threat type.", "Potentially harmful application threat type.", "Social engineering threat type for internal use.", "API abuse threat type.", "Malicious binary threat type.", "Client side detection whitelist threat type.", "Client side download detection whitelist threat type.", "Client incident threat type.", "Whitelist used when detecting client incident threats. This enum was never launched and should be re-used for the next list.", "List used for offline APK checks in PAM.", "Patterns to be used for activating the subresource filter. Interstitial will not be shown for patterns from this list.", "Entities that are suspected to present a threat.", "Trick-to-bill threat list.", "Safe list to ship hashes of known safe URL expressions.", "List from the Jigsaw team to show accuracy tips in Chrome. See go/sb-accuracytips.", "Lower precision phishing list for WebRisk. See go/lower-precision-blocklists-enterprise." ] }, "entry": { "description": "The threat entry responsible for the hit. Full hash should be reported for hash-based hits.", "$ref": "GoogleSecuritySafebrowsingV4ThreatEntry" } } }, "GoogleSecuritySafebrowsingV4ThreatListDescriptor": { "properties": { "threatType": { "enumDescriptions": [ "Unknown.", "Malware threat type.", "Social engineering threat type.", "Unwanted software threat type.", "Potentially harmful application threat type.", "Social engineering threat type for internal use.", "API abuse threat type.", "Malicious binary threat type.", "Client side detection whitelist threat type.", "Client side download detection whitelist threat type.", "Client incident threat type.", "Whitelist used when detecting client incident threats. This enum was never launched and should be re-used for the next list.", "List used for offline APK checks in PAM.", "Patterns to be used for activating the subresource filter. Interstitial will not be shown for patterns from this list.", "Entities that are suspected to present a threat.", "Trick-to-bill threat list.", "Safe list to ship hashes of known safe URL expressions.", "List from the Jigsaw team to show accuracy tips in Chrome. See go/sb-accuracytips.", "Lower precision phishing list for WebRisk. See go/lower-precision-blocklists-enterprise." ], "description": "The threat type posed by the list's entries.", "enum": [ "THREAT_TYPE_UNSPECIFIED", "MALWARE", "SOCIAL_ENGINEERING", "UNWANTED_SOFTWARE", "POTENTIALLY_HARMFUL_APPLICATION", "SOCIAL_ENGINEERING_INTERNAL", "API_ABUSE", "MALICIOUS_BINARY", "CSD_WHITELIST", "CSD_DOWNLOAD_WHITELIST", "CLIENT_INCIDENT", "CLIENT_INCIDENT_WHITELIST", "APK_MALWARE_OFFLINE", "SUBRESOURCE_FILTER", "SUSPICIOUS", "TRICK_TO_BILL", "HIGH_CONFIDENCE_ALLOWLIST", "ACCURACY_TIPS", "SOCIAL_ENGINEERING_LOWER_PRECISION" ], "type": "string" }, "threatEntryType": { "type": "string", "enumDescriptions": [ "Unspecified.", "A URL.", "An executable program.", "An IP range.", "Chrome extension.", "Filename.", "CERT" ], "enum": [ "THREAT_ENTRY_TYPE_UNSPECIFIED", "URL", "EXECUTABLE", "IP_RANGE", "CHROME_EXTENSION", "FILENAME", "CERT" ], "description": "The entry types contained in the list." }, "platformType": { "type": "string", "description": "The platform type targeted by the list's entries.", "enumDescriptions": [ "Unknown platform.", "Threat posed to Windows.", "Threat posed to Linux.", "Threat posed to Android.", "Threat posed to OS X.", "Threat posed to iOS.", "Threat posed to at least one of the defined platforms.", "Threat posed to all defined platforms.", "Threat posed to Chrome." ], "enum": [ "PLATFORM_TYPE_UNSPECIFIED", "WINDOWS", "LINUX", "ANDROID", "OSX", "IOS", "ANY_PLATFORM", "ALL_PLATFORMS", "CHROME" ] } }, "description": "Describes an individual threat list. A list is defined by three parameters: the type of threat posed, the type of platform targeted by the threat, and the type of entries in the list.", "type": "object", "id": "GoogleSecuritySafebrowsingV4ThreatListDescriptor" }, "GoogleSecuritySafebrowsingV4FindFullHashesRequest": { "id": "GoogleSecuritySafebrowsingV4FindFullHashesRequest", "type": "object", "properties": { "client": { "$ref": "GoogleSecuritySafebrowsingV4ClientInfo", "description": "The client metadata." }, "threatInfo": { "description": "The lists and hashes to be checked.", "$ref": "GoogleSecuritySafebrowsingV4ThreatInfo" }, "clientStates": { "description": "The current client states for each of the client's local threat lists.", "items": { "type": "string", "format": "byte" }, "type": "array" }, "apiClient": { "description": "Client metadata associated with callers of higher-level APIs built on top of the client's implementation.", "$ref": "GoogleSecuritySafebrowsingV4ClientInfo" } }, "description": "Request to return full hashes matched by the provided hash prefixes." }, "GoogleSecuritySafebrowsingV4RawIndices": { "properties": { "indices": { "items": { "format": "int32", "type": "integer" }, "description": "The indices to remove from a lexicographically-sorted local list.", "type": "array" } }, "description": "A set of raw indices to remove from a local list.", "type": "object", "id": "GoogleSecuritySafebrowsingV4RawIndices" } }, "ownerDomain": "google.com", "resources": { "encodedUpdates": { "methods": { "get": { "httpMethod": "GET", "response": { "$ref": "GoogleSecuritySafebrowsingV4FetchThreatListUpdatesResponse" }, "parameterOrder": [ "encodedRequest" ], "flatPath": "v4/encodedUpdates/{encodedRequest}", "description": "", "path": "v4/encodedUpdates/{encodedRequest}", "id": "safebrowsing.encodedUpdates.get", "parameters": { "clientId": { "location": "query", "description": "A client ID that uniquely identifies the client implementation of the Safe Browsing API.", "type": "string" }, "encodedRequest": { "type": "string", "format": "byte", "required": true, "location": "path", "description": "A serialized FetchThreatListUpdatesRequest proto." }, "clientVersion": { "location": "query", "type": "string", "description": "The version of the client implementation." } } } } }, "threatMatches": { "methods": { "find": { "httpMethod": "POST", "parameterOrder": [], "parameters": {}, "flatPath": "v4/threatMatches:find", "description": "Finds the threat entries that match the Safe Browsing lists.", "path": "v4/threatMatches:find", "id": "safebrowsing.threatMatches.find", "request": { "$ref": "GoogleSecuritySafebrowsingV4FindThreatMatchesRequest" }, "response": { "$ref": "GoogleSecuritySafebrowsingV4FindThreatMatchesResponse" } } } }, "threatListUpdates": { "methods": { "fetch": { "response": { "$ref": "GoogleSecuritySafebrowsingV4FetchThreatListUpdatesResponse" }, "path": "v4/threatListUpdates:fetch", "httpMethod": "POST", "request": { "$ref": "GoogleSecuritySafebrowsingV4FetchThreatListUpdatesRequest" }, "flatPath": "v4/threatListUpdates:fetch", "parameterOrder": [], "id": "safebrowsing.threatListUpdates.fetch", "description": "Fetches the most recent threat list updates. A client can request updates for multiple lists at once.", "parameters": {} } } }, "fullHashes": { "methods": { "find": { "response": { "$ref": "GoogleSecuritySafebrowsingV4FindFullHashesResponse" }, "id": "safebrowsing.fullHashes.find", "parameters": {}, "flatPath": "v4/fullHashes:find", "request": { "$ref": "GoogleSecuritySafebrowsingV4FindFullHashesRequest" }, "httpMethod": "POST", "parameterOrder": [], "description": "Finds the full hashes that match the requested hash prefixes.", "path": "v4/fullHashes:find" } } }, "threatLists": { "methods": { "list": { "flatPath": "v4/threatLists", "httpMethod": "GET", "parameters": {}, "path": "v4/threatLists", "parameterOrder": [], "description": "Lists the Safe Browsing threat lists available for download.", "id": "safebrowsing.threatLists.list", "response": { "$ref": "GoogleSecuritySafebrowsingV4ListThreatListsResponse" } } } }, "threatHits": { "methods": { "create": { "parameterOrder": [], "httpMethod": "POST", "path": "v4/threatHits", "parameters": {}, "flatPath": "v4/threatHits", "request": { "$ref": "GoogleSecuritySafebrowsingV4ThreatHit" }, "description": "Reports a Safe Browsing threat list hit to Google. Only projects with TRUSTED_REPORTER visibility can use this method.", "id": "safebrowsing.threatHits.create", "response": { "$ref": "GoogleProtobufEmpty" } } } }, "encodedFullHashes": { "methods": { "get": { "id": "safebrowsing.encodedFullHashes.get", "description": "", "path": "v4/encodedFullHashes/{encodedRequest}", "parameters": { "encodedRequest": { "location": "path", "required": true, "type": "string", "description": "A serialized FindFullHashesRequest proto.", "format": "byte" }, "clientVersion": { "description": "The version of the client implementation.", "type": "string", "location": "query" }, "clientId": { "type": "string", "description": "A client ID that (hopefully) uniquely identifies the client implementation of the Safe Browsing API.", "location": "query" } }, "flatPath": "v4/encodedFullHashes/{encodedRequest}", "parameterOrder": [ "encodedRequest" ], "httpMethod": "GET", "response": { "$ref": "GoogleSecuritySafebrowsingV4FindFullHashesResponse" } } } } }, "servicePath": "", "id": "safebrowsing:v4", "revision": "20220711", "rootUrl": "https://safebrowsing.googleapis.com/", "batchPath": "batch", "icons": { "x32": "http://www.google.com/images/icons/product/search-32.gif", "x16": "http://www.google.com/images/icons/product/search-16.gif" }, "version_module": true, "canonicalName": "Safebrowsing", "fullyEncodeReservedExpansion": true, "name": "safebrowsing", "version": "v4", "discoveryVersion": "v1" }
]===]))
