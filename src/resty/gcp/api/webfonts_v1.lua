local decode = require("cjson").new().decode
return assert(decode([===[
{ "documentationLink": "https://developers.google.com/fonts/docs/developer_api", "name": "webfonts", "ownerName": "Google", "kind": "discovery#restDescription", "basePath": "", "id": "webfonts:v1", "servicePath": "", "canonicalName": "Webfonts", "mtlsRootUrl": "https://webfonts.mtls.googleapis.com/", "parameters": { "quotaUser": { "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", "location": "query", "type": "string" }, "fields": { "location": "query", "type": "string", "description": "Selector specifying which fields to include in a partial response." }, "callback": { "location": "query", "type": "string", "description": "JSONP" }, "key": { "type": "string", "location": "query", "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token." }, "uploadType": { "type": "string", "location": "query", "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")." }, "oauth_token": { "description": "OAuth 2.0 token for the current user.", "type": "string", "location": "query" }, "alt": { "description": "Data format for response.", "default": "json", "enumDescriptions": [ "Responses with Content-Type of application/json", "Media download with context-dependent Content-Type", "Responses with Content-Type of application/x-protobuf" ], "location": "query", "type": "string", "enum": [ "json", "media", "proto" ] }, "access_token": { "location": "query", "description": "OAuth access token.", "type": "string" }, "$.xgafv": { "location": "query", "type": "string", "enumDescriptions": [ "v1 error format", "v2 error format" ], "description": "V1 error format.", "enum": [ "1", "2" ] }, "prettyPrint": { "location": "query", "default": "true", "type": "boolean", "description": "Returns response with indentations and line breaks." }, "upload_protocol": { "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").", "type": "string", "location": "query" } }, "description": "The Google Web Fonts Developer API lets you retrieve information about web fonts served by Google.", "title": "Web Fonts Developer API", "rootUrl": "https://webfonts.googleapis.com/", "discoveryVersion": "v1", "revision": "20220613", "version": "v1", "ownerDomain": "google.com", "baseUrl": "https://webfonts.googleapis.com/", "protocol": "rest", "icons": { "x32": "http://www.google.com/images/icons/product/search-32.gif", "x16": "http://www.google.com/images/icons/product/search-16.gif" }, "batchPath": "batch", "resources": { "webfonts": { "methods": { "list": { "parameters": { "sort": { "location": "query", "type": "string", "description": "Enables sorting of the list.", "enumDescriptions": [ "No sorting specified, use the default sorting method.", "Sort alphabetically", "Sort by date added", "Sort by popularity", "Sort by number of styles", "Sort by trending" ], "enum": [ "SORT_UNDEFINED", "ALPHA", "DATE", "POPULARITY", "STYLE", "TRENDING" ] } }, "parameterOrder": [], "id": "webfonts.webfonts.list", "flatPath": "v1/webfonts", "path": "v1/webfonts", "description": "Retrieves the list of fonts currently served by the Google Fonts Developer API.", "response": { "$ref": "WebfontList" }, "httpMethod": "GET" } } } }, "schemas": { "WebfontList": { "id": "WebfontList", "properties": { "kind": { "type": "string", "description": "This kind represents a list of webfont objects in the webfonts service." }, "items": { "type": "array", "items": { "$ref": "Webfont" }, "description": "The list of fonts currently served by the Google Fonts API." } }, "type": "object", "description": "Response containing the list of fonts currently served by the Google Fonts API." }, "Webfont": { "id": "Webfont", "type": "object", "properties": { "subsets": { "items": { "type": "string" }, "type": "array", "description": "The scripts supported by the font." }, "lastModified": { "description": "The date (format \"yyyy-MM-dd\") the font was modified for the last time.", "type": "string" }, "kind": { "description": "This kind represents a webfont object in the webfonts service.", "type": "string" }, "version": { "type": "string", "description": "The font version." }, "files": { "description": "The font files (with all supported scripts) for each one of the available variants, as a key : value map.", "type": "object", "additionalProperties": { "type": "string" } }, "family": { "type": "string", "description": "The name of the font." }, "variants": { "items": { "type": "string" }, "type": "array", "description": "The available variants for the font." }, "category": { "description": "The category of the font.", "type": "string" } }, "description": "Metadata describing a family of fonts." } } }
]===]))
