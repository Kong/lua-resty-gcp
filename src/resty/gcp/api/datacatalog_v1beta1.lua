local decode = require("cjson").new().decode
return assert(decode([===[
{ "auth": { "oauth2": { "scopes": { "https://www.googleapis.com/auth/cloud-platform": { "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account." } } } }, "discoveryVersion": "v1", "baseUrl": "https://datacatalog.googleapis.com/", "fullyEncodeReservedExpansion": true, "ownerDomain": "google.com", "mtlsRootUrl": "https://datacatalog.mtls.googleapis.com/", "revision": "20220624", "version_module": true, "canonicalName": "Data Catalog", "name": "datacatalog", "ownerName": "Google", "id": "datacatalog:v1beta1", "description": "A fully managed and highly scalable data discovery and metadata management service. ", "parameters": { "$.xgafv": { "type": "string", "location": "query", "enum": [ "1", "2" ], "enumDescriptions": [ "v1 error format", "v2 error format" ], "description": "V1 error format." }, "fields": { "description": "Selector specifying which fields to include in a partial response.", "location": "query", "type": "string" }, "uploadType": { "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", "location": "query", "type": "string" }, "key": { "location": "query", "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "type": "string" }, "alt": { "default": "json", "description": "Data format for response.", "enum": [ "json", "media", "proto" ], "enumDescriptions": [ "Responses with Content-Type of application/json", "Media download with context-dependent Content-Type", "Responses with Content-Type of application/x-protobuf" ], "type": "string", "location": "query" }, "callback": { "description": "JSONP", "type": "string", "location": "query" }, "upload_protocol": { "type": "string", "location": "query", "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")." }, "access_token": { "type": "string", "description": "OAuth access token.", "location": "query" }, "prettyPrint": { "description": "Returns response with indentations and line breaks.", "type": "boolean", "default": "true", "location": "query" }, "oauth_token": { "description": "OAuth 2.0 token for the current user.", "location": "query", "type": "string" }, "quotaUser": { "location": "query", "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", "type": "string" } }, "version": "v1beta1", "basePath": "", "icons": { "x16": "http://www.google.com/images/icons/product/search-16.gif", "x32": "http://www.google.com/images/icons/product/search-32.gif" }, "schemas": { "GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec": { "type": "object", "description": "Spec for a group of BigQuery tables with name pattern `[prefix]YYYYMMDD`. Context: https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding", "id": "GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec", "properties": { "shardCount": { "format": "int64", "description": "Output only. Total number of shards.", "readOnly": true, "type": "string" }, "tablePrefix": { "description": "Output only. The table name prefix of the shards. The name of any given shard is `[table_prefix]YYYYMMDD`, for example, for shard `MyTable20180101`, the `table_prefix` is `MyTable`.", "readOnly": true, "type": "string" }, "dataset": { "readOnly": true, "type": "string", "description": "Output only. The Data Catalog resource name of the dataset entry the current table belongs to, for example, `projects/{project_id}/locations/{location}/entrygroups/{entry_group_id}/entries/{entry_id}`." } } }, "GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldRequest": { "id": "GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldRequest", "description": "Request message for RenameTagTemplateField.", "properties": { "newTagTemplateFieldId": { "type": "string", "description": "Required. The new ID of this tag template field. For example, `my_new_field`." } }, "type": "object" }, "GoogleCloudDatacatalogV1beta1ImportTaxonomiesRequest": { "type": "object", "description": "Request message for ImportTaxonomies.", "properties": { "inlineSource": { "description": "Inline source used for taxonomies to be imported.", "$ref": "GoogleCloudDatacatalogV1beta1InlineSource" } }, "id": "GoogleCloudDatacatalogV1beta1ImportTaxonomiesRequest" }, "Binding": { "description": "Associates `members`, or principals, with a `role`.", "id": "Binding", "type": "object", "properties": { "members": { "type": "array", "items": { "type": "string" }, "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. " }, "condition": { "$ref": "Expr", "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)." }, "role": { "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.", "type": "string" } } }, "GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope": { "description": "The criteria that select the subspace used for query matching.", "type": "object", "properties": { "includeProjectIds": { "type": "array", "items": { "type": "string" }, "description": "The list of project IDs to search within. To learn more about the distinction between project names/IDs/numbers, go to https://cloud.google.com/docs/overview/#projects." }, "includeGcpPublicDatasets": { "type": "boolean", "description": "If `true`, include Google Cloud Platform (GCP) public datasets in the search results. Info on GCP public datasets is available at https://cloud.google.com/public-datasets/. By default, GCP public datasets are excluded." }, "includeOrgIds": { "items": { "type": "string" }, "description": "The list of organization IDs to search within. To find your organization ID, follow instructions in https://cloud.google.com/resource-manager/docs/creating-managing-organization.", "type": "array" }, "restrictedLocations": { "description": "Optional. The list of locations to search within. 1. If empty, search will be performed in all locations; 2. If any of the locations are NOT in the valid locations list, error will be returned; 3. Otherwise, search only the given locations for matching results. Typical usage is to leave this field empty. When a location is unreachable as returned in the `SearchCatalogResponse.unreachable` field, users can repeat the search request with this parameter set to get additional information on the error. Valid locations: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh asia-east1 LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh asia-east2 LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh asia-northeast1 LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh asia-northeast2 LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh asia-northeast3 LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh asia-south1 LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh asia-southeast1 LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh australia-southeast1 LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh eu LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh europe-north1 LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh europe-west1 LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh europe-west2 LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh europe-west3 LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh europe-west4 LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh europe-west6 LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh global LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh northamerica-northeast1 LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh southamerica-east1 LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh us LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh us-central1 LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh us-east1 LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh us-east4 LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh us-west1 LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh us-west2", "items": { "type": "string" }, "type": "array" } }, "id": "GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope" }, "GoogleCloudDatacatalogV1beta1TagFieldEnumValue": { "properties": { "displayName": { "description": "The display name of the enum value.", "type": "string" } }, "type": "object", "description": "Holds an enum value.", "id": "GoogleCloudDatacatalogV1beta1TagFieldEnumValue" }, "GoogleCloudDatacatalogV1beta1SerializedTaxonomy": { "properties": { "description": { "description": "Description of the serialized taxonomy. The length of the description is limited to 2000 bytes when encoded in UTF-8. If not set, defaults to an empty description.", "type": "string" }, "activatedPolicyTypes": { "items": { "enumDescriptions": [ "Unspecified policy type.", "Fine grained access control policy, which enables access control on tagged resources." ], "type": "string", "enum": [ "POLICY_TYPE_UNSPECIFIED", "FINE_GRAINED_ACCESS_CONTROL" ] }, "type": "array", "description": "A list of policy types that are activated for a taxonomy." }, "policyTags": { "items": { "$ref": "GoogleCloudDatacatalogV1beta1SerializedPolicyTag" }, "type": "array", "description": "Top level policy tags associated with the taxonomy if any." }, "displayName": { "type": "string", "description": "Required. Display name of the taxonomy. Max 200 bytes when encoded in UTF-8." } }, "id": "GoogleCloudDatacatalogV1beta1SerializedTaxonomy", "description": "Message capturing a taxonomy and its policy tag hierarchy as a nested proto. Used for taxonomy import/export and mutation.", "type": "object" }, "GoogleCloudDatacatalogV1beta1GcsFilesetSpec": { "description": "Describes a Cloud Storage fileset entry.", "id": "GoogleCloudDatacatalogV1beta1GcsFilesetSpec", "properties": { "filePatterns": { "description": "Required. Patterns to identify a set of files in Google Cloud Storage. See [Cloud Storage documentation](https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames) for more information. Note that bucket wildcards are currently not supported. Examples of valid file_patterns: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `gs://bucket_name/dir/*`: matches all files within `bucket_name/dir` directory. LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `gs://bucket_name/dir/**`: matches all files in `bucket_name/dir` spanning all subdirectories. LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `gs://bucket_name/file*`: matches files prefixed by `file` in `bucket_name` LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `gs://bucket_name/??.txt`: matches files with two characters followed by `.txt` in `bucket_name` LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `gs://bucket_name/[aeiou].txt`: matches files that contain a single vowel character followed by `.txt` in `bucket_name` LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `gs://bucket_name/[a-m].txt`: matches files that contain `a`, `b`, ... or `m` followed by `.txt` in `bucket_name` LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `gs://bucket_name/a/*/b`: matches all files in `bucket_name` that match `a/*/b` pattern, such as `a/c/b`, `a/d/b` LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `gs://another_bucket/a.txt`: matches `gs://another_bucket/a.txt` You can combine wildcards to provide more powerful matches, for example: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `gs://bucket_name/[a-m]??.j*g`", "type": "array", "items": { "type": "string" } }, "sampleGcsFileSpecs": { "description": "Output only. Sample files contained in this fileset, not all files contained in this fileset are represented here.", "type": "array", "readOnly": true, "items": { "$ref": "GoogleCloudDatacatalogV1beta1GcsFileSpec" } } }, "type": "object" }, "GoogleCloudDatacatalogV1beta1FieldTypeEnumType": { "id": "GoogleCloudDatacatalogV1beta1FieldTypeEnumType", "type": "object", "properties": { "allowedValues": { "type": "array", "items": { "$ref": "GoogleCloudDatacatalogV1beta1FieldTypeEnumTypeEnumValue" } } } }, "GoogleCloudDatacatalogV1beta1ColumnSchema": { "properties": { "description": { "description": "Optional. Description of the column. Default value is an empty string.", "type": "string" }, "column": { "type": "string", "description": "Required. Name of the column." }, "subcolumns": { "type": "array", "items": { "$ref": "GoogleCloudDatacatalogV1beta1ColumnSchema" }, "description": "Optional. Schema of sub-columns. A column can have zero or more sub-columns." }, "mode": { "description": "Optional. A column's mode indicates whether the values in this column are required, nullable, etc. Only `NULLABLE`, `REQUIRED` and `REPEATED` are supported. Default mode is `NULLABLE`.", "type": "string" }, "type": { "type": "string", "description": "Required. Type of the column." } }, "description": "Representation of a column within a schema. Columns could be nested inside other columns.", "type": "object", "id": "GoogleCloudDatacatalogV1beta1ColumnSchema" }, "GoogleCloudDatacatalogV1beta1InlineSource": { "id": "GoogleCloudDatacatalogV1beta1InlineSource", "type": "object", "properties": { "taxonomies": { "type": "array", "items": { "$ref": "GoogleCloudDatacatalogV1beta1SerializedTaxonomy" }, "description": "Required. Taxonomies to be imported." } }, "description": "Inline source used for taxonomies import." }, "GoogleCloudDatacatalogV1beta1SystemTimestamps": { "type": "object", "properties": { "createTime": { "type": "string", "description": "The creation time of the resource within the given system.", "format": "google-datetime" }, "expireTime": { "format": "google-datetime", "type": "string", "description": "Output only. The expiration time of the resource within the given system. Currently only apllicable to BigQuery resources.", "readOnly": true }, "updateTime": { "type": "string", "description": "The last-modified time of the resource within the given system.", "format": "google-datetime" } }, "id": "GoogleCloudDatacatalogV1beta1SystemTimestamps", "description": "Timestamps about this resource according to a particular system." }, "GoogleCloudDatacatalogV1beta1SerializedPolicyTag": { "type": "object", "properties": { "policyTag": { "type": "string", "description": "Resource name of the policy tag. This field will be ignored when calling ImportTaxonomies." }, "displayName": { "description": "Required. Display name of the policy tag. Max 200 bytes when encoded in UTF-8.", "type": "string" }, "description": { "description": "Description of the serialized policy tag. The length of the description is limited to 2000 bytes when encoded in UTF-8. If not set, defaults to an empty description.", "type": "string" }, "childPolicyTags": { "items": { "$ref": "GoogleCloudDatacatalogV1beta1SerializedPolicyTag" }, "type": "array", "description": "Children of the policy tag if any." } }, "description": "Message representing one policy tag when exported as a nested proto.", "id": "GoogleCloudDatacatalogV1beta1SerializedPolicyTag" }, "GoogleCloudDatacatalogV1beta1SearchCatalogRequest": { "properties": { "query": { "description": "Optional. The query string in search query syntax. An empty query string will result in all data assets (in the specified scope) that the user has access to. Query strings can be simple as \"x\" or more qualified as: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh name:x LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh column:x LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh description:y Note: Query tokens need to have a minimum of 3 characters for substring matching to work correctly. See [Data Catalog Search Syntax](https://cloud.google.com/data-catalog/docs/how-to/search-reference) for more information.", "type": "string" }, "scope": { "$ref": "GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope", "description": "Required. The scope of this search request. A `scope` that has empty `include_org_ids`, `include_project_ids` AND false `include_gcp_public_datasets` is considered invalid. Data Catalog will return an error in such a case." }, "pageToken": { "type": "string", "description": "Optional. Pagination token returned in an earlier SearchCatalogResponse.next_page_token, which indicates that this is a continuation of a prior SearchCatalogRequest call, and that the system should return the next page of data. If empty, the first page is returned." }, "pageSize": { "type": "integer", "format": "int32", "description": "Number of results in the search page. If \u003c=0 then defaults to 10. Max limit for page_size is 1000. Throws an invalid argument for page_size \u003e 1000." }, "orderBy": { "description": "Specifies the ordering of results, currently supported case-sensitive choices are: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `relevance`, only supports descending LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `last_modified_timestamp [asc|desc]`, defaults to descending if not specified LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `default` that can only be descending If not specified, defaults to `relevance` descending.", "type": "string" } }, "id": "GoogleCloudDatacatalogV1beta1SearchCatalogRequest", "description": "Request message for SearchCatalog.", "type": "object" }, "GetPolicyOptions": { "id": "GetPolicyOptions", "type": "object", "properties": { "requestedPolicyVersion": { "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).", "type": "integer", "format": "int32" } }, "description": "Encapsulates settings provided to GetIamPolicy." }, "GoogleCloudDatacatalogV1beta1Tag": { "properties": { "name": { "type": "string", "description": "The resource name of the tag in URL format. Example: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh projects/{project_id}/locations/{location}/entrygroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id} where `tag_id` is a system-generated identifier. Note that this Tag may not actually be stored in the location in this name." }, "fields": { "additionalProperties": { "$ref": "GoogleCloudDatacatalogV1beta1TagField" }, "type": "object", "description": "Required. This maps the ID of a tag field to the value of and additional information about that field. Valid field IDs are defined by the tag's template. A tag must have at least 1 field and at most 500 fields." }, "column": { "description": "Resources like Entry can have schemas associated with them. This scope allows users to attach tags to an individual column based on that schema. For attaching a tag to a nested column, use `.` to separate the column names. Example: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `outer_column.inner_column`", "type": "string" }, "templateDisplayName": { "type": "string", "readOnly": true, "description": "Output only. The display name of the tag template." }, "template": { "description": "Required. The resource name of the tag template that this tag uses. Example: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id} This field cannot be modified after creation.", "type": "string" } }, "type": "object", "id": "GoogleCloudDatacatalogV1beta1Tag", "description": "Tags are used to attach custom metadata to Data Catalog resources. Tags conform to the specifications within their tag template. See [Data Catalog IAM](https://cloud.google.com/data-catalog/docs/concepts/iam) for information on the permissions needed to create or view tags." }, "GoogleCloudDatacatalogV1beta1UsageSignal": { "properties": { "usageWithinTimeRange": { "type": "object", "additionalProperties": { "$ref": "GoogleCloudDatacatalogV1beta1UsageStats" }, "description": "Usage statistics over each of the pre-defined time ranges, supported strings for time ranges are {\"24H\", \"7D\", \"30D\"}." }, "updateTime": { "format": "google-datetime", "type": "string", "description": "The timestamp of the end of the usage statistics duration." } }, "id": "GoogleCloudDatacatalogV1beta1UsageSignal", "description": "The set of all usage signals that we store in Data Catalog.", "type": "object" }, "GoogleCloudDatacatalogV1beta1PolicyTag": { "properties": { "displayName": { "description": "Required. User defined name of this policy tag. It must: be unique within the parent taxonomy; contain only unicode letters, numbers, underscores, dashes and spaces; not start or end with spaces; and be at most 200 bytes long when encoded in UTF-8.", "type": "string" }, "parentPolicyTag": { "type": "string", "description": "Resource name of this policy tag's parent policy tag (e.g. for the \"LatLong\" policy tag in the example above, this field contains the resource name of the \"Geolocation\" policy tag). If empty, it means this policy tag is a top level policy tag (e.g. this field is empty for the \"Geolocation\" policy tag in the example above). If not set, defaults to an empty string." }, "childPolicyTags": { "description": "Output only. Resource names of child policy tags of this policy tag.", "items": { "type": "string" }, "readOnly": true, "type": "array" }, "description": { "description": "Description of this policy tag. It must: contain only unicode characters, tabs, newlines, carriage returns and page breaks; and be at most 2000 bytes long when encoded in UTF-8. If not set, defaults to an empty description. If not set, defaults to an empty description.", "type": "string" }, "name": { "type": "string", "readOnly": true, "description": "Output only. Resource name of this policy tag, whose format is: \"projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{id}\"." } }, "type": "object", "description": "Denotes one policy tag in a taxonomy (e.g. ssn). Policy Tags can be defined in a hierarchy. For example, consider the following hierarchy: Geolocation -\u003e (LatLong, City, ZipCode). PolicyTag \"Geolocation\" contains three child policy tags: \"LatLong\", \"City\", and \"ZipCode\".", "id": "GoogleCloudDatacatalogV1beta1PolicyTag" }, "SetIamPolicyRequest": { "description": "Request message for `SetIamPolicy` method.", "id": "SetIamPolicyRequest", "properties": { "policy": { "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.", "$ref": "Policy" } }, "type": "object" }, "GoogleCloudDatacatalogV1beta1ImportTaxonomiesResponse": { "description": "Response message for ImportTaxonomies.", "id": "GoogleCloudDatacatalogV1beta1ImportTaxonomiesResponse", "properties": { "taxonomies": { "type": "array", "description": "Taxonomies that were imported.", "items": { "$ref": "GoogleCloudDatacatalogV1beta1Taxonomy" } } }, "type": "object" }, "GoogleCloudDatacatalogV1beta1ListEntryGroupsResponse": { "id": "GoogleCloudDatacatalogV1beta1ListEntryGroupsResponse", "type": "object", "properties": { "nextPageToken": { "type": "string", "description": "Token to retrieve the next page of results. It is set to empty if no items remain in results." }, "entryGroups": { "description": "EntryGroup details.", "items": { "$ref": "GoogleCloudDatacatalogV1beta1EntryGroup" }, "type": "array" } }, "description": "Response message for ListEntryGroups." }, "GoogleCloudDatacatalogV1beta1SearchCatalogResponse": { "type": "object", "id": "GoogleCloudDatacatalogV1beta1SearchCatalogResponse", "properties": { "results": { "items": { "$ref": "GoogleCloudDatacatalogV1beta1SearchCatalogResult" }, "type": "array", "description": "Search results." }, "nextPageToken": { "type": "string", "description": "The token that can be used to retrieve the next page of results." }, "unreachable": { "description": "Unreachable locations. Search result does not include data from those locations. Users can get additional information on the error by repeating the search request with a more restrictive parameter -- setting the value for `SearchDataCatalogRequest.scope.restricted_locations`.", "items": { "type": "string" }, "type": "array" } }, "description": "Response message for SearchCatalog." }, "GoogleCloudDatacatalogV1beta1ListPolicyTagsResponse": { "properties": { "policyTags": { "items": { "$ref": "GoogleCloudDatacatalogV1beta1PolicyTag" }, "description": "The policy tags that are in the requested taxonomy.", "type": "array" }, "nextPageToken": { "description": "Token used to retrieve the next page of results, or empty if there are no more results in the list.", "type": "string" } }, "description": "Response message for ListPolicyTags.", "type": "object", "id": "GoogleCloudDatacatalogV1beta1ListPolicyTagsResponse" }, "GoogleCloudDatacatalogV1beta1TagField": { "id": "GoogleCloudDatacatalogV1beta1TagField", "description": "Contains the value and supporting information for a field within a Tag.", "type": "object", "properties": { "stringValue": { "type": "string", "description": "Holds the value for a tag field with string type." }, "doubleValue": { "format": "double", "type": "number", "description": "Holds the value for a tag field with double type." }, "timestampValue": { "type": "string", "format": "google-datetime", "description": "Holds the value for a tag field with timestamp type." }, "displayName": { "readOnly": true, "description": "Output only. The display name of this field.", "type": "string" }, "order": { "type": "integer", "format": "int32", "description": "Output only. The order of this field with respect to other fields in this tag. It can be set in Tag. For example, a higher value can indicate a more important field. The value can be negative. Multiple fields can have the same order, and field orders within a tag do not have to be sequential.", "readOnly": true }, "boolValue": { "description": "Holds the value for a tag field with boolean type.", "type": "boolean" }, "enumValue": { "description": "Holds the value for a tag field with enum type. This value must be one of the allowed values in the definition of this enum.", "$ref": "GoogleCloudDatacatalogV1beta1TagFieldEnumValue" } } }, "Empty": { "id": "Empty", "type": "object", "properties": {}, "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }" }, "GoogleCloudDatacatalogV1beta1SearchCatalogResult": { "properties": { "modifyTime": { "format": "google-datetime", "description": "Last-modified timestamp of the entry from the managing system.", "type": "string" }, "searchResultType": { "enum": [ "SEARCH_RESULT_TYPE_UNSPECIFIED", "ENTRY", "TAG_TEMPLATE", "ENTRY_GROUP" ], "enumDescriptions": [ "Default unknown type.", "An Entry.", "A TagTemplate.", "An EntryGroup." ], "description": "Type of the search result. This field can be used to determine which Get method to call to fetch the full resource.", "type": "string" }, "searchResultSubtype": { "type": "string", "description": "Sub-type of the search result. This is a dot-delimited description of the resource's full type, and is the same as the value callers would provide in the \"type\" search facet. Examples: `entry.table`, `entry.dataStream`, `tagTemplate`." }, "relativeResourceName": { "type": "string", "description": "The relative resource name of the resource in URL format. Examples: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `projects/{project_id}/locations/{location_id}/entryGroups/{entry_group_id}/entries/{entry_id}` LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `projects/{project_id}/tagTemplates/{tag_template_id}`" }, "linkedResource": { "type": "string", "description": "The full name of the cloud resource the entry belongs to. See: https://cloud.google.com/apis/design/resource_names#full_resource_name. Example: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `//bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId`" } }, "description": "A result that appears in the response of a search request. Each result captures details of one entry that matches the search.", "type": "object", "id": "GoogleCloudDatacatalogV1beta1SearchCatalogResult" }, "GoogleCloudDatacatalogV1beta1GcsFileSpec": { "properties": { "gcsTimestamps": { "$ref": "GoogleCloudDatacatalogV1beta1SystemTimestamps", "description": "Output only. Timestamps about the Cloud Storage file.", "readOnly": true }, "filePath": { "type": "string", "description": "Required. The full file path. Example: `gs://bucket_name/a/b.txt`." }, "sizeBytes": { "format": "int64", "readOnly": true, "type": "string", "description": "Output only. The size of the file, in bytes." } }, "description": "Specifications of a single file in Cloud Storage.", "type": "object", "id": "GoogleCloudDatacatalogV1beta1GcsFileSpec" }, "GoogleCloudDatacatalogV1beta1Entry": { "id": "GoogleCloudDatacatalogV1beta1Entry", "description": "Entry Metadata. A Data Catalog Entry resource represents another resource in Google Cloud Platform (such as a BigQuery dataset or a Pub/Sub topic), or outside of Google Cloud Platform. Clients can use the `linked_resource` field in the Entry resource to refer to the original resource ID of the source system. An Entry resource contains resource details, such as its schema. An Entry can also be used to attach flexible metadata, such as a Tag.", "type": "object", "properties": { "schema": { "$ref": "GoogleCloudDatacatalogV1beta1Schema", "description": "Schema of the entry. An entry might not have any schema attached to it." }, "gcsFilesetSpec": { "description": "Specification that applies to a Cloud Storage fileset. This is only valid on entries of type FILESET.", "$ref": "GoogleCloudDatacatalogV1beta1GcsFilesetSpec" }, "name": { "type": "string", "readOnly": true, "description": "Output only. The Data Catalog resource name of the entry in URL format. Example: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id} Note that this Entry and its child resources may not actually be stored in the location in this name." }, "userSpecifiedSystem": { "description": "This field indicates the entry's source system that Data Catalog does not integrate with. `user_specified_system` strings must begin with a letter or underscore and can only contain letters, numbers, and underscores; are case insensitive; must be at least 1 character and at most 64 characters long.", "type": "string" }, "description": { "type": "string", "description": "Entry description, which can consist of several sentences or paragraphs that describe entry contents. Default value is an empty string." }, "usageSignal": { "readOnly": true, "$ref": "GoogleCloudDatacatalogV1beta1UsageSignal", "description": "Output only. Statistics on the usage level of the resource." }, "displayName": { "description": "Display information such as title and description. A short name to identify the entry, for example, \"Analytics Data - Jan 2011\". Default value is an empty string.", "type": "string" }, "integratedSystem": { "enum": [ "INTEGRATED_SYSTEM_UNSPECIFIED", "BIGQUERY", "CLOUD_PUBSUB" ], "type": "string", "readOnly": true, "description": "Output only. This field indicates the entry's source system that Data Catalog integrates with, such as BigQuery or Pub/Sub.", "enumDescriptions": [ "Default unknown system.", "BigQuery.", "Cloud Pub/Sub." ] }, "bigqueryTableSpec": { "$ref": "GoogleCloudDatacatalogV1beta1BigQueryTableSpec", "description": "Specification that applies to a BigQuery table. This is only valid on entries of type `TABLE`." }, "type": { "description": "The type of the entry. Only used for Entries with types in the EntryType enum.", "enum": [ "ENTRY_TYPE_UNSPECIFIED", "TABLE", "MODEL", "DATA_STREAM", "FILESET" ], "type": "string", "enumDescriptions": [ "Default unknown type.", "Output only. The type of entry that has a GoogleSQL schema, including logical views.", "Output only. The type of models. https://cloud.google.com/bigquery-ml/docs/bigqueryml-intro", "Output only. An entry type which is used for streaming entries. Example: Pub/Sub topic.", "An entry type which is a set of files or objects. Example: Cloud Storage fileset." ] }, "linkedResource": { "description": "The resource this metadata entry refers to. For Google Cloud Platform resources, `linked_resource` is the [full name of the resource](https://cloud.google.com/apis/design/resource_names#full_resource_name). For example, the `linked_resource` for a table resource from BigQuery is: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh //bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId Output only when Entry is of type in the EntryType enum. For entries with user_specified_type, this field is optional and defaults to an empty string.", "type": "string" }, "userSpecifiedType": { "type": "string", "description": "Entry type if it does not fit any of the input-allowed values listed in `EntryType` enum above. When creating an entry, users should check the enum values first, if nothing matches the entry to be created, then provide a custom value, for example \"my_special_type\". `user_specified_type` strings must begin with a letter or underscore and can only contain letters, numbers, and underscores; are case insensitive; must be at least 1 character and at most 64 characters long. Currently, only FILESET enum value is allowed. All other entries created through Data Catalog must use `user_specified_type`." }, "bigqueryDateShardedSpec": { "$ref": "GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec", "description": "Specification for a group of BigQuery tables with name pattern `[prefix]YYYYMMDD`. Context: https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding." }, "sourceSystemTimestamps": { "description": "Output only. Timestamps about the underlying resource, not about this Data Catalog entry. Output only when Entry is of type in the EntryType enum. For entries with user_specified_type, this field is optional and defaults to an empty timestamp.", "$ref": "GoogleCloudDatacatalogV1beta1SystemTimestamps", "readOnly": true } } }, "GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldEnumValueRequest": { "description": "Request message for RenameTagTemplateFieldEnumValue.", "id": "GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldEnumValueRequest", "type": "object", "properties": { "newEnumValueDisplayName": { "description": "Required. The new display name of the enum value. For example, `my_new_enum_value`.", "type": "string" } } }, "GoogleCloudDatacatalogV1beta1ExportTaxonomiesResponse": { "description": "Response message for ExportTaxonomies.", "type": "object", "properties": { "taxonomies": { "items": { "$ref": "GoogleCloudDatacatalogV1beta1SerializedTaxonomy" }, "description": "List of taxonomies and policy tags in a tree structure.", "type": "array" } }, "id": "GoogleCloudDatacatalogV1beta1ExportTaxonomiesResponse" }, "GoogleCloudDatacatalogV1beta1ListTagsResponse": { "type": "object", "id": "GoogleCloudDatacatalogV1beta1ListTagsResponse", "properties": { "nextPageToken": { "type": "string", "description": "Token to retrieve the next page of results. It is set to empty if no items remain in results." }, "tags": { "description": "Tag details.", "type": "array", "items": { "$ref": "GoogleCloudDatacatalogV1beta1Tag" } } }, "description": "Response message for ListTags." }, "GoogleCloudDatacatalogV1beta1ListEntriesResponse": { "properties": { "entries": { "items": { "$ref": "GoogleCloudDatacatalogV1beta1Entry" }, "description": "Entry details.", "type": "array" }, "nextPageToken": { "description": "Token to retrieve the next page of results. It is set to empty if no items remain in results.", "type": "string" } }, "description": "Response message for ListEntries.", "type": "object", "id": "GoogleCloudDatacatalogV1beta1ListEntriesResponse" }, "GoogleCloudDatacatalogV1beta1ListTaxonomiesResponse": { "description": "Response message for ListTaxonomies.", "properties": { "nextPageToken": { "type": "string", "description": "Token used to retrieve the next page of results, or empty if there are no more results in the list." }, "taxonomies": { "type": "array", "items": { "$ref": "GoogleCloudDatacatalogV1beta1Taxonomy" }, "description": "Taxonomies that the project contains." } }, "id": "GoogleCloudDatacatalogV1beta1ListTaxonomiesResponse", "type": "object" }, "GoogleCloudDatacatalogV1beta1Taxonomy": { "description": "A taxonomy is a collection of policy tags that classify data along a common axis. For instance a data *sensitivity* taxonomy could contain policy tags denoting PII such as age, zipcode, and SSN. A data lua-resty-gcp-scm-1.rockspec.original taxonomy could contain policy tags to distinguish user data, employee data, partner data, public data.", "type": "object", "properties": { "name": { "readOnly": true, "description": "Output only. Resource name of this taxonomy, whose format is: \"projects/{project_number}/locations/{location_id}/taxonomies/{id}\".", "type": "string" }, "activatedPolicyTypes": { "items": { "enum": [ "POLICY_TYPE_UNSPECIFIED", "FINE_GRAINED_ACCESS_CONTROL" ], "enumDescriptions": [ "Unspecified policy type.", "Fine grained access control policy, which enables access control on tagged resources." ], "type": "string" }, "type": "array", "description": "Optional. A list of policy types that are activated for this taxonomy. If not set, defaults to an empty list." }, "taxonomyTimestamps": { "description": "Output only. Timestamps about this taxonomy. Only create_time and update_time are used.", "$ref": "GoogleCloudDatacatalogV1beta1SystemTimestamps", "readOnly": true }, "displayName": { "type": "string", "description": "Required. User defined name of this taxonomy. It must: contain only unicode letters, numbers, underscores, dashes and spaces; not start or end with spaces; and be at most 200 bytes long when encoded in UTF-8. The taxonomy display name must be unique within an organization." }, "policyTagCount": { "readOnly": true, "format": "int32", "description": "Output only. Number of policy tags contained in this taxonomy.", "type": "integer" }, "description": { "description": "Optional. Description of this taxonomy. It must: contain only unicode characters, tabs, newlines, carriage returns and page breaks; and be at most 2000 bytes long when encoded in UTF-8. If not set, defaults to an empty description.", "type": "string" } }, "id": "GoogleCloudDatacatalogV1beta1Taxonomy" }, "GoogleCloudDatacatalogV1beta1ViewSpec": { "description": "Table view specification.", "type": "object", "properties": { "viewQuery": { "type": "string", "description": "Output only. The query that defines the table view.", "readOnly": true } }, "id": "GoogleCloudDatacatalogV1beta1ViewSpec" }, "GoogleCloudDatacatalogV1beta1TagTemplateField": { "properties": { "order": { "description": "The order of this field with respect to other fields in this tag template. A higher value indicates a more important field. The value can be negative. Multiple fields can have the same order, and field orders within a tag do not have to be sequential.", "format": "int32", "type": "integer" }, "name": { "type": "string", "readOnly": true, "description": "Output only. The resource name of the tag template field in URL format. Example: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh projects/{project_id}/locations/{location}/tagTemplates/{tag_template}/fields/{field} Note that this TagTemplateField may not actually be stored in the location in this name." }, "displayName": { "description": "The display name for this field. Defaults to an empty string.", "type": "string" }, "description": { "type": "string", "description": "The description for this field. Defaults to an empty string." }, "type": { "description": "Required. The type of value this tag field can contain.", "$ref": "GoogleCloudDatacatalogV1beta1FieldType" }, "isRequired": { "type": "boolean", "description": "Whether this is a required field. Defaults to false." } }, "id": "GoogleCloudDatacatalogV1beta1TagTemplateField", "description": "The template for an individual field within a tag template.", "type": "object" }, "GoogleCloudDatacatalogV1beta1UsageStats": { "properties": { "totalExecutionTimeForCompletionsMillis": { "type": "number", "description": "Total time spent (in milliseconds) during uses the resulted in completions.", "format": "float" }, "totalCompletions": { "description": "The number of times that the underlying entry was successfully used.", "type": "number", "format": "float" }, "totalFailures": { "description": "The number of times that the underlying entry was attempted to be used but failed.", "format": "float", "type": "number" }, "totalCancellations": { "description": "The number of times that the underlying entry was attempted to be used but was cancelled by the user.", "type": "number", "format": "float" } }, "id": "GoogleCloudDatacatalogV1beta1UsageStats", "type": "object", "description": "Detailed counts on the entry's usage. Caveats: - Only BigQuery tables have usage stats - The usage stats only include BigQuery query jobs - The usage stats might be underestimated, e.g. wildcard table references are not yet counted in usage computation https://cloud.google.com/bigquery/docs/querying-wildcard-tables" }, "TestIamPermissionsRequest": { "description": "Request message for `TestIamPermissions` method.", "properties": { "permissions": { "items": { "type": "string" }, "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).", "type": "array" } }, "id": "TestIamPermissionsRequest", "type": "object" }, "GoogleCloudDatacatalogV1beta1TagTemplate": { "id": "GoogleCloudDatacatalogV1beta1TagTemplate", "properties": { "name": { "description": "The resource name of the tag template in URL format. Example: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id} Note that this TagTemplate and its child resources may not actually be stored in the location in this name.", "type": "string" }, "displayName": { "description": "The display name for this template. Defaults to an empty string.", "type": "string" }, "fields": { "type": "object", "description": "Required. Map of tag template field IDs to the settings for the field. This map is an exhaustive list of the allowed fields. This map must contain at least one field and at most 500 fields. The keys to this map are tag template field IDs. Field IDs can contain letters (both uppercase and lowercase), numbers (0-9) and underscores (_). Field IDs must be at least 1 character long and at most 64 characters long. Field IDs must start with a letter or underscore.", "additionalProperties": { "$ref": "GoogleCloudDatacatalogV1beta1TagTemplateField" } } }, "description": "A tag template defines a tag, which can have one or more typed fields. The template is used to create and attach the tag to GCP resources. [Tag template roles](https://cloud.google.com/iam/docs/understanding-roles#data-catalog-roles) provide permissions to create, edit, and use the template. See, for example, the [TagTemplate User](https://cloud.google.com/data-catalog/docs/how-to/template-user) role, which includes permission to use the tag template to tag resources.", "type": "object" }, "GoogleCloudDatacatalogV1beta1FieldTypeEnumTypeEnumValue": { "type": "object", "properties": { "displayName": { "description": "Required. The display name of the enum value. Must not be an empty string.", "type": "string" } }, "id": "GoogleCloudDatacatalogV1beta1FieldTypeEnumTypeEnumValue" }, "GoogleCloudDatacatalogV1beta1BigQueryTableSpec": { "description": "Describes a BigQuery table.", "id": "GoogleCloudDatacatalogV1beta1BigQueryTableSpec", "type": "object", "properties": { "tableSourceType": { "type": "string", "enum": [ "TABLE_SOURCE_TYPE_UNSPECIFIED", "BIGQUERY_VIEW", "BIGQUERY_TABLE", "BIGQUERY_MATERIALIZED_VIEW" ], "description": "Output only. The table source type.", "readOnly": true, "enumDescriptions": [ "Default unknown type.", "Table view.", "BigQuery native table.", "BigQuery materialized view." ] }, "viewSpec": { "$ref": "GoogleCloudDatacatalogV1beta1ViewSpec", "description": "Table view specification. This field should only be populated if `table_source_type` is `BIGQUERY_VIEW`." }, "tableSpec": { "$ref": "GoogleCloudDatacatalogV1beta1TableSpec", "description": "Spec of a BigQuery table. This field should only be populated if `table_source_type` is `BIGQUERY_TABLE`." } } }, "GetIamPolicyRequest": { "id": "GetIamPolicyRequest", "properties": { "options": { "description": "OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`.", "$ref": "GetPolicyOptions" } }, "description": "Request message for `GetIamPolicy` method.", "type": "object" }, "GoogleCloudDatacatalogV1beta1Schema": { "id": "GoogleCloudDatacatalogV1beta1Schema", "description": "Represents a schema (e.g. BigQuery, GoogleSQL, Avro schema).", "properties": { "columns": { "items": { "$ref": "GoogleCloudDatacatalogV1beta1ColumnSchema" }, "description": "Required. Schema of columns. A maximum of 10,000 columns and sub-columns can be specified.", "type": "array" } }, "type": "object" }, "Policy": { "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).", "type": "object", "properties": { "version": { "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh Getting a policy that includes a conditional role binding LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh Adding a conditional role binding to a policy LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh Changing a conditional role binding in a policy LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).", "format": "int32", "type": "integer" }, "bindings": { "items": { "$ref": "Binding" }, "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.", "type": "array" }, "etag": { "type": "string", "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.", "format": "byte" } }, "id": "Policy" }, "TestIamPermissionsResponse": { "properties": { "permissions": { "items": { "type": "string" }, "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.", "type": "array" } }, "description": "Response message for `TestIamPermissions` method.", "type": "object", "id": "TestIamPermissionsResponse" }, "GoogleCloudDatacatalogV1beta1FieldType": { "id": "GoogleCloudDatacatalogV1beta1FieldType", "type": "object", "properties": { "enumType": { "$ref": "GoogleCloudDatacatalogV1beta1FieldTypeEnumType", "description": "Represents an enum type." }, "primitiveType": { "type": "string", "description": "Represents primitive types - string, bool etc.", "enumDescriptions": [ "This is the default invalid value for a type.", "A double precision number.", "An UTF-8 string.", "A boolean value.", "A timestamp." ], "enum": [ "PRIMITIVE_TYPE_UNSPECIFIED", "DOUBLE", "STRING", "BOOL", "TIMESTAMP" ] } } }, "Expr": { "properties": { "expression": { "description": "Textual representation of an expression in Common Expression Language syntax.", "type": "string" }, "location": { "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.", "type": "string" }, "description": { "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.", "type": "string" }, "title": { "type": "string", "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression." } }, "type": "object", "id": "Expr", "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information." }, "GoogleCloudDatacatalogV1beta1TableSpec": { "properties": { "groupedEntry": { "description": "Output only. If the table is a dated shard, i.e., with name pattern `[prefix]YYYYMMDD`, `grouped_entry` is the Data Catalog resource name of the date sharded grouped entry, for example, `projects/{project_id}/locations/{location}/entrygroups/{entry_group_id}/entries/{entry_id}`. Otherwise, `grouped_entry` is empty.", "readOnly": true, "type": "string" } }, "id": "GoogleCloudDatacatalogV1beta1TableSpec", "description": "Normal BigQuery table spec.", "type": "object" }, "GoogleCloudDatacatalogV1beta1EntryGroup": { "description": "EntryGroup Metadata. An EntryGroup resource represents a logical grouping of zero or more Data Catalog Entry resources.", "type": "object", "id": "GoogleCloudDatacatalogV1beta1EntryGroup", "properties": { "name": { "type": "string", "description": "The resource name of the entry group in URL format. Example: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh projects/{project_id}/locations/{location}/entryGroups/{entry_group_id} Note that this EntryGroup and its child resources may not actually be stored in the location in this name." }, "description": { "type": "string", "description": "Entry group description, which can consist of several sentences or paragraphs that describe entry group contents. Default value is an empty string." }, "displayName": { "description": "A short name to identify the entry group, for example, \"analytics data - jan 2011\". Default value is an empty string.", "type": "string" }, "dataCatalogTimestamps": { "readOnly": true, "description": "Output only. Timestamps about this EntryGroup. Default value is empty timestamps.", "$ref": "GoogleCloudDatacatalogV1beta1SystemTimestamps" } } } }, "documentationLink": "https://cloud.google.com/data-catalog/docs/", "rootUrl": "https://datacatalog.googleapis.com/", "protocol": "rest", "title": "Google Cloud Data Catalog API", "servicePath": "", "resources": { "entries": { "methods": { "lookup": { "parameters": { "sqlResource": { "description": "The SQL name of the entry. SQL names are case-sensitive. Examples: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `pubsub.project_id.topic_id` LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh ``pubsub.project_id.`topic.id.with.dots` `` LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `bigquery.table.project_id.dataset_id.table_id` LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `bigquery.dataset.project_id.dataset_id` LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `datacatalog.entry.project_id.location_id.entry_group_id.entry_id` `*_id`s should satisfy the standard SQL rules for identifiers. https://cloud.google.com/bigquery/docs/reference/standard-sql/lexical.", "location": "query", "type": "string" }, "linkedResource": { "location": "query", "type": "string", "description": "The full name of the Google Cloud Platform resource the Data Catalog entry represents. See: https://cloud.google.com/apis/design/resource_names#full_resource_name. Full names are case-sensitive. Examples: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh //bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh //pubsub.googleapis.com/projects/projectId/topics/topicId" } }, "flatPath": "v1beta1/entries:lookup", "parameterOrder": [], "httpMethod": "GET", "response": { "$ref": "GoogleCloudDatacatalogV1beta1Entry" }, "id": "datacatalog.entries.lookup", "description": "Get an entry by target resource name. This method allows clients to use the resource name from the source Google Cloud Platform service to get the Data Catalog Entry.", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "path": "v1beta1/entries:lookup" } } }, "projects": { "resources": { "locations": { "resources": { "taxonomies": { "resources": { "policyTags": { "methods": { "setIamPolicy": { "parameters": { "resource": { "location": "path", "required": true, "pattern": "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+/policyTags/[^/]+$", "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.", "type": "string" } }, "response": { "$ref": "Policy" }, "request": { "$ref": "SetIamPolicyRequest" }, "parameterOrder": [ "resource" ], "id": "datacatalog.projects.locations.taxonomies.policyTags.setIamPolicy", "path": "v1beta1/{+resource}:setIamPolicy", "description": "Sets the IAM policy for a taxonomy or a policy tag.", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "httpMethod": "POST", "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies/{taxonomiesId}/policyTags/{policyTagsId}:setIamPolicy" }, "create": { "parameters": { "parent": { "required": true, "type": "string", "location": "path", "description": "Required. Resource name of the taxonomy that the policy tag will belong to.", "pattern": "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+$" } }, "httpMethod": "POST", "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies/{taxonomiesId}/policyTags", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "description": "Creates a policy tag in the specified taxonomy.", "request": { "$ref": "GoogleCloudDatacatalogV1beta1PolicyTag" }, "parameterOrder": [ "parent" ], "response": { "$ref": "GoogleCloudDatacatalogV1beta1PolicyTag" }, "path": "v1beta1/{+parent}/policyTags", "id": "datacatalog.projects.locations.taxonomies.policyTags.create" }, "list": { "parameterOrder": [ "parent" ], "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies/{taxonomiesId}/policyTags", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "path": "v1beta1/{+parent}/policyTags", "httpMethod": "GET", "id": "datacatalog.projects.locations.taxonomies.policyTags.list", "response": { "$ref": "GoogleCloudDatacatalogV1beta1ListPolicyTagsResponse" }, "parameters": { "pageToken": { "description": "The next_page_token value returned from a previous List request, if any. If not set, defaults to an empty string.", "type": "string", "location": "query" }, "pageSize": { "location": "query", "format": "int32", "description": "The maximum number of items to return. Must be a value between 1 and 1000. If not set, defaults to 50.", "type": "integer" }, "parent": { "required": true, "type": "string", "location": "path", "pattern": "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+$", "description": "Required. Resource name of the taxonomy to list the policy tags of." } }, "description": "Lists all policy tags in a taxonomy." }, "getIamPolicy": { "description": "Gets the IAM policy for a taxonomy or a policy tag.", "httpMethod": "POST", "parameterOrder": [ "resource" ], "request": { "$ref": "GetIamPolicyRequest" }, "id": "datacatalog.projects.locations.taxonomies.policyTags.getIamPolicy", "parameters": { "resource": { "location": "path", "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.", "pattern": "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+/policyTags/[^/]+$", "required": true, "type": "string" } }, "path": "v1beta1/{+resource}:getIamPolicy", "response": { "$ref": "Policy" }, "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies/{taxonomiesId}/policyTags/{policyTagsId}:getIamPolicy", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ] }, "delete": { "description": "Deletes a policy tag. Also deletes all of its descendant policy tags.", "parameterOrder": [ "name" ], "httpMethod": "DELETE", "response": { "$ref": "Empty" }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "path": "v1beta1/{+name}", "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies/{taxonomiesId}/policyTags/{policyTagsId}", "id": "datacatalog.projects.locations.taxonomies.policyTags.delete", "parameters": { "name": { "description": "Required. Resource name of the policy tag to be deleted. All of its descendant policy tags will also be deleted.", "type": "string", "pattern": "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+/policyTags/[^/]+$", "required": true, "location": "path" } } }, "patch": { "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies/{taxonomiesId}/policyTags/{policyTagsId}", "response": { "$ref": "GoogleCloudDatacatalogV1beta1PolicyTag" }, "parameterOrder": [ "name" ], "httpMethod": "PATCH", "path": "v1beta1/{+name}", "parameters": { "name": { "required": true, "pattern": "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+/policyTags/[^/]+$", "location": "path", "type": "string", "description": "Output only. Resource name of this policy tag, whose format is: \"projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{id}\"." }, "updateMask": { "description": "The update mask applies to the resource. Only display_name, description and parent_policy_tag can be updated and thus can be listed in the mask. If update_mask is not provided, all allowed fields (i.e. display_name, description and parent) will be updated. For more information including the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask If not set, defaults to all of the fields that are allowed to update.", "location": "query", "type": "string", "format": "google-fieldmask" } }, "id": "datacatalog.projects.locations.taxonomies.policyTags.patch", "description": "Updates a policy tag.", "request": { "$ref": "GoogleCloudDatacatalogV1beta1PolicyTag" } }, "get": { "parameterOrder": [ "name" ], "description": "Gets a policy tag.", "httpMethod": "GET", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "id": "datacatalog.projects.locations.taxonomies.policyTags.get", "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies/{taxonomiesId}/policyTags/{policyTagsId}", "response": { "$ref": "GoogleCloudDatacatalogV1beta1PolicyTag" }, "parameters": { "name": { "type": "string", "required": true, "description": "Required. Resource name of the requested policy tag.", "pattern": "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+/policyTags/[^/]+$", "location": "path" } }, "path": "v1beta1/{+name}" }, "testIamPermissions": { "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "description": "Returns the permissions that a caller has on the specified taxonomy or policy tag.", "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies/{taxonomiesId}/policyTags/{policyTagsId}:testIamPermissions", "httpMethod": "POST", "path": "v1beta1/{+resource}:testIamPermissions", "parameters": { "resource": { "location": "path", "type": "string", "pattern": "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+/policyTags/[^/]+$", "required": true, "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field." } }, "request": { "$ref": "TestIamPermissionsRequest" }, "response": { "$ref": "TestIamPermissionsResponse" }, "id": "datacatalog.projects.locations.taxonomies.policyTags.testIamPermissions", "parameterOrder": [ "resource" ] } } } }, "methods": { "list": { "description": "Lists all taxonomies in a project in a particular location that the caller has permission to view.", "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies", "parameterOrder": [ "parent" ], "path": "v1beta1/{+parent}/taxonomies", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "parameters": { "pageSize": { "type": "integer", "location": "query", "description": "The maximum number of items to return. Must be a value between 1 and 1000. If not set, defaults to 50.", "format": "int32" }, "parent": { "required": true, "type": "string", "pattern": "^projects/[^/]+/locations/[^/]+$", "description": "Required. Resource name of the project to list the taxonomies of.", "location": "path" }, "pageToken": { "description": "The next_page_token value returned from a previous list request, if any. If not set, defaults to an empty string.", "type": "string", "location": "query" } }, "id": "datacatalog.projects.locations.taxonomies.list", "response": { "$ref": "GoogleCloudDatacatalogV1beta1ListTaxonomiesResponse" }, "httpMethod": "GET" }, "patch": { "parameters": { "name": { "required": true, "pattern": "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+$", "location": "path", "description": "Output only. Resource name of this taxonomy, whose format is: \"projects/{project_number}/locations/{location_id}/taxonomies/{id}\".", "type": "string" }, "updateMask": { "type": "string", "location": "query", "description": "The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask If not set, defaults to all of the fields that are allowed to update.", "format": "google-fieldmask" } }, "parameterOrder": [ "name" ], "path": "v1beta1/{+name}", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "response": { "$ref": "GoogleCloudDatacatalogV1beta1Taxonomy" }, "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies/{taxonomiesId}", "httpMethod": "PATCH", "id": "datacatalog.projects.locations.taxonomies.patch", "request": { "$ref": "GoogleCloudDatacatalogV1beta1Taxonomy" }, "description": "Updates a taxonomy." }, "import": { "id": "datacatalog.projects.locations.taxonomies.import", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "parameters": { "parent": { "required": true, "pattern": "^projects/[^/]+/locations/[^/]+$", "location": "path", "type": "string", "description": "Required. Resource name of project that the imported taxonomies will belong to." } }, "description": "Imports all taxonomies and their policy tags to a project as new taxonomies. This method provides a bulk taxonomy / policy tag creation using nested proto structure.", "request": { "$ref": "GoogleCloudDatacatalogV1beta1ImportTaxonomiesRequest" }, "parameterOrder": [ "parent" ], "httpMethod": "POST", "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies:import", "response": { "$ref": "GoogleCloudDatacatalogV1beta1ImportTaxonomiesResponse" }, "path": "v1beta1/{+parent}/taxonomies:import" }, "export": { "response": { "$ref": "GoogleCloudDatacatalogV1beta1ExportTaxonomiesResponse" }, "httpMethod": "GET", "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies:export", "path": "v1beta1/{+parent}/taxonomies:export", "id": "datacatalog.projects.locations.taxonomies.export", "parameters": { "taxonomies": { "repeated": true, "type": "string", "location": "query", "description": "Required. Resource names of the taxonomies to be exported." }, "serializedTaxonomies": { "description": "Export taxonomies as serialized taxonomies.", "type": "boolean", "location": "query" }, "parent": { "required": true, "description": "Required. Resource name of the project that taxonomies to be exported will share.", "pattern": "^projects/[^/]+/locations/[^/]+$", "location": "path", "type": "string" } }, "description": "Exports all taxonomies and their policy tags in a project. This method generates SerializedTaxonomy protos with nested policy tags that can be used as an input for future ImportTaxonomies calls.", "parameterOrder": [ "parent" ], "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ] }, "get": { "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies/{taxonomiesId}", "path": "v1beta1/{+name}", "description": "Gets a taxonomy.", "response": { "$ref": "GoogleCloudDatacatalogV1beta1Taxonomy" }, "id": "datacatalog.projects.locations.taxonomies.get", "parameterOrder": [ "name" ], "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "parameters": { "name": { "type": "string", "required": true, "pattern": "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+$", "description": "Required. Resource name of the requested taxonomy.", "location": "path" } }, "httpMethod": "GET" }, "setIamPolicy": { "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "description": "Sets the IAM policy for a taxonomy or a policy tag.", "parameterOrder": [ "resource" ], "httpMethod": "POST", "parameters": { "resource": { "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.", "pattern": "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+$", "location": "path", "type": "string", "required": true } }, "id": "datacatalog.projects.locations.taxonomies.setIamPolicy", "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies/{taxonomiesId}:setIamPolicy", "path": "v1beta1/{+resource}:setIamPolicy", "response": { "$ref": "Policy" }, "request": { "$ref": "SetIamPolicyRequest" } }, "delete": { "parameters": { "name": { "pattern": "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+$", "location": "path", "type": "string", "description": "Required. Resource name of the taxonomy to be deleted. All policy tags in this taxonomy will also be deleted.", "required": true } }, "response": { "$ref": "Empty" }, "id": "datacatalog.projects.locations.taxonomies.delete", "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies/{taxonomiesId}", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "description": "Deletes a taxonomy. This operation will also delete all policy tags in this taxonomy along with their associated policies.", "parameterOrder": [ "name" ], "path": "v1beta1/{+name}", "httpMethod": "DELETE" }, "testIamPermissions": { "response": { "$ref": "TestIamPermissionsResponse" }, "request": { "$ref": "TestIamPermissionsRequest" }, "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies/{taxonomiesId}:testIamPermissions", "parameters": { "resource": { "required": true, "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.", "location": "path", "pattern": "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+$", "type": "string" } }, "id": "datacatalog.projects.locations.taxonomies.testIamPermissions", "description": "Returns the permissions that a caller has on the specified taxonomy or policy tag.", "httpMethod": "POST", "path": "v1beta1/{+resource}:testIamPermissions", "parameterOrder": [ "resource" ], "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ] }, "create": { "id": "datacatalog.projects.locations.taxonomies.create", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "httpMethod": "POST", "parameters": { "parent": { "description": "Required. Resource name of the project that the taxonomy will belong to.", "pattern": "^projects/[^/]+/locations/[^/]+$", "required": true, "type": "string", "location": "path" } }, "description": "Creates a taxonomy in the specified project.", "response": { "$ref": "GoogleCloudDatacatalogV1beta1Taxonomy" }, "request": { "$ref": "GoogleCloudDatacatalogV1beta1Taxonomy" }, "path": "v1beta1/{+parent}/taxonomies", "parameterOrder": [ "parent" ], "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies" }, "getIamPolicy": { "response": { "$ref": "Policy" }, "parameters": { "resource": { "location": "path", "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.", "pattern": "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+$", "required": true, "type": "string" } }, "description": "Gets the IAM policy for a taxonomy or a policy tag.", "path": "v1beta1/{+resource}:getIamPolicy", "request": { "$ref": "GetIamPolicyRequest" }, "parameterOrder": [ "resource" ], "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "id": "datacatalog.projects.locations.taxonomies.getIamPolicy", "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies/{taxonomiesId}:getIamPolicy", "httpMethod": "POST" } } }, "tagTemplates": { "methods": { "testIamPermissions": { "id": "datacatalog.projects.locations.tagTemplates.testIamPermissions", "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/tagTemplates/{tagTemplatesId}:testIamPermissions", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "parameterOrder": [ "resource" ], "parameters": { "resource": { "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.", "required": true, "pattern": "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+$", "type": "string", "location": "path" } }, "description": "Returns the caller's permissions on a resource. If the resource does not exist, an empty set of permissions is returned (We don't return a `NOT_FOUND` error). Supported resources are: - Tag templates. - Entries. - Entry groups. Note, this method cannot be used to manage policies for BigQuery, Pub/Sub and any external Google Cloud Platform resources synced to Data Catalog. A caller is not required to have Google IAM permission to make this request.", "httpMethod": "POST", "request": { "$ref": "TestIamPermissionsRequest" }, "response": { "$ref": "TestIamPermissionsResponse" }, "path": "v1beta1/{+resource}:testIamPermissions" }, "create": { "id": "datacatalog.projects.locations.tagTemplates.create", "parameterOrder": [ "parent" ], "description": "Creates a tag template. The user should enable the Data Catalog API in the project identified by the `parent` parameter (see [Data Catalog Resource Project](https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information).", "parameters": { "tagTemplateId": { "description": "Required. The id of the tag template to create.", "location": "query", "type": "string" }, "parent": { "pattern": "^projects/[^/]+/locations/[^/]+$", "required": true, "type": "string", "location": "path", "description": "Required. The name of the project and the template location [region](https://cloud.google.com/data-catalog/docs/concepts/regions. Example: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh projects/{project_id}/locations/us-central1" } }, "request": { "$ref": "GoogleCloudDatacatalogV1beta1TagTemplate" }, "httpMethod": "POST", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "path": "v1beta1/{+parent}/tagTemplates", "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/tagTemplates", "response": { "$ref": "GoogleCloudDatacatalogV1beta1TagTemplate" } }, "setIamPolicy": { "description": "Sets the access control policy for a resource. Replaces any existing policy. Supported resources are: - Tag templates. - Entries. - Entry groups. Note, this method cannot be used to manage policies for BigQuery, Pub/Sub and any external Google Cloud Platform resources synced to Data Catalog. Callers must have following Google IAM permission - `datacatalog.tagTemplates.setIamPolicy` to set policies on tag templates. - `datacatalog.entries.setIamPolicy` to set policies on entries. - `datacatalog.entryGroups.setIamPolicy` to set policies on entry groups.", "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/tagTemplates/{tagTemplatesId}:setIamPolicy", "request": { "$ref": "SetIamPolicyRequest" }, "id": "datacatalog.projects.locations.tagTemplates.setIamPolicy", "path": "v1beta1/{+resource}:setIamPolicy", "parameterOrder": [ "resource" ], "parameters": { "resource": { "pattern": "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+$", "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.", "required": true, "type": "string", "location": "path" } }, "httpMethod": "POST", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "response": { "$ref": "Policy" } }, "getIamPolicy": { "response": { "$ref": "Policy" }, "description": "Gets the access control policy for a resource. A `NOT_FOUND` error is returned if the resource does not exist. An empty policy is returned if the resource exists but does not have a policy set on it. Supported resources are: - Tag templates. - Entries. - Entry groups. Note, this method cannot be used to manage policies for BigQuery, Pub/Sub and any external Google Cloud Platform resources synced to Data Catalog. Callers must have following Google IAM permission - `datacatalog.tagTemplates.getIamPolicy` to get policies on tag templates. - `datacatalog.entries.getIamPolicy` to get policies on entries. - `datacatalog.entryGroups.getIamPolicy` to get policies on entry groups.", "parameterOrder": [ "resource" ], "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "request": { "$ref": "GetIamPolicyRequest" }, "parameters": { "resource": { "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.", "pattern": "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+$", "required": true, "type": "string", "location": "path" } }, "httpMethod": "POST", "path": "v1beta1/{+resource}:getIamPolicy", "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/tagTemplates/{tagTemplatesId}:getIamPolicy", "id": "datacatalog.projects.locations.tagTemplates.getIamPolicy" }, "get": { "path": "v1beta1/{+name}", "description": "Gets a tag template.", "parameterOrder": [ "name" ], "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "id": "datacatalog.projects.locations.tagTemplates.get", "response": { "$ref": "GoogleCloudDatacatalogV1beta1TagTemplate" }, "httpMethod": "GET", "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/tagTemplates/{tagTemplatesId}", "parameters": { "name": { "pattern": "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+$", "required": true, "type": "string", "description": "Required. The name of the tag template. Example: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}", "location": "path" } } }, "delete": { "description": "Deletes a tag template and all tags using the template. Users should enable the Data Catalog API in the project identified by the `name` parameter (see [Data Catalog Resource Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information).", "id": "datacatalog.projects.locations.tagTemplates.delete", "response": { "$ref": "Empty" }, "parameters": { "name": { "location": "path", "type": "string", "description": "Required. The name of the tag template to delete. Example: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}", "required": true, "pattern": "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+$" }, "force": { "type": "boolean", "location": "query", "description": "Required. Currently, this field must always be set to `true`. This confirms the deletion of any possible tags using this template. `force = false` will be supported in the future." } }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "parameterOrder": [ "name" ], "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/tagTemplates/{tagTemplatesId}", "httpMethod": "DELETE", "path": "v1beta1/{+name}" }, "patch": { "httpMethod": "PATCH", "id": "datacatalog.projects.locations.tagTemplates.patch", "request": { "$ref": "GoogleCloudDatacatalogV1beta1TagTemplate" }, "description": "Updates a tag template. This method cannot be used to update the fields of a template. The tag template fields are represented as separate resources and should be updated using their own create/update/delete methods. Users should enable the Data Catalog API in the project identified by the `tag_template.name` parameter (see [Data Catalog Resource Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information).", "path": "v1beta1/{+name}", "parameters": { "updateMask": { "type": "string", "format": "google-fieldmask", "description": "Names of fields whose values to overwrite on a tag template. Currently, only `display_name` can be overwritten. In general, if this parameter is absent or empty, all modifiable fields are overwritten. If such fields are non-required and omitted in the request body, their values are emptied.", "location": "query" }, "name": { "description": "The resource name of the tag template in URL format. Example: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id} Note that this TagTemplate and its child resources may not actually be stored in the location in this name.", "pattern": "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+$", "required": true, "location": "path", "type": "string" } }, "parameterOrder": [ "name" ], "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/tagTemplates/{tagTemplatesId}", "response": { "$ref": "GoogleCloudDatacatalogV1beta1TagTemplate" }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ] } }, "resources": { "fields": { "methods": { "create": { "parameterOrder": [ "parent" ], "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/tagTemplates/{tagTemplatesId}/fields", "parameters": { "parent": { "type": "string", "location": "path", "pattern": "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+$", "required": true, "description": "Required. The name of the project and the template location [region](https://cloud.google.com/data-catalog/docs/concepts/regions). Example: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh projects/{project_id}/locations/us-central1/tagTemplates/{tag_template_id}" }, "tagTemplateFieldId": { "description": "Required. The ID of the tag template field to create. Field ids can contain letters (both uppercase and lowercase), numbers (0-9), underscores (_) and dashes (-). Field IDs must be at least 1 character long and at most 128 characters long. Field IDs must also be unique within their template.", "type": "string", "location": "query" } }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "path": "v1beta1/{+parent}/fields", "httpMethod": "POST", "description": "Creates a field in a tag template. The user should enable the Data Catalog API in the project identified by the `parent` parameter (see [Data Catalog Resource Project](https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information).", "request": { "$ref": "GoogleCloudDatacatalogV1beta1TagTemplateField" }, "id": "datacatalog.projects.locations.tagTemplates.fields.create", "response": { "$ref": "GoogleCloudDatacatalogV1beta1TagTemplateField" } }, "patch": { "description": "Updates a field in a tag template. This method cannot be used to update the field type. Users should enable the Data Catalog API in the project identified by the `name` parameter (see [Data Catalog Resource Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information).", "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/tagTemplates/{tagTemplatesId}/fields/{fieldsId}", "path": "v1beta1/{+name}", "id": "datacatalog.projects.locations.tagTemplates.fields.patch", "httpMethod": "PATCH", "parameters": { "name": { "type": "string", "required": true, "location": "path", "pattern": "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+/fields/[^/]+$", "description": "Required. The name of the tag template field. Example: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}" }, "updateMask": { "format": "google-fieldmask", "description": "Optional. Names of fields whose values to overwrite on an individual field of a tag template. The following fields are modifiable: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `display_name` LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `type.enum_type` LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `is_required` If this parameter is absent or empty, all modifiable fields are overwritten. If such fields are non-required and omitted in the request body, their values are emptied with one exception: when updating an enum type, the provided values are merged with the existing values. Therefore, enum values can only be added, existing enum values cannot be deleted or renamed. Additionally, updating a template field from optional to required is *not* allowed.", "type": "string", "location": "query" } }, "request": { "$ref": "GoogleCloudDatacatalogV1beta1TagTemplateField" }, "response": { "$ref": "GoogleCloudDatacatalogV1beta1TagTemplateField" }, "parameterOrder": [ "name" ], "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ] }, "rename": { "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "parameters": { "name": { "required": true, "pattern": "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+/fields/[^/]+$", "description": "Required. The name of the tag template. Example: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}", "location": "path", "type": "string" } }, "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/tagTemplates/{tagTemplatesId}/fields/{fieldsId}:rename", "response": { "$ref": "GoogleCloudDatacatalogV1beta1TagTemplateField" }, "path": "v1beta1/{+name}:rename", "httpMethod": "POST", "parameterOrder": [ "name" ], "description": "Renames a field in a tag template. The user should enable the Data Catalog API in the project identified by the `name` parameter (see [Data Catalog Resource Project](https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information).", "id": "datacatalog.projects.locations.tagTemplates.fields.rename", "request": { "$ref": "GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldRequest" } }, "delete": { "parameters": { "name": { "type": "string", "description": "Required. The name of the tag template field to delete. Example: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}", "pattern": "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+/fields/[^/]+$", "location": "path", "required": true }, "force": { "description": "Required. Currently, this field must always be set to `true`. This confirms the deletion of this field from any tags using this field. `force = false` will be supported in the future.", "location": "query", "type": "boolean" } }, "description": "Deletes a field in a tag template and all uses of that field. Users should enable the Data Catalog API in the project identified by the `name` parameter (see [Data Catalog Resource Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information).", "parameterOrder": [ "name" ], "path": "v1beta1/{+name}", "id": "datacatalog.projects.locations.tagTemplates.fields.delete", "httpMethod": "DELETE", "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/tagTemplates/{tagTemplatesId}/fields/{fieldsId}", "response": { "$ref": "Empty" }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ] } }, "resources": { "enumValues": { "methods": { "rename": { "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/tagTemplates/{tagTemplatesId}/fields/{fieldsId}/enumValues/{enumValuesId}:rename", "httpMethod": "POST", "id": "datacatalog.projects.locations.tagTemplates.fields.enumValues.rename", "response": { "$ref": "GoogleCloudDatacatalogV1beta1TagTemplateField" }, "parameterOrder": [ "name" ], "description": "Renames an enum value in a tag template. The enum values have to be unique within one enum field. Thus, an enum value cannot be renamed with a name used in any other enum value within the same enum field.", "path": "v1beta1/{+name}:rename", "request": { "$ref": "GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldEnumValueRequest" }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "parameters": { "name": { "required": true, "location": "path", "type": "string", "description": "Required. The name of the enum field value. Example: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}/enumValues/{enum_value_display_name}", "pattern": "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+/fields/[^/]+/enumValues/[^/]+$" } } } } } } } } }, "entryGroups": { "methods": { "testIamPermissions": { "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "path": "v1beta1/{+resource}:testIamPermissions", "httpMethod": "POST", "parameters": { "resource": { "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$", "required": true, "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.", "type": "string", "location": "path" } }, "response": { "$ref": "TestIamPermissionsResponse" }, "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}:testIamPermissions", "parameterOrder": [ "resource" ], "description": "Returns the caller's permissions on a resource. If the resource does not exist, an empty set of permissions is returned (We don't return a `NOT_FOUND` error). Supported resources are: - Tag templates. - Entries. - Entry groups. Note, this method cannot be used to manage policies for BigQuery, Pub/Sub and any external Google Cloud Platform resources synced to Data Catalog. A caller is not required to have Google IAM permission to make this request.", "id": "datacatalog.projects.locations.entryGroups.testIamPermissions", "request": { "$ref": "TestIamPermissionsRequest" } }, "getIamPolicy": { "parameters": { "resource": { "location": "path", "type": "string", "required": true, "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$", "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field." } }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "response": { "$ref": "Policy" }, "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}:getIamPolicy", "description": "Gets the access control policy for a resource. A `NOT_FOUND` error is returned if the resource does not exist. An empty policy is returned if the resource exists but does not have a policy set on it. Supported resources are: - Tag templates. - Entries. - Entry groups. Note, this method cannot be used to manage policies for BigQuery, Pub/Sub and any external Google Cloud Platform resources synced to Data Catalog. Callers must have following Google IAM permission - `datacatalog.tagTemplates.getIamPolicy` to get policies on tag templates. - `datacatalog.entries.getIamPolicy` to get policies on entries. - `datacatalog.entryGroups.getIamPolicy` to get policies on entry groups.", "request": { "$ref": "GetIamPolicyRequest" }, "path": "v1beta1/{+resource}:getIamPolicy", "id": "datacatalog.projects.locations.entryGroups.getIamPolicy", "parameterOrder": [ "resource" ], "httpMethod": "POST" }, "list": { "parameters": { "parent": { "required": true, "location": "path", "pattern": "^projects/[^/]+/locations/[^/]+$", "type": "string", "description": "Required. The name of the location that contains the entry groups, which can be provided in URL format. Example: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh projects/{project_id}/locations/{location}" }, "pageToken": { "type": "string", "location": "query", "description": "Optional. Token that specifies which page is requested. If empty, the first page is returned." }, "pageSize": { "location": "query", "description": "Optional. The maximum number of items to return. Default is 10. Max limit is 1000. Throws an invalid argument for `page_size \u003e 1000`.", "type": "integer", "format": "int32" } }, "description": "Lists entry groups.", "path": "v1beta1/{+parent}/entryGroups", "httpMethod": "GET", "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "parameterOrder": [ "parent" ], "response": { "$ref": "GoogleCloudDatacatalogV1beta1ListEntryGroupsResponse" }, "id": "datacatalog.projects.locations.entryGroups.list" }, "patch": { "path": "v1beta1/{+name}", "id": "datacatalog.projects.locations.entryGroups.patch", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}", "parameterOrder": [ "name" ], "description": "Updates an EntryGroup. The user should enable the Data Catalog API in the project identified by the `entry_group.name` parameter (see [Data Catalog Resource Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information).", "httpMethod": "PATCH", "parameters": { "name": { "required": true, "location": "path", "description": "The resource name of the entry group in URL format. Example: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh projects/{project_id}/locations/{location}/entryGroups/{entry_group_id} Note that this EntryGroup and its child resources may not actually be stored in the location in this name.", "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$", "type": "string" }, "updateMask": { "location": "query", "description": "Names of fields whose values to overwrite on an entry group. If this parameter is absent or empty, all modifiable fields are overwritten. If such fields are non-required and omitted in the request body, their values are emptied.", "format": "google-fieldmask", "type": "string" } }, "request": { "$ref": "GoogleCloudDatacatalogV1beta1EntryGroup" }, "response": { "$ref": "GoogleCloudDatacatalogV1beta1EntryGroup" } }, "create": { "parameterOrder": [ "parent" ], "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups", "response": { "$ref": "GoogleCloudDatacatalogV1beta1EntryGroup" }, "path": "v1beta1/{+parent}/entryGroups", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "request": { "$ref": "GoogleCloudDatacatalogV1beta1EntryGroup" }, "description": "A maximum of 10,000 entry groups may be created per organization across all locations. Users should enable the Data Catalog API in the project identified by the `parent` parameter (see [Data Catalog Resource Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information).", "parameters": { "entryGroupId": { "description": "Required. The id of the entry group to create. The id must begin with a letter or underscore, contain only English letters, numbers and underscores, and be at most 64 characters.", "location": "query", "type": "string" }, "parent": { "type": "string", "location": "path", "pattern": "^projects/[^/]+/locations/[^/]+$", "required": true, "description": "Required. The name of the project this entry group is in. Example: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh projects/{project_id}/locations/{location} Note that this EntryGroup and its child resources may not actually be stored in the location in this name." } }, "id": "datacatalog.projects.locations.entryGroups.create", "httpMethod": "POST" }, "setIamPolicy": { "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}:setIamPolicy", "httpMethod": "POST", "response": { "$ref": "Policy" }, "parameters": { "resource": { "location": "path", "type": "string", "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.", "required": true, "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$" } }, "request": { "$ref": "SetIamPolicyRequest" }, "parameterOrder": [ "resource" ], "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "id": "datacatalog.projects.locations.entryGroups.setIamPolicy", "description": "Sets the access control policy for a resource. Replaces any existing policy. Supported resources are: - Tag templates. - Entries. - Entry groups. Note, this method cannot be used to manage policies for BigQuery, Pub/Sub and any external Google Cloud Platform resources synced to Data Catalog. Callers must have following Google IAM permission - `datacatalog.tagTemplates.setIamPolicy` to set policies on tag templates. - `datacatalog.entries.setIamPolicy` to set policies on entries. - `datacatalog.entryGroups.setIamPolicy` to set policies on entry groups.", "path": "v1beta1/{+resource}:setIamPolicy" }, "get": { "httpMethod": "GET", "description": "Gets an EntryGroup.", "parameters": { "name": { "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$", "description": "Required. The name of the entry group. For example, `projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}`.", "location": "path", "type": "string", "required": true }, "readMask": { "type": "string", "location": "query", "format": "google-fieldmask", "description": "The fields to return. If not set or empty, all fields are returned." } }, "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "response": { "$ref": "GoogleCloudDatacatalogV1beta1EntryGroup" }, "path": "v1beta1/{+name}", "parameterOrder": [ "name" ], "id": "datacatalog.projects.locations.entryGroups.get" }, "delete": { "response": { "$ref": "Empty" }, "path": "v1beta1/{+name}", "httpMethod": "DELETE", "description": "Deletes an EntryGroup. Only entry groups that do not contain entries can be deleted. Users should enable the Data Catalog API in the project identified by the `name` parameter (see [Data Catalog Resource Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information).", "parameters": { "name": { "type": "string", "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$", "location": "path", "required": true, "description": "Required. The name of the entry group. For example, `projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}`." }, "force": { "description": "Optional. If true, deletes all entries in the entry group.", "type": "boolean", "location": "query" } }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}", "id": "datacatalog.projects.locations.entryGroups.delete", "parameterOrder": [ "name" ] } }, "resources": { "entries": { "methods": { "testIamPermissions": { "path": "v1beta1/{+resource}:testIamPermissions", "parameters": { "resource": { "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.", "location": "path", "type": "string", "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+$", "required": true } }, "request": { "$ref": "TestIamPermissionsRequest" }, "parameterOrder": [ "resource" ], "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "response": { "$ref": "TestIamPermissionsResponse" }, "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/entries/{entriesId}:testIamPermissions", "id": "datacatalog.projects.locations.entryGroups.entries.testIamPermissions", "description": "Returns the caller's permissions on a resource. If the resource does not exist, an empty set of permissions is returned (We don't return a `NOT_FOUND` error). Supported resources are: - Tag templates. - Entries. - Entry groups. Note, this method cannot be used to manage policies for BigQuery, Pub/Sub and any external Google Cloud Platform resources synced to Data Catalog. A caller is not required to have Google IAM permission to make this request.", "httpMethod": "POST" }, "delete": { "response": { "$ref": "Empty" }, "path": "v1beta1/{+name}", "parameterOrder": [ "name" ], "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "id": "datacatalog.projects.locations.entryGroups.entries.delete", "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/entries/{entriesId}", "httpMethod": "DELETE", "parameters": { "name": { "description": "Required. The name of the entry. Example: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}", "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+$", "location": "path", "required": true, "type": "string" } }, "description": "Deletes an existing entry. Only entries created through CreateEntry method can be deleted. Users should enable the Data Catalog API in the project identified by the `name` parameter (see [Data Catalog Resource Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information)." }, "patch": { "httpMethod": "PATCH", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "parameters": { "name": { "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+$", "description": "Output only. The Data Catalog resource name of the entry in URL format. Example: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id} Note that this Entry and its child resources may not actually be stored in the location in this name.", "required": true, "type": "string", "location": "path" }, "updateMask": { "location": "query", "format": "google-fieldmask", "type": "string", "description": "Names of fields whose values to overwrite on an entry. If this parameter is absent or empty, all modifiable fields are overwritten. If such fields are non-required and omitted in the request body, their values are emptied. The following fields are modifiable: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh For entries with type `DATA_STREAM`: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `schema` LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh For entries with type `FILESET`: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `schema` LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `display_name` LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `description` LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `gcs_fileset_spec` LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `gcs_fileset_spec.file_patterns` LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh For entries with `user_specified_type`: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `schema` LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `display_name` LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `description` LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `user_specified_type` LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `user_specified_system` LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `linked_resource` LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `source_system_timestamps`" } }, "path": "v1beta1/{+name}", "parameterOrder": [ "name" ], "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/entries/{entriesId}", "description": "Updates an existing entry. Users should enable the Data Catalog API in the project identified by the `entry.name` parameter (see [Data Catalog Resource Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information).", "request": { "$ref": "GoogleCloudDatacatalogV1beta1Entry" }, "id": "datacatalog.projects.locations.entryGroups.entries.patch", "response": { "$ref": "GoogleCloudDatacatalogV1beta1Entry" } }, "create": { "httpMethod": "POST", "response": { "$ref": "GoogleCloudDatacatalogV1beta1Entry" }, "parameters": { "entryId": { "type": "string", "location": "query", "description": "Required. The id of the entry to create." }, "parent": { "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$", "location": "path", "type": "string", "required": true, "description": "Required. The name of the entry group this entry is in. Example: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh projects/{project_id}/locations/{location}/entryGroups/{entry_group_id} Note that this Entry and its child resources may not actually be stored in the location in this name." } }, "request": { "$ref": "GoogleCloudDatacatalogV1beta1Entry" }, "description": "Creates an entry. Only entries of 'FILESET' type or user-specified type can be created. Users should enable the Data Catalog API in the project identified by the `parent` parameter (see [Data Catalog Resource Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information). A maximum of 100,000 entries may be created per entry group.", "id": "datacatalog.projects.locations.entryGroups.entries.create", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "parameterOrder": [ "parent" ], "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/entries", "path": "v1beta1/{+parent}/entries" }, "list": { "description": "Lists entries.", "parameters": { "readMask": { "type": "string", "location": "query", "format": "google-fieldmask", "description": "The fields to return for each Entry. If not set or empty, all fields are returned. For example, setting read_mask to contain only one path \"name\" will cause ListEntries to return a list of Entries with only \"name\" field." }, "pageSize": { "type": "integer", "format": "int32", "description": "The maximum number of items to return. Default is 10. Max limit is 1000. Throws an invalid argument for `page_size \u003e 1000`.", "location": "query" }, "pageToken": { "type": "string", "location": "query", "description": "Token that specifies which page is requested. If empty, the first page is returned." }, "parent": { "description": "Required. The name of the entry group that contains the entries, which can be provided in URL format. Example: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}", "type": "string", "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$", "location": "path", "required": true } }, "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/entries", "parameterOrder": [ "parent" ], "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "httpMethod": "GET", "path": "v1beta1/{+parent}/entries", "response": { "$ref": "GoogleCloudDatacatalogV1beta1ListEntriesResponse" }, "id": "datacatalog.projects.locations.entryGroups.entries.list" }, "getIamPolicy": { "request": { "$ref": "GetIamPolicyRequest" }, "response": { "$ref": "Policy" }, "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/entries/{entriesId}:getIamPolicy", "parameters": { "resource": { "required": true, "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.", "type": "string", "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+$", "location": "path" } }, "id": "datacatalog.projects.locations.entryGroups.entries.getIamPolicy", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "parameterOrder": [ "resource" ], "path": "v1beta1/{+resource}:getIamPolicy", "description": "Gets the access control policy for a resource. A `NOT_FOUND` error is returned if the resource does not exist. An empty policy is returned if the resource exists but does not have a policy set on it. Supported resources are: - Tag templates. - Entries. - Entry groups. Note, this method cannot be used to manage policies for BigQuery, Pub/Sub and any external Google Cloud Platform resources synced to Data Catalog. Callers must have following Google IAM permission - `datacatalog.tagTemplates.getIamPolicy` to get policies on tag templates. - `datacatalog.entries.getIamPolicy` to get policies on entries. - `datacatalog.entryGroups.getIamPolicy` to get policies on entry groups.", "httpMethod": "POST" }, "get": { "path": "v1beta1/{+name}", "description": "Gets an entry.", "httpMethod": "GET", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "id": "datacatalog.projects.locations.entryGroups.entries.get", "parameterOrder": [ "name" ], "response": { "$ref": "GoogleCloudDatacatalogV1beta1Entry" }, "parameters": { "name": { "type": "string", "description": "Required. The name of the entry. Example: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}", "required": true, "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+$", "location": "path" } }, "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/entries/{entriesId}" } }, "resources": { "tags": { "methods": { "patch": { "parameters": { "updateMask": { "description": "Note: Currently, this parameter can only take `\"fields\"` as value. Names of fields whose values to overwrite on a tag. Currently, a tag has the only modifiable field with the name `fields`. In general, if this parameter is absent or empty, all modifiable fields are overwritten. If such fields are non-required and omitted in the request body, their values are emptied.", "format": "google-fieldmask", "type": "string", "location": "query" }, "name": { "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+/tags/[^/]+$", "type": "string", "location": "path", "description": "The resource name of the tag in URL format. Example: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh projects/{project_id}/locations/{location}/entrygroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id} where `tag_id` is a system-generated identifier. Note that this Tag may not actually be stored in the location in this name.", "required": true } }, "description": "Updates an existing tag.", "response": { "$ref": "GoogleCloudDatacatalogV1beta1Tag" }, "id": "datacatalog.projects.locations.entryGroups.entries.tags.patch", "request": { "$ref": "GoogleCloudDatacatalogV1beta1Tag" }, "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/entries/{entriesId}/tags/{tagsId}", "path": "v1beta1/{+name}", "parameterOrder": [ "name" ], "httpMethod": "PATCH", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ] }, "list": { "parameters": { "pageToken": { "type": "string", "location": "query", "description": "Token that specifies which page is requested. If empty, the first page is returned." }, "pageSize": { "location": "query", "description": "The maximum number of tags to return. Default is 10. Max limit is 1000.", "type": "integer", "format": "int32" }, "parent": { "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+$", "type": "string", "required": true, "description": "Required. The name of the Data Catalog resource to list the tags of. The resource could be an Entry or an EntryGroup. Examples: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh projects/{project_id}/locations/{location}/entryGroups/{entry_group_id} LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}", "location": "path" } }, "response": { "$ref": "GoogleCloudDatacatalogV1beta1ListTagsResponse" }, "id": "datacatalog.projects.locations.entryGroups.entries.tags.list", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/entries/{entriesId}/tags", "httpMethod": "GET", "parameterOrder": [ "parent" ], "path": "v1beta1/{+parent}/tags", "description": "Lists tags assigned to an Entry. The columns in the response are lowercased." }, "delete": { "id": "datacatalog.projects.locations.entryGroups.entries.tags.delete", "path": "v1beta1/{+name}", "parameterOrder": [ "name" ], "response": { "$ref": "Empty" }, "description": "Deletes a tag.", "parameters": { "name": { "required": true, "location": "path", "description": "Required. The name of the tag to delete. Example: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id}", "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+/tags/[^/]+$", "type": "string" } }, "httpMethod": "DELETE", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/entries/{entriesId}/tags/{tagsId}" }, "create": { "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/entries/{entriesId}/tags", "parameters": { "parent": { "location": "path", "description": "Required. The name of the resource to attach this tag to. Tags can be attached to Entries. Example: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id} Note that this Tag and its child resources may not actually be stored in the location in this name.", "required": true, "type": "string", "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+$" } }, "parameterOrder": [ "parent" ], "request": { "$ref": "GoogleCloudDatacatalogV1beta1Tag" }, "path": "v1beta1/{+parent}/tags", "httpMethod": "POST", "id": "datacatalog.projects.locations.entryGroups.entries.tags.create", "description": "Creates a tag on an Entry. Note: The project identified by the `parent` parameter for the [tag](https://cloud.google.com/data-catalog/docs/reference/rest/v1beta1/projects.locations.entryGroups.entries.tags/create#path-parameters) and the [tag template](https://cloud.google.com/data-catalog/docs/reference/rest/v1beta1/projects.locations.tagTemplates/create#path-parameters) used to create the tag must be from the same organization.", "response": { "$ref": "GoogleCloudDatacatalogV1beta1Tag" }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ] } } } } }, "tags": { "methods": { "list": { "parameterOrder": [ "parent" ], "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/tags", "id": "datacatalog.projects.locations.entryGroups.tags.list", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "path": "v1beta1/{+parent}/tags", "response": { "$ref": "GoogleCloudDatacatalogV1beta1ListTagsResponse" }, "httpMethod": "GET", "parameters": { "pageToken": { "description": "Token that specifies which page is requested. If empty, the first page is returned.", "location": "query", "type": "string" }, "pageSize": { "description": "The maximum number of tags to return. Default is 10. Max limit is 1000.", "format": "int32", "location": "query", "type": "integer" }, "parent": { "description": "Required. The name of the Data Catalog resource to list the tags of. The resource could be an Entry or an EntryGroup. Examples: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh projects/{project_id}/locations/{location}/entryGroups/{entry_group_id} LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}", "location": "path", "type": "string", "required": true, "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$" } }, "description": "Lists tags assigned to an Entry. The columns in the response are lowercased." }, "patch": { "response": { "$ref": "GoogleCloudDatacatalogV1beta1Tag" }, "parameterOrder": [ "name" ], "path": "v1beta1/{+name}", "request": { "$ref": "GoogleCloudDatacatalogV1beta1Tag" }, "id": "datacatalog.projects.locations.entryGroups.tags.patch", "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/tags/{tagsId}", "description": "Updates an existing tag.", "httpMethod": "PATCH", "parameters": { "name": { "description": "The resource name of the tag in URL format. Example: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh projects/{project_id}/locations/{location}/entrygroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id} where `tag_id` is a system-generated identifier. Note that this Tag may not actually be stored in the location in this name.", "required": true, "location": "path", "type": "string", "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/tags/[^/]+$" }, "updateMask": { "format": "google-fieldmask", "location": "query", "description": "Note: Currently, this parameter can only take `\"fields\"` as value. Names of fields whose values to overwrite on a tag. Currently, a tag has the only modifiable field with the name `fields`. In general, if this parameter is absent or empty, all modifiable fields are overwritten. If such fields are non-required and omitted in the request body, their values are emptied.", "type": "string" } }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ] }, "delete": { "parameterOrder": [ "name" ], "httpMethod": "DELETE", "path": "v1beta1/{+name}", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "response": { "$ref": "Empty" }, "parameters": { "name": { "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/tags/[^/]+$", "location": "path", "required": true, "type": "string", "description": "Required. The name of the tag to delete. Example: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id}" } }, "id": "datacatalog.projects.locations.entryGroups.tags.delete", "description": "Deletes a tag.", "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/tags/{tagsId}" }, "create": { "path": "v1beta1/{+parent}/tags", "parameterOrder": [ "parent" ], "httpMethod": "POST", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "response": { "$ref": "GoogleCloudDatacatalogV1beta1Tag" }, "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/tags", "parameters": { "parent": { "required": true, "location": "path", "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$", "type": "string", "description": "Required. The name of the resource to attach this tag to. Tags can be attached to Entries. Example: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id} Note that this Tag and its child resources may not actually be stored in the location in this name." } }, "id": "datacatalog.projects.locations.entryGroups.tags.create", "request": { "$ref": "GoogleCloudDatacatalogV1beta1Tag" }, "description": "Creates a tag on an Entry. Note: The project identified by the `parent` parameter for the [tag](https://cloud.google.com/data-catalog/docs/reference/rest/v1beta1/projects.locations.entryGroups.entries.tags/create#path-parameters) and the [tag template](https://cloud.google.com/data-catalog/docs/reference/rest/v1beta1/projects.locations.tagTemplates/create#path-parameters) used to create the tag must be from the same organization." } } } } } } } } }, "catalog": { "methods": { "search": { "request": { "$ref": "GoogleCloudDatacatalogV1beta1SearchCatalogRequest" }, "parameterOrder": [], "response": { "$ref": "GoogleCloudDatacatalogV1beta1SearchCatalogResponse" }, "description": "Searches Data Catalog for multiple resources like entries, tags that match a query. This is a custom method (https://cloud.google.com/apis/design/custom_methods) and does not return the complete resource, only the resource identifier and high level fields. Clients can subsequently call `Get` methods. Note that Data Catalog search queries do not guarantee full recall. Query results that match your query may not be returned, even in subsequent result pages. Also note that results returned (and not returned) can vary across repeated search queries. See [Data Catalog Search Syntax](https://cloud.google.com/data-catalog/docs/how-to/search-reference) for more information.", "id": "datacatalog.catalog.search", "path": "v1beta1/catalog:search", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "httpMethod": "POST", "parameters": {}, "flatPath": "v1beta1/catalog:search" } } } }, "kind": "discovery#restDescription", "batchPath": "batch" }
]===]))
