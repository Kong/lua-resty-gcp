local decode = require("cjson").new().decode
return assert(decode([===[
{ "basePath": "", "documentationLink": "https://cloud.google.com/document-ai/docs/", "id": "documentai:v1", "ownerDomain": "google.com", "batchPath": "batch", "fullyEncodeReservedExpansion": true, "version_module": true, "servicePath": "", "parameters": { "uploadType": { "type": "string", "location": "query", "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")." }, "fields": { "description": "Selector specifying which fields to include in a partial response.", "type": "string", "location": "query" }, "oauth_token": { "type": "string", "location": "query", "description": "OAuth 2.0 token for the current user." }, "prettyPrint": { "type": "boolean", "location": "query", "description": "Returns response with indentations and line breaks.", "default": "true" }, "key": { "type": "string", "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "location": "query" }, "callback": { "location": "query", "type": "string", "description": "JSONP" }, "quotaUser": { "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", "location": "query", "type": "string" }, "access_token": { "location": "query", "description": "OAuth access token.", "type": "string" }, "upload_protocol": { "type": "string", "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").", "location": "query" }, "alt": { "type": "string", "default": "json", "enum": [ "json", "media", "proto" ], "enumDescriptions": [ "Responses with Content-Type of application/json", "Media download with context-dependent Content-Type", "Responses with Content-Type of application/x-protobuf" ], "location": "query", "description": "Data format for response." }, "$.xgafv": { "enumDescriptions": [ "v1 error format", "v2 error format" ], "enum": [ "1", "2" ], "type": "string", "location": "query", "description": "V1 error format." } }, "revision": "20220621", "protocol": "rest", "name": "documentai", "kind": "discovery#restDescription", "mtlsRootUrl": "https://documentai.mtls.googleapis.com/", "auth": { "oauth2": { "scopes": { "https://www.googleapis.com/auth/cloud-platform": { "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account." } } } }, "schemas": { "GoogleCloudDocumentaiV1UndeployProcessorVersionRequest": { "properties": {}, "id": "GoogleCloudDocumentaiV1UndeployProcessorVersionRequest", "description": "Request message for the undeploy processor version method.", "type": "object" }, "GoogleCloudDocumentaiV1beta2DocumentProvenanceParent": { "description": "The parent element the current element is based on. Used for referencing/aligning, removal and replacement operations.", "properties": { "index": { "type": "integer", "description": "The index of the parent item in the corresponding item list (eg. list of entities, properties within entities, etc.) in the parent revision.", "format": "int32" }, "id": { "format": "int32", "type": "integer", "description": "The id of the parent provenance." }, "revision": { "format": "int32", "type": "integer", "description": "The index of the index into current revision's parent_ids list." } }, "type": "object", "id": "GoogleCloudDocumentaiV1beta2DocumentProvenanceParent" }, "GoogleCloudDocumentaiV1beta2DocumentProvenance": { "description": "Structure to identify provenance relationships between annotations in different revisions.", "properties": { "id": { "format": "int32", "type": "integer", "description": "The Id of this operation. Needs to be unique within the scope of the revision." }, "type": { "enum": [ "OPERATION_TYPE_UNSPECIFIED", "ADD", "REMOVE", "REPLACE", "EVAL_REQUESTED", "EVAL_APPROVED", "EVAL_SKIPPED" ], "enumDescriptions": [ "Operation type unspecified. If no operation is specified a provenance entry is simply used to match against a `parent`.", "Add an element.", "Remove an element identified by `parent`.", "Replace an element identified by `parent`.", "Request human review for the element identified by `parent`.", "Element is reviewed and approved at human review, confidence will be set to 1.0.", "Element is skipped in the validation process." ], "type": "string", "description": "The type of provenance operation." }, "parents": { "type": "array", "items": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenanceParent" }, "description": "References to the original elements that are replaced." }, "revision": { "type": "integer", "description": "The index of the revision that produced this element.", "format": "int32" } }, "type": "object", "id": "GoogleCloudDocumentaiV1beta2DocumentProvenance" }, "GoogleCloudDocumentaiV1DocumentSchemaMetadata": { "type": "object", "id": "GoogleCloudDocumentaiV1DocumentSchemaMetadata", "description": "Metadata for global schema behavior.", "properties": { "documentAllowMultipleLabels": { "type": "boolean", "description": "If true, on a given page, there can be multiple `document` annotations covering it." }, "documentSplitter": { "description": "If true, a `document` entity type can be applied to subdocument ( splitting). Otherwise, it can only be applied to the entire document (classification).", "type": "boolean" } } }, "GoogleCloudDocumentaiV1beta3DisableProcessorMetadata": { "description": "The long running operation metadata for disable processor method.", "id": "GoogleCloudDocumentaiV1beta3DisableProcessorMetadata", "properties": { "commonMetadata": { "description": "The basic metadata of the long running operation.", "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata" } }, "type": "object" }, "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage": { "id": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage", "description": "Detected language for a structural component.", "type": "object", "properties": { "confidence": { "type": "number", "description": "Confidence of detected language. Range [0, 1].", "format": "float" }, "languageCode": { "type": "string", "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier." } } }, "GoogleCloudDocumentaiV1beta2NormalizedVertex": { "description": "A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.", "properties": { "y": { "format": "float", "description": "Y coordinate (starts from the top of the image).", "type": "number" }, "x": { "description": "X coordinate.", "format": "float", "type": "number" } }, "id": "GoogleCloudDocumentaiV1beta2NormalizedVertex", "type": "object" }, "GoogleCloudDocumentaiV1Vertex": { "id": "GoogleCloudDocumentaiV1Vertex", "properties": { "x": { "type": "integer", "description": "X coordinate.", "format": "int32" }, "y": { "type": "integer", "description": "Y coordinate (starts from the top of the image).", "format": "int32" } }, "description": "A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.", "type": "object" }, "GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionMetadata": { "description": "Metadata message associated with the ExportProcessorVersion operation.", "id": "GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionMetadata", "type": "object", "properties": { "commonMetadata": { "description": "The common metadata about the operation.", "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata" } } }, "GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionMetadata": { "type": "object", "description": "The long running operation metadata for the undeploy processor version method.", "properties": { "commonMetadata": { "description": "The basic metadata of the long running operation.", "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata" } }, "id": "GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionMetadata" }, "GoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef": { "id": "GoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef", "properties": { "confidence": { "type": "number", "description": "Optional. Confidence of detected page element, if applicable. Range [0, 1].", "format": "float" }, "layoutType": { "enumDescriptions": [ "Layout Unspecified.", "References a Page.blocks element.", "References a Page.paragraphs element.", "References a Page.lines element.", "References a Page.tokens element.", "References a Page.visual_elements element.", "Refrrences a Page.tables element.", "References a Page.form_fields element." ], "enum": [ "LAYOUT_TYPE_UNSPECIFIED", "BLOCK", "PARAGRAPH", "LINE", "TOKEN", "VISUAL_ELEMENT", "TABLE", "FORM_FIELD" ], "type": "string", "description": "Optional. The type of the layout element that is being referenced if any." }, "page": { "type": "string", "description": "Required. Index into the Document.pages element, for example using Document.pages to locate the related page element. This field is skipped when its value is the default 0. See https://developers.google.com/protocol-buffers/docs/proto3#json.", "format": "int64" }, "layoutId": { "type": "string", "description": "Optional. Deprecated. Use PageRef.bounding_poly instead." }, "boundingPoly": { "$ref": "GoogleCloudDocumentaiV1beta2BoundingPoly", "description": "Optional. Identifies the bounding polygon of a layout element on the page." } }, "description": "Represents a weak reference to a page element within a document.", "type": "object" }, "GoogleCloudDocumentaiV1beta1Vertex": { "type": "object", "properties": { "y": { "format": "int32", "description": "Y coordinate (starts from the top of the image).", "type": "integer" }, "x": { "description": "X coordinate.", "type": "integer", "format": "int32" } }, "id": "GoogleCloudDocumentaiV1beta1Vertex", "description": "A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image." }, "GoogleCloudDocumentaiV1beta3DisableProcessorResponse": { "type": "object", "id": "GoogleCloudDocumentaiV1beta3DisableProcessorResponse", "description": "Response message for the disable processor method. Intentionally empty proto for adding fields in future.", "properties": {} }, "GoogleCloudDocumentaiV1DocumentTextChange": { "properties": { "provenance": { "type": "array", "description": "The history of this annotation.", "items": { "$ref": "GoogleCloudDocumentaiV1DocumentProvenance" } }, "changedText": { "type": "string", "description": "The text that replaces the text identified in the `text_anchor`." }, "textAnchor": { "description": "Provenance of the correction. Text anchor indexing into the Document.text. There can only be a single `TextAnchor.text_segments` element. If the start and end index of the text segment are the same, the text change is inserted before that index.", "$ref": "GoogleCloudDocumentaiV1DocumentTextAnchor" } }, "description": "This message is used for text changes aka. OCR corrections.", "type": "object", "id": "GoogleCloudDocumentaiV1DocumentTextChange" }, "GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionMetadata": { "description": "Metadata of the EvaluateProcessorVersion method.", "properties": { "commonMetadata": { "description": "The basic metadata of the long running operation.", "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata" } }, "type": "object", "id": "GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionMetadata" }, "GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak": { "description": "Detected break at the end of a Token.", "properties": { "type": { "enum": [ "TYPE_UNSPECIFIED", "SPACE", "WIDE_SPACE", "HYPHEN" ], "enumDescriptions": [ "Unspecified break type.", "A single whitespace.", "A wider whitespace.", "A hyphen that indicates that a token has been split across lines." ], "description": "Detected break type.", "type": "string" } }, "id": "GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak", "type": "object" }, "GoogleCloudDocumentaiV1beta3EnableProcessorMetadata": { "description": "The long running operation metadata for enable processor method.", "type": "object", "properties": { "commonMetadata": { "description": "The basic metadata of the long running operation.", "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata" } }, "id": "GoogleCloudDocumentaiV1beta3EnableProcessorMetadata" }, "GoogleCloudDocumentaiV1DocumentProvenance": { "id": "GoogleCloudDocumentaiV1DocumentProvenance", "type": "object", "properties": { "id": { "format": "int32", "description": "The Id of this operation. Needs to be unique within the scope of the revision.", "type": "integer" }, "revision": { "type": "integer", "format": "int32", "description": "The index of the revision that produced this element." }, "parents": { "type": "array", "items": { "$ref": "GoogleCloudDocumentaiV1DocumentProvenanceParent" }, "description": "References to the original elements that are replaced." }, "type": { "enum": [ "OPERATION_TYPE_UNSPECIFIED", "ADD", "REMOVE", "REPLACE", "EVAL_REQUESTED", "EVAL_APPROVED", "EVAL_SKIPPED" ], "description": "The type of provenance operation.", "type": "string", "enumDescriptions": [ "Operation type unspecified. If no operation is specified a provenance entry is simply used to match against a `parent`.", "Add an element.", "Remove an element identified by `parent`.", "Replace an element identified by `parent`.", "Request human review for the element identified by `parent`.", "Element is reviewed and approved at human review, confidence will be set to 1.0.", "Element is skipped in the validation process." ] } }, "description": "Structure to identify provenance relationships between annotations in different revisions." }, "GoogleCloudLocationListLocationsResponse": { "properties": { "nextPageToken": { "type": "string", "description": "The standard List next-page token." }, "locations": { "items": { "$ref": "GoogleCloudLocationLocation" }, "description": "A list of locations that matches the specified filter in the request.", "type": "array" } }, "description": "The response message for Locations.ListLocations.", "id": "GoogleCloudLocationListLocationsResponse", "type": "object" }, "GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment": { "description": "A text segment in the Document.text. The indices may be out of bounds which indicate that the text extends into another document shard for large sharded documents. See ShardInfo.text_offset", "properties": { "startIndex": { "format": "int64", "description": "TextSegment start UTF-8 char index in the Document.text.", "type": "string" }, "endIndex": { "description": "TextSegment half open end UTF-8 char index in the Document.text.", "type": "string", "format": "int64" } }, "id": "GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment", "type": "object" }, "GoogleCloudDocumentaiV1beta3ReviewDocumentOperationMetadata": { "properties": { "stateMessage": { "description": "A message providing more details about the current state of processing. For example, the error message if the operation is failed.", "type": "string" }, "questionId": { "description": "The Crowd Compute question ID.", "type": "string" }, "state": { "enum": [ "STATE_UNSPECIFIED", "RUNNING", "CANCELLING", "SUCCEEDED", "FAILED", "CANCELLED" ], "description": "Used only when Operation.done is false.", "type": "string", "enumDescriptions": [ "Unspecified state.", "Operation is still running.", "Operation is being cancelled.", "Operation succeeded.", "Operation failed.", "Operation is cancelled." ] }, "createTime": { "description": "The creation time of the operation.", "type": "string", "format": "google-datetime" }, "updateTime": { "type": "string", "description": "The last update time of the operation.", "format": "google-datetime" }, "commonMetadata": { "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata", "description": "The basic metadata of the long running operation." } }, "type": "object", "description": "The long running operation metadata for review document method.", "id": "GoogleCloudDocumentaiV1beta3ReviewDocumentOperationMetadata" }, "GoogleCloudDocumentaiUiv1beta3DeleteDataLabelingJobOperationMetadata": { "properties": { "commonMetadata": { "description": "The basic metadata of the long running operation.", "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata" } }, "type": "object", "id": "GoogleCloudDocumentaiUiv1beta3DeleteDataLabelingJobOperationMetadata", "description": "The long running operation metadata for DeleteDataLabelingJob." }, "GoogleCloudDocumentaiV1beta1GcsDestination": { "type": "object", "properties": { "uri": { "type": "string" } }, "id": "GoogleCloudDocumentaiV1beta1GcsDestination", "description": "The Google Cloud Storage location where the output file will be written to." }, "GoogleCloudDocumentaiV1beta1DocumentPageLayout": { "id": "GoogleCloudDocumentaiV1beta1DocumentPageLayout", "properties": { "boundingPoly": { "description": "The bounding polygon for the Layout.", "$ref": "GoogleCloudDocumentaiV1beta1BoundingPoly" }, "confidence": { "format": "float", "description": "Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range [0, 1].", "type": "number" }, "textAnchor": { "description": "Text anchor indexing into the Document.text.", "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor" }, "orientation": { "enumDescriptions": [ "Unspecified orientation.", "Orientation is aligned with page up.", "Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.", "Orientation is aligned with page down. Turn the head 180 degrees from upright to read.", "Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read." ], "description": "Detected orientation for the Layout.", "enum": [ "ORIENTATION_UNSPECIFIED", "PAGE_UP", "PAGE_RIGHT", "PAGE_DOWN", "PAGE_LEFT" ], "type": "string" } }, "type": "object", "description": "Visual element describing a layout unit on a page." }, "GoogleCloudDocumentaiV1DocumentPageLine": { "type": "object", "id": "GoogleCloudDocumentaiV1DocumentPageLine", "properties": { "layout": { "description": "Layout for Line.", "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout" }, "detectedLanguages": { "type": "array", "description": "A list of detected languages together with confidence.", "items": { "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage" } }, "provenance": { "description": "The history of this annotation.", "$ref": "GoogleCloudDocumentaiV1DocumentProvenance" } }, "description": "A collection of tokens that a human would perceive as a line. Does not cross column boundaries, can be horizontal, vertical, etc." }, "GoogleCloudDocumentaiV1beta1DocumentTextChange": { "properties": { "provenance": { "type": "array", "items": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance" }, "description": "The history of this annotation." }, "textAnchor": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor", "description": "Provenance of the correction. Text anchor indexing into the Document.text. There can only be a single `TextAnchor.text_segments` element. If the start and end index of the text segment are the same, the text change is inserted before that index." }, "changedText": { "description": "The text that replaces the text identified in the `text_anchor`.", "type": "string" } }, "description": "This message is used for text changes aka. OCR corrections.", "id": "GoogleCloudDocumentaiV1beta1DocumentTextChange", "type": "object" }, "GoogleCloudDocumentaiV1DocumentShardInfo": { "type": "object", "id": "GoogleCloudDocumentaiV1DocumentShardInfo", "description": "For a large document, sharding may be performed to produce several document shards. Each document shard contains this field to detail which shard it is.", "properties": { "shardIndex": { "type": "string", "format": "int64", "description": "The 0-based index of this shard." }, "textOffset": { "format": "int64", "type": "string", "description": "The index of the first character in Document.text in the overall document global text." }, "shardCount": { "type": "string", "description": "Total number of shards.", "format": "int64" } } }, "GoogleCloudDocumentaiV1beta1OperationMetadata": { "description": "Contains metadata for the BatchProcessDocuments operation.", "id": "GoogleCloudDocumentaiV1beta1OperationMetadata", "properties": { "state": { "type": "string", "enum": [ "STATE_UNSPECIFIED", "ACCEPTED", "WAITING", "RUNNING", "SUCCEEDED", "CANCELLED", "FAILED" ], "description": "The state of the current batch processing.", "enumDescriptions": [ "The default value. This value is used if the state is omitted.", "Request is received.", "Request operation is waiting for scheduling.", "Request is being processed.", "The batch processing completed successfully.", "The batch processing was cancelled.", "The batch processing has failed." ] }, "updateTime": { "description": "The last update time of the operation.", "format": "google-datetime", "type": "string" }, "createTime": { "description": "The creation time of the operation.", "type": "string", "format": "google-datetime" }, "stateMessage": { "type": "string", "description": "A message providing more details about the current state of processing." } }, "type": "object" }, "GoogleCloudDocumentaiUiv1beta3ImportDocumentsResponse": { "type": "object", "description": "Response of the import document operation.", "properties": {}, "id": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsResponse" }, "GoogleCloudDocumentaiV1beta2DocumentPageLayout": { "type": "object", "properties": { "boundingPoly": { "description": "The bounding polygon for the Layout.", "$ref": "GoogleCloudDocumentaiV1beta2BoundingPoly" }, "textAnchor": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor", "description": "Text anchor indexing into the Document.text." }, "orientation": { "type": "string", "enumDescriptions": [ "Unspecified orientation.", "Orientation is aligned with page up.", "Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.", "Orientation is aligned with page down. Turn the head 180 degrees from upright to read.", "Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read." ], "description": "Detected orientation for the Layout.", "enum": [ "ORIENTATION_UNSPECIFIED", "PAGE_UP", "PAGE_RIGHT", "PAGE_DOWN", "PAGE_LEFT" ] }, "confidence": { "description": "Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range [0, 1].", "type": "number", "format": "float" } }, "id": "GoogleCloudDocumentaiV1beta2DocumentPageLayout", "description": "Visual element describing a layout unit on a page." }, "GoogleCloudDocumentaiV1DeployProcessorVersionResponse": { "description": "Response message for the deploy processor version method.", "properties": {}, "type": "object", "id": "GoogleCloudDocumentaiV1DeployProcessorVersionResponse" }, "GoogleCloudDocumentaiV1beta1NormalizedVertex": { "id": "GoogleCloudDocumentaiV1beta1NormalizedVertex", "description": "A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.", "properties": { "x": { "type": "number", "description": "X coordinate.", "format": "float" }, "y": { "description": "Y coordinate (starts from the top of the image).", "format": "float", "type": "number" } }, "type": "object" }, "GoogleCloudDocumentaiV1beta2DocumentPageParagraph": { "id": "GoogleCloudDocumentaiV1beta2DocumentPageParagraph", "description": "A collection of lines that a human would perceive as a paragraph.", "properties": { "layout": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout", "description": "Layout for Paragraph." }, "detectedLanguages": { "description": "A list of detected languages together with confidence.", "type": "array", "items": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage" } }, "provenance": { "description": "The history of this annotation.", "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance" } }, "type": "object" }, "GoogleCloudDocumentaiV1beta1DocumentPageFormField": { "id": "GoogleCloudDocumentaiV1beta1DocumentPageFormField", "description": "A form field detected on the page.", "type": "object", "properties": { "correctedKeyText": { "description": "Created for Labeling UI to export key text. If corrections were made to the text identified by the `field_name.text_anchor`, this field will contain the correction.", "type": "string" }, "provenance": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance", "description": "The history of this annotation." }, "fieldName": { "description": "Layout for the FormField name. e.g. `Address`, `Email`, `Grand total`, `Phone number`, etc.", "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout" }, "fieldValue": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout", "description": "Layout for the FormField value." }, "valueDetectedLanguages": { "type": "array", "description": "A list of detected languages for value together with confidence.", "items": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage" } }, "nameDetectedLanguages": { "type": "array", "items": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage" }, "description": "A list of detected languages for name together with confidence." }, "correctedValueText": { "description": "Created for Labeling UI to export value text. If corrections were made to the text identified by the `field_value.text_anchor`, this field will contain the correction.", "type": "string" }, "valueType": { "type": "string", "description": "If the value is non-textual, this field represents the type. Current valid values are: - blank (this indicates the field_value is normal text) - \"unfilled_checkbox\" - \"filled_checkbox\"" } } }, "GoogleCloudDocumentaiUiv1beta3EnableProcessorMetadata": { "id": "GoogleCloudDocumentaiUiv1beta3EnableProcessorMetadata", "properties": { "commonMetadata": { "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata", "description": "The basic metadata of the long running operation." } }, "description": "The long running operation metadata for enable processor method.", "type": "object" }, "GoogleCloudDocumentaiV1EnableProcessorMetadata": { "type": "object", "description": "The long running operation metadata for enable processor method.", "properties": { "commonMetadata": { "description": "The basic metadata of the long running operation.", "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata" } }, "id": "GoogleCloudDocumentaiV1EnableProcessorMetadata" }, "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadata": { "type": "object", "id": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadata", "properties": { "trainingDatasetValidation": { "$ref": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation", "description": "The training dataset validation information." }, "testDatasetValidation": { "$ref": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation", "description": "The test dataset validation information." }, "commonMetadata": { "description": "The basic metadata of the long running operation.", "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata" } }, "description": "The metadata that represents a processor version being created." }, "GoogleCloudDocumentaiV1beta1DocumentPageTable": { "description": "A table representation similar to HTML table structure.", "type": "object", "properties": { "detectedLanguages": { "type": "array", "items": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage" }, "description": "A list of detected languages together with confidence." }, "headerRows": { "items": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow" }, "description": "Header rows of the table.", "type": "array" }, "layout": { "description": "Layout for Table.", "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout" }, "bodyRows": { "description": "Body rows of the table.", "type": "array", "items": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow" } } }, "id": "GoogleCloudDocumentaiV1beta1DocumentPageTable" }, "GoogleCloudDocumentaiV1beta1DocumentPageAnchorPageRef": { "description": "Represents a weak reference to a page element within a document.", "properties": { "layoutType": { "enum": [ "LAYOUT_TYPE_UNSPECIFIED", "BLOCK", "PARAGRAPH", "LINE", "TOKEN", "VISUAL_ELEMENT", "TABLE", "FORM_FIELD" ], "type": "string", "enumDescriptions": [ "Layout Unspecified.", "References a Page.blocks element.", "References a Page.paragraphs element.", "References a Page.lines element.", "References a Page.tokens element.", "References a Page.visual_elements element.", "Refrrences a Page.tables element.", "References a Page.form_fields element." ], "description": "Optional. The type of the layout element that is being referenced if any." }, "boundingPoly": { "description": "Optional. Identifies the bounding polygon of a layout element on the page.", "$ref": "GoogleCloudDocumentaiV1beta1BoundingPoly" }, "layoutId": { "description": "Optional. Deprecated. Use PageRef.bounding_poly instead.", "type": "string" }, "page": { "description": "Required. Index into the Document.pages element, for example using Document.pages to locate the related page element. This field is skipped when its value is the default 0. See https://developers.google.com/protocol-buffers/docs/proto3#json.", "format": "int64", "type": "string" }, "confidence": { "description": "Optional. Confidence of detected page element, if applicable. Range [0, 1].", "type": "number", "format": "float" } }, "type": "object", "id": "GoogleCloudDocumentaiV1beta1DocumentPageAnchorPageRef" }, "GoogleCloudDocumentaiUiv1beta3CreateLabelerPoolOperationMetadata": { "description": "The long running operation metadata for CreateLabelerPool.", "type": "object", "properties": { "commonMetadata": { "description": "The basic metadata of the long running operation.", "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata" } }, "id": "GoogleCloudDocumentaiUiv1beta3CreateLabelerPoolOperationMetadata" }, "GoogleCloudDocumentaiV1ProcessorTypeLocationInfo": { "properties": { "locationId": { "description": "The location id, currently must be one of [us, eu].", "type": "string" } }, "type": "object", "id": "GoogleCloudDocumentaiV1ProcessorTypeLocationInfo", "description": "The location information about where the processor is available." }, "GoogleCloudDocumentaiV1beta1BatchProcessDocumentsResponse": { "type": "object", "properties": { "responses": { "description": "Responses for each individual document.", "items": { "$ref": "GoogleCloudDocumentaiV1beta1ProcessDocumentResponse" }, "type": "array" } }, "id": "GoogleCloudDocumentaiV1beta1BatchProcessDocumentsResponse", "description": "Response to an batch document processing request. This is returned in the LRO Operation after the operation is complete." }, "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionResponse": { "type": "object", "id": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionResponse", "description": "The response for the TrainProcessorVersion method.", "properties": { "processorVersion": { "type": "string", "description": "The resource name of the processor version produced by training." } } }, "GoogleCloudDocumentaiV1DocumentStyleFontSize": { "properties": { "size": { "description": "Font size for the text.", "type": "number", "format": "float" }, "unit": { "description": "Unit for the font size. Follows CSS naming (in, px, pt, etc.).", "type": "string" } }, "description": "Font size with unit.", "id": "GoogleCloudDocumentaiV1DocumentStyleFontSize", "type": "object" }, "GoogleCloudDocumentaiV1DocumentEntityNormalizedValue": { "properties": { "dateValue": { "description": "Date value. Includes year, month, day. See also: https://github.com/googleapis/googleapis/blob/master/google/type/date.proto", "$ref": "GoogleTypeDate" }, "datetimeValue": { "description": "DateTime value. Includes date, time, and timezone. See also: https://github.com/googleapis/googleapis/blob/master/google/type/datetime.proto", "$ref": "GoogleTypeDateTime" }, "integerValue": { "type": "integer", "description": "Integer value.", "format": "int32" }, "floatValue": { "type": "number", "format": "float", "description": "Float value." }, "addressValue": { "description": "Postal address. See also: https://github.com/googleapis/googleapis/blob/master/google/type/postal_address.proto", "$ref": "GoogleTypePostalAddress" }, "moneyValue": { "description": "Money value. See also: https://github.com/googleapis/googleapis/blob/master/google/type/money.proto", "$ref": "GoogleTypeMoney" }, "booleanValue": { "type": "boolean", "description": "Boolean value. Can be used for entities with binary values, or for checkboxes." }, "text": { "type": "string", "description": "Optional. An optional field to store a normalized string. For some entity types, one of respective `structured_value` fields may also be populated. Also not all the types of `structured_value` will be normalized. For example, some processors may not generate float or int normalized text by default. Below are sample formats mapped to structured values. - Money/Currency type (`money_value`) is in the ISO 4217 text format. - Date type (`date_value`) is in the ISO 8601 text format. - Datetime type (`datetime_value`) is in the ISO 8601 text format." } }, "id": "GoogleCloudDocumentaiV1DocumentEntityNormalizedValue", "description": "Parsed and normalized entity value.", "type": "object" }, "GoogleCloudDocumentaiV1beta1ProcessDocumentResponse": { "id": "GoogleCloudDocumentaiV1beta1ProcessDocumentResponse", "properties": { "outputConfig": { "$ref": "GoogleCloudDocumentaiV1beta1OutputConfig", "description": "The output location of the parsed responses. The responses are written to this location as JSON-serialized `Document` objects." }, "inputConfig": { "description": "Information about the input file. This is the same as the corresponding input config in the request.", "$ref": "GoogleCloudDocumentaiV1beta1InputConfig" } }, "description": "Response to a single document processing request.", "type": "object" }, "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadata": { "properties": { "individualImportStatuses": { "items": { "$ref": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus" }, "description": "The list of response details of each document.", "type": "array" }, "commonMetadata": { "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata", "description": "The basic metadata of the long running operation." } }, "type": "object", "id": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadata", "description": "Metadata of the import document operation." }, "GoogleCloudDocumentaiV1beta1DocumentPageDimension": { "id": "GoogleCloudDocumentaiV1beta1DocumentPageDimension", "properties": { "height": { "format": "float", "type": "number", "description": "Page height." }, "width": { "type": "number", "description": "Page width.", "format": "float" }, "unit": { "type": "string", "description": "Dimension unit." } }, "description": "Dimension for the page.", "type": "object" }, "GoogleCloudDocumentaiV1Document": { "description": "Document represents the canonical document resource in Document AI. It is an interchange format that provides insights into documents and allows for collaboration between users and Document AI to iterate and optimize for quality.", "type": "object", "properties": { "text": { "type": "string", "description": "Optional. UTF-8 encoded text in reading order from the document." }, "pages": { "type": "array", "description": "Visual page layout for the Document.", "items": { "$ref": "GoogleCloudDocumentaiV1DocumentPage" } }, "shardInfo": { "description": "Information about the sharding if this document is sharded part of a larger document. If the document is not sharded, this message is not specified.", "$ref": "GoogleCloudDocumentaiV1DocumentShardInfo" }, "entityRelations": { "type": "array", "description": "Placeholder. Relationship among Document.entities.", "items": { "$ref": "GoogleCloudDocumentaiV1DocumentEntityRelation" } }, "uri": { "description": "Optional. Currently supports Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. See [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris) for more info.", "type": "string" }, "mimeType": { "description": "An IANA published MIME type (also referred to as media type). For more information, see https://www.iana.org/assignments/media-types/media-types.xhtml.", "type": "string" }, "textStyles": { "items": { "$ref": "GoogleCloudDocumentaiV1DocumentStyle" }, "description": "Placeholder. Styles for the Document.text.", "type": "array" }, "revisions": { "type": "array", "description": "Placeholder. Revision history of this document.", "items": { "$ref": "GoogleCloudDocumentaiV1DocumentRevision" } }, "textChanges": { "type": "array", "items": { "$ref": "GoogleCloudDocumentaiV1DocumentTextChange" }, "description": "Placeholder. A list of text corrections made to [Document.text]. This is usually used for annotating corrections to OCR mistakes. Text changes for a given revision may not overlap with each other." }, "entities": { "type": "array", "description": "A list of entities detected on Document.text. For document shards, entities in this list may cross shard boundaries.", "items": { "$ref": "GoogleCloudDocumentaiV1DocumentEntity" } }, "error": { "description": "Any error that occurred while processing this document.", "$ref": "GoogleRpcStatus" }, "content": { "type": "string", "format": "byte", "description": "Optional. Inline document content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64." } }, "id": "GoogleCloudDocumentaiV1Document" }, "GoogleCloudDocumentaiV1beta3BatchProcessResponse": { "properties": {}, "type": "object", "description": "Response message for batch process document method.", "id": "GoogleCloudDocumentaiV1beta3BatchProcessResponse" }, "GoogleCloudDocumentaiV1DocumentPageDimension": { "type": "object", "properties": { "height": { "type": "number", "description": "Page height.", "format": "float" }, "width": { "type": "number", "format": "float", "description": "Page width." }, "unit": { "description": "Dimension unit.", "type": "string" } }, "description": "Dimension for the page.", "id": "GoogleCloudDocumentaiV1DocumentPageDimension" }, "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata": { "properties": { "newlyAddedDocuments": { "description": "Returns the newly added document Cloud Storage prefix if the documents are founded in Cloud Storage while not in Document Service storage.", "type": "array", "items": { "$ref": "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataUpdatedDocument" } }, "commonMetadata": { "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata", "description": "The basic metadata of the long running operation." } }, "id": "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata", "description": "The metadata proto of ResyncDataset method.", "type": "object" }, "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage": { "description": "Detected language for a structural component.", "id": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage", "type": "object", "properties": { "confidence": { "description": "Confidence of detected language. Range [0, 1].", "format": "float", "type": "number" }, "languageCode": { "type": "string", "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier." } } }, "GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionResponse": { "description": "Response message for set default processor version method.", "id": "GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionResponse", "type": "object", "properties": {} }, "GoogleCloudDocumentaiV1UndeployProcessorVersionResponse": { "description": "Response message for the undeploy processor version method.", "type": "object", "properties": {}, "id": "GoogleCloudDocumentaiV1UndeployProcessorVersionResponse" }, "GoogleTypeColor": { "properties": { "green": { "description": "The amount of green in the color as a value in the interval [0, 1].", "format": "float", "type": "number" }, "blue": { "description": "The amount of blue in the color as a value in the interval [0, 1].", "type": "number", "format": "float" }, "alpha": { "format": "float", "description": "The fraction of this color that should be applied to the pixel. That is, the final pixel color is defined by the equation: `pixel color = alpha LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh (this color) + (1.0 - alpha) LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh (background color)` This means that a value of 1.0 corresponds to a solid color, whereas a value of 0.0 corresponds to a completely transparent color. This uses a wrapper message rather than a simple float scalar so that it is possible to distinguish between a default value and the value being unset. If omitted, this color object is rendered as a solid color (as if the alpha value had been explicitly given a value of 1.0).", "type": "number" }, "red": { "type": "number", "format": "float", "description": "The amount of red in the color as a value in the interval [0, 1]." } }, "id": "GoogleTypeColor", "type": "object", "description": "Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to/from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn't carry information about the absolute color space that should be used to interpret the RGB value (e.g. sRGB, Adobe RGB, DCI-P3, BT.2020, etc.). By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most 1e-5. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha = protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red = (float) color.getRed(); float green = (float) color.getGreen(); float blue = (float) color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red = [protocolor red]; float green = [protocolor green]; float blue = [protocolor blue]; FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color* result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha \u003c= 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0; var red = Math.floor(redFrac LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh 255); var green = Math.floor(greenFrac LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh 255); var blue = Math.floor(blueFrac LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh 255); if (!('alpha' in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',', alphaFrac, ')'].join(''); }; var rgbToCssColor = function(red, green, blue) { var rgbNumber = new Number((red \u003c\u003c 16) | (green \u003c\u003c 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var resultBuilder = ['#']; for (var i = 0; i \u003c missingZeros; i++) { resultBuilder.push('0'); } resultBuilder.push(hexString); return resultBuilder.join(''); }; // ..." }, "GoogleCloudDocumentaiV1DocumentRevision": { "type": "object", "properties": { "parentIds": { "type": "array", "description": "The revisions that this revision is based on. Must include all the ids that have anything to do with this revision - eg. there are `provenance.parent.revision` fields that index into this field.", "items": { "type": "string" } }, "processor": { "description": "If the annotation was made by processor identify the processor by its resource name.", "type": "string" }, "createTime": { "description": "The time that the revision was created.", "type": "string", "format": "google-datetime" }, "humanReview": { "description": "Human Review information of this revision.", "$ref": "GoogleCloudDocumentaiV1DocumentRevisionHumanReview" }, "parent": { "items": { "type": "integer", "format": "int32" }, "type": "array", "description": "The revisions that this revision is based on. This can include one or more parent (when documents are merged.) This field represents the index into the `revisions` field." }, "id": { "description": "Id of the revision. Unique within the context of the document.", "type": "string" }, "agent": { "type": "string", "description": "If the change was made by a person specify the name or id of that person." } }, "id": "GoogleCloudDocumentaiV1DocumentRevision", "description": "Contains past or forward revisions of this document." }, "GoogleCloudDocumentaiV1BatchProcessRequest": { "type": "object", "properties": { "skipHumanReview": { "description": "Whether Human Review feature should be skipped for this request. Default to false.", "type": "boolean" }, "documentOutputConfig": { "$ref": "GoogleCloudDocumentaiV1DocumentOutputConfig", "description": "The overall output config for batch process." }, "inputDocuments": { "$ref": "GoogleCloudDocumentaiV1BatchDocumentsInputConfig", "description": "The input documents for batch process." } }, "description": "Request message for batch process document method.", "id": "GoogleCloudDocumentaiV1BatchProcessRequest" }, "GoogleCloudDocumentaiV1DocumentTextAnchorTextSegment": { "properties": { "endIndex": { "type": "string", "description": "TextSegment half open end UTF-8 char index in the Document.text.", "format": "int64" }, "startIndex": { "format": "int64", "type": "string", "description": "TextSegment start UTF-8 char index in the Document.text." } }, "description": "A text segment in the Document.text. The indices may be out of bounds which indicate that the text extends into another document shard for large sharded documents. See ShardInfo.text_offset", "id": "GoogleCloudDocumentaiV1DocumentTextAnchorTextSegment", "type": "object" }, "GoogleCloudDocumentaiUiv1beta3DisableProcessorMetadata": { "type": "object", "id": "GoogleCloudDocumentaiUiv1beta3DisableProcessorMetadata", "description": "The long running operation metadata for disable processor method.", "properties": { "commonMetadata": { "description": "The basic metadata of the long running operation.", "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata" } } }, "GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionResponse": { "description": "Response message for set default processor version method.", "id": "GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionResponse", "properties": {}, "type": "object" }, "GoogleCloudDocumentaiV1beta2DocumentPageTableTableCell": { "type": "object", "description": "A cell representation inside the table.", "properties": { "detectedLanguages": { "description": "A list of detected languages together with confidence.", "items": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage" }, "type": "array" }, "layout": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout", "description": "Layout for TableCell." }, "rowSpan": { "description": "How many rows this cell spans.", "type": "integer", "format": "int32" }, "colSpan": { "format": "int32", "type": "integer", "description": "How many columns this cell spans." } }, "id": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableCell" }, "GoogleCloudDocumentaiUiv1beta3DeleteProcessorVersionMetadata": { "properties": { "commonMetadata": { "description": "The basic metadata of the long running operation.", "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata" } }, "id": "GoogleCloudDocumentaiUiv1beta3DeleteProcessorVersionMetadata", "description": "The long running operation metadata for delete processor version method.", "type": "object" }, "GoogleCloudDocumentaiV1beta2DocumentRevisionHumanReview": { "type": "object", "description": "Human Review information of the document.", "id": "GoogleCloudDocumentaiV1beta2DocumentRevisionHumanReview", "properties": { "stateMessage": { "type": "string", "description": "A message providing more details about the current state of processing. For example, the rejection reason when the state is `rejected`." }, "state": { "description": "Human review state. e.g. `requested`, `succeeded`, `rejected`.", "type": "string" } } }, "GoogleCloudDocumentaiV1beta1DocumentPageAnchor": { "type": "object", "id": "GoogleCloudDocumentaiV1beta1DocumentPageAnchor", "properties": { "pageRefs": { "items": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageAnchorPageRef" }, "type": "array", "description": "One or more references to visual page elements" } }, "description": "Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types." }, "GoogleCloudDocumentaiV1CommonOperationMetadata": { "type": "object", "id": "GoogleCloudDocumentaiV1CommonOperationMetadata", "properties": { "state": { "description": "The state of the operation.", "enum": [ "STATE_UNSPECIFIED", "RUNNING", "CANCELLING", "SUCCEEDED", "FAILED", "CANCELLED" ], "enumDescriptions": [ "Unspecified state.", "Operation is still running.", "Operation is being cancelled.", "Operation succeeded.", "Operation failed.", "Operation is cancelled." ], "type": "string" }, "stateMessage": { "type": "string", "description": "A message providing more details about the current state of processing." }, "resource": { "type": "string", "description": "A related resource to this operation." }, "updateTime": { "type": "string", "format": "google-datetime", "description": "The last update time of the operation." }, "createTime": { "description": "The creation time of the operation.", "format": "google-datetime", "type": "string" } }, "description": "The common metadata for long running operations." }, "GoogleCloudDocumentaiV1DocumentPageTableTableRow": { "type": "object", "description": "A row of table cells.", "properties": { "cells": { "items": { "$ref": "GoogleCloudDocumentaiV1DocumentPageTableTableCell" }, "description": "Cells that make up this row.", "type": "array" } }, "id": "GoogleCloudDocumentaiV1DocumentPageTableTableRow" }, "GoogleCloudDocumentaiUiv1beta3DeleteLabelerPoolOperationMetadata": { "description": "The long running operation metadata for DeleteLabelerPool.", "id": "GoogleCloudDocumentaiUiv1beta3DeleteLabelerPoolOperationMetadata", "properties": { "commonMetadata": { "description": "The basic metadata of the long running operation.", "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata" } }, "type": "object" }, "GoogleTypePostalAddress": { "id": "GoogleTypePostalAddress", "type": "object", "description": "Represents a postal address, e.g. for postal delivery or payments addresses. Given a postal address, a postal service can deliver items to a premise, P.O. Box or similar. It is not intended to model geographical locations (roads, towns, mountains). In typical usage an address would be created via user input or from importing existing data, depending on the type of process. Advice on address input / editing: - Use an i18n-ready address widget such as https://github.com/google/libaddressinput) - Users should not be presented with UI elements for input or editing of fields outside countries where that field is used. For more guidance on how to use this schema, please see: https://support.google.com/business/answer/6397478", "properties": { "revision": { "type": "integer", "format": "int32", "description": "The schema revision of the `PostalAddress`. This must be set to 0, which is the latest revision. All new revisions **must** be backward compatible with old revisions." }, "postalCode": { "type": "string", "description": "Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.)." }, "sortingCode": { "description": "Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like \"CEDEX\", optionally followed by a number (e.g. \"CEDEX 7\"), or just a number alone, representing the \"sector code\" (Jamaica), \"delivery area indicator\" (Malawi) or \"post office indicator\" (e.g. Côte d'Ivoire).", "type": "string" }, "administrativeArea": { "description": "Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. \"Barcelona\" and not \"Catalonia\"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated.", "type": "string" }, "addressLines": { "items": { "type": "string" }, "type": "array", "description": "Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. \"Austin, TX\"), it is important that the line order is clear. The order of address lines should be \"envelope order\" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. \"ja\" for large-to-small ordering and \"ja-Latn\" or \"en\" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas)." }, "sublocality": { "description": "Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts.", "type": "string" }, "regionCode": { "type": "string", "description": "Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See https://cldr.unicode.org/ and https://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: \"CH\" for Switzerland." }, "locality": { "type": "string", "description": "Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines." }, "organization": { "description": "Optional. The name of the organization at the address.", "type": "string" }, "recipients": { "items": { "type": "string" }, "description": "Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain \"care of\" information.", "type": "array" }, "languageCode": { "type": "string", "description": "Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: \"zh-Hant\", \"ja\", \"ja-Latn\", \"en\"." } } }, "GoogleCloudDocumentaiV1beta2BatchProcessDocumentsResponse": { "id": "GoogleCloudDocumentaiV1beta2BatchProcessDocumentsResponse", "properties": { "responses": { "type": "array", "items": { "$ref": "GoogleCloudDocumentaiV1beta2ProcessDocumentResponse" }, "description": "Responses for each individual document." } }, "description": "Response to an batch document processing request. This is returned in the LRO Operation after the operation is complete.", "type": "object" }, "GoogleCloudDocumentaiV1DocumentEntityRelation": { "id": "GoogleCloudDocumentaiV1DocumentEntityRelation", "properties": { "objectId": { "description": "Object entity id.", "type": "string" }, "subjectId": { "type": "string", "description": "Subject entity id." }, "relation": { "description": "Relationship description.", "type": "string" } }, "type": "object", "description": "Relationship between Entities." }, "GoogleCloudDocumentaiUiv1beta3DeleteProcessorMetadata": { "id": "GoogleCloudDocumentaiUiv1beta3DeleteProcessorMetadata", "description": "The long running operation metadata for delete processor method.", "properties": { "commonMetadata": { "description": "The basic metadata of the long running operation.", "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata" } }, "type": "object" }, "GoogleCloudDocumentaiUiv1beta3DocumentIdGCSManagedDocumentId": { "type": "object", "description": "Identifies a document uniquely within the scope of a dataset in the GCS-based option.", "id": "GoogleCloudDocumentaiUiv1beta3DocumentIdGCSManagedDocumentId", "properties": { "gcsUri": { "description": "Required. The Cloud Storage uri where the actual document is stored.", "type": "string" }, "cwDocId": { "type": "string", "description": "Optional. Id of the document (indexed) managed by Content Warehouse." } } }, "GoogleCloudDocumentaiUiv1beta3UpdateLabelerPoolOperationMetadata": { "description": "The long running operation metadata for UpdateLabelerPool.", "properties": { "commonMetadata": { "description": "The basic metadata of the long running operation.", "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata" } }, "id": "GoogleCloudDocumentaiUiv1beta3UpdateLabelerPoolOperationMetadata", "type": "object" }, "GoogleCloudDocumentaiV1HumanReviewStatus": { "type": "object", "properties": { "humanReviewOperation": { "type": "string", "description": "The name of the operation triggered by the processed document. This field is populated only when the [state] is [HUMAN_REVIEW_IN_PROGRESS]. It has the same response type and metadata as the long running operation returned by [ReviewDocument] method." }, "stateMessage": { "type": "string", "description": "A message providing more details about the human review state." }, "state": { "type": "string", "enum": [ "STATE_UNSPECIFIED", "SKIPPED", "VALIDATION_PASSED", "IN_PROGRESS", "ERROR" ], "enumDescriptions": [ "Human review state is unspecified. Most likely due to an internal error.", "Human review is skipped for the document. This can happen because human review is not enabled on the processor or the processing request has been set to skip this document.", "Human review validation is triggered and passed, so no review is needed.", "Human review validation is triggered and the document is under review.", "Some error happened during triggering human review, see the [state_message] for details." ], "description": "The state of human review on the processing request." } }, "id": "GoogleCloudDocumentaiV1HumanReviewStatus", "description": "The status of human review on a processed document." }, "GoogleCloudDocumentaiV1beta1DocumentStyle": { "description": "Annotation for common text style attributes. This adheres to CSS conventions as much as possible.", "type": "object", "properties": { "color": { "$ref": "GoogleTypeColor", "description": "Text color." }, "textAnchor": { "description": "Text anchor indexing into the Document.text.", "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor" }, "fontWeight": { "description": "Font weight. Possible values are normal, bold, bolder, and lighter. https://www.w3schools.com/cssref/pr_font_weight.asp", "type": "string" }, "textDecoration": { "description": "Text decoration. Follows CSS standard. https://www.w3schools.com/cssref/pr_text_text-decoration.asp", "type": "string" }, "backgroundColor": { "description": "Text background color.", "$ref": "GoogleTypeColor" }, "fontSize": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentStyleFontSize", "description": "Font size." }, "textStyle": { "description": "Text style. Possible values are normal, italic, and oblique. https://www.w3schools.com/cssref/pr_font_font-style.asp", "type": "string" } }, "id": "GoogleCloudDocumentaiV1beta1DocumentStyle" }, "GoogleCloudDocumentaiV1DocumentPageMatrix": { "properties": { "type": { "format": "int32", "description": "This encodes information about what data type the matrix uses. For example, 0 (CV_8U) is an unsigned 8-bit image. For the full list of OpenCV primitive data types, please refer to https://docs.opencv.org/4.3.0/d1/d1b/group__core__hal__interface.html", "type": "integer" }, "data": { "type": "string", "format": "byte", "description": "The matrix data." }, "cols": { "format": "int32", "description": "Number of columns in the matrix.", "type": "integer" }, "rows": { "format": "int32", "type": "integer", "description": "Number of rows in the matrix." } }, "description": "Representation for transformation matrix, intended to be compatible and used with OpenCV format for image manipulation.", "type": "object", "id": "GoogleCloudDocumentaiV1DocumentPageMatrix" }, "GoogleCloudDocumentaiV1beta3DeployProcessorVersionMetadata": { "description": "The long running operation metadata for deploy processor version method.", "properties": { "commonMetadata": { "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata", "description": "The basic metadata of the long running operation." } }, "type": "object", "id": "GoogleCloudDocumentaiV1beta3DeployProcessorVersionMetadata" }, "GoogleCloudDocumentaiV1DocumentPageParagraph": { "properties": { "detectedLanguages": { "description": "A list of detected languages together with confidence.", "type": "array", "items": { "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage" } }, "provenance": { "$ref": "GoogleCloudDocumentaiV1DocumentProvenance", "description": "The history of this annotation." }, "layout": { "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout", "description": "Layout for Paragraph." } }, "type": "object", "description": "A collection of lines that a human would perceive as a paragraph.", "id": "GoogleCloudDocumentaiV1DocumentPageParagraph" }, "GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionMetadata": { "properties": { "commonMetadata": { "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata", "description": "The basic metadata of the long running operation." } }, "type": "object", "id": "GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionMetadata", "description": "The long running operation metadata for deploy processor version method." }, "GoogleCloudDocumentaiV1beta3DeployProcessorVersionResponse": { "description": "Response message for the deploy processor version method.", "id": "GoogleCloudDocumentaiV1beta3DeployProcessorVersionResponse", "type": "object", "properties": {} }, "GoogleCloudDocumentaiV1alpha1AnalyzeHitlDataMetadata": { "properties": { "commonMetadata": { "description": "The basic metadata of the long running operation.", "$ref": "GoogleCloudDocumentaiV1alpha1CommonOperationMetadata" } }, "description": "The long running operation metadata for AnalyzeHitlData.", "id": "GoogleCloudDocumentaiV1alpha1AnalyzeHitlDataMetadata", "type": "object" }, "GoogleCloudDocumentaiV1NormalizedVertex": { "type": "object", "description": "A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.", "id": "GoogleCloudDocumentaiV1NormalizedVertex", "properties": { "x": { "type": "number", "format": "float", "description": "X coordinate." }, "y": { "format": "float", "description": "Y coordinate (starts from the top of the image).", "type": "number" } } }, "GoogleCloudDocumentaiV1ListProcessorsResponse": { "properties": { "nextPageToken": { "description": "Points to the next processor, otherwise empty.", "type": "string" }, "processors": { "description": "The list of processors.", "type": "array", "items": { "$ref": "GoogleCloudDocumentaiV1Processor" } } }, "description": "Response message for list processors.", "type": "object", "id": "GoogleCloudDocumentaiV1ListProcessorsResponse" }, "GoogleLongrunningListOperationsResponse": { "description": "The response message for Operations.ListOperations.", "properties": { "nextPageToken": { "type": "string", "description": "The standard List next-page token." }, "operations": { "type": "array", "items": { "$ref": "GoogleLongrunningOperation" }, "description": "A list of operations that matches the specified filter in the request." } }, "id": "GoogleLongrunningListOperationsResponse", "type": "object" }, "GoogleCloudDocumentaiV1beta2DocumentTextChange": { "type": "object", "description": "This message is used for text changes aka. OCR corrections.", "properties": { "textAnchor": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor", "description": "Provenance of the correction. Text anchor indexing into the Document.text. There can only be a single `TextAnchor.text_segments` element. If the start and end index of the text segment are the same, the text change is inserted before that index." }, "changedText": { "description": "The text that replaces the text identified in the `text_anchor`.", "type": "string" }, "provenance": { "items": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance" }, "description": "The history of this annotation.", "type": "array" } }, "id": "GoogleCloudDocumentaiV1beta2DocumentTextChange" }, "GoogleCloudDocumentaiV1beta2GcsSource": { "description": "The Google Cloud Storage location where the input file will be read from.", "id": "GoogleCloudDocumentaiV1beta2GcsSource", "properties": { "uri": { "type": "string" } }, "type": "object" }, "GoogleCloudDocumentaiV1beta1DocumentTextAnchor": { "properties": { "content": { "type": "string", "description": "Contains the content of the text span so that users do not have to look it up in the text_segments. It is always populated for formFields." }, "textSegments": { "type": "array", "description": "The text segments from the Document.text.", "items": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchorTextSegment" } } }, "type": "object", "description": "Text reference indexing into the Document.text.", "id": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor" }, "GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionResponse": { "properties": {}, "description": "Response message for the deploy processor version method.", "id": "GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionResponse", "type": "object" }, "GoogleCloudDocumentaiV1beta1DocumentPageLine": { "description": "A collection of tokens that a human would perceive as a line. Does not cross column boundaries, can be horizontal, vertical, etc.", "type": "object", "id": "GoogleCloudDocumentaiV1beta1DocumentPageLine", "properties": { "layout": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout", "description": "Layout for Line." }, "detectedLanguages": { "items": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage" }, "description": "A list of detected languages together with confidence.", "type": "array" }, "provenance": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance", "description": "The history of this annotation." } } }, "GoogleCloudDocumentaiV1beta2DocumentLabel": { "properties": { "automlModel": { "description": "Label is generated AutoML model. This field stores the full resource name of the AutoML model. Format: `projects/{project-id}/locations/{location-id}/models/{model-id}`", "type": "string" }, "confidence": { "type": "number", "description": "Confidence score between 0 and 1 for label assignment.", "format": "float" }, "name": { "type": "string", "description": "Name of the label. When the label is generated from AutoML Text Classification model, this field represents the name of the category." } }, "type": "object", "id": "GoogleCloudDocumentaiV1beta2DocumentLabel", "description": "Label attaches schema information and/or other metadata to segments within a Document. Multiple Labels on a single field can denote either different labels, different instances of the same label created at different times, or some combination of both." }, "GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionResponse": { "description": "Response message associated with the ExportProcessorVersion operation.", "properties": { "gcsUri": { "description": "The Cloud Storage URI containing the output artifacts.", "type": "string" } }, "type": "object", "id": "GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionResponse" }, "GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionResponse": { "id": "GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionResponse", "type": "object", "description": "Metadata of the EvaluateProcessorVersion method.", "properties": { "evaluation": { "type": "string", "description": "The resource name of the created evaluation." } } }, "GoogleCloudDocumentaiV1ListProcessorVersionsResponse": { "type": "object", "id": "GoogleCloudDocumentaiV1ListProcessorVersionsResponse", "properties": { "nextPageToken": { "description": "Points to the next processor, otherwise empty.", "type": "string" }, "processorVersions": { "description": "The list of processors.", "type": "array", "items": { "$ref": "GoogleCloudDocumentaiV1ProcessorVersion" } } }, "description": "Response message for list processors." }, "GoogleCloudDocumentaiV1beta2DocumentStyleFontSize": { "properties": { "size": { "format": "float", "type": "number", "description": "Font size for the text." }, "unit": { "description": "Unit for the font size. Follows CSS naming (in, px, pt, etc.).", "type": "string" } }, "description": "Font size with unit.", "id": "GoogleCloudDocumentaiV1beta2DocumentStyleFontSize", "type": "object" }, "GoogleCloudDocumentaiV1beta1GcsSource": { "type": "object", "id": "GoogleCloudDocumentaiV1beta1GcsSource", "description": "The Google Cloud Storage location where the input file will be read from.", "properties": { "uri": { "type": "string" } } }, "GoogleCloudDocumentaiV1beta2OperationMetadata": { "properties": { "stateMessage": { "description": "A message providing more details about the current state of processing.", "type": "string" }, "state": { "enum": [ "STATE_UNSPECIFIED", "ACCEPTED", "WAITING", "RUNNING", "SUCCEEDED", "CANCELLED", "FAILED" ], "description": "The state of the current batch processing.", "enumDescriptions": [ "The default value. This value is used if the state is omitted.", "Request is received.", "Request operation is waiting for scheduling.", "Request is being processed.", "The batch processing completed successfully.", "The batch processing was cancelled.", "The batch processing has failed." ], "type": "string" }, "updateTime": { "format": "google-datetime", "description": "The last update time of the operation.", "type": "string" }, "createTime": { "format": "google-datetime", "type": "string", "description": "The creation time of the operation." } }, "description": "Contains metadata for the BatchProcessDocuments operation.", "type": "object", "id": "GoogleCloudDocumentaiV1beta2OperationMetadata" }, "GoogleCloudDocumentaiV1DocumentPageImage": { "properties": { "width": { "format": "int32", "description": "Width of the image in pixels.", "type": "integer" }, "mimeType": { "type": "string", "description": "Encoding mime type for the image." }, "height": { "format": "int32", "description": "Height of the image in pixels.", "type": "integer" }, "content": { "type": "string", "format": "byte", "description": "Raw byte content of the image." } }, "description": "Rendered image contents for this page.", "type": "object", "id": "GoogleCloudDocumentaiV1DocumentPageImage" }, "GoogleLongrunningOperation": { "properties": { "metadata": { "additionalProperties": { "description": "Properties of the object. Contains field @type with type URL.", "type": "any" }, "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.", "type": "object" }, "name": { "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.", "type": "string" }, "error": { "$ref": "GoogleRpcStatus", "description": "The error result of the operation in case of failure or cancellation." }, "response": { "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.", "additionalProperties": { "description": "Properties of the object. Contains field @type with type URL.", "type": "any" }, "type": "object" }, "done": { "type": "boolean", "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available." } }, "description": "This resource represents a long-running operation that is the result of a network API call.", "type": "object", "id": "GoogleLongrunningOperation" }, "GoogleCloudDocumentaiV1beta2DocumentStyle": { "id": "GoogleCloudDocumentaiV1beta2DocumentStyle", "properties": { "textDecoration": { "description": "Text decoration. Follows CSS standard. https://www.w3schools.com/cssref/pr_text_text-decoration.asp", "type": "string" }, "fontSize": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentStyleFontSize", "description": "Font size." }, "backgroundColor": { "description": "Text background color.", "$ref": "GoogleTypeColor" }, "fontWeight": { "type": "string", "description": "Font weight. Possible values are normal, bold, bolder, and lighter. https://www.w3schools.com/cssref/pr_font_weight.asp" }, "textStyle": { "description": "Text style. Possible values are normal, italic, and oblique. https://www.w3schools.com/cssref/pr_font_font-style.asp", "type": "string" }, "color": { "description": "Text color.", "$ref": "GoogleTypeColor" }, "textAnchor": { "description": "Text anchor indexing into the Document.text.", "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor" } }, "type": "object", "description": "Annotation for common text style attributes. This adheres to CSS conventions as much as possible." }, "GoogleCloudDocumentaiV1beta3EnableProcessorResponse": { "id": "GoogleCloudDocumentaiV1beta3EnableProcessorResponse", "type": "object", "properties": {}, "description": "Response message for the enable processor method. Intentionally empty proto for adding fields in future." }, "GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfig": { "id": "GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfig", "description": "The configuration used when outputting documents.", "type": "object", "properties": { "gcsUri": { "type": "string", "description": "The Cloud Storage uri (a directory) of the output." } } }, "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus": { "description": "The status of each individual document in the batch delete process.", "properties": { "status": { "$ref": "GoogleRpcStatus", "description": "The status of deleting the document." }, "documentId": { "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentId", "description": "The document id of the document." } }, "id": "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus", "type": "object" }, "GoogleCloudDocumentaiV1beta1DocumentProvenanceParent": { "type": "object", "properties": { "index": { "type": "integer", "format": "int32", "description": "The index of the parent item in the corresponding item list (eg. list of entities, properties within entities, etc.) in the parent revision." }, "id": { "format": "int32", "type": "integer", "description": "The id of the parent provenance." }, "revision": { "type": "integer", "description": "The index of the index into current revision's parent_ids list.", "format": "int32" } }, "id": "GoogleCloudDocumentaiV1beta1DocumentProvenanceParent", "description": "The parent element the current element is based on. Used for referencing/aligning, removal and replacement operations." }, "GoogleCloudDocumentaiV1beta3UndeployProcessorVersionMetadata": { "type": "object", "description": "The long running operation metadata for the undeploy processor version method.", "properties": { "commonMetadata": { "description": "The basic metadata of the long running operation.", "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata" } }, "id": "GoogleCloudDocumentaiV1beta3UndeployProcessorVersionMetadata" }, "GoogleCloudDocumentaiV1beta2DocumentPageVisualElement": { "description": "Detected non-text visual elements e.g. checkbox, signature etc. on the page.", "properties": { "type": { "type": "string", "description": "Type of the VisualElement." }, "layout": { "description": "Layout for VisualElement.", "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout" }, "detectedLanguages": { "type": "array", "description": "A list of detected languages together with confidence.", "items": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage" } } }, "type": "object", "id": "GoogleCloudDocumentaiV1beta2DocumentPageVisualElement" }, "GoogleCloudDocumentaiV1beta1DocumentPageBlock": { "id": "GoogleCloudDocumentaiV1beta1DocumentPageBlock", "type": "object", "properties": { "layout": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout", "description": "Layout for Block." }, "provenance": { "description": "The history of this annotation.", "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance" }, "detectedLanguages": { "type": "array", "description": "A list of detected languages together with confidence.", "items": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage" } } }, "description": "A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation." }, "GoogleCloudDocumentaiV1ProcessorVersion": { "type": "object", "id": "GoogleCloudDocumentaiV1ProcessorVersion", "properties": { "displayName": { "type": "string", "description": "The display name of the processor version." }, "name": { "description": "The resource name of the processor version. Format: `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processor_version}`", "type": "string" }, "createTime": { "description": "The time the processor version was created.", "type": "string", "format": "google-datetime" }, "deprecationInfo": { "$ref": "GoogleCloudDocumentaiV1ProcessorVersionDeprecationInfo", "description": "If set, information about the eventual deprecation of this version." }, "kmsKeyVersionName": { "type": "string", "description": "The KMS key version with which data is encrypted." }, "kmsKeyName": { "type": "string", "description": "The KMS key name used for encryption." }, "state": { "type": "string", "enumDescriptions": [ "The processor version is in an unspecified state.", "The processor version is deployed and can be used for processing.", "The processor version is being deployed.", "The processor version is not deployed and cannot be used for processing.", "The processor version is being undeployed.", "The processor version is being created.", "The processor version is being deleted.", "The processor version failed and is in an indeterminate state." ], "description": "The state of the processor version.", "enum": [ "STATE_UNSPECIFIED", "DEPLOYED", "DEPLOYING", "UNDEPLOYED", "UNDEPLOYING", "CREATING", "DELETING", "FAILED" ] }, "googleManaged": { "description": "Denotes that this ProcessorVersion is managed by google.", "type": "boolean" } }, "description": "A processor version is an implementation of a processor. Each processor can have multiple versions, pre-trained by Google internally or up-trained by the customer. At a time, a processor can only have one default version version. So the processor's behavior (when processing documents) is defined by a default version" }, "GoogleCloudDocumentaiV1beta2DocumentPageBlock": { "id": "GoogleCloudDocumentaiV1beta2DocumentPageBlock", "properties": { "detectedLanguages": { "description": "A list of detected languages together with confidence.", "type": "array", "items": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage" } }, "provenance": { "description": "The history of this annotation.", "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance" }, "layout": { "description": "Layout for Block.", "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout" } }, "description": "A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.", "type": "object" }, "GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionMetadata": { "id": "GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionMetadata", "description": "The long running operation metadata for set default processor version method.", "type": "object", "properties": { "commonMetadata": { "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata", "description": "The basic metadata of the long running operation." } } }, "GoogleCloudDocumentaiV1DocumentPageSymbol": { "type": "object", "properties": { "detectedLanguages": { "items": { "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage" }, "type": "array", "description": "A list of detected languages together with confidence." }, "layout": { "description": "Layout for Symbol.", "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout" } }, "description": "A detected symbol.", "id": "GoogleCloudDocumentaiV1DocumentPageSymbol" }, "GoogleCloudDocumentaiV1beta1DocumentPage": { "id": "GoogleCloudDocumentaiV1beta1DocumentPage", "type": "object", "properties": { "dimension": { "description": "Physical dimension of the page.", "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDimension" }, "symbols": { "description": "A list of visually detected symbols on the page.", "items": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageSymbol" }, "type": "array" }, "tokens": { "description": "A list of visually detected tokens on the page.", "items": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageToken" }, "type": "array" }, "pageNumber": { "format": "int32", "type": "integer", "description": "1-based index for current Page in a parent Document. Useful when a page is taken out of a Document for individual processing." }, "blocks": { "type": "array", "description": "A list of visually detected text blocks on the page. A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.", "items": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageBlock" } }, "provenance": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance", "description": "The history of this page." }, "lines": { "items": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLine" }, "description": "A list of visually detected text lines on the page. A collection of tokens that a human would perceive as a line.", "type": "array" }, "paragraphs": { "type": "array", "items": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageParagraph" }, "description": "A list of visually detected text paragraphs on the page. A collection of lines that a human would perceive as a paragraph." }, "formFields": { "items": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageFormField" }, "type": "array", "description": "A list of visually detected form fields on the page." }, "detectedLanguages": { "description": "A list of detected languages together with confidence.", "type": "array", "items": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage" } }, "image": { "description": "Rendered image for this page. This image is preprocessed to remove any skew, rotation, and distortions such that the annotation bounding boxes can be upright and axis-aligned.", "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageImage" }, "visualElements": { "type": "array", "items": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageVisualElement" }, "description": "A list of detected non-text visual elements e.g. checkbox, signature etc. on the page." }, "tables": { "description": "A list of visually detected tables on the page.", "type": "array", "items": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTable" } }, "layout": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout", "description": "Layout for the page." }, "transforms": { "type": "array", "description": "Transformation matrices that were applied to the original document image to produce Page.image.", "items": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageMatrix" } } }, "description": "A page in a Document." }, "GoogleCloudDocumentaiV1FetchProcessorTypesResponse": { "id": "GoogleCloudDocumentaiV1FetchProcessorTypesResponse", "type": "object", "properties": { "processorTypes": { "items": { "$ref": "GoogleCloudDocumentaiV1ProcessorType" }, "description": "The list of processor types.", "type": "array" } }, "description": "Response message for fetch processor types." }, "GoogleCloudDocumentaiV1SetDefaultProcessorVersionResponse": { "id": "GoogleCloudDocumentaiV1SetDefaultProcessorVersionResponse", "description": "Response message for set default processor version method.", "type": "object", "properties": {} }, "GoogleCloudDocumentaiV1beta2BoundingPoly": { "id": "GoogleCloudDocumentaiV1beta2BoundingPoly", "properties": { "normalizedVertices": { "description": "The bounding polygon normalized vertices.", "items": { "$ref": "GoogleCloudDocumentaiV1beta2NormalizedVertex" }, "type": "array" }, "vertices": { "items": { "$ref": "GoogleCloudDocumentaiV1beta2Vertex" }, "description": "The bounding polygon vertices.", "type": "array" } }, "type": "object", "description": "A bounding polygon for the detected image annotation." }, "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage": { "properties": { "confidence": { "type": "number", "description": "Confidence of detected language. Range [0, 1].", "format": "float" }, "languageCode": { "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.", "type": "string" } }, "id": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage", "description": "Detected language for a structural component.", "type": "object" }, "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow": { "id": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow", "description": "A row of table cells.", "type": "object", "properties": { "cells": { "items": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableCell" }, "type": "array", "description": "Cells that make up this row." } } }, "GoogleCloudDocumentaiV1beta2DocumentPageDimension": { "type": "object", "id": "GoogleCloudDocumentaiV1beta2DocumentPageDimension", "description": "Dimension for the page.", "properties": { "height": { "description": "Page height.", "type": "number", "format": "float" }, "unit": { "type": "string", "description": "Dimension unit." }, "width": { "format": "float", "type": "number", "description": "Page width." } } }, "GoogleCloudDocumentaiV1beta1DocumentRevisionHumanReview": { "description": "Human Review information of the document.", "type": "object", "id": "GoogleCloudDocumentaiV1beta1DocumentRevisionHumanReview", "properties": { "stateMessage": { "description": "A message providing more details about the current state of processing. For example, the rejection reason when the state is `rejected`.", "type": "string" }, "state": { "type": "string", "description": "Human review state. e.g. `requested`, `succeeded`, `rejected`." } } }, "GoogleCloudDocumentaiV1beta2DocumentPageTable": { "description": "A table representation similar to HTML table structure.", "id": "GoogleCloudDocumentaiV1beta2DocumentPageTable", "type": "object", "properties": { "bodyRows": { "items": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow" }, "type": "array", "description": "Body rows of the table." }, "detectedLanguages": { "type": "array", "description": "A list of detected languages together with confidence.", "items": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage" } }, "headerRows": { "description": "Header rows of the table.", "items": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow" }, "type": "array" }, "layout": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout", "description": "Layout for Table." } } }, "GoogleCloudDocumentaiV1Processor": { "description": "The first-class citizen for Document AI. Each processor defines how to extract structural information from a document.", "type": "object", "properties": { "createTime": { "format": "google-datetime", "description": "The time the processor was created.", "type": "string" }, "displayName": { "type": "string", "description": "The display name of the processor." }, "processEndpoint": { "readOnly": true, "description": "Output only. Immutable. The http endpoint that can be called to invoke processing.", "type": "string" }, "state": { "type": "string", "description": "Output only. The state of the processor.", "readOnly": true, "enum": [ "STATE_UNSPECIFIED", "ENABLED", "DISABLED", "ENABLING", "DISABLING", "CREATING", "FAILED", "DELETING" ], "enumDescriptions": [ "The processor is in an unspecified state.", "The processor is enabled, i.e., has an enabled version which can currently serve processing requests and all the feature dependencies have been successfully initialized.", "The processor is disabled.", "The processor is being enabled, will become ENABLED if successful.", "The processor is being disabled, will become DISABLED if successful.", "The processor is being created, will become either ENABLED (for successful creation) or FAILED (for failed ones). Once a processor is in this state, it can then be used for document processing, but the feature dependencies of the processor might not be fully created yet.", "The processor failed during creation or initialization of feature dependencies. The user should delete the processor and recreate one as all the functionalities of the processor are disabled.", "The processor is being deleted, will be removed if successful." ] }, "defaultProcessorVersion": { "description": "The default processor version.", "type": "string" }, "kmsKeyName": { "description": "The KMS key used for encryption/decryption in CMEK scenarios. See https://cloud.google.com/security-key-management.", "type": "string" }, "type": { "type": "string", "description": "The processor type, e.g., OCR_PROCESSOR, INVOICE_PROCESSOR, etc. To get a list of processors types, see FetchProcessorTypes." }, "name": { "description": "Output only. Immutable. The resource name of the processor. Format: `projects/{project}/locations/{location}/processors/{processor}`", "readOnly": true, "type": "string" } }, "id": "GoogleCloudDocumentaiV1Processor" }, "GoogleCloudDocumentaiV1DocumentSchemaEntityTypeEnumValues": { "id": "GoogleCloudDocumentaiV1DocumentSchemaEntityTypeEnumValues", "properties": { "values": { "items": { "type": "string" }, "description": "The individual values that this enum values type can include.", "type": "array" } }, "type": "object", "description": "Defines the a list of enum values." }, "GoogleCloudDocumentaiV1ReviewDocumentOperationMetadata": { "description": "The long running operation metadata for review document method.", "properties": { "commonMetadata": { "description": "The basic metadata of the long running operation.", "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata" }, "questionId": { "type": "string", "description": "The Crowd Compute question ID." } }, "type": "object", "id": "GoogleCloudDocumentaiV1ReviewDocumentOperationMetadata" }, "GoogleCloudDocumentaiV1beta1OutputConfig": { "description": "The desired output location and metadata.", "type": "object", "id": "GoogleCloudDocumentaiV1beta1OutputConfig", "properties": { "gcsDestination": { "description": "The Google Cloud Storage location to write the output to.", "$ref": "GoogleCloudDocumentaiV1beta1GcsDestination" }, "pagesPerShard": { "description": "The max number of pages to include into each output Document shard JSON on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 parsed pages will be produced. If `pages_per_shard` = 20, then 5 Document shard JSON files each containing 20 parsed pages will be written under the prefix OutputConfig.gcs_destination.uri and suffix pages-x-to-y.json where x and y are 1-indexed page numbers. Example GCS outputs with 157 pages and pages_per_shard = 50: pages-001-to-050.json pages-051-to-100.json pages-101-to-150.json pages-151-to-157.json", "type": "integer", "format": "int32" } } }, "GoogleCloudDocumentaiV1beta1DocumentPageVisualElement": { "description": "Detected non-text visual elements e.g. checkbox, signature etc. on the page.", "properties": { "type": { "description": "Type of the VisualElement.", "type": "string" }, "detectedLanguages": { "type": "array", "items": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage" }, "description": "A list of detected languages together with confidence." }, "layout": { "description": "Layout for VisualElement.", "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout" } }, "id": "GoogleCloudDocumentaiV1beta1DocumentPageVisualElement", "type": "object" }, "GoogleCloudDocumentaiV1DocumentRevisionHumanReview": { "properties": { "state": { "description": "Human review state. e.g. `requested`, `succeeded`, `rejected`.", "type": "string" }, "stateMessage": { "type": "string", "description": "A message providing more details about the current state of processing. For example, the rejection reason when the state is `rejected`." } }, "id": "GoogleCloudDocumentaiV1DocumentRevisionHumanReview", "type": "object", "description": "Human Review information of the document." }, "GoogleCloudDocumentaiV1beta1DocumentPageParagraph": { "type": "object", "properties": { "detectedLanguages": { "description": "A list of detected languages together with confidence.", "items": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage" }, "type": "array" }, "provenance": { "description": "The history of this annotation.", "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance" }, "layout": { "description": "Layout for Paragraph.", "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout" } }, "description": "A collection of lines that a human would perceive as a paragraph.", "id": "GoogleCloudDocumentaiV1beta1DocumentPageParagraph" }, "GoogleCloudDocumentaiV1beta2GcsDestination": { "id": "GoogleCloudDocumentaiV1beta2GcsDestination", "description": "The Google Cloud Storage location where the output file will be written to.", "properties": { "uri": { "type": "string" } }, "type": "object" }, "GoogleCloudDocumentaiV1ReviewDocumentRequest": { "id": "GoogleCloudDocumentaiV1ReviewDocumentRequest", "properties": { "enableSchemaValidation": { "type": "boolean", "description": "Whether the validation should be performed on the ad-hoc review request." }, "priority": { "description": "The priority of the human review task.", "type": "string", "enumDescriptions": [ "The default priority level.", "The urgent priority level. The labeling manager should allocate labeler resource to the urgent task queue to respect this priority level." ], "enum": [ "DEFAULT", "URGENT" ] }, "inlineDocument": { "description": "An inline document proto.", "$ref": "GoogleCloudDocumentaiV1Document" }, "documentSchema": { "$ref": "GoogleCloudDocumentaiV1DocumentSchema", "description": "The document schema of the human review task." } }, "description": "Request message for review document method.", "type": "object" }, "GoogleCloudDocumentaiV1beta1DocumentPageTableTableCell": { "description": "A cell representation inside the table.", "type": "object", "id": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableCell", "properties": { "detectedLanguages": { "items": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage" }, "type": "array", "description": "A list of detected languages together with confidence." }, "colSpan": { "format": "int32", "description": "How many columns this cell spans.", "type": "integer" }, "rowSpan": { "description": "How many rows this cell spans.", "type": "integer", "format": "int32" }, "layout": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout", "description": "Layout for TableCell." } } }, "GoogleCloudDocumentaiV1DisableProcessorResponse": { "type": "object", "properties": {}, "id": "GoogleCloudDocumentaiV1DisableProcessorResponse", "description": "Response message for the disable processor method. Intentionally empty proto for adding fields in future." }, "GoogleCloudDocumentaiV1ProcessResponse": { "id": "GoogleCloudDocumentaiV1ProcessResponse", "properties": { "humanReviewStatus": { "$ref": "GoogleCloudDocumentaiV1HumanReviewStatus", "description": "The status of human review on the processed document." }, "document": { "description": "The document payload, will populate fields based on the processor's behavior.", "$ref": "GoogleCloudDocumentaiV1Document" } }, "description": "Response message for the process document method.", "type": "object" }, "GoogleTypeDateTime": { "type": "object", "id": "GoogleTypeDateTime", "description": "Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few possible ways: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular offset from UTC. LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular time zone. LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The date is relative to the Proleptic Gregorian Calendar. If year is 0, the DateTime is considered not to have a specific year. month and day must have valid, non-zero values. This type may also be used to represent a physical time if all the date and time fields are set and either case of the `time_offset` oneof is set. Consider using `Timestamp` message for physical time instead. If your use case also would like to store the user's timezone, that can be done in another field. This type is more flexible than some applications may want. Make sure to document and validate your application's limitations.", "properties": { "month": { "format": "int32", "type": "integer", "description": "Required. Month of year. Must be from 1 to 12." }, "utcOffset": { "format": "google-duration", "type": "string", "description": "UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would be represented as { seconds: -14400 }." }, "timeZone": { "$ref": "GoogleTypeTimeZone", "description": "Time zone." }, "day": { "description": "Required. Day of month. Must be from 1 to 31 and valid for the year and month.", "format": "int32", "type": "integer" }, "seconds": { "description": "Required. Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.", "format": "int32", "type": "integer" }, "hours": { "format": "int32", "type": "integer", "description": "Required. Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time." }, "year": { "format": "int32", "description": "Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year.", "type": "integer" }, "minutes": { "format": "int32", "description": "Required. Minutes of hour of day. Must be from 0 to 59.", "type": "integer" }, "nanos": { "format": "int32", "description": "Required. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.", "type": "integer" } } }, "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataUpdatedDocument": { "properties": { "sourcePrefix": { "type": "string", "description": "The prefix of cloud storage, identifies the original document which should be updated by resync pipeline." }, "destinationPrefix": { "type": "string", "description": "The prefix of cloud storage, identifies the destination document which should be updated by resync pipeline." }, "status": { "description": "The final status of the documents which should be updated by resync pipeline.", "$ref": "GoogleRpcStatus" } }, "description": "The proto for updated document in resync pipeline.", "type": "object", "id": "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataUpdatedDocument" }, "GoogleCloudDocumentaiV1beta3HumanReviewStatus": { "properties": { "stateMessage": { "type": "string", "description": "A message providing more details about the human review state." }, "state": { "enum": [ "STATE_UNSPECIFIED", "SKIPPED", "VALIDATION_PASSED", "IN_PROGRESS", "ERROR" ], "enumDescriptions": [ "Human review state is unspecified. Most likely due to an internal error.", "Human review is skipped for the document. This can happen because human review is not enabled on the processor or the processing request has been set to skip this document.", "Human review validation is triggered and passed, so no review is needed.", "Human review validation is triggered and the document is under review.", "Some error happened during triggering human review, see the [state_message] for details." ], "type": "string", "description": "The state of human review on the processing request." }, "humanReviewOperation": { "type": "string", "description": "The name of the operation triggered by the processed document. This field is populated only when the [state] is [HUMAN_REVIEW_IN_PROGRESS]. It has the same response type and metadata as the long running operation returned by [ReviewDocument] method." } }, "id": "GoogleCloudDocumentaiV1beta3HumanReviewStatus", "type": "object", "description": "The status of human review on a processed document." }, "GoogleCloudDocumentaiV1beta1DocumentEntity": { "description": "An entity that could be a phrase in the text or a property that belongs to the document. It is a known entity type, such as a person, an organization, or location.", "type": "object", "id": "GoogleCloudDocumentaiV1beta1DocumentEntity", "properties": { "mentionId": { "type": "string", "description": "Optional. Deprecated. Use `id` field instead." }, "properties": { "description": "Optional. Entities can be nested to form a hierarchical data structure representing the content in the document.", "items": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntity" }, "type": "array" }, "confidence": { "type": "number", "description": "Optional. Confidence of detected Schema entity. Range [0, 1].", "format": "float" }, "provenance": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance", "description": "Optional. The history of this annotation." }, "normalizedValue": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue", "description": "Optional. Normalized entity value. Absent if the extracted value could not be converted or the type (e.g. address) is not supported for certain parsers. This field is also only populated for certain supported document types." }, "pageAnchor": { "description": "Optional. Represents the provenance of this entity wrt. the location on the page where it was found.", "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageAnchor" }, "type": { "description": "Required. Entity type from a schema e.g. `Address`.", "type": "string" }, "id": { "type": "string", "description": "Optional. Canonical id. This will be a unique value in the entity list for this document." }, "mentionText": { "description": "Optional. Text value in the document e.g. `1600 Amphitheatre Pkwy`. If the entity is not present in the document, this field will be empty.", "type": "string" }, "textAnchor": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor", "description": "Optional. Provenance of the entity. Text anchor indexing into the Document.text." }, "nonPresent": { "type": "boolean", "description": "Optional. This attribute indicates that the processing didn't actually identify this entity, but a confidence score was assigned that represent the potential that this could be a false negative. A non-present entity should have an empty mention_text and text_anchor." }, "redacted": { "type": "boolean", "description": "Optional. Whether the entity will be redacted for de-identification purposes." } } }, "GoogleCloudDocumentaiV1DocumentStyle": { "description": "Annotation for common text style attributes. This adheres to CSS conventions as much as possible.", "id": "GoogleCloudDocumentaiV1DocumentStyle", "type": "object", "properties": { "textDecoration": { "description": "Text decoration. Follows CSS standard. https://www.w3schools.com/cssref/pr_text_text-decoration.asp", "type": "string" }, "textAnchor": { "description": "Text anchor indexing into the Document.text.", "$ref": "GoogleCloudDocumentaiV1DocumentTextAnchor" }, "fontWeight": { "type": "string", "description": "Font weight. Possible values are normal, bold, bolder, and lighter. https://www.w3schools.com/cssref/pr_font_weight.asp" }, "fontSize": { "$ref": "GoogleCloudDocumentaiV1DocumentStyleFontSize", "description": "Font size." }, "color": { "description": "Text color.", "$ref": "GoogleTypeColor" }, "backgroundColor": { "description": "Text background color.", "$ref": "GoogleTypeColor" }, "textStyle": { "description": "Text style. Possible values are normal, italic, and oblique. https://www.w3schools.com/cssref/pr_font_font-style.asp", "type": "string" } } }, "GoogleCloudDocumentaiV1beta1DocumentPageImage": { "type": "object", "properties": { "height": { "format": "int32", "type": "integer", "description": "Height of the image in pixels." }, "mimeType": { "description": "Encoding mime type for the image.", "type": "string" }, "width": { "description": "Width of the image in pixels.", "type": "integer", "format": "int32" }, "content": { "type": "string", "format": "byte", "description": "Raw byte content of the image." } }, "id": "GoogleCloudDocumentaiV1beta1DocumentPageImage", "description": "Rendered image contents for this page." }, "GoogleCloudDocumentaiV1beta2Document": { "id": "GoogleCloudDocumentaiV1beta2Document", "type": "object", "properties": { "labels": { "type": "array", "description": "Labels for this document.", "items": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentLabel" } }, "error": { "$ref": "GoogleRpcStatus", "description": "Any error that occurred while processing this document." }, "uri": { "description": "Optional. Currently supports Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. See [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris) for more info.", "type": "string" }, "text": { "type": "string", "description": "Optional. UTF-8 encoded text in reading order from the document." }, "pages": { "items": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentPage" }, "type": "array", "description": "Visual page layout for the Document." }, "entityRelations": { "description": "Placeholder. Relationship among Document.entities.", "items": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntityRelation" }, "type": "array" }, "textStyles": { "items": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentStyle" }, "type": "array", "description": "Placeholder. Styles for the Document.text." }, "shardInfo": { "description": "Information about the sharding if this document is sharded part of a larger document. If the document is not sharded, this message is not specified.", "$ref": "GoogleCloudDocumentaiV1beta2DocumentShardInfo" }, "mimeType": { "description": "An IANA published MIME type (also referred to as media type). For more information, see https://www.iana.org/assignments/media-types/media-types.xhtml.", "type": "string" }, "textChanges": { "items": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextChange" }, "description": "Placeholder. A list of text corrections made to [Document.text]. This is usually used for annotating corrections to OCR mistakes. Text changes for a given revision may not overlap with each other.", "type": "array" }, "entities": { "type": "array", "items": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntity" }, "description": "A list of entities detected on Document.text. For document shards, entities in this list may cross shard boundaries." }, "revisions": { "type": "array", "description": "Placeholder. Revision history of this document.", "items": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentRevision" } }, "content": { "type": "string", "format": "byte", "description": "Optional. Inline document content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64." } }, "description": "Document represents the canonical document resource in Document AI. It is an interchange format that provides insights into documents and allows for collaboration between users and Document AI to iterate and optimize for quality." }, "GoogleCloudDocumentaiV1beta2DocumentRevision": { "id": "GoogleCloudDocumentaiV1beta2DocumentRevision", "description": "Contains past or forward revisions of this document.", "properties": { "humanReview": { "description": "Human Review information of this revision.", "$ref": "GoogleCloudDocumentaiV1beta2DocumentRevisionHumanReview" }, "processor": { "description": "If the annotation was made by processor identify the processor by its resource name.", "type": "string" }, "parent": { "items": { "type": "integer", "format": "int32" }, "description": "The revisions that this revision is based on. This can include one or more parent (when documents are merged.) This field represents the index into the `revisions` field.", "type": "array" }, "parentIds": { "type": "array", "items": { "type": "string" }, "description": "The revisions that this revision is based on. Must include all the ids that have anything to do with this revision - eg. there are `provenance.parent.revision` fields that index into this field." }, "createTime": { "description": "The time that the revision was created.", "format": "google-datetime", "type": "string" }, "id": { "description": "Id of the revision. Unique within the context of the document.", "type": "string" }, "agent": { "description": "If the change was made by a person specify the name or id of that person.", "type": "string" } }, "type": "object" }, "GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionResponse": { "description": "Response message for the undeploy processor version method.", "id": "GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionResponse", "properties": {}, "type": "object" }, "GoogleCloudDocumentaiV1DocumentTextAnchor": { "description": "Text reference indexing into the Document.text.", "id": "GoogleCloudDocumentaiV1DocumentTextAnchor", "properties": { "content": { "type": "string", "description": "Contains the content of the text span so that users do not have to look it up in the text_segments. It is always populated for formFields." }, "textSegments": { "description": "The text segments from the Document.text.", "items": { "$ref": "GoogleCloudDocumentaiV1DocumentTextAnchorTextSegment" }, "type": "array" } }, "type": "object" }, "GoogleCloudDocumentaiV1beta1DocumentPageMatrix": { "properties": { "type": { "description": "This encodes information about what data type the matrix uses. For example, 0 (CV_8U) is an unsigned 8-bit image. For the full list of OpenCV primitive data types, please refer to https://docs.opencv.org/4.3.0/d1/d1b/group__core__hal__interface.html", "format": "int32", "type": "integer" }, "data": { "description": "The matrix data.", "type": "string", "format": "byte" }, "rows": { "format": "int32", "description": "Number of rows in the matrix.", "type": "integer" }, "cols": { "type": "integer", "format": "int32", "description": "Number of columns in the matrix." } }, "type": "object", "description": "Representation for transformation matrix, intended to be compatible and used with OpenCV format for image manipulation.", "id": "GoogleCloudDocumentaiV1beta1DocumentPageMatrix" }, "GoogleCloudDocumentaiV1BoundingPoly": { "type": "object", "properties": { "vertices": { "items": { "$ref": "GoogleCloudDocumentaiV1Vertex" }, "description": "The bounding polygon vertices.", "type": "array" }, "normalizedVertices": { "items": { "$ref": "GoogleCloudDocumentaiV1NormalizedVertex" }, "type": "array", "description": "The bounding polygon normalized vertices." } }, "id": "GoogleCloudDocumentaiV1BoundingPoly", "description": "A bounding polygon for the detected image annotation." }, "GoogleCloudDocumentaiV1UndeployProcessorVersionMetadata": { "properties": { "commonMetadata": { "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata", "description": "The basic metadata of the long running operation." } }, "description": "The long running operation metadata for the undeploy processor version method.", "type": "object", "id": "GoogleCloudDocumentaiV1UndeployProcessorVersionMetadata" }, "GoogleCloudDocumentaiV1beta2DocumentEntityRelation": { "description": "Relationship between Entities.", "properties": { "subjectId": { "description": "Subject entity id.", "type": "string" }, "relation": { "type": "string", "description": "Relationship description." }, "objectId": { "type": "string", "description": "Object entity id." } }, "id": "GoogleCloudDocumentaiV1beta2DocumentEntityRelation", "type": "object" }, "GoogleCloudDocumentaiV1beta1DocumentProvenance": { "type": "object", "id": "GoogleCloudDocumentaiV1beta1DocumentProvenance", "properties": { "id": { "description": "The Id of this operation. Needs to be unique within the scope of the revision.", "type": "integer", "format": "int32" }, "revision": { "type": "integer", "format": "int32", "description": "The index of the revision that produced this element." }, "type": { "description": "The type of provenance operation.", "enum": [ "OPERATION_TYPE_UNSPECIFIED", "ADD", "REMOVE", "REPLACE", "EVAL_REQUESTED", "EVAL_APPROVED", "EVAL_SKIPPED" ], "type": "string", "enumDescriptions": [ "Operation type unspecified. If no operation is specified a provenance entry is simply used to match against a `parent`.", "Add an element.", "Remove an element identified by `parent`.", "Replace an element identified by `parent`.", "Request human review for the element identified by `parent`.", "Element is reviewed and approved at human review, confidence will be set to 1.0.", "Element is skipped in the validation process." ] }, "parents": { "items": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenanceParent" }, "description": "References to the original elements that are replaced.", "type": "array" } }, "description": "Structure to identify provenance relationships between annotations in different revisions." }, "GoogleCloudDocumentaiUiv1beta3RevisionReference": { "type": "object", "description": "The revision reference specifies which revision on the document to read.", "id": "GoogleCloudDocumentaiUiv1beta3RevisionReference", "properties": { "latestProcessorVersion": { "type": "string", "description": "Read the revision generated by the processor version, returns error if it does not exist." }, "revisionCase": { "type": "string", "enumDescriptions": [ "Unspecified case, fallback to read the first (OCR) revision.", "The latest revision made by a human.", "The latest revision based on timestamp." ], "description": "Read the revision by the predefined case.", "enum": [ "REVISION_CASE_UNSPECIFIED", "LATEST_HUMAN_REVIEW", "LATEST_TIMESTAMP" ] }, "revisionId": { "description": "Read the revision given by the id, returns error if it does not exist.", "type": "string" } } }, "GoogleCloudDocumentaiV1beta1DocumentStyleFontSize": { "properties": { "size": { "type": "number", "format": "float", "description": "Font size for the text." }, "unit": { "description": "Unit for the font size. Follows CSS naming (in, px, pt, etc.).", "type": "string" } }, "id": "GoogleCloudDocumentaiV1beta1DocumentStyleFontSize", "description": "Font size with unit.", "type": "object" }, "GoogleCloudDocumentaiV1DocumentPageFormField": { "description": "A form field detected on the page.", "id": "GoogleCloudDocumentaiV1DocumentPageFormField", "properties": { "nameDetectedLanguages": { "type": "array", "items": { "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage" }, "description": "A list of detected languages for name together with confidence." }, "valueType": { "type": "string", "description": "If the value is non-textual, this field represents the type. Current valid values are: - blank (this indicates the field_value is normal text) - \"unfilled_checkbox\" - \"filled_checkbox\"" }, "fieldValue": { "description": "Layout for the FormField value.", "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout" }, "valueDetectedLanguages": { "items": { "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage" }, "description": "A list of detected languages for value together with confidence.", "type": "array" }, "provenance": { "$ref": "GoogleCloudDocumentaiV1DocumentProvenance", "description": "The history of this annotation." }, "correctedValueText": { "description": "Created for Labeling UI to export value text. If corrections were made to the text identified by the `field_value.text_anchor`, this field will contain the correction.", "type": "string" }, "correctedKeyText": { "description": "Created for Labeling UI to export key text. If corrections were made to the text identified by the `field_name.text_anchor`, this field will contain the correction.", "type": "string" }, "fieldName": { "description": "Layout for the FormField name. e.g. `Address`, `Email`, `Grand total`, `Phone number`, etc.", "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout" } }, "type": "object" }, "GoogleCloudDocumentaiV1GcsDocuments": { "id": "GoogleCloudDocumentaiV1GcsDocuments", "type": "object", "properties": { "documents": { "items": { "$ref": "GoogleCloudDocumentaiV1GcsDocument" }, "description": "The list of documents.", "type": "array" } }, "description": "Specifies a set of documents on Cloud Storage." }, "GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionMetadata": { "description": "The long running operation metadata for set default processor version method.", "properties": { "commonMetadata": { "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata", "description": "The basic metadata of the long running operation." } }, "type": "object", "id": "GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionMetadata" }, "GoogleCloudDocumentaiV1beta3DeleteProcessorVersionMetadata": { "description": "The long running operation metadata for delete processor version method.", "type": "object", "properties": { "commonMetadata": { "description": "The basic metadata of the long running operation.", "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata" } }, "id": "GoogleCloudDocumentaiV1beta3DeleteProcessorVersionMetadata" }, "GoogleCloudDocumentaiV1SetDefaultProcessorVersionRequest": { "type": "object", "properties": { "defaultProcessorVersion": { "type": "string", "description": "Required. The resource name of child ProcessorVersion to use as default. Format: `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{version}`" } }, "id": "GoogleCloudDocumentaiV1SetDefaultProcessorVersionRequest", "description": "Request message for the set default processor version method." }, "GoogleCloudDocumentaiV1DocumentOutputConfig": { "description": "Config that controls the output of documents. All documents will be written as a JSON file.", "type": "object", "properties": { "gcsOutputConfig": { "$ref": "GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfig", "description": "Output config to write the results to Cloud Storage." } }, "id": "GoogleCloudDocumentaiV1DocumentOutputConfig" }, "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus": { "description": "The status of each individual document in the import process.", "id": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus", "properties": { "outputGcsDestination": { "description": "The output_gcs_destination of the processed document if it was successful, otherwise empty.", "type": "string" }, "status": { "description": "The status of the importing of the document.", "$ref": "GoogleRpcStatus" }, "inputGcsSource": { "type": "string", "description": "The source Cloud Storage URI of the document." } }, "type": "object" }, "GoogleCloudDocumentaiV1DeployProcessorVersionRequest": { "type": "object", "properties": {}, "id": "GoogleCloudDocumentaiV1DeployProcessorVersionRequest", "description": "Request message for the deploy processor version method." }, "GoogleCloudDocumentaiV1alpha1CommonOperationMetadata": { "id": "GoogleCloudDocumentaiV1alpha1CommonOperationMetadata", "description": "The common metadata for long running operations.", "properties": { "resource": { "description": "A related resource to this operation.", "type": "string" }, "updateTime": { "type": "string", "format": "google-datetime", "description": "The last update time of the operation." }, "state": { "enumDescriptions": [ "Unspecified state.", "Operation is still running.", "Operation is being cancelled.", "Operation succeeded.", "Operation failed.", "Operation is cancelled." ], "description": "The state of the operation.", "type": "string", "enum": [ "STATE_UNSPECIFIED", "RUNNING", "CANCELLING", "SUCCEEDED", "FAILED", "CANCELLED" ] }, "stateMessage": { "type": "string", "description": "A message providing more details about the current state of processing." }, "createTime": { "type": "string", "format": "google-datetime", "description": "The creation time of the operation." } }, "type": "object" }, "GoogleCloudDocumentaiV1beta2DocumentShardInfo": { "type": "object", "description": "For a large document, sharding may be performed to produce several document shards. Each document shard contains this field to detail which shard it is.", "properties": { "shardCount": { "type": "string", "format": "int64", "description": "Total number of shards." }, "textOffset": { "type": "string", "description": "The index of the first character in Document.text in the overall document global text.", "format": "int64" }, "shardIndex": { "format": "int64", "description": "The 0-based index of this shard.", "type": "string" } }, "id": "GoogleCloudDocumentaiV1beta2DocumentShardInfo" }, "GoogleCloudDocumentaiV1beta1Document": { "properties": { "uri": { "type": "string", "description": "Optional. Currently supports Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. See [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris) for more info." }, "shardInfo": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentShardInfo", "description": "Information about the sharding if this document is sharded part of a larger document. If the document is not sharded, this message is not specified." }, "textStyles": { "items": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentStyle" }, "description": "Placeholder. Styles for the Document.text.", "type": "array" }, "revisions": { "description": "Placeholder. Revision history of this document.", "type": "array", "items": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentRevision" } }, "pages": { "items": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentPage" }, "description": "Visual page layout for the Document.", "type": "array" }, "content": { "format": "byte", "type": "string", "description": "Optional. Inline document content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64." }, "mimeType": { "type": "string", "description": "An IANA published MIME type (also referred to as media type). For more information, see https://www.iana.org/assignments/media-types/media-types.xhtml." }, "textChanges": { "items": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextChange" }, "type": "array", "description": "Placeholder. A list of text corrections made to [Document.text]. This is usually used for annotating corrections to OCR mistakes. Text changes for a given revision may not overlap with each other." }, "text": { "description": "Optional. UTF-8 encoded text in reading order from the document.", "type": "string" }, "entities": { "type": "array", "description": "A list of entities detected on Document.text. For document shards, entities in this list may cross shard boundaries.", "items": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntity" } }, "entityRelations": { "description": "Placeholder. Relationship among Document.entities.", "items": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntityRelation" }, "type": "array" }, "error": { "description": "Any error that occurred while processing this document.", "$ref": "GoogleRpcStatus" } }, "description": "Document represents the canonical document resource in Document AI. It is an interchange format that provides insights into documents and allows for collaboration between users and Document AI to iterate and optimize for quality.", "id": "GoogleCloudDocumentaiV1beta1Document", "type": "object" }, "GoogleCloudDocumentaiV1beta2InputConfig": { "type": "object", "id": "GoogleCloudDocumentaiV1beta2InputConfig", "properties": { "gcsSource": { "description": "The Google Cloud Storage location to read the input from. This must be a single file.", "$ref": "GoogleCloudDocumentaiV1beta2GcsSource" }, "contents": { "type": "string", "format": "byte", "description": "Content in bytes, represented as a stream of bytes. Note: As with all `bytes` fields, proto buffer messages use a pure binary representation, whereas JSON representations use base64. This field only works for synchronous ProcessDocument method." }, "mimeType": { "description": "Required. Mimetype of the input. Current supported mimetypes are application/pdf, image/tiff, and image/gif. In addition, application/json type is supported for requests with ProcessDocumentRequest.automl_params field set. The JSON file needs to be in Document format.", "type": "string" } }, "description": "The desired input location and metadata." }, "GoogleCloudDocumentaiV1beta2DocumentPageLine": { "type": "object", "description": "A collection of tokens that a human would perceive as a line. Does not cross column boundaries, can be horizontal, vertical, etc.", "properties": { "provenance": { "description": "The history of this annotation.", "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance" }, "layout": { "description": "Layout for Line.", "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout" }, "detectedLanguages": { "items": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage" }, "type": "array", "description": "A list of detected languages together with confidence." } }, "id": "GoogleCloudDocumentaiV1beta2DocumentPageLine" }, "GoogleCloudDocumentaiV1beta1DocumentShardInfo": { "id": "GoogleCloudDocumentaiV1beta1DocumentShardInfo", "type": "object", "properties": { "shardCount": { "format": "int64", "description": "Total number of shards.", "type": "string" }, "textOffset": { "format": "int64", "description": "The index of the first character in Document.text in the overall document global text.", "type": "string" }, "shardIndex": { "type": "string", "format": "int64", "description": "The 0-based index of this shard." } }, "description": "For a large document, sharding may be performed to produce several document shards. Each document shard contains this field to detail which shard it is." }, "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata": { "type": "object", "id": "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata", "properties": { "individualBatchDeleteStatuses": { "description": "The list of response details of each document.", "type": "array", "items": { "$ref": "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus" } }, "commonMetadata": { "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata", "description": "The basic metadata of the long running operation." } } }, "GoogleTypeDate": { "properties": { "year": { "type": "integer", "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.", "format": "int32" }, "day": { "format": "int32", "type": "integer", "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant." }, "month": { "type": "integer", "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.", "format": "int32" } }, "type": "object", "id": "GoogleTypeDate", "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh A full date, with non-zero year, month, and day values. LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh A month and day, with a zero year (for example, an anniversary). LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh A year on its own, with a zero month and a zero day. LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh A year and month, with a zero day (for example, a credit card expiration date). Related types: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh google.type.TimeOfDay LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh google.type.DateTime LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh google.protobuf.Timestamp" }, "GoogleCloudDocumentaiV1GcsDocument": { "description": "Specifies a document stored on Cloud Storage.", "properties": { "gcsUri": { "type": "string", "description": "The Cloud Storage object uri." }, "mimeType": { "type": "string", "description": "An IANA MIME type (RFC6838) of the content." } }, "id": "GoogleCloudDocumentaiV1GcsDocument", "type": "object" }, "GoogleCloudDocumentaiV1DocumentEntity": { "description": "An entity that could be a phrase in the text or a property that belongs to the document. It is a known entity type, such as a person, an organization, or location.", "id": "GoogleCloudDocumentaiV1DocumentEntity", "type": "object", "properties": { "id": { "description": "Optional. Canonical id. This will be a unique value in the entity list for this document.", "type": "string" }, "normalizedValue": { "$ref": "GoogleCloudDocumentaiV1DocumentEntityNormalizedValue", "description": "Optional. Normalized entity value. Absent if the extracted value could not be converted or the type (e.g. address) is not supported for certain parsers. This field is also only populated for certain supported document types." }, "nonPresent": { "description": "Optional. This attribute indicates that the processing didn't actually identify this entity, but a confidence score was assigned that represent the potential that this could be a false negative. A non-present entity should have an empty mention_text and text_anchor.", "type": "boolean" }, "mentionId": { "description": "Optional. Deprecated. Use `id` field instead.", "type": "string" }, "pageAnchor": { "$ref": "GoogleCloudDocumentaiV1DocumentPageAnchor", "description": "Optional. Represents the provenance of this entity wrt. the location on the page where it was found." }, "redacted": { "description": "Optional. Whether the entity will be redacted for de-identification purposes.", "type": "boolean" }, "confidence": { "description": "Optional. Confidence of detected Schema entity. Range [0, 1].", "type": "number", "format": "float" }, "properties": { "type": "array", "items": { "$ref": "GoogleCloudDocumentaiV1DocumentEntity" }, "description": "Optional. Entities can be nested to form a hierarchical data structure representing the content in the document." }, "mentionText": { "type": "string", "description": "Optional. Text value in the document e.g. `1600 Amphitheatre Pkwy`. If the entity is not present in the document, this field will be empty." }, "textAnchor": { "$ref": "GoogleCloudDocumentaiV1DocumentTextAnchor", "description": "Optional. Provenance of the entity. Text anchor indexing into the Document.text." }, "type": { "type": "string", "description": "Required. Entity type from a schema e.g. `Address`." }, "provenance": { "description": "Optional. The history of this annotation.", "$ref": "GoogleCloudDocumentaiV1DocumentProvenance" } } }, "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadataIndividualBatchMoveStatus": { "id": "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadataIndividualBatchMoveStatus", "description": "The status of each individual document in the batch move process.", "type": "object", "properties": { "status": { "description": "The status of moving the document.", "$ref": "GoogleRpcStatus" }, "documentId": { "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentId", "description": "The document id of the document." } } }, "GoogleCloudDocumentaiV1BatchDocumentsInputConfig": { "properties": { "gcsPrefix": { "description": "The set of documents that match the specified Cloud Storage [gcs_prefix].", "$ref": "GoogleCloudDocumentaiV1GcsPrefix" }, "gcsDocuments": { "$ref": "GoogleCloudDocumentaiV1GcsDocuments", "description": "The set of documents individually specified on Cloud Storage." } }, "type": "object", "id": "GoogleCloudDocumentaiV1BatchDocumentsInputConfig", "description": "The common config to specify a set of documents used as input." }, "GoogleCloudDocumentaiV1beta2DocumentPageToken": { "type": "object", "id": "GoogleCloudDocumentaiV1beta2DocumentPageToken", "properties": { "detectedLanguages": { "description": "A list of detected languages together with confidence.", "items": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage" }, "type": "array" }, "provenance": { "description": "The history of this annotation.", "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance" }, "detectedBreak": { "description": "Detected break at the end of a Token.", "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak" }, "layout": { "description": "Layout for Token.", "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout" } }, "description": "A detected token." }, "GoogleCloudDocumentaiV1DisableProcessorMetadata": { "description": "The long running operation metadata for disable processor method.", "type": "object", "id": "GoogleCloudDocumentaiV1DisableProcessorMetadata", "properties": { "commonMetadata": { "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata", "description": "The basic metadata of the long running operation." } } }, "GoogleCloudDocumentaiV1beta2DocumentPageSymbol": { "type": "object", "properties": { "layout": { "description": "Layout for Symbol.", "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout" }, "detectedLanguages": { "items": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage" }, "description": "A list of detected languages together with confidence.", "type": "array" } }, "description": "A detected symbol.", "id": "GoogleCloudDocumentaiV1beta2DocumentPageSymbol" }, "GoogleCloudDocumentaiV1EnableProcessorRequest": { "description": "Request message for the enable processor method.", "type": "object", "id": "GoogleCloudDocumentaiV1EnableProcessorRequest", "properties": {} }, "GoogleCloudDocumentaiUiv1beta3DisableProcessorResponse": { "properties": {}, "type": "object", "description": "Response message for the disable processor method. Intentionally empty proto for adding fields in future.", "id": "GoogleCloudDocumentaiUiv1beta3DisableProcessorResponse" }, "GoogleCloudDocumentaiV1beta1DocumentEntityRelation": { "description": "Relationship between Entities.", "id": "GoogleCloudDocumentaiV1beta1DocumentEntityRelation", "type": "object", "properties": { "objectId": { "description": "Object entity id.", "type": "string" }, "subjectId": { "type": "string", "description": "Subject entity id." }, "relation": { "type": "string", "description": "Relationship description." } } }, "GoogleCloudDocumentaiV1ProcessRequest": { "id": "GoogleCloudDocumentaiV1ProcessRequest", "description": "Request message for the process document method.", "properties": { "skipHumanReview": { "type": "boolean", "description": "Whether Human Review feature should be skipped for this request. Default to false." }, "inlineDocument": { "description": "An inline document proto.", "$ref": "GoogleCloudDocumentaiV1Document" }, "rawDocument": { "$ref": "GoogleCloudDocumentaiV1RawDocument", "description": "A raw document content (bytes)." }, "fieldMask": { "format": "google-fieldmask", "type": "string", "description": "Specifies which fields to include in ProcessResponse's document." } }, "type": "object" }, "GoogleCloudDocumentaiV1beta2DocumentPageAnchor": { "id": "GoogleCloudDocumentaiV1beta2DocumentPageAnchor", "description": "Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types.", "type": "object", "properties": { "pageRefs": { "type": "array", "description": "One or more references to visual page elements", "items": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef" } } } }, "GoogleCloudDocumentaiV1ProcessorType": { "type": "object", "id": "GoogleCloudDocumentaiV1ProcessorType", "description": "A processor type is responsible for performing a certain document understanding task on a certain type of document.", "properties": { "type": { "type": "string", "description": "The type of the processor, e.g., \"invoice_parsing\"." }, "launchStage": { "enumDescriptions": [ "Do not use this default value.", "The feature is not yet implemented. Users can not use it.", "Prelaunch features are hidden from users and are only visible internally.", "Early Access features are limited to a closed group of testers. To use these features, you must sign up in advance and sign a Trusted Tester agreement (which includes confidentiality provisions). These features may be unstable, changed in backward-incompatible ways, and are not guaranteed to be released.", "Alpha is a limited availability test for releases before they are cleared for widespread use. By Alpha, all significant design issues are resolved and we are in the process of verifying functionality. Alpha customers need to apply for access, agree to applicable terms, and have their projects allowlisted. Alpha releases don't have to be feature complete, no SLAs are provided, and there are no technical support obligations, but they will be far enough along that customers can actually use them in test environments or for limited-use tests -- just like they would in normal production cases.", "Beta is the point at which we are ready to open a release for any customer to use. There are no SLA or technical support obligations in a Beta release. Products will be complete from a feature perspective, but may have some open outstanding issues. Beta releases are suitable for limited production use cases.", "GA features are open to all developers and are considered stable and fully qualified for production use.", "Deprecated features are scheduled to be shut down and removed. For more information, see the \"Deprecation Policy\" section of our [Terms of Service](https://cloud.google.com/terms/) and the [Google Cloud Platform Subject to the Deprecation Policy](https://cloud.google.com/terms/deprecation) documentation." ], "description": "Launch stage of the processor type", "enum": [ "LAUNCH_STAGE_UNSPECIFIED", "UNIMPLEMENTED", "PRELAUNCH", "EARLY_ACCESS", "ALPHA", "BETA", "GA", "DEPRECATED" ], "type": "string" }, "name": { "type": "string", "description": "The resource name of the processor type. Format: projects/{project}/processorTypes/{processor_type}" }, "allowCreation": { "description": "Whether the processor type allows creation. If true, users can create a processor of this processor type. Otherwise, users need to request access.", "type": "boolean" }, "availableLocations": { "items": { "$ref": "GoogleCloudDocumentaiV1ProcessorTypeLocationInfo" }, "type": "array", "description": "The locations in which this processor is available." }, "category": { "description": "The processor category, used by UI to group processor types.", "type": "string" } } }, "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata": { "properties": { "createTime": { "description": "The creation time of the operation.", "format": "google-datetime", "type": "string" }, "stateMessage": { "description": "A message providing more details about the current state of processing.", "type": "string" }, "updateTime": { "type": "string", "format": "google-datetime", "description": "The last update time of the operation." }, "state": { "enumDescriptions": [ "Unspecified state.", "Operation is still running.", "Operation is being cancelled.", "Operation succeeded.", "Operation failed.", "Operation is cancelled." ], "type": "string", "enum": [ "STATE_UNSPECIFIED", "RUNNING", "CANCELLING", "SUCCEEDED", "FAILED", "CANCELLED" ], "description": "The state of the operation." }, "resource": { "type": "string", "description": "A related resource to this operation." } }, "id": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata", "description": "The common metadata for long running operations.", "type": "object" }, "GoogleCloudDocumentaiV1beta1DocumentTextAnchorTextSegment": { "properties": { "endIndex": { "description": "TextSegment half open end UTF-8 char index in the Document.text.", "type": "string", "format": "int64" }, "startIndex": { "type": "string", "format": "int64", "description": "TextSegment start UTF-8 char index in the Document.text." } }, "id": "GoogleCloudDocumentaiV1beta1DocumentTextAnchorTextSegment", "description": "A text segment in the Document.text. The indices may be out of bounds which indicate that the text extends into another document shard for large sharded documents. See ShardInfo.text_offset", "type": "object" }, "GoogleTypeMoney": { "description": "Represents an amount of money with its currency type.", "type": "object", "properties": { "nanos": { "type": "integer", "format": "int32", "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000." }, "units": { "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.", "format": "int64", "type": "string" }, "currencyCode": { "description": "The three-letter currency code defined in ISO 4217.", "type": "string" } }, "id": "GoogleTypeMoney" }, "GoogleCloudDocumentaiV1beta3CommonOperationMetadata": { "properties": { "updateTime": { "format": "google-datetime", "type": "string", "description": "The last update time of the operation." }, "state": { "type": "string", "description": "The state of the operation.", "enumDescriptions": [ "Unspecified state.", "Operation is still running.", "Operation is being cancelled.", "Operation succeeded.", "Operation failed.", "Operation is cancelled." ], "enum": [ "STATE_UNSPECIFIED", "RUNNING", "CANCELLING", "SUCCEEDED", "FAILED", "CANCELLED" ] }, "createTime": { "description": "The creation time of the operation.", "type": "string", "format": "google-datetime" }, "stateMessage": { "type": "string", "description": "A message providing more details about the current state of processing." }, "resource": { "type": "string", "description": "A related resource to this operation." } }, "id": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata", "type": "object", "description": "The common metadata for long running operations." }, "GoogleCloudDocumentaiUiv1beta3UpdateDatasetOperationMetadata": { "id": "GoogleCloudDocumentaiUiv1beta3UpdateDatasetOperationMetadata", "properties": { "commonMetadata": { "description": "The basic metadata of the long running operation.", "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata" } }, "type": "object" }, "GoogleCloudLocationLocation": { "type": "object", "description": "A resource that represents Google Cloud Platform location.", "properties": { "locationId": { "description": "The canonical id for this location. For example: `\"us-east1\"`.", "type": "string" }, "displayName": { "type": "string", "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"." }, "name": { "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`", "type": "string" }, "metadata": { "description": "Service-specific metadata. For example the available capacity at the given location.", "additionalProperties": { "type": "any", "description": "Properties of the object. Contains field @type with type URL." }, "type": "object" }, "labels": { "type": "object", "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}", "additionalProperties": { "type": "string" } } }, "id": "GoogleCloudLocationLocation" }, "GoogleCloudDocumentaiV1beta2DocumentTextAnchor": { "description": "Text reference indexing into the Document.text.", "id": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor", "properties": { "content": { "type": "string", "description": "Contains the content of the text span so that users do not have to look it up in the text_segments. It is always populated for formFields." }, "textSegments": { "description": "The text segments from the Document.text.", "items": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment" }, "type": "array" } }, "type": "object" }, "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata": { "type": "object", "id": "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata", "properties": { "individualBatchMoveStatuses": { "description": "The list of response details of each document.", "type": "array", "items": { "$ref": "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadataIndividualBatchMoveStatus" } }, "destDatasetType": { "enumDescriptions": [ "Default value if the enum is not set. go/protodosdonts#do-include-an-unspecified-value-in-an-enum", "Identifies the train documents.", "Identifies the test documents.", "Identifies the unassigned documents." ], "type": "string", "enum": [ "DATASET_SPLIT_TYPE_UNSPECIFIED", "DATASET_SPLIT_TRAIN", "DATASET_SPLIT_TEST", "DATASET_SPLIT_UNASSIGNED" ], "description": "The destination dataset split type." }, "commonMetadata": { "description": "The basic metadata of the long running operation.", "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata" }, "destSplitType": { "type": "string", "enumDescriptions": [ "Default value if the enum is not set. go/protodosdonts#do-include-an-unspecified-value-in-an-enum", "Identifies the train documents.", "Identifies the test documents.", "Identifies the unassigned documents." ], "description": "The destination dataset split type.", "enum": [ "DATASET_SPLIT_TYPE_UNSPECIFIED", "DATASET_SPLIT_TRAIN", "DATASET_SPLIT_TEST", "DATASET_SPLIT_UNASSIGNED" ] } } }, "GoogleCloudDocumentaiV1DeleteProcessorMetadata": { "description": "The long running operation metadata for delete processor method.", "id": "GoogleCloudDocumentaiV1DeleteProcessorMetadata", "properties": { "commonMetadata": { "description": "The basic metadata of the long running operation.", "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata" } }, "type": "object" }, "GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue": { "properties": { "booleanValue": { "description": "Boolean value. Can be used for entities with binary values, or for checkboxes.", "type": "boolean" }, "integerValue": { "description": "Integer value.", "type": "integer", "format": "int32" }, "text": { "description": "Optional. An optional field to store a normalized string. For some entity types, one of respective `structured_value` fields may also be populated. Also not all the types of `structured_value` will be normalized. For example, some processors may not generate float or int normalized text by default. Below are sample formats mapped to structured values. - Money/Currency type (`money_value`) is in the ISO 4217 text format. - Date type (`date_value`) is in the ISO 8601 text format. - Datetime type (`datetime_value`) is in the ISO 8601 text format.", "type": "string" }, "datetimeValue": { "description": "DateTime value. Includes date, time, and timezone. See also: https://github.com/googleapis/googleapis/blob/master/google/type/datetime.proto", "$ref": "GoogleTypeDateTime" }, "dateValue": { "$ref": "GoogleTypeDate", "description": "Date value. Includes year, month, day. See also: https://github.com/googleapis/googleapis/blob/master/google/type/date.proto" }, "addressValue": { "$ref": "GoogleTypePostalAddress", "description": "Postal address. See also: https://github.com/googleapis/googleapis/blob/master/google/type/postal_address.proto" }, "floatValue": { "format": "float", "description": "Float value.", "type": "number" }, "moneyValue": { "description": "Money value. See also: https://github.com/googleapis/googleapis/blob/master/google/type/money.proto", "$ref": "GoogleTypeMoney" } }, "type": "object", "description": "Parsed and normalized entity value.", "id": "GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue" }, "GoogleCloudDocumentaiV1SetDefaultProcessorVersionMetadata": { "properties": { "commonMetadata": { "description": "The basic metadata of the long running operation.", "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata" } }, "description": "The long running operation metadata for set default processor version method.", "type": "object", "id": "GoogleCloudDocumentaiV1SetDefaultProcessorVersionMetadata" }, "GoogleCloudDocumentaiV1beta2OutputConfig": { "type": "object", "properties": { "gcsDestination": { "$ref": "GoogleCloudDocumentaiV1beta2GcsDestination", "description": "The Google Cloud Storage location to write the output to." }, "pagesPerShard": { "description": "The max number of pages to include into each output Document shard JSON on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 parsed pages will be produced. If `pages_per_shard` = 20, then 5 Document shard JSON files each containing 20 parsed pages will be written under the prefix OutputConfig.gcs_destination.uri and suffix pages-x-to-y.json where x and y are 1-indexed page numbers. Example GCS outputs with 157 pages and pages_per_shard = 50: pages-001-to-050.json pages-051-to-100.json pages-101-to-150.json pages-151-to-157.json", "format": "int32", "type": "integer" } }, "description": "The desired output location and metadata.", "id": "GoogleCloudDocumentaiV1beta2OutputConfig" }, "GoogleCloudDocumentaiV1beta1DocumentPageSymbol": { "id": "GoogleCloudDocumentaiV1beta1DocumentPageSymbol", "description": "A detected symbol.", "type": "object", "properties": { "detectedLanguages": { "description": "A list of detected languages together with confidence.", "type": "array", "items": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage" } }, "layout": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout", "description": "Layout for Symbol." } } }, "GoogleCloudDocumentaiV1beta3DeleteProcessorMetadata": { "id": "GoogleCloudDocumentaiV1beta3DeleteProcessorMetadata", "type": "object", "properties": { "commonMetadata": { "description": "The basic metadata of the long running operation.", "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata" } }, "description": "The long running operation metadata for delete processor method." }, "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow": { "id": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow", "properties": { "cells": { "type": "array", "items": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableCell" }, "description": "Cells that make up this row." } }, "type": "object", "description": "A row of table cells." }, "GoogleCloudDocumentaiV1DocumentPageAnchor": { "id": "GoogleCloudDocumentaiV1DocumentPageAnchor", "description": "Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types.", "type": "object", "properties": { "pageRefs": { "items": { "$ref": "GoogleCloudDocumentaiV1DocumentPageAnchorPageRef" }, "description": "One or more references to visual page elements", "type": "array" } } }, "GoogleCloudDocumentaiV1beta3UndeployProcessorVersionResponse": { "id": "GoogleCloudDocumentaiV1beta3UndeployProcessorVersionResponse", "type": "object", "properties": {}, "description": "Response message for the undeploy processor version method." }, "GoogleCloudDocumentaiV1beta1DocumentRevision": { "type": "object", "description": "Contains past or forward revisions of this document.", "id": "GoogleCloudDocumentaiV1beta1DocumentRevision", "properties": { "humanReview": { "description": "Human Review information of this revision.", "$ref": "GoogleCloudDocumentaiV1beta1DocumentRevisionHumanReview" }, "parent": { "type": "array", "description": "The revisions that this revision is based on. This can include one or more parent (when documents are merged.) This field represents the index into the `revisions` field.", "items": { "type": "integer", "format": "int32" } }, "parentIds": { "description": "The revisions that this revision is based on. Must include all the ids that have anything to do with this revision - eg. there are `provenance.parent.revision` fields that index into this field.", "type": "array", "items": { "type": "string" } }, "id": { "type": "string", "description": "Id of the revision. Unique within the context of the document." }, "processor": { "description": "If the annotation was made by processor identify the processor by its resource name.", "type": "string" }, "agent": { "type": "string", "description": "If the change was made by a person specify the name or id of that person." }, "createTime": { "type": "string", "description": "The time that the revision was created.", "format": "google-datetime" } } }, "GoogleCloudDocumentaiV1beta1InputConfig": { "type": "object", "properties": { "mimeType": { "description": "Required. Mimetype of the input. Current supported mimetypes are application/pdf, image/tiff, and image/gif. In addition, application/json type is supported for requests with ProcessDocumentRequest.automl_params field set. The JSON file needs to be in Document format.", "type": "string" }, "gcsSource": { "description": "The Google Cloud Storage location to read the input from. This must be a single file.", "$ref": "GoogleCloudDocumentaiV1beta1GcsSource" } }, "id": "GoogleCloudDocumentaiV1beta1InputConfig", "description": "The desired input location and metadata." }, "GoogleCloudDocumentaiV1DocumentSchemaEntityTypeProperty": { "type": "object", "properties": { "name": { "type": "string", "description": "The name of the property. Follows the same guidelines as the EntityType name." }, "occurrenceType": { "enumDescriptions": [ "Unspecified occurrence type.", "There will be zero or one instance of this entity type.", "The entity type will appear zero or multiple times.", "The entity type will only appear exactly once.", "The entity type will appear once or more times." ], "enum": [ "OCCURRENCE_TYPE_UNSPECIFIED", "OPTIONAL_ONCE", "OPTIONAL_MULTIPLE", "REQUIRED_ONCE", "REQUIRED_MULTIPLE" ], "description": "Occurrence type limits the number of instances an entity type appears in the document.", "type": "string" }, "valueType": { "type": "string", "description": "A reference to the value type of the property. This type is subject to the same conventions as the `Entity.base_types` field." } }, "id": "GoogleCloudDocumentaiV1DocumentSchemaEntityTypeProperty", "description": "Defines properties that can be part of the entity type." }, "GoogleCloudDocumentaiV1beta2ProcessDocumentResponse": { "description": "Response to a single document processing request.", "type": "object", "properties": { "outputConfig": { "description": "The output location of the parsed responses. The responses are written to this location as JSON-serialized `Document` objects.", "$ref": "GoogleCloudDocumentaiV1beta2OutputConfig" }, "inputConfig": { "$ref": "GoogleCloudDocumentaiV1beta2InputConfig", "description": "Information about the input file. This is the same as the corresponding input config in the request." } }, "id": "GoogleCloudDocumentaiV1beta2ProcessDocumentResponse" }, "GoogleCloudDocumentaiV1DocumentProvenanceParent": { "id": "GoogleCloudDocumentaiV1DocumentProvenanceParent", "type": "object", "properties": { "index": { "type": "integer", "description": "The index of the parent item in the corresponding item list (eg. list of entities, properties within entities, etc.) in the parent revision.", "format": "int32" }, "revision": { "format": "int32", "type": "integer", "description": "The index of the index into current revision's parent_ids list." }, "id": { "type": "integer", "description": "The id of the parent provenance.", "format": "int32" } }, "description": "The parent element the current element is based on. Used for referencing/aligning, removal and replacement operations." }, "GoogleCloudDocumentaiUiv1beta3EnableProcessorResponse": { "properties": {}, "description": "Response message for the enable processor method. Intentionally empty proto for adding fields in future.", "id": "GoogleCloudDocumentaiUiv1beta3EnableProcessorResponse", "type": "object" }, "GoogleCloudDocumentaiV1DeleteProcessorVersionMetadata": { "properties": { "commonMetadata": { "description": "The basic metadata of the long running operation.", "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata" } }, "description": "The long running operation metadata for delete processor version method.", "id": "GoogleCloudDocumentaiV1DeleteProcessorVersionMetadata", "type": "object" }, "GoogleCloudDocumentaiV1beta2DocumentPageImage": { "id": "GoogleCloudDocumentaiV1beta2DocumentPageImage", "type": "object", "properties": { "width": { "description": "Width of the image in pixels.", "type": "integer", "format": "int32" }, "height": { "type": "integer", "description": "Height of the image in pixels.", "format": "int32" }, "mimeType": { "description": "Encoding mime type for the image.", "type": "string" }, "content": { "type": "string", "format": "byte", "description": "Raw byte content of the image." } }, "description": "Rendered image contents for this page." }, "GoogleCloudDocumentaiV1beta2Vertex": { "id": "GoogleCloudDocumentaiV1beta2Vertex", "properties": { "x": { "format": "int32", "description": "X coordinate.", "type": "integer" }, "y": { "format": "int32", "type": "integer", "description": "Y coordinate (starts from the top of the image)." } }, "description": "A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.", "type": "object" }, "GoogleCloudDocumentaiV1DocumentPage": { "properties": { "provenance": { "$ref": "GoogleCloudDocumentaiV1DocumentProvenance", "description": "The history of this page." }, "dimension": { "description": "Physical dimension of the page.", "$ref": "GoogleCloudDocumentaiV1DocumentPageDimension" }, "layout": { "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout", "description": "Layout for the page." }, "pageNumber": { "format": "int32", "description": "1-based index for current Page in a parent Document. Useful when a page is taken out of a Document for individual processing.", "type": "integer" }, "visualElements": { "description": "A list of detected non-text visual elements e.g. checkbox, signature etc. on the page.", "type": "array", "items": { "$ref": "GoogleCloudDocumentaiV1DocumentPageVisualElement" } }, "image": { "$ref": "GoogleCloudDocumentaiV1DocumentPageImage", "description": "Rendered image for this page. This image is preprocessed to remove any skew, rotation, and distortions such that the annotation bounding boxes can be upright and axis-aligned." }, "detectedLanguages": { "type": "array", "items": { "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage" }, "description": "A list of detected languages together with confidence." }, "transforms": { "items": { "$ref": "GoogleCloudDocumentaiV1DocumentPageMatrix" }, "type": "array", "description": "Transformation matrices that were applied to the original document image to produce Page.image." }, "paragraphs": { "type": "array", "items": { "$ref": "GoogleCloudDocumentaiV1DocumentPageParagraph" }, "description": "A list of visually detected text paragraphs on the page. A collection of lines that a human would perceive as a paragraph." }, "blocks": { "description": "A list of visually detected text blocks on the page. A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.", "type": "array", "items": { "$ref": "GoogleCloudDocumentaiV1DocumentPageBlock" } }, "symbols": { "description": "A list of visually detected symbols on the page.", "items": { "$ref": "GoogleCloudDocumentaiV1DocumentPageSymbol" }, "type": "array" }, "tokens": { "description": "A list of visually detected tokens on the page.", "type": "array", "items": { "$ref": "GoogleCloudDocumentaiV1DocumentPageToken" } }, "tables": { "description": "A list of visually detected tables on the page.", "type": "array", "items": { "$ref": "GoogleCloudDocumentaiV1DocumentPageTable" } }, "lines": { "type": "array", "description": "A list of visually detected text lines on the page. A collection of tokens that a human would perceive as a line.", "items": { "$ref": "GoogleCloudDocumentaiV1DocumentPageLine" } }, "formFields": { "description": "A list of visually detected form fields on the page.", "items": { "$ref": "GoogleCloudDocumentaiV1DocumentPageFormField" }, "type": "array" } }, "description": "A page in a Document.", "id": "GoogleCloudDocumentaiV1DocumentPage", "type": "object" }, "GoogleCloudDocumentaiUiv1beta3UpdateHumanReviewConfigMetadata": { "properties": { "commonMetadata": { "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata", "description": "The basic metadata of the long running operation." } }, "type": "object", "description": "The long running operation metadata for updating the human review configuration.", "id": "GoogleCloudDocumentaiUiv1beta3UpdateHumanReviewConfigMetadata" }, "GoogleCloudDocumentaiV1DocumentPageTokenDetectedBreak": { "description": "Detected break at the end of a Token.", "properties": { "type": { "enum": [ "TYPE_UNSPECIFIED", "SPACE", "WIDE_SPACE", "HYPHEN" ], "description": "Detected break type.", "type": "string", "enumDescriptions": [ "Unspecified break type.", "A single whitespace.", "A wider whitespace.", "A hyphen that indicates that a token has been split across lines." ] } }, "type": "object", "id": "GoogleCloudDocumentaiV1DocumentPageTokenDetectedBreak" }, "GoogleCloudDocumentaiV1ReviewDocumentResponse": { "id": "GoogleCloudDocumentaiV1ReviewDocumentResponse", "type": "object", "description": "Response message for review document method.", "properties": { "gcsDestination": { "description": "The Cloud Storage uri for the human reviewed document if the review is succeeded.", "type": "string" }, "rejectionReason": { "type": "string", "description": "The reason why the review is rejected by reviewer." }, "state": { "enumDescriptions": [ "The default value. This value is used if the state is omitted.", "The review operation is rejected by the reviewer.", "The review operation is succeeded." ], "description": "The state of the review operation.", "type": "string", "enum": [ "STATE_UNSPECIFIED", "REJECTED", "SUCCEEDED" ] } } }, "GoogleCloudDocumentaiV1DocumentPageLayout": { "id": "GoogleCloudDocumentaiV1DocumentPageLayout", "description": "Visual element describing a layout unit on a page.", "type": "object", "properties": { "textAnchor": { "$ref": "GoogleCloudDocumentaiV1DocumentTextAnchor", "description": "Text anchor indexing into the Document.text." }, "confidence": { "format": "float", "type": "number", "description": "Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range [0, 1]." }, "boundingPoly": { "description": "The bounding polygon for the Layout.", "$ref": "GoogleCloudDocumentaiV1BoundingPoly" }, "orientation": { "enum": [ "ORIENTATION_UNSPECIFIED", "PAGE_UP", "PAGE_RIGHT", "PAGE_DOWN", "PAGE_LEFT" ], "description": "Detected orientation for the Layout.", "type": "string", "enumDescriptions": [ "Unspecified orientation.", "Orientation is aligned with page up.", "Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.", "Orientation is aligned with page down. Turn the head 180 degrees from upright to read.", "Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read." ] } } }, "GoogleCloudDocumentaiV1DocumentPageToken": { "type": "object", "id": "GoogleCloudDocumentaiV1DocumentPageToken", "properties": { "provenance": { "description": "The history of this annotation.", "$ref": "GoogleCloudDocumentaiV1DocumentProvenance" }, "detectedLanguages": { "type": "array", "items": { "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage" }, "description": "A list of detected languages together with confidence." }, "detectedBreak": { "$ref": "GoogleCloudDocumentaiV1DocumentPageTokenDetectedBreak", "description": "Detected break at the end of a Token." }, "layout": { "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout", "description": "Layout for Token." } }, "description": "A detected token." }, "GoogleCloudDocumentaiUiv1beta3ResyncDatasetResponse": { "description": "The response proto of ResyncDataset method.", "id": "GoogleCloudDocumentaiUiv1beta3ResyncDatasetResponse", "properties": {}, "type": "object" }, "GoogleCloudDocumentaiV1beta2DocumentPageMatrix": { "id": "GoogleCloudDocumentaiV1beta2DocumentPageMatrix", "description": "Representation for transformation matrix, intended to be compatible and used with OpenCV format for image manipulation.", "type": "object", "properties": { "cols": { "type": "integer", "description": "Number of columns in the matrix.", "format": "int32" }, "rows": { "format": "int32", "type": "integer", "description": "Number of rows in the matrix." }, "type": { "type": "integer", "format": "int32", "description": "This encodes information about what data type the matrix uses. For example, 0 (CV_8U) is an unsigned 8-bit image. For the full list of OpenCV primitive data types, please refer to https://docs.opencv.org/4.3.0/d1/d1b/group__core__hal__interface.html" }, "data": { "type": "string", "format": "byte", "description": "The matrix data." } } }, "GoogleCloudDocumentaiV1beta3ReviewDocumentResponse": { "id": "GoogleCloudDocumentaiV1beta3ReviewDocumentResponse", "properties": { "rejectionReason": { "type": "string", "description": "The reason why the review is rejected by reviewer." }, "state": { "enum": [ "STATE_UNSPECIFIED", "REJECTED", "SUCCEEDED" ], "type": "string", "enumDescriptions": [ "The default value. This value is used if the state is omitted.", "The review operation is rejected by the reviewer.", "The review operation is succeeded." ], "description": "The state of the review operation." }, "gcsDestination": { "description": "The Cloud Storage uri for the human reviewed document if the review is succeeded.", "type": "string" } }, "description": "Response message for review document method.", "type": "object" }, "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation": { "description": "The dataset validation information. This includes any and all errors with documents and the dataset.", "properties": { "documentErrors": { "type": "array", "description": "Error information pertaining to specific documents. A maximum of 10 document errors will be returned. Any document with errors will not be used throughout training.", "items": { "$ref": "GoogleRpcStatus" } }, "datasetErrorCount": { "description": "The total number of dataset errors.", "format": "int32", "type": "integer" }, "documentErrorCount": { "description": "The total number of document errors.", "type": "integer", "format": "int32" }, "datasetErrors": { "items": { "$ref": "GoogleRpcStatus" }, "type": "array", "description": "Error information for the dataset as a whole. A maximum of 10 dataset errors will be returned. A single dataset error is terminal for training." } }, "id": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation", "type": "object" }, "GoogleRpcStatus": { "properties": { "details": { "type": "array", "items": { "type": "object", "additionalProperties": { "description": "Properties of the object. Contains field @type with type URL.", "type": "any" } }, "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use." }, "message": { "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.", "type": "string" }, "code": { "description": "The status code, which should be an enum value of google.rpc.Code.", "format": "int32", "type": "integer" } }, "id": "GoogleRpcStatus", "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).", "type": "object" }, "GoogleCloudDocumentaiV1ProcessorVersionDeprecationInfo": { "properties": { "deprecationTime": { "type": "string", "description": "The time at which this processor version will be deprecated.", "format": "google-datetime" }, "replacementProcessorVersion": { "description": "If set, the processor version that will be used as a replacement.", "type": "string" } }, "description": "Information about the upcoming deprecation of this processor version.", "type": "object", "id": "GoogleCloudDocumentaiV1ProcessorVersionDeprecationInfo" }, "GoogleTypeTimeZone": { "id": "GoogleTypeTimeZone", "description": "Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).", "properties": { "version": { "type": "string", "description": "Optional. IANA Time Zone Database version number, e.g. \"2019a\"." }, "id": { "type": "string", "description": "IANA Time Zone Database time zone, e.g. \"America/New_York\"." } }, "type": "object" }, "GoogleCloudDocumentaiV1beta2DocumentPage": { "type": "object", "id": "GoogleCloudDocumentaiV1beta2DocumentPage", "properties": { "formFields": { "type": "array", "description": "A list of visually detected form fields on the page.", "items": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageFormField" } }, "visualElements": { "type": "array", "items": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageVisualElement" }, "description": "A list of detected non-text visual elements e.g. checkbox, signature etc. on the page." }, "tokens": { "type": "array", "description": "A list of visually detected tokens on the page.", "items": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageToken" } }, "pageNumber": { "description": "1-based index for current Page in a parent Document. Useful when a page is taken out of a Document for individual processing.", "type": "integer", "format": "int32" }, "detectedLanguages": { "description": "A list of detected languages together with confidence.", "type": "array", "items": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage" } }, "paragraphs": { "description": "A list of visually detected text paragraphs on the page. A collection of lines that a human would perceive as a paragraph.", "items": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageParagraph" }, "type": "array" }, "provenance": { "description": "The history of this page.", "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance" }, "dimension": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDimension", "description": "Physical dimension of the page." }, "lines": { "description": "A list of visually detected text lines on the page. A collection of tokens that a human would perceive as a line.", "type": "array", "items": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLine" } }, "transforms": { "items": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageMatrix" }, "type": "array", "description": "Transformation matrices that were applied to the original document image to produce Page.image." }, "image": { "description": "Rendered image for this page. This image is preprocessed to remove any skew, rotation, and distortions such that the annotation bounding boxes can be upright and axis-aligned.", "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageImage" }, "layout": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout", "description": "Layout for the page." }, "blocks": { "items": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageBlock" }, "type": "array", "description": "A list of visually detected text blocks on the page. A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation." }, "symbols": { "type": "array", "items": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageSymbol" }, "description": "A list of visually detected symbols on the page." }, "tables": { "items": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTable" }, "type": "array", "description": "A list of visually detected tables on the page." } }, "description": "A page in a Document." }, "GoogleCloudDocumentaiV1BatchProcessMetadata": { "type": "object", "description": "The long running operation metadata for batch process method.", "id": "GoogleCloudDocumentaiV1BatchProcessMetadata", "properties": { "stateMessage": { "type": "string", "description": "A message providing more details about the current state of processing. For example, the error message if the operation is failed." }, "state": { "type": "string", "description": "The state of the current batch processing.", "enum": [ "STATE_UNSPECIFIED", "WAITING", "RUNNING", "SUCCEEDED", "CANCELLING", "CANCELLED", "FAILED" ], "enumDescriptions": [ "The default value. This value is used if the state is omitted.", "Request operation is waiting for scheduling.", "Request is being processed.", "The batch processing completed successfully.", "The batch processing was being cancelled.", "The batch processing was cancelled.", "The batch processing has failed." ] }, "individualProcessStatuses": { "items": { "$ref": "GoogleCloudDocumentaiV1BatchProcessMetadataIndividualProcessStatus" }, "description": "The list of response details of each document.", "type": "array" }, "createTime": { "format": "google-datetime", "description": "The creation time of the operation.", "type": "string" }, "updateTime": { "description": "The last update time of the operation.", "format": "google-datetime", "type": "string" } } }, "GoogleCloudDocumentaiV1beta3BatchProcessMetadata": { "properties": { "updateTime": { "format": "google-datetime", "description": "The last update time of the operation.", "type": "string" }, "individualProcessStatuses": { "type": "array", "description": "The list of response details of each document.", "items": { "$ref": "GoogleCloudDocumentaiV1beta3BatchProcessMetadataIndividualProcessStatus" } }, "createTime": { "format": "google-datetime", "description": "The creation time of the operation.", "type": "string" }, "state": { "enumDescriptions": [ "The default value. This value is used if the state is omitted.", "Request operation is waiting for scheduling.", "Request is being processed.", "The batch processing completed successfully.", "The batch processing was being cancelled.", "The batch processing was cancelled.", "The batch processing has failed." ], "description": "The state of the current batch processing.", "type": "string", "enum": [ "STATE_UNSPECIFIED", "WAITING", "RUNNING", "SUCCEEDED", "CANCELLING", "CANCELLED", "FAILED" ] }, "stateMessage": { "type": "string", "description": "A message providing more details about the current state of processing. For example, the error message if the operation is failed." } }, "description": "The long running operation metadata for batch process method.", "id": "GoogleCloudDocumentaiV1beta3BatchProcessMetadata", "type": "object" }, "GoogleCloudDocumentaiV1beta1BoundingPoly": { "properties": { "vertices": { "description": "The bounding polygon vertices.", "items": { "$ref": "GoogleCloudDocumentaiV1beta1Vertex" }, "type": "array" }, "normalizedVertices": { "type": "array", "items": { "$ref": "GoogleCloudDocumentaiV1beta1NormalizedVertex" }, "description": "The bounding polygon normalized vertices." } }, "description": "A bounding polygon for the detected image annotation.", "type": "object", "id": "GoogleCloudDocumentaiV1beta1BoundingPoly" }, "GoogleCloudDocumentaiV1DisableProcessorRequest": { "type": "object", "properties": {}, "description": "Request message for the disable processor method.", "id": "GoogleCloudDocumentaiV1DisableProcessorRequest" }, "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsResponse": { "id": "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsResponse", "type": "object", "properties": {}, "description": "Response of the batch move documents operation." }, "GoogleCloudDocumentaiV1beta2DocumentPageFormField": { "id": "GoogleCloudDocumentaiV1beta2DocumentPageFormField", "description": "A form field detected on the page.", "properties": { "fieldName": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout", "description": "Layout for the FormField name. e.g. `Address`, `Email`, `Grand total`, `Phone number`, etc." }, "valueDetectedLanguages": { "description": "A list of detected languages for value together with confidence.", "type": "array", "items": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage" } }, "nameDetectedLanguages": { "type": "array", "items": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage" }, "description": "A list of detected languages for name together with confidence." }, "valueType": { "type": "string", "description": "If the value is non-textual, this field represents the type. Current valid values are: - blank (this indicates the field_value is normal text) - \"unfilled_checkbox\" - \"filled_checkbox\"" }, "correctedKeyText": { "type": "string", "description": "Created for Labeling UI to export key text. If corrections were made to the text identified by the `field_name.text_anchor`, this field will contain the correction." }, "correctedValueText": { "type": "string", "description": "Created for Labeling UI to export value text. If corrections were made to the text identified by the `field_value.text_anchor`, this field will contain the correction." }, "fieldValue": { "description": "Layout for the FormField value.", "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout" }, "provenance": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance", "description": "The history of this annotation." } }, "type": "object" }, "GoogleCloudDocumentaiV1DocumentPageVisualElement": { "description": "Detected non-text visual elements e.g. checkbox, signature etc. on the page.", "type": "object", "id": "GoogleCloudDocumentaiV1DocumentPageVisualElement", "properties": { "type": { "type": "string", "description": "Type of the VisualElement." }, "layout": { "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout", "description": "Layout for VisualElement." }, "detectedLanguages": { "description": "A list of detected languages together with confidence.", "type": "array", "items": { "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage" } } } }, "GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak": { "description": "Detected break at the end of a Token.", "id": "GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak", "type": "object", "properties": { "type": { "description": "Detected break type.", "type": "string", "enum": [ "TYPE_UNSPECIFIED", "SPACE", "WIDE_SPACE", "HYPHEN" ], "enumDescriptions": [ "Unspecified break type.", "A single whitespace.", "A wider whitespace.", "A hyphen that indicates that a token has been split across lines." ] } } }, "GoogleCloudDocumentaiV1DocumentPageBlock": { "properties": { "layout": { "description": "Layout for Block.", "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout" }, "provenance": { "$ref": "GoogleCloudDocumentaiV1DocumentProvenance", "description": "The history of this annotation." }, "detectedLanguages": { "description": "A list of detected languages together with confidence.", "items": { "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage" }, "type": "array" } }, "id": "GoogleCloudDocumentaiV1DocumentPageBlock", "description": "A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.", "type": "object" }, "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsResponse": { "id": "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsResponse", "type": "object", "description": "Response of the delete documents operation.", "properties": {} }, "GoogleCloudDocumentaiUiv1beta3DocumentId": { "type": "object", "id": "GoogleCloudDocumentaiUiv1beta3DocumentId", "description": "Document Identifier.", "properties": { "gcsManagedDocId": { "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentIdGCSManagedDocumentId" }, "revisionReference": { "description": "Points to a specific revision of the document if set.", "$ref": "GoogleCloudDocumentaiUiv1beta3RevisionReference" } } }, "GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue": { "id": "GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue", "description": "Parsed and normalized entity value.", "type": "object", "properties": { "booleanValue": { "type": "boolean", "description": "Boolean value. Can be used for entities with binary values, or for checkboxes." }, "floatValue": { "type": "number", "description": "Float value.", "format": "float" }, "text": { "description": "Optional. An optional field to store a normalized string. For some entity types, one of respective `structured_value` fields may also be populated. Also not all the types of `structured_value` will be normalized. For example, some processors may not generate float or int normalized text by default. Below are sample formats mapped to structured values. - Money/Currency type (`money_value`) is in the ISO 4217 text format. - Date type (`date_value`) is in the ISO 8601 text format. - Datetime type (`datetime_value`) is in the ISO 8601 text format.", "type": "string" }, "addressValue": { "description": "Postal address. See also: https://github.com/googleapis/googleapis/blob/master/google/type/postal_address.proto", "$ref": "GoogleTypePostalAddress" }, "moneyValue": { "$ref": "GoogleTypeMoney", "description": "Money value. See also: https://github.com/googleapis/googleapis/blob/master/google/type/money.proto" }, "dateValue": { "$ref": "GoogleTypeDate", "description": "Date value. Includes year, month, day. See also: https://github.com/googleapis/googleapis/blob/master/google/type/date.proto" }, "datetimeValue": { "description": "DateTime value. Includes date, time, and timezone. See also: https://github.com/googleapis/googleapis/blob/master/google/type/datetime.proto", "$ref": "GoogleTypeDateTime" }, "integerValue": { "description": "Integer value.", "format": "int32", "type": "integer" } } }, "GoogleCloudDocumentaiV1DocumentPageTableTableCell": { "description": "A cell representation inside the table.", "properties": { "layout": { "description": "Layout for TableCell.", "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout" }, "colSpan": { "type": "integer", "description": "How many columns this cell spans.", "format": "int32" }, "rowSpan": { "format": "int32", "type": "integer", "description": "How many rows this cell spans." }, "detectedLanguages": { "type": "array", "items": { "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage" }, "description": "A list of detected languages together with confidence." } }, "type": "object", "id": "GoogleCloudDocumentaiV1DocumentPageTableTableCell" }, "GoogleCloudDocumentaiV1beta3BatchProcessMetadataIndividualProcessStatus": { "id": "GoogleCloudDocumentaiV1beta3BatchProcessMetadataIndividualProcessStatus", "properties": { "outputGcsDestination": { "type": "string", "description": "The output_gcs_destination (in the request as `output_gcs_destination`) of the processed document if it was successful, otherwise empty." }, "humanReviewStatus": { "$ref": "GoogleCloudDocumentaiV1beta3HumanReviewStatus", "description": "The status of human review on the processed document." }, "inputGcsSource": { "description": "The source of the document, same as the [input_gcs_source] field in the request when the batch process started. The batch process is started by take snapshot of that document, since a user can move or change that document during the process.", "type": "string" }, "humanReviewOperation": { "description": "The name of the operation triggered by the processed document. If the human review process is not triggered, this field will be empty. It has the same response type and metadata as the long running operation returned by ReviewDocument method.", "type": "string" }, "status": { "description": "The status of the processing of the document.", "$ref": "GoogleRpcStatus" } }, "description": "The status of a each individual document in the batch process.", "type": "object" }, "GoogleProtobufEmpty": { "id": "GoogleProtobufEmpty", "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }", "type": "object", "properties": {} }, "GoogleCloudDocumentaiV1BatchProcessResponse": { "description": "Response message for batch process document method.", "type": "object", "id": "GoogleCloudDocumentaiV1BatchProcessResponse", "properties": {} }, "GoogleCloudDocumentaiV1DeployProcessorVersionMetadata": { "description": "The long running operation metadata for deploy processor version method.", "type": "object", "id": "GoogleCloudDocumentaiV1DeployProcessorVersionMetadata", "properties": { "commonMetadata": { "description": "The basic metadata of the long running operation.", "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata" } } }, "GoogleCloudDocumentaiV1DocumentSchemaEntityType": { "type": "object", "description": "EntityType is the wrapper of a label of the corresponding model with detailed attributes and limitations for entity-based processors. Multiple types can also compose a dependency tree to represent nested types.", "id": "GoogleCloudDocumentaiV1DocumentSchemaEntityType", "properties": { "displayName": { "description": "User defined name for the type.", "type": "string" }, "name": { "description": "Name of the type. It must be unique within the schema file and cannot be a 'Common Type'. Besides that we use the following naming conventions: - *use snake_casing* - name matching is case-insensitive - Maximum 64 characters. - Must start with a letter. - Allowed characters: ASCII letters [a-z0-9_-]. (For backward compatibility internal infrastructure and tooling can handle any ascii character) - The '/' is sometimes used to denote a property of a type. For example line_item/amount. This convention is deprecated, but will still be honored for backward compatibility.", "type": "string" }, "baseTypes": { "items": { "type": "string" }, "description": "The entity type that this type is derived from. For now, one and only one should be set.", "type": "array" }, "enumValues": { "$ref": "GoogleCloudDocumentaiV1DocumentSchemaEntityTypeEnumValues", "description": "If specified, lists all the possible values for this entity. This should not be more than a handful of values. If the number of values is \u003e10 or could change frequently use the `EntityType.value_ontology` field and specify a list of all possible values in a value ontology file." }, "properties": { "type": "array", "description": "Describing the nested structure, or composition of an entity.", "items": { "$ref": "GoogleCloudDocumentaiV1DocumentSchemaEntityTypeProperty" } } } }, "GoogleCloudDocumentaiV1EnableProcessorResponse": { "properties": {}, "description": "Response message for the enable processor method. Intentionally empty proto for adding fields in future.", "id": "GoogleCloudDocumentaiV1EnableProcessorResponse", "type": "object" }, "GoogleCloudDocumentaiV1beta2DocumentEntity": { "description": "An entity that could be a phrase in the text or a property that belongs to the document. It is a known entity type, such as a person, an organization, or location.", "id": "GoogleCloudDocumentaiV1beta2DocumentEntity", "type": "object", "properties": { "provenance": { "description": "Optional. The history of this annotation.", "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance" }, "normalizedValue": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue", "description": "Optional. Normalized entity value. Absent if the extracted value could not be converted or the type (e.g. address) is not supported for certain parsers. This field is also only populated for certain supported document types." }, "nonPresent": { "description": "Optional. This attribute indicates that the processing didn't actually identify this entity, but a confidence score was assigned that represent the potential that this could be a false negative. A non-present entity should have an empty mention_text and text_anchor.", "type": "boolean" }, "type": { "type": "string", "description": "Required. Entity type from a schema e.g. `Address`." }, "mentionText": { "type": "string", "description": "Optional. Text value in the document e.g. `1600 Amphitheatre Pkwy`. If the entity is not present in the document, this field will be empty." }, "properties": { "items": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntity" }, "description": "Optional. Entities can be nested to form a hierarchical data structure representing the content in the document.", "type": "array" }, "confidence": { "format": "float", "type": "number", "description": "Optional. Confidence of detected Schema entity. Range [0, 1]." }, "id": { "type": "string", "description": "Optional. Canonical id. This will be a unique value in the entity list for this document." }, "pageAnchor": { "description": "Optional. Represents the provenance of this entity wrt. the location on the page where it was found.", "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageAnchor" }, "redacted": { "type": "boolean", "description": "Optional. Whether the entity will be redacted for de-identification purposes." }, "mentionId": { "type": "string", "description": "Optional. Deprecated. Use `id` field instead." }, "textAnchor": { "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor", "description": "Optional. Provenance of the entity. Text anchor indexing into the Document.text." } } }, "GoogleCloudDocumentaiV1DocumentPageAnchorPageRef": { "properties": { "confidence": { "description": "Optional. Confidence of detected page element, if applicable. Range [0, 1].", "format": "float", "type": "number" }, "boundingPoly": { "$ref": "GoogleCloudDocumentaiV1BoundingPoly", "description": "Optional. Identifies the bounding polygon of a layout element on the page." }, "layoutType": { "type": "string", "description": "Optional. The type of the layout element that is being referenced if any.", "enum": [ "LAYOUT_TYPE_UNSPECIFIED", "BLOCK", "PARAGRAPH", "LINE", "TOKEN", "VISUAL_ELEMENT", "TABLE", "FORM_FIELD" ], "enumDescriptions": [ "Layout Unspecified.", "References a Page.blocks element.", "References a Page.paragraphs element.", "References a Page.lines element.", "References a Page.tokens element.", "References a Page.visual_elements element.", "Refrrences a Page.tables element.", "References a Page.form_fields element." ] }, "layoutId": { "description": "Optional. Deprecated. Use PageRef.bounding_poly instead.", "type": "string" }, "page": { "type": "string", "format": "int64", "description": "Required. Index into the Document.pages element, for example using Document.pages to locate the related page element. This field is skipped when its value is the default 0. See https://developers.google.com/protocol-buffers/docs/proto3#json." } }, "id": "GoogleCloudDocumentaiV1DocumentPageAnchorPageRef", "description": "Represents a weak reference to a page element within a document.", "type": "object" }, "GoogleCloudDocumentaiV1BatchProcessMetadataIndividualProcessStatus": { "properties": { "inputGcsSource": { "type": "string", "description": "The source of the document, same as the [input_gcs_source] field in the request when the batch process started. The batch process is started by take snapshot of that document, since a user can move or change that document during the process." }, "outputGcsDestination": { "type": "string", "description": "The output_gcs_destination (in the request as `output_gcs_destination`) of the processed document if it was successful, otherwise empty." }, "humanReviewStatus": { "description": "The status of human review on the processed document.", "$ref": "GoogleCloudDocumentaiV1HumanReviewStatus" }, "status": { "description": "The status of the processing of the document.", "$ref": "GoogleRpcStatus" } }, "type": "object", "id": "GoogleCloudDocumentaiV1BatchProcessMetadataIndividualProcessStatus", "description": "The status of a each individual document in the batch process." }, "GoogleCloudDocumentaiV1beta1DocumentPageToken": { "properties": { "layout": { "description": "Layout for Token.", "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout" }, "detectedBreak": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak", "description": "Detected break at the end of a Token." }, "detectedLanguages": { "type": "array", "description": "A list of detected languages together with confidence.", "items": { "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage" } }, "provenance": { "description": "The history of this annotation.", "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance" } }, "id": "GoogleCloudDocumentaiV1beta1DocumentPageToken", "description": "A detected token.", "type": "object" }, "GoogleCloudDocumentaiV1DocumentPageTable": { "properties": { "layout": { "description": "Layout for Table.", "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout" }, "detectedLanguages": { "type": "array", "description": "A list of detected languages together with confidence.", "items": { "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage" } }, "headerRows": { "description": "Header rows of the table.", "type": "array", "items": { "$ref": "GoogleCloudDocumentaiV1DocumentPageTableTableRow" } }, "bodyRows": { "type": "array", "description": "Body rows of the table.", "items": { "$ref": "GoogleCloudDocumentaiV1DocumentPageTableTableRow" } } }, "description": "A table representation similar to HTML table structure.", "type": "object", "id": "GoogleCloudDocumentaiV1DocumentPageTable" }, "GoogleCloudDocumentaiV1GcsPrefix": { "description": "Specifies all documents on Cloud Storage with a common prefix.", "type": "object", "id": "GoogleCloudDocumentaiV1GcsPrefix", "properties": { "gcsUriPrefix": { "description": "The URI prefix.", "type": "string" } } }, "GoogleCloudDocumentaiV1DocumentSchema": { "properties": { "displayName": { "description": "Display name to show to users.", "type": "string" }, "entityTypes": { "type": "array", "description": "Entity types of the schema.", "items": { "$ref": "GoogleCloudDocumentaiV1DocumentSchemaEntityType" } }, "metadata": { "description": "Metadata of the schema.", "$ref": "GoogleCloudDocumentaiV1DocumentSchemaMetadata" }, "description": { "description": "Description of the schema.", "type": "string" } }, "id": "GoogleCloudDocumentaiV1DocumentSchema", "description": "The schema defines the output of the processed document by a processor.", "type": "object" }, "GoogleCloudDocumentaiV1RawDocument": { "id": "GoogleCloudDocumentaiV1RawDocument", "type": "object", "properties": { "mimeType": { "type": "string", "description": "An IANA MIME type (RFC6838) indicating the nature and format of the [content]." }, "content": { "description": "Inline document content.", "type": "string", "format": "byte" } }, "description": "Payload message of raw document content (bytes)." } }, "ownerName": "Google", "description": "Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.", "discoveryVersion": "v1", "version": "v1", "icons": { "x32": "http://www.google.com/images/icons/product/search-32.gif", "x16": "http://www.google.com/images/icons/product/search-16.gif" }, "rootUrl": "https://documentai.googleapis.com/", "title": "Cloud Document AI API", "canonicalName": "Document", "resources": { "operations": { "methods": { "delete": { "httpMethod": "DELETE", "response": { "$ref": "GoogleProtobufEmpty" }, "parameterOrder": [ "name" ], "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.", "flatPath": "v1/operations/{operationsId}", "parameters": { "name": { "location": "path", "pattern": "^operations/.*$", "description": "The name of the operation resource to be deleted.", "required": true, "type": "string" } }, "path": "v1/{+name}", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "id": "documentai.operations.delete" } } }, "uiv1beta3": { "resources": { "projects": { "resources": { "locations": { "resources": { "operations": { "methods": { "get": { "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "id": "documentai.uiv1beta3.projects.locations.operations.get", "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.", "response": { "$ref": "GoogleLongrunningOperation" }, "parameters": { "name": { "description": "The name of the operation resource.", "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$", "location": "path", "required": true, "type": "string" } }, "flatPath": "uiv1beta3/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}", "parameterOrder": [ "name" ], "httpMethod": "GET", "path": "uiv1beta3/{+name}" }, "cancel": { "httpMethod": "POST", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "parameters": { "name": { "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$", "type": "string", "location": "path", "description": "The name of the operation resource to be cancelled.", "required": true } }, "flatPath": "uiv1beta3/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel", "id": "documentai.uiv1beta3.projects.locations.operations.cancel", "path": "uiv1beta3/{+name}:cancel", "parameterOrder": [ "name" ], "response": { "$ref": "GoogleProtobufEmpty" }, "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`." }, "list": { "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.", "parameterOrder": [ "name" ], "path": "uiv1beta3/{+name}", "response": { "$ref": "GoogleLongrunningListOperationsResponse" }, "httpMethod": "GET", "parameters": { "name": { "type": "string", "required": true, "pattern": "^projects/[^/]+/locations/[^/]+/operations$", "description": "The name of the operation's parent resource.", "location": "path" }, "filter": { "description": "The standard list filter.", "location": "query", "type": "string" }, "pageToken": { "description": "The standard list page token.", "type": "string", "location": "query" }, "pageSize": { "description": "The standard list page size.", "format": "int32", "location": "query", "type": "integer" } }, "id": "documentai.uiv1beta3.projects.locations.operations.list", "flatPath": "uiv1beta3/projects/{projectsId}/locations/{locationsId}/operations" } } } }, "methods": { "get": { "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "response": { "$ref": "GoogleCloudLocationLocation" }, "flatPath": "uiv1beta3/projects/{projectsId}/locations/{locationsId}", "httpMethod": "GET", "path": "uiv1beta3/{+name}", "parameters": { "name": { "pattern": "^projects/[^/]+/locations/[^/]+$", "description": "Resource name for the location.", "required": true, "type": "string", "location": "path" } }, "id": "documentai.uiv1beta3.projects.locations.get", "parameterOrder": [ "name" ], "description": "Gets information about a location." }, "list": { "flatPath": "uiv1beta3/projects/{projectsId}/locations", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "id": "documentai.uiv1beta3.projects.locations.list", "response": { "$ref": "GoogleCloudLocationListLocationsResponse" }, "path": "uiv1beta3/{+name}/locations", "parameters": { "filter": { "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).", "type": "string", "location": "query" }, "name": { "type": "string", "pattern": "^projects/[^/]+$", "required": true, "description": "The resource that owns the locations collection, if applicable.", "location": "path" }, "pageSize": { "format": "int32", "type": "integer", "description": "The maximum number of results to return. If not set, the service selects a default.", "location": "query" }, "pageToken": { "type": "string", "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.", "location": "query" } }, "httpMethod": "GET", "description": "Lists information about the supported locations for this service.", "parameterOrder": [ "name" ] } } } } } } }, "projects": { "resources": { "locations": { "resources": { "processors": { "resources": { "processorVersions": { "methods": { "delete": { "description": "Deletes the processor version, all artifacts under the processor version will be deleted.", "response": { "$ref": "GoogleLongrunningOperation" }, "path": "v1/{+name}", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "id": "documentai.projects.locations.processors.processorVersions.delete", "parameterOrder": [ "name" ], "httpMethod": "DELETE", "parameters": { "name": { "type": "string", "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$", "required": true, "location": "path", "description": "Required. The processor version resource name to be deleted." } }, "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}" }, "batchProcess": { "description": "LRO endpoint to batch process many documents. The output is written to Cloud Storage as JSON in the [Document] format.", "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}:batchProcess", "request": { "$ref": "GoogleCloudDocumentaiV1BatchProcessRequest" }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "parameterOrder": [ "name" ], "id": "documentai.projects.locations.processors.processorVersions.batchProcess", "response": { "$ref": "GoogleLongrunningOperation" }, "parameters": { "name": { "location": "path", "type": "string", "description": "Required. The resource name of Processor or ProcessorVersion. Format: `projects/{project}/locations/{location}/processors/{processor}`, or `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`", "required": true, "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$" } }, "path": "v1/{+name}:batchProcess", "httpMethod": "POST" }, "undeploy": { "id": "documentai.projects.locations.processors.processorVersions.undeploy", "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}:undeploy", "path": "v1/{+name}:undeploy", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "httpMethod": "POST", "parameterOrder": [ "name" ], "parameters": { "name": { "type": "string", "required": true, "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$", "description": "Required. The processor version resource name to be undeployed.", "location": "path" } }, "response": { "$ref": "GoogleLongrunningOperation" }, "request": { "$ref": "GoogleCloudDocumentaiV1UndeployProcessorVersionRequest" }, "description": "Undeploys the processor version." }, "deploy": { "description": "Deploys the processor version.", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "request": { "$ref": "GoogleCloudDocumentaiV1DeployProcessorVersionRequest" }, "path": "v1/{+name}:deploy", "id": "documentai.projects.locations.processors.processorVersions.deploy", "parameterOrder": [ "name" ], "parameters": { "name": { "description": "Required. The processor version resource name to be deployed.", "location": "path", "required": true, "type": "string", "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$" } }, "response": { "$ref": "GoogleLongrunningOperation" }, "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}:deploy", "httpMethod": "POST" }, "get": { "parameters": { "name": { "description": "Required. The processor resource name.", "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$", "type": "string", "required": true, "location": "path" } }, "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}", "response": { "$ref": "GoogleCloudDocumentaiV1ProcessorVersion" }, "httpMethod": "GET", "parameterOrder": [ "name" ], "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "description": "Gets a processor version detail.", "id": "documentai.projects.locations.processors.processorVersions.get", "path": "v1/{+name}" }, "process": { "parameterOrder": [ "name" ], "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "description": "Processes a single document.", "path": "v1/{+name}:process", "request": { "$ref": "GoogleCloudDocumentaiV1ProcessRequest" }, "id": "documentai.projects.locations.processors.processorVersions.process", "response": { "$ref": "GoogleCloudDocumentaiV1ProcessResponse" }, "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}:process", "parameters": { "name": { "required": true, "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$", "description": "Required. The resource name of the Processor or ProcessorVersion to use for processing. If a Processor is specified, the server will use its default version. Format: `projects/{project}/locations/{location}/processors/{processor}`, or `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`", "type": "string", "location": "path" } }, "httpMethod": "POST" }, "list": { "path": "v1/{+parent}/processorVersions", "response": { "$ref": "GoogleCloudDocumentaiV1ListProcessorVersionsResponse" }, "description": "Lists all versions of a processor.", "parameterOrder": [ "parent" ], "id": "documentai.projects.locations.processors.processorVersions.list", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "httpMethod": "GET", "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions", "parameters": { "parent": { "description": "Required. The parent (project, location and processor) to list all versions. Format: `projects/{project}/locations/{location}/processors/{processor}`", "location": "path", "required": true, "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$", "type": "string" }, "pageSize": { "location": "query", "format": "int32", "description": "The maximum number of processor versions to return. If unspecified, at most 10 processor versions will be returned. The maximum value is 20; values above 20 will be coerced to 20.", "type": "integer" }, "pageToken": { "description": "We will return the processor versions sorted by creation time. The page token will point to the next processor version.", "location": "query", "type": "string" } } } } }, "humanReviewConfig": { "methods": { "reviewDocument": { "parameters": { "humanReviewConfig": { "type": "string", "description": "Required. The resource name of the HumanReviewConfig that the document will be reviewed with.", "required": true, "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/humanReviewConfig$", "location": "path" } }, "parameterOrder": [ "humanReviewConfig" ], "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "request": { "$ref": "GoogleCloudDocumentaiV1ReviewDocumentRequest" }, "id": "documentai.projects.locations.processors.humanReviewConfig.reviewDocument", "response": { "$ref": "GoogleLongrunningOperation" }, "httpMethod": "POST", "path": "v1/{+humanReviewConfig}:reviewDocument", "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/humanReviewConfig:reviewDocument", "description": "Send a document for Human Review. The input document should be processed by the specified processor." } } } }, "methods": { "process": { "parameters": { "name": { "required": true, "description": "Required. The resource name of the Processor or ProcessorVersion to use for processing. If a Processor is specified, the server will use its default version. Format: `projects/{project}/locations/{location}/processors/{processor}`, or `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`", "location": "path", "type": "string", "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$" } }, "path": "v1/{+name}:process", "response": { "$ref": "GoogleCloudDocumentaiV1ProcessResponse" }, "httpMethod": "POST", "description": "Processes a single document.", "id": "documentai.projects.locations.processors.process", "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}:process", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "request": { "$ref": "GoogleCloudDocumentaiV1ProcessRequest" }, "parameterOrder": [ "name" ] }, "list": { "description": "Lists all processors which belong to this project.", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "httpMethod": "GET", "response": { "$ref": "GoogleCloudDocumentaiV1ListProcessorsResponse" }, "parameterOrder": [ "parent" ], "path": "v1/{+parent}/processors", "id": "documentai.projects.locations.processors.list", "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors", "parameters": { "pageToken": { "description": "We will return the processors sorted by creation time. The page token will point to the next processor.", "type": "string", "location": "query" }, "pageSize": { "description": "The maximum number of processors to return. If unspecified, at most 50 processors will be returned. The maximum value is 100; values above 100 will be coerced to 100.", "location": "query", "format": "int32", "type": "integer" }, "parent": { "type": "string", "pattern": "^projects/[^/]+/locations/[^/]+$", "location": "path", "required": true, "description": "Required. The parent (project and location) which owns this collection of Processors. Format: `projects/{project}/locations/{location}`" } } }, "setDefaultProcessorVersion": { "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}:setDefaultProcessorVersion", "parameterOrder": [ "processor" ], "path": "v1/{+processor}:setDefaultProcessorVersion", "httpMethod": "POST", "id": "documentai.projects.locations.processors.setDefaultProcessorVersion", "response": { "$ref": "GoogleLongrunningOperation" }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "description": "Set the default (active) version of a Processor that will be used in ProcessDocument and BatchProcessDocuments.", "parameters": { "processor": { "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$", "required": true, "type": "string", "description": "Required. The resource name of the Processor to change default version.", "location": "path" } }, "request": { "$ref": "GoogleCloudDocumentaiV1SetDefaultProcessorVersionRequest" } }, "disable": { "parameters": { "name": { "location": "path", "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$", "description": "Required. The processor resource name to be disabled.", "type": "string", "required": true } }, "path": "v1/{+name}:disable", "parameterOrder": [ "name" ], "description": "Disables a processor", "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}:disable", "httpMethod": "POST", "response": { "$ref": "GoogleLongrunningOperation" }, "request": { "$ref": "GoogleCloudDocumentaiV1DisableProcessorRequest" }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "id": "documentai.projects.locations.processors.disable" }, "enable": { "parameters": { "name": { "location": "path", "required": true, "type": "string", "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$", "description": "Required. The processor resource name to be enabled." } }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "description": "Enables a processor", "parameterOrder": [ "name" ], "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}:enable", "path": "v1/{+name}:enable", "response": { "$ref": "GoogleLongrunningOperation" }, "request": { "$ref": "GoogleCloudDocumentaiV1EnableProcessorRequest" }, "httpMethod": "POST", "id": "documentai.projects.locations.processors.enable" }, "batchProcess": { "path": "v1/{+name}:batchProcess", "parameterOrder": [ "name" ], "response": { "$ref": "GoogleLongrunningOperation" }, "request": { "$ref": "GoogleCloudDocumentaiV1BatchProcessRequest" }, "id": "documentai.projects.locations.processors.batchProcess", "description": "LRO endpoint to batch process many documents. The output is written to Cloud Storage as JSON in the [Document] format.", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}:batchProcess", "parameters": { "name": { "type": "string", "required": true, "location": "path", "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$", "description": "Required. The resource name of Processor or ProcessorVersion. Format: `projects/{project}/locations/{location}/processors/{processor}`, or `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`" } }, "httpMethod": "POST" }, "get": { "httpMethod": "GET", "path": "v1/{+name}", "parameters": { "name": { "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$", "location": "path", "required": true, "type": "string", "description": "Required. The processor resource name." } }, "parameterOrder": [ "name" ], "response": { "$ref": "GoogleCloudDocumentaiV1Processor" }, "id": "documentai.projects.locations.processors.get", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}", "description": "Gets a processor detail." }, "delete": { "path": "v1/{+name}", "parameterOrder": [ "name" ], "httpMethod": "DELETE", "response": { "$ref": "GoogleLongrunningOperation" }, "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}", "description": "Deletes the processor, unloads all deployed model artifacts if it was enabled and then deletes all artifacts associated with this processor.", "parameters": { "name": { "required": true, "location": "path", "type": "string", "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$", "description": "Required. The processor resource name to be deleted." } }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "id": "documentai.projects.locations.processors.delete" }, "create": { "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors", "id": "documentai.projects.locations.processors.create", "response": { "$ref": "GoogleCloudDocumentaiV1Processor" }, "request": { "$ref": "GoogleCloudDocumentaiV1Processor" }, "parameters": { "parent": { "required": true, "pattern": "^projects/[^/]+/locations/[^/]+$", "type": "string", "description": "Required. The parent (project and location) under which to create the processor. Format: `projects/{project}/locations/{location}`", "location": "path" } }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "parameterOrder": [ "parent" ], "description": "Creates a processor from the type processor that the user chose. The processor will be at \"ENABLED\" state by default after its creation.", "httpMethod": "POST", "path": "v1/{+parent}/processors" } } }, "operations": { "methods": { "cancel": { "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel", "parameters": { "name": { "location": "path", "required": true, "type": "string", "description": "The name of the operation resource to be cancelled.", "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$" } }, "id": "documentai.projects.locations.operations.cancel", "response": { "$ref": "GoogleProtobufEmpty" }, "parameterOrder": [ "name" ], "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.", "path": "v1/{+name}:cancel", "httpMethod": "POST", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ] }, "get": { "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.", "parameters": { "name": { "required": true, "description": "The name of the operation resource.", "location": "path", "type": "string", "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$" } }, "response": { "$ref": "GoogleLongrunningOperation" }, "id": "documentai.projects.locations.operations.get", "parameterOrder": [ "name" ], "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "path": "v1/{+name}", "httpMethod": "GET" }, "list": { "httpMethod": "GET", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.", "id": "documentai.projects.locations.operations.list", "response": { "$ref": "GoogleLongrunningListOperationsResponse" }, "parameterOrder": [ "name" ], "parameters": { "name": { "required": true, "type": "string", "description": "The name of the operation's parent resource.", "pattern": "^projects/[^/]+/locations/[^/]+/operations$", "location": "path" }, "pageSize": { "format": "int32", "type": "integer", "description": "The standard list page size.", "location": "query" }, "pageToken": { "type": "string", "location": "query", "description": "The standard list page token." }, "filter": { "type": "string", "description": "The standard list filter.", "location": "query" } }, "path": "v1/{+name}", "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations" } } } }, "methods": { "get": { "httpMethod": "GET", "parameterOrder": [ "name" ], "description": "Gets information about a location.", "flatPath": "v1/projects/{projectsId}/locations/{locationsId}", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "parameters": { "name": { "type": "string", "required": true, "location": "path", "pattern": "^projects/[^/]+/locations/[^/]+$", "description": "Resource name for the location." } }, "path": "v1/{+name}", "response": { "$ref": "GoogleCloudLocationLocation" }, "id": "documentai.projects.locations.get" }, "fetchProcessorTypes": { "description": "Fetches processor types. Note that we do not use ListProcessorTypes here because it is not paginated.", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "id": "documentai.projects.locations.fetchProcessorTypes", "response": { "$ref": "GoogleCloudDocumentaiV1FetchProcessorTypesResponse" }, "path": "v1/{+parent}:fetchProcessorTypes", "flatPath": "v1/projects/{projectsId}/locations/{locationsId}:fetchProcessorTypes", "parameterOrder": [ "parent" ], "parameters": { "parent": { "required": true, "type": "string", "description": "Required. The project of processor type to list. The available processor types may depend on the allow-listing on projects. Format: `projects/{project}/locations/{location}`", "location": "path", "pattern": "^projects/[^/]+/locations/[^/]+$" } }, "httpMethod": "GET" }, "list": { "description": "Lists information about the supported locations for this service.", "parameterOrder": [ "name" ], "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "parameters": { "filter": { "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).", "type": "string", "location": "query" }, "pageSize": { "description": "The maximum number of results to return. If not set, the service selects a default.", "type": "integer", "format": "int32", "location": "query" }, "name": { "description": "The resource that owns the locations collection, if applicable.", "type": "string", "required": true, "location": "path", "pattern": "^projects/[^/]+$" }, "pageToken": { "type": "string", "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.", "location": "query" } }, "httpMethod": "GET", "flatPath": "v1/projects/{projectsId}/locations", "path": "v1/{+name}/locations", "id": "documentai.projects.locations.list", "response": { "$ref": "GoogleCloudLocationListLocationsResponse" } } } }, "operations": { "methods": { "get": { "parameters": { "name": { "pattern": "^projects/[^/]+/operations/[^/]+$", "location": "path", "type": "string", "required": true, "description": "The name of the operation resource." } }, "flatPath": "v1/projects/{projectsId}/operations/{operationsId}", "id": "documentai.projects.operations.get", "response": { "$ref": "GoogleLongrunningOperation" }, "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.", "httpMethod": "GET", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "parameterOrder": [ "name" ], "path": "v1/{+name}" } } } } } }, "baseUrl": "https://documentai.googleapis.com/" }
]===]))
