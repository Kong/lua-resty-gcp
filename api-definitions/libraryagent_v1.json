{
  "id": "libraryagent:v1",
  "version": "v1",
  "canonicalName": "Libraryagent",
  "ownerDomain": "google.com",
  "protocol": "rest",
  "basePath": "",
  "rootUrl": "https://libraryagent.googleapis.com/",
  "fullyEncodeReservedExpansion": true,
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "mtlsRootUrl": "https://libraryagent.mtls.googleapis.com/",
  "revision": "20220804",
  "documentationLink": "https://cloud.google.com/docs/quota",
  "schemas": {
    "GoogleExampleLibraryagentV1Shelf": {
      "description": "A Shelf contains a collection of books with a theme.",
      "id": "GoogleExampleLibraryagentV1Shelf",
      "properties": {
        "name": {
          "type": "string",
          "description": "Output only. The resource name of the shelf. Shelf names have the form `shelves/{shelf_id}`. The name is ignored when creating a shelf."
        },
        "theme": {
          "description": "The theme of the shelf",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleExampleLibraryagentV1Book": {
      "properties": {
        "author": {
          "description": "The name of the book author.",
          "type": "string"
        },
        "title": {
          "description": "The title of the book.",
          "type": "string"
        },
        "read": {
          "description": "Value indicating whether the book has been read.",
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "description": "The resource name of the book. Book names have the form `shelves/{shelf_id}/books/{book_id}`. The name is ignored when creating a book."
        }
      },
      "type": "object",
      "description": "A single book in the library.",
      "id": "GoogleExampleLibraryagentV1Book"
    },
    "GoogleExampleLibraryagentV1ListBooksResponse": {
      "properties": {
        "books": {
          "type": "array",
          "description": "The list of books.",
          "items": {
            "$ref": "GoogleExampleLibraryagentV1Book"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve next page of results. Pass this value in the ListBooksRequest.page_token field in the subsequent call to `ListBooks` method to retrieve the next page of results."
        }
      },
      "id": "GoogleExampleLibraryagentV1ListBooksResponse",
      "type": "object",
      "description": "Response message for LibraryAgent.ListBooks."
    },
    "GoogleExampleLibraryagentV1ListShelvesResponse": {
      "description": "Response message for LibraryAgent.ListShelves.",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve next page of results. Pass this value in the ListShelvesRequest.page_token field in the subsequent call to `ListShelves` method to retrieve the next page of results.",
          "type": "string"
        },
        "shelves": {
          "type": "array",
          "description": "The list of shelves.",
          "items": {
            "$ref": "GoogleExampleLibraryagentV1Shelf"
          }
        }
      },
      "id": "GoogleExampleLibraryagentV1ListShelvesResponse",
      "type": "object"
    }
  },
  "parameters": {
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "oauth_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth 2.0 token for the current user."
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "type": "string",
      "location": "query"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "location": "query",
      "default": "true"
    },
    "alt": {
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    }
  },
  "resources": {
    "shelves": {
      "resources": {
        "books": {
          "methods": {
            "return": {
              "response": {
                "$ref": "GoogleExampleLibraryagentV1Book"
              },
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Required. The name of the book to return.",
                  "pattern": "^shelves/[^/]+/books/[^/]+$"
                }
              },
              "flatPath": "v1/shelves/{shelvesId}/books/{booksId}:return",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "libraryagent.shelves.books.return",
              "path": "v1/{+name}:return",
              "httpMethod": "POST",
              "parameterOrder": [
                "name"
              ],
              "description": "Return a book to the library. Returns the book if it is returned to the library successfully. Returns error if the book does not belong to the library or the users didn't borrow before."
            },
            "get": {
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleExampleLibraryagentV1Book"
              },
              "parameters": {
                "name": {
                  "description": "Required. The name of the book to retrieve.",
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "pattern": "^shelves/[^/]+/books/[^/]+$"
                }
              },
              "id": "libraryagent.shelves.books.get",
              "description": "Gets a book. Returns NOT_FOUND if the book does not exist.",
              "path": "v1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/shelves/{shelvesId}/books/{booksId}"
            },
            "list": {
              "parameters": {
                "pageToken": {
                  "description": "A token identifying a page of results the server should return. Typically, this is the value of ListBooksResponse.next_page_token. returned from the previous call to `ListBooks` method.",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "location": "query",
                  "description": "Requested page size. Server may return fewer books than requested. If unspecified, server will pick an appropriate default."
                },
                "parent": {
                  "required": true,
                  "pattern": "^shelves/[^/]+$",
                  "description": "Required. The name of the shelf whose books we'd like to list.",
                  "type": "string",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "parent"
              ],
              "path": "v1/{+parent}/books",
              "flatPath": "v1/shelves/{shelvesId}/books",
              "description": "Lists books in a shelf. The order is unspecified but deterministic. Newly created books will not necessarily be added to the end of this list. Returns NOT_FOUND if the shelf does not exist.",
              "response": {
                "$ref": "GoogleExampleLibraryagentV1ListBooksResponse"
              },
              "id": "libraryagent.shelves.books.list",
              "httpMethod": "GET"
            },
            "borrow": {
              "parameterOrder": [
                "name"
              ],
              "id": "libraryagent.shelves.books.borrow",
              "path": "v1/{+name}:borrow",
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Required. The name of the book to borrow.",
                  "pattern": "^shelves/[^/]+/books/[^/]+$",
                  "type": "string",
                  "location": "path"
                }
              },
              "description": "Borrow a book from the library. Returns the book if it is borrowed successfully. Returns NOT_FOUND if the book does not exist in the library. Returns quota exceeded error if the amount of books borrowed exceeds allocation quota in any dimensions.",
              "response": {
                "$ref": "GoogleExampleLibraryagentV1Book"
              },
              "flatPath": "v1/shelves/{shelvesId}/books/{booksId}:borrow"
            }
          }
        }
      },
      "methods": {
        "list": {
          "path": "v1/shelves",
          "parameters": {
            "pageSize": {
              "format": "int32",
              "location": "query",
              "type": "integer",
              "description": "Requested page size. Server may return fewer shelves than requested. If unspecified, server will pick an appropriate default."
            },
            "pageToken": {
              "description": "A token identifying a page of results the server should return. Typically, this is the value of ListShelvesResponse.next_page_token returned from the previous call to `ListShelves` method.",
              "type": "string",
              "location": "query"
            }
          },
          "parameterOrder": [],
          "id": "libraryagent.shelves.list",
          "httpMethod": "GET",
          "response": {
            "$ref": "GoogleExampleLibraryagentV1ListShelvesResponse"
          },
          "description": "Lists shelves. The order is unspecified but deterministic. Newly created shelves will not necessarily be added to the end of this list.",
          "flatPath": "v1/shelves",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ]
        },
        "get": {
          "flatPath": "v1/shelves/{shelvesId}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "id": "libraryagent.shelves.get",
          "parameters": {
            "name": {
              "required": true,
              "type": "string",
              "pattern": "^shelves/[^/]+$",
              "description": "Required. The name of the shelf to retrieve.",
              "location": "path"
            }
          },
          "description": "Gets a shelf. Returns NOT_FOUND if the shelf does not exist.",
          "path": "v1/{+name}",
          "response": {
            "$ref": "GoogleExampleLibraryagentV1Shelf"
          },
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "GET"
        }
      }
    }
  },
  "kind": "discovery#restDescription",
  "baseUrl": "https://libraryagent.googleapis.com/",
  "discoveryVersion": "v1",
  "version_module": true,
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "title": "Library Agent API",
  "description": "A simple Google Example Library API.",
  "batchPath": "batch",
  "servicePath": "",
  "name": "libraryagent"
}
