local decode = require("cjson").new().decode
return assert(decode([===[
{ "canonicalName": "TPU", "id": "tpu:v2alpha1", "kind": "discovery#restDescription", "discoveryVersion": "v1", "basePath": "", "name": "tpu", "protocol": "rest", "description": "TPU API provides customers with access to Google TPU technology.", "parameters": { "key": { "type": "string", "location": "query", "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token." }, "oauth_token": { "type": "string", "description": "OAuth 2.0 token for the current user.", "location": "query" }, "alt": { "enum": [ "json", "media", "proto" ], "type": "string", "enumDescriptions": [ "Responses with Content-Type of application/json", "Media download with context-dependent Content-Type", "Responses with Content-Type of application/x-protobuf" ], "location": "query", "default": "json", "description": "Data format for response." }, "callback": { "location": "query", "description": "JSONP", "type": "string" }, "quotaUser": { "location": "query", "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", "type": "string" }, "access_token": { "description": "OAuth access token.", "location": "query", "type": "string" }, "upload_protocol": { "type": "string", "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").", "location": "query" }, "prettyPrint": { "type": "boolean", "location": "query", "description": "Returns response with indentations and line breaks.", "default": "true" }, "$.xgafv": { "type": "string", "enumDescriptions": [ "v1 error format", "v2 error format" ], "description": "V1 error format.", "location": "query", "enum": [ "1", "2" ] }, "fields": { "location": "query", "description": "Selector specifying which fields to include in a partial response.", "type": "string" }, "uploadType": { "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", "type": "string", "location": "query" } }, "mtlsRootUrl": "https://tpu.mtls.googleapis.com/", "icons": { "x32": "http://www.google.com/images/icons/product/search-32.gif", "x16": "http://www.google.com/images/icons/product/search-16.gif" }, "baseUrl": "https://tpu.googleapis.com/", "resources": { "projects": { "resources": { "locations": { "resources": { "acceleratorTypes": { "methods": { "get": { "id": "tpu.projects.locations.acceleratorTypes.get", "parameterOrder": [ "name" ], "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}/acceleratorTypes/{acceleratorTypesId}", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "httpMethod": "GET", "response": { "$ref": "AcceleratorType" }, "parameters": { "name": { "required": true, "description": "Required. The resource name.", "location": "path", "type": "string", "pattern": "^projects/[^/]+/locations/[^/]+/acceleratorTypes/[^/]+$" } }, "description": "Gets AcceleratorType.", "path": "v2alpha1/{+name}" }, "list": { "id": "tpu.projects.locations.acceleratorTypes.list", "parameterOrder": [ "parent" ], "parameters": { "orderBy": { "location": "query", "description": "Sort results.", "type": "string" }, "pageToken": { "location": "query", "description": "The next_page_token value returned from a previous List request, if any.", "type": "string" }, "parent": { "pattern": "^projects/[^/]+/locations/[^/]+$", "required": true, "type": "string", "description": "Required. The parent resource name.", "location": "path" }, "pageSize": { "type": "integer", "format": "int32", "description": "The maximum number of items to return.", "location": "query" }, "filter": { "type": "string", "description": "List filter.", "location": "query" } }, "path": "v2alpha1/{+parent}/acceleratorTypes", "description": "Lists accelerator types supported by this API.", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "httpMethod": "GET", "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}/acceleratorTypes", "response": { "$ref": "ListAcceleratorTypesResponse" } } } }, "operations": { "methods": { "list": { "path": "v2alpha1/{+name}/operations", "parameterOrder": [ "name" ], "httpMethod": "GET", "parameters": { "pageToken": { "type": "string", "description": "The standard list page token.", "location": "query" }, "pageSize": { "description": "The standard list page size.", "format": "int32", "location": "query", "type": "integer" }, "name": { "pattern": "^projects/[^/]+/locations/[^/]+$", "type": "string", "description": "The name of the operation's parent resource.", "required": true, "location": "path" }, "filter": { "location": "query", "description": "The standard list filter.", "type": "string" } }, "id": "tpu.projects.locations.operations.list", "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.", "response": { "$ref": "ListOperationsResponse" }, "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}/operations", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ] }, "cancel": { "parameters": { "name": { "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$", "required": true, "type": "string", "location": "path", "description": "The name of the operation resource to be cancelled." } }, "response": { "$ref": "Empty" }, "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.", "id": "tpu.projects.locations.operations.cancel", "parameterOrder": [ "name" ], "path": "v2alpha1/{+name}:cancel", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "httpMethod": "POST", "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel" }, "delete": { "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.", "parameterOrder": [ "name" ], "id": "tpu.projects.locations.operations.delete", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "path": "v2alpha1/{+name}", "response": { "$ref": "Empty" }, "httpMethod": "DELETE", "parameters": { "name": { "required": true, "location": "path", "description": "The name of the operation resource to be deleted.", "type": "string", "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$" } }, "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}" }, "get": { "parameterOrder": [ "name" ], "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "parameters": { "name": { "type": "string", "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$", "location": "path", "description": "The name of the operation resource.", "required": true } }, "id": "tpu.projects.locations.operations.get", "path": "v2alpha1/{+name}", "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.", "response": { "$ref": "Operation" }, "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}", "httpMethod": "GET" } } }, "runtimeVersions": { "methods": { "list": { "description": "Lists runtime versions supported by this API.", "path": "v2alpha1/{+parent}/runtimeVersions", "response": { "$ref": "ListRuntimeVersionsResponse" }, "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}/runtimeVersions", "parameterOrder": [ "parent" ], "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "httpMethod": "GET", "id": "tpu.projects.locations.runtimeVersions.list", "parameters": { "parent": { "pattern": "^projects/[^/]+/locations/[^/]+$", "location": "path", "required": true, "description": "Required. The parent resource name.", "type": "string" }, "pageSize": { "type": "integer", "description": "The maximum number of items to return.", "location": "query", "format": "int32" }, "pageToken": { "description": "The next_page_token value returned from a previous List request, if any.", "location": "query", "type": "string" }, "orderBy": { "description": "Sort results.", "location": "query", "type": "string" }, "filter": { "description": "List filter.", "type": "string", "location": "query" } } }, "get": { "path": "v2alpha1/{+name}", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "httpMethod": "GET", "response": { "$ref": "RuntimeVersion" }, "parameterOrder": [ "name" ], "parameters": { "name": { "required": true, "description": "Required. The resource name.", "type": "string", "pattern": "^projects/[^/]+/locations/[^/]+/runtimeVersions/[^/]+$", "location": "path" } }, "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}/runtimeVersions/{runtimeVersionsId}", "id": "tpu.projects.locations.runtimeVersions.get", "description": "Gets a runtime version." } } }, "nodes": { "methods": { "patch": { "description": "Updates the configurations of a node.", "parameterOrder": [ "name" ], "response": { "$ref": "Operation" }, "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}/nodes/{nodesId}", "parameters": { "name": { "location": "path", "type": "string", "required": true, "description": "Output only. Immutable. The name of the TPU.", "pattern": "^projects/[^/]+/locations/[^/]+/nodes/[^/]+$" }, "updateMask": { "type": "string", "description": "Required. Mask of fields from Node to update. Supported fields: [description, tags, labels, metadata, network_config.enable_external_ips].", "location": "query", "format": "google-fieldmask" } }, "id": "tpu.projects.locations.nodes.patch", "httpMethod": "PATCH", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "request": { "$ref": "Node" }, "path": "v2alpha1/{+name}" }, "simulateMaintenanceEvent": { "id": "tpu.projects.locations.nodes.simulateMaintenanceEvent", "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}/nodes/{nodesId}:simulateMaintenanceEvent", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "request": { "$ref": "SimulateMaintenanceEventRequest" }, "path": "v2alpha1/{+name}:simulateMaintenanceEvent", "parameterOrder": [ "name" ], "parameters": { "name": { "description": "Required. The resource name.", "location": "path", "pattern": "^projects/[^/]+/locations/[^/]+/nodes/[^/]+$", "type": "string", "required": true } }, "response": { "$ref": "Operation" }, "httpMethod": "POST", "description": "Simulates a maintenance event." }, "create": { "request": { "$ref": "Node" }, "id": "tpu.projects.locations.nodes.create", "parameters": { "requestId": { "type": "string", "location": "query", "description": "Idempotent request UUID." }, "parent": { "description": "Required. The parent resource name.", "required": true, "type": "string", "pattern": "^projects/[^/]+/locations/[^/]+$", "location": "path" }, "nodeId": { "location": "query", "type": "string", "description": "The unqualified resource name." } }, "path": "v2alpha1/{+parent}/nodes", "parameterOrder": [ "parent" ], "description": "Creates a node.", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "response": { "$ref": "Operation" }, "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}/nodes", "httpMethod": "POST" }, "get": { "parameterOrder": [ "name" ], "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "httpMethod": "GET", "parameters": { "name": { "description": "Required. The resource name.", "required": true, "location": "path", "type": "string", "pattern": "^projects/[^/]+/locations/[^/]+/nodes/[^/]+$" } }, "id": "tpu.projects.locations.nodes.get", "response": { "$ref": "Node" }, "path": "v2alpha1/{+name}", "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}/nodes/{nodesId}", "description": "Gets the details of a node." }, "delete": { "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}/nodes/{nodesId}", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "parameters": { "requestId": { "description": "Idempotent request UUID.", "type": "string", "location": "query" }, "name": { "type": "string", "location": "path", "description": "Required. The resource name.", "required": true, "pattern": "^projects/[^/]+/locations/[^/]+/nodes/[^/]+$" } }, "response": { "$ref": "Operation" }, "parameterOrder": [ "name" ], "description": "Deletes a node.", "id": "tpu.projects.locations.nodes.delete", "httpMethod": "DELETE", "path": "v2alpha1/{+name}" }, "list": { "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "path": "v2alpha1/{+parent}/nodes", "httpMethod": "GET", "response": { "$ref": "ListNodesResponse" }, "description": "Lists nodes.", "parameterOrder": [ "parent" ], "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}/nodes", "id": "tpu.projects.locations.nodes.list", "parameters": { "pageSize": { "location": "query", "type": "integer", "format": "int32", "description": "The maximum number of items to return." }, "parent": { "required": true, "pattern": "^projects/[^/]+/locations/[^/]+$", "location": "path", "type": "string", "description": "Required. The parent resource name." }, "pageToken": { "description": "The next_page_token value returned from a previous List request, if any.", "location": "query", "type": "string" } } }, "getGuestAttributes": { "parameterOrder": [ "name" ], "response": { "$ref": "GetGuestAttributesResponse" }, "id": "tpu.projects.locations.nodes.getGuestAttributes", "parameters": { "name": { "required": true, "type": "string", "location": "path", "pattern": "^projects/[^/]+/locations/[^/]+/nodes/[^/]+$", "description": "Required. The resource name." } }, "path": "v2alpha1/{+name}:getGuestAttributes", "description": "Retrieves the guest attributes for the node.", "httpMethod": "POST", "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}/nodes/{nodesId}:getGuestAttributes", "request": { "$ref": "GetGuestAttributesRequest" }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ] }, "stop": { "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "httpMethod": "POST", "path": "v2alpha1/{+name}:stop", "request": { "$ref": "StopNodeRequest" }, "description": "Stops a node. This operation is only available with single TPU nodes.", "id": "tpu.projects.locations.nodes.stop", "parameterOrder": [ "name" ], "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}/nodes/{nodesId}:stop", "parameters": { "name": { "type": "string", "required": true, "location": "path", "description": "The resource name.", "pattern": "^projects/[^/]+/locations/[^/]+/nodes/[^/]+$" } }, "response": { "$ref": "Operation" } }, "start": { "response": { "$ref": "Operation" }, "parameterOrder": [ "name" ], "request": { "$ref": "StartNodeRequest" }, "httpMethod": "POST", "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}/nodes/{nodesId}:start", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "description": "Starts a node.", "id": "tpu.projects.locations.nodes.start", "path": "v2alpha1/{+name}:start", "parameters": { "name": { "pattern": "^projects/[^/]+/locations/[^/]+/nodes/[^/]+$", "description": "The resource name.", "location": "path", "required": true, "type": "string" } } } } } }, "methods": { "generateServiceIdentity": { "parameters": { "parent": { "required": true, "description": "Required. The parent resource name.", "pattern": "^projects/[^/]+/locations/[^/]+$", "location": "path", "type": "string" } }, "request": { "$ref": "GenerateServiceIdentityRequest" }, "path": "v2alpha1/{+parent}:generateServiceIdentity", "id": "tpu.projects.locations.generateServiceIdentity", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}:generateServiceIdentity", "parameterOrder": [ "parent" ], "response": { "$ref": "GenerateServiceIdentityResponse" }, "description": "Generates the Cloud TPU service identity for the project.", "httpMethod": "POST" }, "list": { "response": { "$ref": "ListLocationsResponse" }, "id": "tpu.projects.locations.list", "path": "v2alpha1/{+name}/locations", "parameterOrder": [ "name" ], "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "flatPath": "v2alpha1/projects/{projectsId}/locations", "httpMethod": "GET", "description": "Lists information about the supported locations for this service.", "parameters": { "filter": { "location": "query", "type": "string", "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160)." }, "name": { "type": "string", "description": "The resource that owns the locations collection, if applicable.", "pattern": "^projects/[^/]+$", "required": true, "location": "path" }, "pageToken": { "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.", "type": "string", "location": "query" }, "pageSize": { "description": "The maximum number of results to return. If not set, the service selects a default.", "type": "integer", "format": "int32", "location": "query" } } }, "get": { "response": { "$ref": "Location" }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "httpMethod": "GET", "description": "Gets information about a location.", "parameterOrder": [ "name" ], "flatPath": "v2alpha1/projects/{projectsId}/locations/{locationsId}", "id": "tpu.projects.locations.get", "path": "v2alpha1/{+name}", "parameters": { "name": { "location": "path", "description": "Resource name for the location.", "required": true, "pattern": "^projects/[^/]+/locations/[^/]+$", "type": "string" } } } } } } } }, "title": "Cloud TPU API", "version_module": true, "ownerDomain": "google.com", "schemas": { "StopNodeRequest": { "properties": {}, "description": "Request for StopNode.", "type": "object", "id": "StopNodeRequest" }, "ServiceIdentity": { "id": "ServiceIdentity", "description": "The per-product per-project service identity for Cloud TPU service.", "properties": { "email": { "description": "The email address of the service identity.", "type": "string" } }, "type": "object" }, "AttachedDisk": { "description": "A node-attached disk resource. Next ID: 8;", "type": "object", "id": "AttachedDisk", "properties": { "mode": { "enum": [ "DISK_MODE_UNSPECIFIED", "READ_WRITE", "READ_ONLY" ], "description": "The mode in which to attach this disk. If not specified, the default is READ_WRITE mode. Only applicable to data_disks.", "type": "string", "enumDescriptions": [ "The disk mode is not known/set.", "Attaches the disk in read-write mode. Only one TPU node can attach a disk in read-write mode at a time.", "Attaches the disk in read-only mode. Multiple TPU nodes can attach a disk in read-only mode at a time." ] }, "sourceDisk": { "type": "string", "description": "Specifies the full path to an existing disk. For example: \"projects/my-project/zones/us-central1-c/disks/my-disk\"." } } }, "ListOperationsResponse": { "type": "object", "description": "The response message for Operations.ListOperations.", "properties": { "operations": { "type": "array", "items": { "$ref": "Operation" }, "description": "A list of operations that matches the specified filter in the request." }, "nextPageToken": { "description": "The standard List next-page token.", "type": "string" } }, "id": "ListOperationsResponse" }, "ListNodesResponse": { "properties": { "unreachable": { "items": { "type": "string" }, "type": "array", "description": "Locations that could not be reached." }, "nextPageToken": { "type": "string", "description": "The next page token or empty if none." }, "nodes": { "items": { "$ref": "Node" }, "description": "The listed nodes.", "type": "array" } }, "id": "ListNodesResponse", "description": "Response for ListNodes.", "type": "object" }, "NetworkConfig": { "type": "object", "description": "Network related configurations.", "properties": { "enableExternalIps": { "description": "Indicates that external IP addresses would be associated with the TPU workers. If set to false, the specified subnetwork or network should have Private Google Access enabled.", "type": "boolean" }, "canIpForward": { "type": "boolean", "description": "Allows the TPU node to send and receive packets with non-matching destination or source IPs. This is required if you plan to use the TPU workers to forward routes." }, "subnetwork": { "description": "The name of the subnetwork for the TPU node. It must be a preexisting Google Compute Engine subnetwork. If none is provided, \"default\" will be used.", "type": "string" }, "network": { "description": "The name of the network for the TPU node. It must be a preexisting Google Compute Engine network. If none is provided, \"default\" will be used.", "type": "string" } }, "id": "NetworkConfig" }, "Operation": { "id": "Operation", "description": "This resource represents a long-running operation that is the result of a network API call.", "properties": { "error": { "$ref": "Status", "description": "The error result of the operation in case of failure or cancellation." }, "metadata": { "additionalProperties": { "description": "Properties of the object. Contains field @type with type URL.", "type": "any" }, "type": "object", "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any." }, "name": { "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.", "type": "string" }, "response": { "type": "object", "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.", "additionalProperties": { "description": "Properties of the object. Contains field @type with type URL.", "type": "any" } }, "done": { "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.", "type": "boolean" } }, "type": "object" }, "ListLocationsResponse": { "properties": { "locations": { "items": { "$ref": "Location" }, "type": "array", "description": "A list of locations that matches the specified filter in the request." }, "nextPageToken": { "type": "string", "description": "The standard List next-page token." } }, "id": "ListLocationsResponse", "type": "object", "description": "The response message for Locations.ListLocations." }, "Node": { "properties": { "acceleratorType": { "description": "The type of hardware accelerators associated with this node.", "type": "string" }, "apiVersion": { "readOnly": true, "enumDescriptions": [ "API version is unknown.", "TPU API V1Alpha1 version.", "TPU API V1 version.", "TPU API V2Alpha1 version." ], "description": "Output only. The API version that created this Node.", "enum": [ "API_VERSION_UNSPECIFIED", "V1_ALPHA1", "V1", "V2_ALPHA1" ], "type": "string" }, "dataDisks": { "items": { "$ref": "AttachedDisk" }, "description": "The additional data disks for the Node.", "type": "array" }, "networkEndpoints": { "type": "array", "description": "Output only. The network endpoints where TPU workers can be accessed and sent work. It is recommended that runtime clients of the node reach out to the 0th entry in this map first.", "items": { "$ref": "NetworkEndpoint" }, "readOnly": true }, "runtimeVersion": { "type": "string", "description": "Required. The runtime version running in the Node." }, "tags": { "type": "array", "items": { "type": "string" }, "description": "Tags to apply to the TPU Node. Tags are used to identify valid sources or targets for network firewalls." }, "health": { "type": "string", "enum": [ "HEALTH_UNSPECIFIED", "HEALTHY", "TIMEOUT", "UNHEALTHY_TENSORFLOW", "UNHEALTHY_MAINTENANCE" ], "description": "The health status of the TPU node.", "enumDescriptions": [ "Health status is unknown: not initialized or failed to retrieve.", "The resource is healthy.", "The resource is unresponsive.", "The in-guest ML stack is unhealthy.", "The node is under maintenance/priority boost caused rescheduling and will resume running once rescheduled." ] }, "labels": { "type": "object", "additionalProperties": { "type": "string" }, "description": "Resource labels to represent user-provided metadata." }, "metadata": { "additionalProperties": { "type": "string" }, "type": "object", "description": "Custom metadata to apply to the TPU Node. Can set startup-script and shutdown-script" }, "id": { "format": "int64", "readOnly": true, "type": "string", "description": "Output only. The unique identifier for the TPU Node." }, "schedulingConfig": { "$ref": "SchedulingConfig", "description": "The scheduling options for this node." }, "name": { "type": "string", "description": "Output only. Immutable. The name of the TPU.", "readOnly": true }, "cidrBlock": { "description": "The CIDR block that the TPU node will use when selecting an IP address. This CIDR block must be a /29 block; the Compute Engine networks API forbids a smaller block, and using a larger block would be wasteful (a node can only consume one IP address). Errors will occur if the CIDR block has already been used for a currently existing TPU node, the CIDR block conflicts with any subnetworks in the user's provided network, or the provided network is peered with another network that is using that CIDR block.", "type": "string" }, "description": { "description": "The user-supplied description of the TPU. Maximum of 512 characters.", "type": "string" }, "symptoms": { "readOnly": true, "items": { "$ref": "Symptom" }, "type": "array", "description": "Output only. The Symptoms that have occurred to the TPU Node." }, "createTime": { "type": "string", "readOnly": true, "description": "Output only. The time when the node was created.", "format": "google-datetime" }, "networkConfig": { "$ref": "NetworkConfig", "description": "Network configurations for the TPU node." }, "healthDescription": { "readOnly": true, "type": "string", "description": "Output only. If this field is populated, it contains a description of why the TPU Node is unhealthy." }, "serviceAccount": { "description": "The Google Cloud Platform Service Account to be used by the TPU node VMs. If None is specified, the default compute service account will be used.", "$ref": "ServiceAccount" }, "state": { "readOnly": true, "description": "Output only. The current state for the TPU Node.", "enumDescriptions": [ "TPU node state is not known/set.", "TPU node is being created.", "TPU node has been created.", "TPU node is restarting.", "TPU node is undergoing reimaging.", "TPU node is being deleted.", "TPU node is being repaired and may be unusable. Details can be found in the `help_description` field.", "TPU node is stopped.", "TPU node is currently stopping.", "TPU node is currently starting.", "TPU node has been preempted. Only applies to Preemptible TPU Nodes.", "TPU node has been terminated due to maintenance or has reached the end of its life cycle (for preemptible nodes).", "TPU node is currently hiding.", "TPU node has been hidden.", "TPU node is currently unhiding." ], "type": "string", "enum": [ "STATE_UNSPECIFIED", "CREATING", "READY", "RESTARTING", "REIMAGING", "DELETING", "REPAIRING", "STOPPED", "STOPPING", "STARTING", "PREEMPTED", "TERMINATED", "HIDING", "HIDDEN", "UNHIDING" ] } }, "description": "A TPU instance.", "id": "Node", "type": "object" }, "Empty": { "type": "object", "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }", "id": "Empty", "properties": {} }, "StartNodeRequest": { "type": "object", "description": "Request for StartNode.", "id": "StartNodeRequest", "properties": {} }, "GenerateServiceIdentityRequest": { "id": "GenerateServiceIdentityRequest", "properties": {}, "type": "object", "description": "Request for GenerateServiceIdentity." }, "GetGuestAttributesRequest": { "description": "Request for GetGuestAttributes.", "type": "object", "id": "GetGuestAttributesRequest", "properties": { "workerIds": { "items": { "type": "string" }, "description": "The 0-based worker ID. If it is empty, all workers' GuestAttributes will be returned.", "type": "array" }, "queryPath": { "description": "The guest attributes path to be queried.", "type": "string" } } }, "GuestAttributesValue": { "properties": { "items": { "type": "array", "items": { "$ref": "GuestAttributesEntry" }, "description": "The list of guest attributes entries." } }, "description": "Array of guest attribute namespace/key/value tuples.", "type": "object", "id": "GuestAttributesValue" }, "NetworkEndpoint": { "type": "object", "properties": { "port": { "type": "integer", "description": "The port of this network endpoint.", "format": "int32" }, "ipAddress": { "description": "The internal IP address of this network endpoint.", "type": "string" }, "accessConfig": { "$ref": "AccessConfig", "description": "The access config for the TPU worker." } }, "id": "NetworkEndpoint", "description": "A network endpoint over which a TPU worker can be reached." }, "SchedulingConfig": { "type": "object", "id": "SchedulingConfig", "properties": { "preemptible": { "description": "Defines whether the node is preemptible.", "type": "boolean" }, "reserved": { "description": "Whether the node is created under a reservation.", "type": "boolean" } }, "description": "Sets the scheduling options for this node." }, "Symptom": { "properties": { "details": { "description": "Detailed information of the current Symptom.", "type": "string" }, "symptomType": { "enumDescriptions": [ "Unspecified symptom.", "TPU VM memory is low.", "TPU runtime is out of memory.", "TPU runtime execution has timed out.", "TPU runtime fails to construct a mesh that recognizes each TPU device's neighbors.", "TPU HBM is out of memory.", "Abusive behaviors have been identified on the current project." ], "enum": [ "SYMPTOM_TYPE_UNSPECIFIED", "LOW_MEMORY", "OUT_OF_MEMORY", "EXECUTE_TIMED_OUT", "MESH_BUILD_FAIL", "HBM_OUT_OF_MEMORY", "PROJECT_ABUSE" ], "description": "Type of the Symptom.", "type": "string" }, "workerId": { "type": "string", "description": "A string used to uniquely distinguish a worker within a TPU node." }, "createTime": { "type": "string", "format": "google-datetime", "description": "Timestamp when the Symptom is created." } }, "description": "A Symptom instance.", "id": "Symptom", "type": "object" }, "AcceleratorType": { "properties": { "name": { "type": "string", "description": "The resource name." }, "type": { "type": "string", "description": "the accelerator type." } }, "description": "A accelerator type that a Node can be configured with.", "id": "AcceleratorType", "type": "object" }, "GetGuestAttributesResponse": { "type": "object", "description": "Response for GetGuestAttributes.", "properties": { "guestAttributes": { "description": "The guest attributes for the TPU workers.", "type": "array", "items": { "$ref": "GuestAttributes" } } }, "id": "GetGuestAttributesResponse" }, "ServiceAccount": { "description": "A service account.", "properties": { "email": { "description": "Email address of the service account. If empty, default Compute service account will be used.", "type": "string" }, "scope": { "items": { "type": "string" }, "type": "array", "description": "The list of scopes to be made available for this service account. If empty, access to all Cloud APIs will be allowed." } }, "id": "ServiceAccount", "type": "object" }, "ListAcceleratorTypesResponse": { "type": "object", "properties": { "unreachable": { "description": "Locations that could not be reached.", "type": "array", "items": { "type": "string" } }, "nextPageToken": { "description": "The next page token or empty if none.", "type": "string" }, "acceleratorTypes": { "description": "The listed nodes.", "items": { "$ref": "AcceleratorType" }, "type": "array" } }, "id": "ListAcceleratorTypesResponse", "description": "Response for ListAcceleratorTypes." }, "SimulateMaintenanceEventRequest": { "id": "SimulateMaintenanceEventRequest", "description": "Request for SimulateMaintenanceEvent.", "type": "object", "properties": { "workerIds": { "type": "array", "description": "The 0-based worker ID. If it is empty, worker ID 0 will be selected for maintenance event simulation. A maintenance event will only be fired on the first specified worker ID. Future implementations may support firing on multiple workers.", "items": { "type": "string" } } } }, "Status": { "id": "Status", "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).", "type": "object", "properties": { "message": { "type": "string", "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client." }, "code": { "format": "int32", "description": "The status code, which should be an enum value of google.rpc.Code.", "type": "integer" }, "details": { "type": "array", "items": { "additionalProperties": { "type": "any", "description": "Properties of the object. Contains field @type with type URL." }, "type": "object" }, "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use." } } }, "GuestAttributesEntry": { "type": "object", "properties": { "namespace": { "description": "Namespace for the guest attribute entry.", "type": "string" }, "key": { "type": "string", "description": "Key for the guest attribute entry." }, "value": { "description": "Value for the guest attribute entry.", "type": "string" } }, "id": "GuestAttributesEntry", "description": "A guest attributes namespace/key/value entry." }, "ListRuntimeVersionsResponse": { "type": "object", "id": "ListRuntimeVersionsResponse", "description": "Response for ListRuntimeVersions.", "properties": { "nextPageToken": { "description": "The next page token or empty if none.", "type": "string" }, "unreachable": { "items": { "type": "string" }, "type": "array", "description": "Locations that could not be reached." }, "runtimeVersions": { "items": { "$ref": "RuntimeVersion" }, "description": "The listed nodes.", "type": "array" } } }, "AccessConfig": { "properties": { "externalIp": { "type": "string", "description": "Output only. An external IP address associated with the TPU worker.", "readOnly": true } }, "type": "object", "id": "AccessConfig", "description": "An access config attached to the TPU worker." }, "GenerateServiceIdentityResponse": { "type": "object", "id": "GenerateServiceIdentityResponse", "properties": { "identity": { "$ref": "ServiceIdentity", "description": "ServiceIdentity that was created or retrieved." } }, "description": "Response for GenerateServiceIdentity." }, "RuntimeVersion": { "type": "object", "id": "RuntimeVersion", "properties": { "name": { "type": "string", "description": "The resource name." }, "version": { "description": "The runtime version.", "type": "string" } }, "description": "A runtime version that a Node can be configured with." }, "Location": { "id": "Location", "properties": { "labels": { "additionalProperties": { "type": "string" }, "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}", "type": "object" }, "name": { "type": "string", "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`" }, "displayName": { "type": "string", "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"." }, "locationId": { "type": "string", "description": "The canonical id for this location. For example: `\"us-east1\"`." }, "metadata": { "type": "object", "additionalProperties": { "type": "any", "description": "Properties of the object. Contains field @type with type URL." }, "description": "Service-specific metadata. For example the available capacity at the given location." } }, "description": "A resource that represents Google Cloud Platform location.", "type": "object" }, "GuestAttributes": { "properties": { "queryValue": { "description": "The value of the requested queried path.", "$ref": "GuestAttributesValue" }, "queryPath": { "description": "The path to be queried. This can be the default namespace ('/') or a nested namespace ('/\\/') or a specified key ('/\\/\\')", "type": "string" } }, "description": "A guest attributes.", "id": "GuestAttributes", "type": "object" }, "OperationMetadata": { "properties": { "apiVersion": { "description": "API version.", "type": "string" }, "target": { "description": "Target of the operation - for example projects/project-1/connectivityTests/test-1", "type": "string" }, "statusDetail": { "description": "Human-readable status of the operation, if any.", "type": "string" }, "cancelRequested": { "description": "Specifies if cancellation was requested for the operation.", "type": "boolean" }, "createTime": { "description": "The time the operation was created.", "format": "google-datetime", "type": "string" }, "endTime": { "type": "string", "format": "google-datetime", "description": "The time the operation finished running." }, "verb": { "type": "string", "description": "Name of the verb executed by the operation." } }, "id": "OperationMetadata", "type": "object", "description": "Metadata describing an Operation" } }, "version": "v2alpha1", "rootUrl": "https://tpu.googleapis.com/", "servicePath": "", "fullyEncodeReservedExpansion": true, "auth": { "oauth2": { "scopes": { "https://www.googleapis.com/auth/cloud-platform": { "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account." } } } }, "batchPath": "batch", "ownerName": "Google", "documentationLink": "https://cloud.google.com/tpu/", "revision": "20220629" }
]===]))
