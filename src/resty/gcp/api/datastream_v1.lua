local decode = require("cjson").new().decode
return assert(decode([===[
{ "batchPath": "batch", "servicePath": "", "basePath": "", "ownerDomain": "google.com", "name": "datastream", "ownerName": "Google", "auth": { "oauth2": { "scopes": { "https://www.googleapis.com/auth/cloud-platform": { "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account." } } } }, "revision": "20220629", "parameters": { "quotaUser": { "type": "string", "location": "query", "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters." }, "$.xgafv": { "type": "string", "enum": [ "1", "2" ], "enumDescriptions": [ "v1 error format", "v2 error format" ], "location": "query", "description": "V1 error format." }, "fields": { "location": "query", "type": "string", "description": "Selector specifying which fields to include in a partial response." }, "oauth_token": { "location": "query", "type": "string", "description": "OAuth 2.0 token for the current user." }, "upload_protocol": { "type": "string", "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").", "location": "query" }, "key": { "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "location": "query", "type": "string" }, "prettyPrint": { "default": "true", "description": "Returns response with indentations and line breaks.", "type": "boolean", "location": "query" }, "alt": { "type": "string", "enum": [ "json", "media", "proto" ], "enumDescriptions": [ "Responses with Content-Type of application/json", "Media download with context-dependent Content-Type", "Responses with Content-Type of application/x-protobuf" ], "default": "json", "description": "Data format for response.", "location": "query" }, "callback": { "description": "JSONP", "type": "string", "location": "query" }, "uploadType": { "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", "location": "query", "type": "string" }, "access_token": { "description": "OAuth access token.", "type": "string", "location": "query" } }, "canonicalName": "Datastream", "mtlsRootUrl": "https://datastream.mtls.googleapis.com/", "version_module": true, "schemas": { "MysqlRdbms": { "id": "MysqlRdbms", "type": "object", "properties": { "mysqlDatabases": { "items": { "$ref": "MysqlDatabase" }, "type": "array", "description": "Mysql databases on the server" } }, "description": "MySQL database structure" }, "SourceObjectIdentifier": { "properties": { "oracleIdentifier": { "description": "Oracle data source object identifier.", "$ref": "OracleObjectIdentifier" }, "mysqlIdentifier": { "$ref": "MysqlObjectIdentifier", "description": "Mysql data source object identifier." } }, "description": "Represents an identifier of an object in the data source.", "id": "SourceObjectIdentifier", "type": "object" }, "OracleTable": { "description": "Oracle table.", "properties": { "table": { "description": "Table name.", "type": "string" }, "oracleColumns": { "type": "array", "items": { "$ref": "OracleColumn" }, "description": "Oracle columns in the schema. When unspecified as part of include/exclude objects, includes/excludes everything." } }, "id": "OracleTable", "type": "object" }, "Error": { "description": "Represent a user-facing Error.", "properties": { "errorUuid": { "description": "A unique identifier for this specific error, allowing it to be traced throughout the system in logs and API responses.", "type": "string" }, "errorTime": { "type": "string", "description": "The time when the error occurred.", "format": "google-datetime" }, "reason": { "description": "A title that explains the reason for the error.", "type": "string" }, "message": { "description": "A message containing more information about the error that occurred.", "type": "string" }, "details": { "description": "Additional information about the error.", "type": "object", "additionalProperties": { "type": "string" } } }, "id": "Error", "type": "object" }, "Empty": { "type": "object", "id": "Empty", "properties": {}, "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }" }, "MysqlSslConfig": { "type": "object", "id": "MysqlSslConfig", "properties": { "caCertificate": { "description": "Input only. PEM-encoded certificate of the CA that signed the source database server's certificate.", "type": "string" }, "clientKey": { "description": "Input only. PEM-encoded private key associated with the Client Certificate. If this field is used then the 'client_certificate' and the 'ca_certificate' fields are mandatory.", "type": "string" }, "clientCertificateSet": { "type": "boolean", "description": "Output only. Indicates whether the client_certificate field is set.", "readOnly": true }, "caCertificateSet": { "description": "Output only. Indicates whether the ca_certificate field is set.", "type": "boolean", "readOnly": true }, "clientCertificate": { "type": "string", "description": "Input only. PEM-encoded certificate that will be used by the replica to authenticate against the source database server. If this field is used then the 'client_key' and the 'ca_certificate' fields are mandatory." }, "clientKeySet": { "type": "boolean", "readOnly": true, "description": "Output only. Indicates whether the client_key field is set." } }, "description": "MySQL SSL configuration information." }, "StaticServiceIpConnectivity": { "type": "object", "properties": {}, "id": "StaticServiceIpConnectivity", "description": "Static IP address connectivity." }, "MysqlColumn": { "properties": { "column": { "type": "string", "description": "Column name." }, "collation": { "description": "Column collation.", "type": "string" }, "nullable": { "type": "boolean", "description": "Whether or not the column can accept a null value." }, "primaryKey": { "description": "Whether or not the column represents a primary key.", "type": "boolean" }, "ordinalPosition": { "type": "integer", "description": "The ordinal position of the column in the table.", "format": "int32" }, "length": { "description": "Column length.", "type": "integer", "format": "int32" }, "dataType": { "description": "The MySQL data type. Full data types list can be found here: https://dev.mysql.com/doc/refman/8.0/en/data-types.html", "type": "string" } }, "description": "MySQL Column.", "type": "object", "id": "MysqlColumn" }, "Location": { "type": "object", "properties": { "displayName": { "type": "string", "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"." }, "locationId": { "type": "string", "description": "The canonical id for this location. For example: `\"us-east1\"`." }, "metadata": { "type": "object", "additionalProperties": { "type": "any", "description": "Properties of the object. Contains field @type with type URL." }, "description": "Service-specific metadata. For example the available capacity at the given location." }, "name": { "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`", "type": "string" }, "labels": { "additionalProperties": { "type": "string" }, "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}", "type": "object" } }, "description": "A resource that represents Google Cloud Platform location.", "id": "Location" }, "BackfillJob": { "description": "Represents a backfill job on a specific stream object.", "properties": { "trigger": { "enum": [ "TRIGGER_UNSPECIFIED", "AUTOMATIC", "MANUAL" ], "type": "string", "enumDescriptions": [ "Default value.", "Object backfill job was triggered automatically according to the stream's backfill strategy.", "Object backfill job was triggered manually using the dedicated API." ], "description": "Backfill job's triggering reason." }, "lastStartTime": { "format": "google-datetime", "description": "Output only. Backfill job's start time.", "type": "string", "readOnly": true }, "lastEndTime": { "readOnly": true, "description": "Output only. Backfill job's end time.", "type": "string", "format": "google-datetime" }, "errors": { "items": { "$ref": "Error" }, "type": "array", "readOnly": true, "description": "Output only. Errors which caused the backfill job to fail." }, "state": { "enumDescriptions": [ "Default value.", "Backfill job was never started for the stream object (stream has backfill strategy defined as manual or object was explicitly excluded from automatic backfill).", "Backfill job will start pending available resources.", "Backfill job is running.", "Backfill job stopped (next job run will start from beginning).", "Backfill job failed (due to an error).", "Backfill completed successfully.", "Backfill job failed since the table structure is currently unsupported for backfill." ], "type": "string", "enum": [ "STATE_UNSPECIFIED", "NOT_STARTED", "PENDING", "ACTIVE", "STOPPED", "FAILED", "COMPLETED", "UNSUPPORTED" ], "description": "Backfill job state." } }, "id": "BackfillJob", "type": "object" }, "DiscoverConnectionProfileRequest": { "properties": { "connectionProfile": { "$ref": "ConnectionProfile", "description": "An ad-hoc connection profile configuration." }, "fullHierarchy": { "type": "boolean", "description": "Whether to retrieve the full hierarchy of data objects (TRUE) or only the current level (FALSE)." }, "hierarchyDepth": { "description": "The number of hierarchy levels below the current level to be retrieved.", "type": "integer", "format": "int32" }, "mysqlRdbms": { "description": "MySQL RDBMS to enrich with child data objects and metadata.", "$ref": "MysqlRdbms" }, "oracleRdbms": { "description": "Oracle RDBMS to enrich with child data objects and metadata.", "$ref": "OracleRdbms" }, "connectionProfileName": { "type": "string", "description": "A reference to an existing connection profile." } }, "description": "Request message for 'discover' ConnectionProfile request.", "type": "object", "id": "DiscoverConnectionProfileRequest" }, "ListStreamObjectsResponse": { "properties": { "streamObjects": { "items": { "$ref": "StreamObject" }, "description": "List of stream objects.", "type": "array" }, "nextPageToken": { "description": "A token, which can be sent as `page_token` to retrieve the next page.", "type": "string" } }, "type": "object", "description": "Response containing the objects for a stream.", "id": "ListStreamObjectsResponse" }, "BackfillNoneStrategy": { "type": "object", "description": "Backfill strategy to disable automatic backfill for the Stream's objects.", "properties": {}, "id": "BackfillNoneStrategy" }, "MysqlSourceConfig": { "type": "object", "description": "MySQL source configuration", "id": "MysqlSourceConfig", "properties": { "excludeObjects": { "$ref": "MysqlRdbms", "description": "MySQL objects to exclude from the stream." }, "includeObjects": { "$ref": "MysqlRdbms", "description": "MySQL objects to retrieve from the source." } } }, "OracleSourceConfig": { "description": "Oracle data source configuration", "type": "object", "id": "OracleSourceConfig", "properties": { "includeObjects": { "description": "Oracle objects to include in the stream.", "$ref": "OracleRdbms" }, "excludeObjects": { "$ref": "OracleRdbms", "description": "Oracle objects to exclude from the stream." }, "dropLargeObjects": { "$ref": "DropLargeObjects", "description": "Drop large object values." } } }, "ListLocationsResponse": { "properties": { "nextPageToken": { "type": "string", "description": "The standard List next-page token." }, "locations": { "type": "array", "items": { "$ref": "Location" }, "description": "A list of locations that matches the specified filter in the request." } }, "description": "The response message for Locations.ListLocations.", "type": "object", "id": "ListLocationsResponse" }, "FetchStaticIpsResponse": { "description": "Response message for a 'FetchStaticIps' response.", "properties": { "nextPageToken": { "type": "string", "description": "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages." }, "staticIps": { "type": "array", "description": "list of static ips by account", "items": { "type": "string" } } }, "type": "object", "id": "FetchStaticIpsResponse" }, "OperationMetadata": { "type": "object", "properties": { "createTime": { "type": "string", "readOnly": true, "description": "Output only. The time the operation was created.", "format": "google-datetime" }, "endTime": { "readOnly": true, "type": "string", "format": "google-datetime", "description": "Output only. The time the operation finished running." }, "verb": { "description": "Output only. Name of the verb executed by the operation.", "readOnly": true, "type": "string" }, "requestedCancellation": { "type": "boolean", "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.", "readOnly": true }, "apiVersion": { "description": "Output only. API version used to start the operation.", "type": "string", "readOnly": true }, "target": { "description": "Output only. Server-defined resource path for the target of the operation.", "readOnly": true, "type": "string" }, "validationResult": { "readOnly": true, "description": "Output only. Results of executed validations if there are any.", "$ref": "ValidationResult" }, "statusMessage": { "description": "Output only. Human-readable status of the operation, if any.", "type": "string", "readOnly": true } }, "id": "OperationMetadata", "description": "Represents the metadata of the long-running operation." }, "DropLargeObjects": { "type": "object", "properties": {}, "description": "Configuration to drop large object values.", "id": "DropLargeObjects" }, "ListPrivateConnectionsResponse": { "properties": { "privateConnections": { "items": { "$ref": "PrivateConnection" }, "description": "List of private connectivity configurations.", "type": "array" }, "unreachable": { "type": "array", "items": { "type": "string" }, "description": "Locations that could not be reached." }, "nextPageToken": { "type": "string", "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages." } }, "type": "object", "id": "ListPrivateConnectionsResponse", "description": "Response containing a list of private connection configurations." }, "OracleSchema": { "description": "Oracle schema.", "type": "object", "properties": { "oracleTables": { "description": "Tables in the schema.", "type": "array", "items": { "$ref": "OracleTable" } }, "schema": { "type": "string", "description": "Schema name." } }, "id": "OracleSchema" }, "ListRoutesResponse": { "type": "object", "description": "Route list response.", "properties": { "unreachable": { "type": "array", "items": { "type": "string" }, "description": "Locations that could not be reached." }, "nextPageToken": { "type": "string", "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages." }, "routes": { "items": { "$ref": "Route" }, "description": "List of Routes.", "type": "array" } }, "id": "ListRoutesResponse" }, "ListOperationsResponse": { "type": "object", "properties": { "nextPageToken": { "type": "string", "description": "The standard List next-page token." }, "operations": { "items": { "$ref": "Operation" }, "description": "A list of operations that matches the specified filter in the request.", "type": "array" } }, "description": "The response message for Operations.ListOperations.", "id": "ListOperationsResponse" }, "GcsDestinationConfig": { "properties": { "path": { "type": "string", "description": "Path inside the Cloud Storage bucket to write data to." }, "fileRotationInterval": { "description": "The maximum duration for which new events are added before a file is closed and a new file is created.", "format": "google-duration", "type": "string" }, "fileRotationMb": { "type": "integer", "format": "int32", "description": "The maximum file size to be saved in the bucket." }, "jsonFileFormat": { "$ref": "JsonFileFormat", "description": "JSON file format configuration." }, "avroFileFormat": { "$ref": "AvroFileFormat", "description": "AVRO file format configuration." } }, "id": "GcsDestinationConfig", "description": "Google Cloud Storage destination configuration", "type": "object" }, "MysqlTable": { "id": "MysqlTable", "type": "object", "description": "MySQL table.", "properties": { "mysqlColumns": { "description": "MySQL columns in the database. When unspecified as part of include/exclude objects, includes/excludes everything.", "type": "array", "items": { "$ref": "MysqlColumn" } }, "table": { "type": "string", "description": "Table name." } } }, "ForwardSshTunnelConnectivity": { "type": "object", "description": "Forward SSH Tunnel connectivity.", "id": "ForwardSshTunnelConnectivity", "properties": { "password": { "type": "string", "description": "Input only. SSH password." }, "port": { "description": "Port for the SSH tunnel, default value is 22.", "type": "integer", "format": "int32" }, "privateKey": { "type": "string", "description": "Input only. SSH private key." }, "username": { "type": "string", "description": "Required. Username for the SSH tunnel." }, "hostname": { "type": "string", "description": "Required. Hostname for the SSH tunnel." } } }, "Validation": { "properties": { "message": { "items": { "$ref": "ValidationMessage" }, "description": "Messages reflecting the validation results.", "type": "array" }, "description": { "description": "A short description of the validation.", "type": "string" }, "code": { "type": "string", "description": "A custom code identifying this validation." }, "state": { "description": "Validation execution status.", "type": "string", "enum": [ "STATE_UNSPECIFIED", "NOT_EXECUTED", "FAILED", "PASSED" ], "enumDescriptions": [ "Unspecified state.", "Validation did not execute.", "Validation failed.", "Validation passed." ] } }, "id": "Validation", "type": "object", "description": "A validation to perform on a stream." }, "MysqlDatabase": { "type": "object", "description": "MySQL database.", "id": "MysqlDatabase", "properties": { "database": { "description": "Database name.", "type": "string" }, "mysqlTables": { "type": "array", "description": "Tables in the database.", "items": { "$ref": "MysqlTable" } } } }, "StartBackfillJobResponse": { "type": "object", "id": "StartBackfillJobResponse", "properties": { "object": { "$ref": "StreamObject", "description": "The stream object resource a backfill job was started for." } }, "description": "Response for manually initiating a backfill job for a specific stream object." }, "LookupStreamObjectRequest": { "description": "Request for looking up a specific stream object by its source object identifier.", "properties": { "sourceObjectIdentifier": { "$ref": "SourceObjectIdentifier", "description": "Required. The source object identifier which maps to the stream object." } }, "type": "object", "id": "LookupStreamObjectRequest" }, "OracleColumn": { "properties": { "dataType": { "description": "The Oracle data type.", "type": "string" }, "length": { "type": "integer", "format": "int32", "description": "Column length." }, "primaryKey": { "type": "boolean", "description": "Whether or not the column represents a primary key." }, "scale": { "format": "int32", "description": "Column scale.", "type": "integer" }, "encoding": { "type": "string", "description": "Column encoding." }, "nullable": { "description": "Whether or not the column can accept a null value.", "type": "boolean" }, "precision": { "format": "int32", "type": "integer", "description": "Column precision." }, "column": { "type": "string", "description": "Column name." }, "ordinalPosition": { "description": "The ordinal position of the column in the table.", "format": "int32", "type": "integer" } }, "id": "OracleColumn", "type": "object", "description": "Oracle Column." }, "DiscoverConnectionProfileResponse": { "description": "Response from a discover request.", "properties": { "oracleRdbms": { "description": "Enriched Oracle RDBMS object.", "$ref": "OracleRdbms" }, "mysqlRdbms": { "$ref": "MysqlRdbms", "description": "Enriched MySQL RDBMS object." } }, "id": "DiscoverConnectionProfileResponse", "type": "object" }, "JsonFileFormat": { "id": "JsonFileFormat", "description": "JSON file format configuration.", "properties": { "schemaFileFormat": { "enumDescriptions": [ "Unspecified schema file format.", "Do not attach schema file.", "Avro schema format." ], "description": "The schema file format along JSON data files.", "enum": [ "SCHEMA_FILE_FORMAT_UNSPECIFIED", "NO_SCHEMA_FILE", "AVRO_SCHEMA_FILE" ], "type": "string" }, "compression": { "enumDescriptions": [ "Unspecified json file compression.", "Do not compress JSON file.", "Gzip compression." ], "description": "Compression of the loaded JSON file.", "type": "string", "enum": [ "JSON_COMPRESSION_UNSPECIFIED", "NO_COMPRESSION", "GZIP" ] } }, "type": "object" }, "Stream": { "id": "Stream", "description": "A resource representing streaming data from a source to a destination.", "properties": { "displayName": { "description": "Required. Display name.", "type": "string" }, "errors": { "items": { "$ref": "Error" }, "readOnly": true, "type": "array", "description": "Output only. Errors on the Stream." }, "state": { "enum": [ "STATE_UNSPECIFIED", "NOT_STARTED", "RUNNING", "PAUSED", "MAINTENANCE", "FAILED", "FAILED_PERMANENTLY", "STARTING", "DRAINING" ], "enumDescriptions": [ "Unspecified stream state.", "The stream has been created but has not yet started streaming data.", "The stream is running.", "The stream is paused.", "The stream is in maintenance mode. Updates are rejected on the resource in this state.", "The stream is experiencing an error that is preventing data from being streamed.", "The stream has experienced a terminal failure.", "The stream is starting, but not yet running.", "The Stream is no longer reading new events, but still writing events in the buffer." ], "description": "The state of the stream.", "type": "string" }, "destinationConfig": { "description": "Required. Destination connection profile configuration.", "$ref": "DestinationConfig" }, "labels": { "type": "object", "description": "Labels.", "additionalProperties": { "type": "string" } }, "name": { "readOnly": true, "description": "Output only. The stream's name.", "type": "string" }, "sourceConfig": { "description": "Required. Source connection profile configuration.", "$ref": "SourceConfig" }, "createTime": { "format": "google-datetime", "readOnly": true, "description": "Output only. The creation time of the stream.", "type": "string" }, "customerManagedEncryptionKey": { "type": "string", "description": "Immutable. A reference to a KMS encryption key. If provided, it will be used to encrypt the data. If left blank, data will be encrypted using an internal Stream-specific encryption key provisioned through KMS." }, "backfillNone": { "$ref": "BackfillNoneStrategy", "description": "Do not automatically backfill any objects." }, "updateTime": { "type": "string", "readOnly": true, "description": "Output only. The last update time of the stream.", "format": "google-datetime" }, "backfillAll": { "description": "Automatically backfill objects included in the stream source configuration. Specific objects can be excluded.", "$ref": "BackfillAllStrategy" } }, "type": "object" }, "OracleObjectIdentifier": { "properties": { "table": { "type": "string", "description": "Required. The table name." }, "schema": { "description": "Required. The schema name.", "type": "string" } }, "type": "object", "description": "Oracle data source object identifier.", "id": "OracleObjectIdentifier" }, "ConnectionProfile": { "description": "A set of reusable connection configurations to be used as a source or destination for a stream.", "id": "ConnectionProfile", "type": "object", "properties": { "gcsProfile": { "$ref": "GcsProfile", "description": "Cloud Storage ConnectionProfile configuration." }, "displayName": { "description": "Required. Display name.", "type": "string" }, "mysqlProfile": { "$ref": "MysqlProfile", "description": "MySQL ConnectionProfile configuration." }, "privateConnectivity": { "description": "Private connectivity.", "$ref": "PrivateConnectivity" }, "updateTime": { "description": "Output only. The update time of the resource.", "type": "string", "format": "google-datetime", "readOnly": true }, "forwardSshConnectivity": { "description": "Forward SSH tunnel connectivity.", "$ref": "ForwardSshTunnelConnectivity" }, "staticServiceIpConnectivity": { "$ref": "StaticServiceIpConnectivity", "description": "Static Service IP connectivity." }, "oracleProfile": { "$ref": "OracleProfile", "description": "Oracle ConnectionProfile configuration." }, "labels": { "type": "object", "description": "Labels.", "additionalProperties": { "type": "string" } }, "name": { "description": "Output only. The resource's name.", "readOnly": true, "type": "string" }, "createTime": { "type": "string", "format": "google-datetime", "description": "Output only. The create time of the resource.", "readOnly": true } } }, "StartBackfillJobRequest": { "description": "Request for manually initiating a backfill job for a specific stream object.", "properties": {}, "type": "object", "id": "StartBackfillJobRequest" }, "PrivateConnectivity": { "properties": { "privateConnection": { "description": "Required. A reference to a private connection resource. Format: `projects/{project}/locations/{location}/privateConnections/{name}`", "type": "string" } }, "id": "PrivateConnectivity", "type": "object", "description": "Private Connectivity" }, "MysqlProfile": { "type": "object", "id": "MysqlProfile", "properties": { "password": { "description": "Required. Input only. Password for the MySQL connection.", "type": "string" }, "sslConfig": { "$ref": "MysqlSslConfig", "description": "SSL configuration for the MySQL connection." }, "hostname": { "description": "Required. Hostname for the MySQL connection.", "type": "string" }, "username": { "description": "Required. Username for the MySQL connection.", "type": "string" }, "port": { "type": "integer", "description": "Port for the MySQL connection, default value is 3306.", "format": "int32" } }, "description": "MySQL database profile." }, "ValidationMessage": { "type": "object", "description": "Represent user-facing validation result message.", "properties": { "message": { "description": "The result of the validation.", "type": "string" }, "metadata": { "additionalProperties": { "type": "string" }, "type": "object", "description": "Additional metadata related to the result." }, "code": { "description": "A custom code identifying this specific message.", "type": "string" }, "level": { "description": "Message severity level (warning or error).", "enum": [ "LEVEL_UNSPECIFIED", "WARNING", "ERROR" ], "type": "string", "enumDescriptions": [ "Unspecified level.", "Potentially cause issues with the Stream.", "Definitely cause issues with the Stream." ] } }, "id": "ValidationMessage" }, "ListStreamsResponse": { "description": "Response message for listing streams.", "id": "ListStreamsResponse", "type": "object", "properties": { "unreachable": { "items": { "type": "string" }, "type": "array", "description": "Locations that could not be reached." }, "streams": { "items": { "$ref": "Stream" }, "description": "List of streams", "type": "array" }, "nextPageToken": { "type": "string", "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages." } } }, "Operation": { "id": "Operation", "description": "This resource represents a long-running operation that is the result of a network API call.", "type": "object", "properties": { "name": { "type": "string", "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`." }, "response": { "type": "object", "additionalProperties": { "description": "Properties of the object. Contains field @type with type URL.", "type": "any" }, "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`." }, "metadata": { "type": "object", "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.", "additionalProperties": { "description": "Properties of the object. Contains field @type with type URL.", "type": "any" } }, "error": { "description": "The error result of the operation in case of failure or cancellation.", "$ref": "Status" }, "done": { "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.", "type": "boolean" } } }, "AvroFileFormat": { "properties": {}, "id": "AvroFileFormat", "type": "object", "description": "AVRO file format configuration." }, "StreamObject": { "description": "A specific stream object (e.g a specific DB table).", "id": "StreamObject", "properties": { "sourceObject": { "$ref": "SourceObjectIdentifier", "description": "The object identifier in the data source." }, "name": { "type": "string", "readOnly": true, "description": "Output only. The object resource's name." }, "createTime": { "format": "google-datetime", "type": "string", "description": "Output only. The creation time of the object.", "readOnly": true }, "errors": { "items": { "$ref": "Error" }, "description": "Output only. Active errors on the object.", "readOnly": true, "type": "array" }, "updateTime": { "type": "string", "format": "google-datetime", "readOnly": true, "description": "Output only. The last update time of the object." }, "displayName": { "type": "string", "description": "Required. Display name." }, "backfillJob": { "description": "The latest backfill job that was initiated for the stream object.", "$ref": "BackfillJob" } }, "type": "object" }, "DestinationConfig": { "properties": { "gcsDestinationConfig": { "$ref": "GcsDestinationConfig", "description": "A configuration for how data should be loaded to Cloud Storage." }, "destinationConnectionProfile": { "description": "Required. Destination connection profile resource. Format: `projects/{project}/locations/{location}/connectionProfiles/{name}`", "type": "string" } }, "type": "object", "id": "DestinationConfig", "description": "The configuration of the stream destination." }, "CancelOperationRequest": { "id": "CancelOperationRequest", "properties": {}, "description": "The request message for Operations.CancelOperation.", "type": "object" }, "StopBackfillJobResponse": { "description": "Response for manually stop a backfill job for a specific stream object.", "type": "object", "id": "StopBackfillJobResponse", "properties": { "object": { "$ref": "StreamObject", "description": "The stream object resource the backfill job was stopped for." } } }, "OracleProfile": { "properties": { "databaseService": { "type": "string", "description": "Required. Database for the Oracle connection." }, "connectionAttributes": { "type": "object", "description": "Connection string attributes", "additionalProperties": { "type": "string" } }, "port": { "type": "integer", "format": "int32", "description": "Port for the Oracle connection, default value is 1521." }, "password": { "description": "Required. Password for the Oracle connection.", "type": "string" }, "username": { "type": "string", "description": "Required. Username for the Oracle connection." }, "hostname": { "description": "Required. Hostname for the Oracle connection.", "type": "string" } }, "id": "OracleProfile", "type": "object", "description": "Oracle database profile." }, "StopBackfillJobRequest": { "id": "StopBackfillJobRequest", "description": "Request for manually stopping a running backfill job for a specific stream object.", "type": "object", "properties": {} }, "ListConnectionProfilesResponse": { "description": "Response message for listing connection profiles.", "type": "object", "id": "ListConnectionProfilesResponse", "properties": { "unreachable": { "description": "Locations that could not be reached.", "items": { "type": "string" }, "type": "array" }, "connectionProfiles": { "description": "List of connection profiles.", "items": { "$ref": "ConnectionProfile" }, "type": "array" }, "nextPageToken": { "type": "string", "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages." } } }, "ValidationResult": { "description": "Contains the current validation results.", "properties": { "validations": { "items": { "$ref": "Validation" }, "description": "A list of validations (includes both executed as well as not executed validations).", "type": "array" } }, "id": "ValidationResult", "type": "object" }, "MysqlObjectIdentifier": { "id": "MysqlObjectIdentifier", "description": "Mysql data source object identifier.", "properties": { "database": { "description": "Required. The database name.", "type": "string" }, "table": { "type": "string", "description": "Required. The table name." } }, "type": "object" }, "Status": { "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).", "properties": { "message": { "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.", "type": "string" }, "details": { "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.", "items": { "additionalProperties": { "type": "any", "description": "Properties of the object. Contains field @type with type URL." }, "type": "object" }, "type": "array" }, "code": { "type": "integer", "description": "The status code, which should be an enum value of google.rpc.Code.", "format": "int32" } }, "type": "object", "id": "Status" }, "Route": { "description": "The route resource is the child of the private connection resource, used for defining a route for a private connection.", "id": "Route", "type": "object", "properties": { "updateTime": { "readOnly": true, "type": "string", "description": "Output only. The update time of the resource.", "format": "google-datetime" }, "displayName": { "type": "string", "description": "Required. Display name." }, "labels": { "additionalProperties": { "type": "string" }, "type": "object", "description": "Labels." }, "createTime": { "description": "Output only. The create time of the resource.", "type": "string", "format": "google-datetime", "readOnly": true }, "name": { "description": "Output only. The resource's name.", "readOnly": true, "type": "string" }, "destinationPort": { "description": "Destination port for connection", "type": "integer", "format": "int32" }, "destinationAddress": { "type": "string", "description": "Required. Destination address for connection" } } }, "OracleRdbms": { "type": "object", "description": "Oracle database structure.", "properties": { "oracleSchemas": { "items": { "$ref": "OracleSchema" }, "type": "array", "description": "Oracle schemas/databases in the database server." } }, "id": "OracleRdbms" }, "SourceConfig": { "description": "The configuration of the stream source.", "id": "SourceConfig", "type": "object", "properties": { "oracleSourceConfig": { "description": "Oracle data source configuration.", "$ref": "OracleSourceConfig" }, "sourceConnectionProfile": { "description": "Required. Source connection profile resoource. Format: `projects/{project}/locations/{location}/connectionProfiles/{name}`", "type": "string" }, "mysqlSourceConfig": { "$ref": "MysqlSourceConfig", "description": "MySQL data source configuration." } } }, "GcsProfile": { "id": "GcsProfile", "type": "object", "properties": { "rootPath": { "description": "The root path inside the Cloud Storage bucket.", "type": "string" }, "bucket": { "type": "string", "description": "Required. The Cloud Storage bucket name." } }, "description": "Cloud Storage bucket profile." }, "BackfillAllStrategy": { "description": "Backfill strategy to automatically backfill the Stream's objects. Specific objects can be excluded.", "type": "object", "properties": { "mysqlExcludedObjects": { "description": "MySQL data source objects to avoid backfilling.", "$ref": "MysqlRdbms" }, "oracleExcludedObjects": { "$ref": "OracleRdbms", "description": "Oracle data source objects to avoid backfilling." } }, "id": "BackfillAllStrategy" }, "VpcPeeringConfig": { "id": "VpcPeeringConfig", "properties": { "subnet": { "type": "string", "description": "Required. A free subnet for peering. (CIDR of /29)" }, "vpc": { "description": "Required. Fully qualified name of the VPC that Datastream will peer to. Format: `projects/{project}/global/{networks}/{name}`", "type": "string" } }, "type": "object", "description": "The VPC Peering configuration is used to create VPC peering between Datastream and the consumer's VPC." }, "PrivateConnection": { "description": "The PrivateConnection resource is used to establish private connectivity between Datastream and a customer's network.", "id": "PrivateConnection", "properties": { "labels": { "additionalProperties": { "type": "string" }, "type": "object", "description": "Labels." }, "vpcPeeringConfig": { "description": "VPC Peering Config.", "$ref": "VpcPeeringConfig" }, "name": { "description": "Output only. The resource's name.", "readOnly": true, "type": "string" }, "error": { "readOnly": true, "description": "Output only. In case of error, the details of the error in a user-friendly format.", "$ref": "Error" }, "state": { "type": "string", "description": "Output only. The state of the Private Connection.", "readOnly": true, "enumDescriptions": [ "Unspecified state.", "The private connection is in creation state - creating resources.", "The private connection has been created with all of its resources.", "The private connection creation has failed.", "The private connection is being deleted.", "Delete request has failed, resource is in invalid state." ], "enum": [ "STATE_UNSPECIFIED", "CREATING", "CREATED", "FAILED", "DELETING", "FAILED_TO_DELETE" ] }, "updateTime": { "format": "google-datetime", "readOnly": true, "type": "string", "description": "Output only. The update time of the resource." }, "displayName": { "description": "Required. Display name.", "type": "string" }, "createTime": { "readOnly": true, "description": "Output only. The create time of the resource.", "format": "google-datetime", "type": "string" } }, "type": "object" } }, "discoveryVersion": "v1", "resources": { "projects": { "resources": { "locations": { "resources": { "streams": { "resources": { "objects": { "methods": { "list": { "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects", "parameterOrder": [ "parent" ], "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "response": { "$ref": "ListStreamObjectsResponse" }, "id": "datastream.projects.locations.streams.objects.list", "parameters": { "parent": { "type": "string", "description": "Required. The parent stream that owns the collection of objects.", "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$", "required": true, "location": "path" }, "pageToken": { "description": "Page token received from a previous `ListStreamObjectsRequest` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListStreamObjectsRequest` must match the call that provided the page token.", "type": "string", "location": "query" }, "pageSize": { "description": "Maximum number of objects to return. Default is 50. The maximum value is 1000; values above 1000 will be coerced to 1000.", "type": "integer", "format": "int32", "location": "query" } }, "httpMethod": "GET", "description": "Use this method to list the objects of a specific stream.", "path": "v1/{+parent}/objects" }, "lookup": { "id": "datastream.projects.locations.streams.objects.lookup", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "request": { "$ref": "LookupStreamObjectRequest" }, "parameters": { "parent": { "location": "path", "description": "Required. The parent stream that owns the collection of objects.", "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$", "type": "string", "required": true } }, "response": { "$ref": "StreamObject" }, "parameterOrder": [ "parent" ], "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects:lookup", "path": "v1/{+parent}/objects:lookup", "description": "Use this method to look up a stream object by its source object identifier.", "httpMethod": "POST" }, "stopBackfillJob": { "path": "v1/{+object}:stopBackfillJob", "id": "datastream.projects.locations.streams.objects.stopBackfillJob", "parameters": { "object": { "required": true, "type": "string", "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+/objects/[^/]+$", "description": "Required. The name of the stream object resource to stop the backfill job for.", "location": "path" } }, "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects/{objectsId}:stopBackfillJob", "response": { "$ref": "StopBackfillJobResponse" }, "httpMethod": "POST", "description": "Use this method to stop a backfill job for the specified stream object.", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "parameterOrder": [ "object" ], "request": { "$ref": "StopBackfillJobRequest" } }, "get": { "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects/{objectsId}", "path": "v1/{+name}", "parameters": { "name": { "type": "string", "location": "path", "required": true, "description": "Required. The name of the stream object resource to get.", "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+/objects/[^/]+$" } }, "id": "datastream.projects.locations.streams.objects.get", "description": "Use this method to get details about a stream object.", "parameterOrder": [ "name" ], "httpMethod": "GET", "response": { "$ref": "StreamObject" } }, "startBackfillJob": { "description": "Use this method to start a backfill job for the specified stream object.", "id": "datastream.projects.locations.streams.objects.startBackfillJob", "path": "v1/{+object}:startBackfillJob", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects/{objectsId}:startBackfillJob", "httpMethod": "POST", "request": { "$ref": "StartBackfillJobRequest" }, "response": { "$ref": "StartBackfillJobResponse" }, "parameters": { "object": { "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+/objects/[^/]+$", "required": true, "location": "path", "description": "Required. The name of the stream object resource to start a backfill job for.", "type": "string" } }, "parameterOrder": [ "object" ] } } } }, "methods": { "delete": { "parameters": { "requestId": { "location": "query", "type": "string", "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)." }, "name": { "location": "path", "required": true, "description": "Required. The name of the stream resource to delete.", "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$", "type": "string" } }, "response": { "$ref": "Operation" }, "description": "Use this method to delete a stream.", "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}", "httpMethod": "DELETE", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "id": "datastream.projects.locations.streams.delete", "path": "v1/{+name}", "parameterOrder": [ "name" ] }, "create": { "path": "v1/{+parent}/streams", "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams", "id": "datastream.projects.locations.streams.create", "description": "Use this method to create a stream.", "parameters": { "force": { "description": "Optional. Create the stream without validating it.", "location": "query", "type": "boolean" }, "streamId": { "type": "string", "location": "query", "description": "Required. The stream identifier." }, "parent": { "type": "string", "required": true, "pattern": "^projects/[^/]+/locations/[^/]+$", "location": "path", "description": "Required. The parent that owns the collection of streams." }, "requestId": { "location": "query", "type": "string", "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)." }, "validateOnly": { "location": "query", "type": "boolean", "description": "Optional. Only validate the stream, but don't create any resources. The default is false." } }, "response": { "$ref": "Operation" }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "httpMethod": "POST", "parameterOrder": [ "parent" ], "request": { "$ref": "Stream" } }, "patch": { "path": "v1/{+name}", "parameters": { "requestId": { "location": "query", "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).", "type": "string" }, "validateOnly": { "description": "Optional. Only validate the stream with the changes, without actually updating it. The default is false.", "location": "query", "type": "boolean" }, "updateMask": { "format": "google-fieldmask", "description": "Optional. Field mask is used to specify the fields to be overwritten in the stream resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.", "location": "query", "type": "string" }, "force": { "location": "query", "description": "Optional. Update the stream without validating it.", "type": "boolean" }, "name": { "type": "string", "description": "Output only. The stream's name.", "location": "path", "required": true, "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$" } }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "response": { "$ref": "Operation" }, "httpMethod": "PATCH", "parameterOrder": [ "name" ], "request": { "$ref": "Stream" }, "id": "datastream.projects.locations.streams.patch", "description": "Use this method to update the configuration of a stream.", "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}" }, "get": { "path": "v1/{+name}", "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}", "parameterOrder": [ "name" ], "response": { "$ref": "Stream" }, "id": "datastream.projects.locations.streams.get", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "description": "Use this method to get details about a stream.", "parameters": { "name": { "type": "string", "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$", "description": "Required. The name of the stream resource to get.", "required": true, "location": "path" } }, "httpMethod": "GET" }, "list": { "response": { "$ref": "ListStreamsResponse" }, "parameters": { "pageSize": { "description": "Maximum number of streams to return. If unspecified, at most 50 streams will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.", "type": "integer", "format": "int32", "location": "query" }, "filter": { "location": "query", "type": "string", "description": "Filter request." }, "parent": { "description": "Required. The parent that owns the collection of streams.", "pattern": "^projects/[^/]+/locations/[^/]+$", "required": true, "type": "string", "location": "path" }, "orderBy": { "type": "string", "location": "query", "description": "Order by fields for the result." }, "pageToken": { "description": "Page token received from a previous `ListStreams` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListStreams` must match the call that provided the page token.", "location": "query", "type": "string" } }, "description": "Use this method to list streams in a project and location.", "parameterOrder": [ "parent" ], "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "httpMethod": "GET", "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams", "id": "datastream.projects.locations.streams.list", "path": "v1/{+parent}/streams" } } }, "operations": { "methods": { "list": { "parameterOrder": [ "name" ], "id": "datastream.projects.locations.operations.list", "httpMethod": "GET", "parameters": { "pageToken": { "description": "The standard list page token.", "location": "query", "type": "string" }, "name": { "description": "The name of the operation's parent resource.", "required": true, "pattern": "^projects/[^/]+/locations/[^/]+$", "type": "string", "location": "path" }, "filter": { "location": "query", "type": "string", "description": "The standard list filter." }, "pageSize": { "format": "int32", "type": "integer", "description": "The standard list page size.", "location": "query" } }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "path": "v1/{+name}/operations", "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.", "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations", "response": { "$ref": "ListOperationsResponse" } }, "cancel": { "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel", "parameterOrder": [ "name" ], "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.", "path": "v1/{+name}:cancel", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "id": "datastream.projects.locations.operations.cancel", "parameters": { "name": { "location": "path", "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$", "required": true, "description": "The name of the operation resource to be cancelled.", "type": "string" } }, "httpMethod": "POST", "response": { "$ref": "Empty" }, "request": { "$ref": "CancelOperationRequest" } }, "get": { "id": "datastream.projects.locations.operations.get", "parameterOrder": [ "name" ], "response": { "$ref": "Operation" }, "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.", "path": "v1/{+name}", "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}", "httpMethod": "GET", "parameters": { "name": { "required": true, "type": "string", "description": "The name of the operation resource.", "location": "path", "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$" } }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ] }, "delete": { "response": { "$ref": "Empty" }, "parameterOrder": [ "name" ], "httpMethod": "DELETE", "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}", "parameters": { "name": { "type": "string", "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$", "description": "The name of the operation resource to be deleted.", "required": true, "location": "path" } }, "path": "v1/{+name}", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "id": "datastream.projects.locations.operations.delete", "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`." } } }, "privateConnections": { "resources": { "routes": { "methods": { "delete": { "parameters": { "name": { "type": "string", "required": true, "description": "Required. The name of the Route resource to delete.", "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+/routes/[^/]+$", "location": "path" }, "requestId": { "location": "query", "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).", "type": "string" } }, "path": "v1/{+name}", "httpMethod": "DELETE", "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes/{routesId}", "parameterOrder": [ "name" ], "description": "Use this method to delete a route.", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "id": "datastream.projects.locations.privateConnections.routes.delete", "response": { "$ref": "Operation" } }, "create": { "parameters": { "parent": { "required": true, "description": "Required. The parent that owns the collection of Routes.", "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$", "location": "path", "type": "string" }, "requestId": { "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).", "location": "query", "type": "string" }, "routeId": { "type": "string", "location": "query", "description": "Required. The Route identifier." } }, "response": { "$ref": "Operation" }, "httpMethod": "POST", "path": "v1/{+parent}/routes", "parameterOrder": [ "parent" ], "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "id": "datastream.projects.locations.privateConnections.routes.create", "request": { "$ref": "Route" }, "description": "Use this method to create a route for a private connectivity configuration in a project and location.", "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes" }, "list": { "path": "v1/{+parent}/routes", "httpMethod": "GET", "parameters": { "filter": { "type": "string", "description": "Filter request.", "location": "query" }, "pageToken": { "type": "string", "description": "Page token received from a previous `ListRoutes` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListRoutes` must match the call that provided the page token.", "location": "query" }, "orderBy": { "location": "query", "description": "Order by fields for the result.", "type": "string" }, "parent": { "required": true, "location": "path", "type": "string", "description": "Required. The parent that owns the collection of Routess.", "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$" }, "pageSize": { "location": "query", "description": "Maximum number of Routes to return. The service may return fewer than this value. If unspecified, at most 50 Routes will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.", "type": "integer", "format": "int32" } }, "description": "Use this method to list routes created for a private connectivity configuration in a project and location.", "id": "datastream.projects.locations.privateConnections.routes.list", "parameterOrder": [ "parent" ], "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes", "response": { "$ref": "ListRoutesResponse" }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ] }, "get": { "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes/{routesId}", "id": "datastream.projects.locations.privateConnections.routes.get", "parameterOrder": [ "name" ], "parameters": { "name": { "type": "string", "required": true, "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+/routes/[^/]+$", "description": "Required. The name of the Route resource to get.", "location": "path" } }, "description": "Use this method to get details about a route.", "path": "v1/{+name}", "response": { "$ref": "Route" }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "httpMethod": "GET" } } } }, "methods": { "create": { "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections", "parameterOrder": [ "parent" ], "description": "Use this method to create a private connectivity configuration.", "path": "v1/{+parent}/privateConnections", "httpMethod": "POST", "id": "datastream.projects.locations.privateConnections.create", "request": { "$ref": "PrivateConnection" }, "response": { "$ref": "Operation" }, "parameters": { "privateConnectionId": { "location": "query", "type": "string", "description": "Required. The private connectivity identifier." }, "requestId": { "type": "string", "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).", "location": "query" }, "parent": { "description": "Required. The parent that owns the collection of PrivateConnections.", "required": true, "type": "string", "location": "path", "pattern": "^projects/[^/]+/locations/[^/]+$" } }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ] }, "get": { "id": "datastream.projects.locations.privateConnections.get", "httpMethod": "GET", "description": "Use this method to get details about a private connectivity configuration.", "path": "v1/{+name}", "parameterOrder": [ "name" ], "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "parameters": { "name": { "location": "path", "type": "string", "required": true, "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$", "description": "Required. The name of the private connectivity configuration to get." } }, "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}", "response": { "$ref": "PrivateConnection" } }, "list": { "path": "v1/{+parent}/privateConnections", "description": "Use this method to list private connectivity configurations in a project and location.", "parameterOrder": [ "parent" ], "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections", "id": "datastream.projects.locations.privateConnections.list", "parameters": { "pageSize": { "location": "query", "type": "integer", "format": "int32", "description": "Maximum number of private connectivity configurations to return. If unspecified, at most 50 private connectivity configurations that will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000." }, "parent": { "pattern": "^projects/[^/]+/locations/[^/]+$", "type": "string", "description": "Required. The parent that owns the collection of private connectivity configurations.", "required": true, "location": "path" }, "filter": { "description": "Filter request.", "location": "query", "type": "string" }, "orderBy": { "description": "Order by fields for the result.", "type": "string", "location": "query" }, "pageToken": { "type": "string", "description": "Page token received from a previous `ListPrivateConnections` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListPrivateConnections` must match the call that provided the page token.", "location": "query" } }, "httpMethod": "GET", "response": { "$ref": "ListPrivateConnectionsResponse" } }, "delete": { "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "parameters": { "name": { "required": true, "location": "path", "description": "Required. The name of the private connectivity configuration to delete.", "type": "string", "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$" }, "requestId": { "location": "query", "type": "string", "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)." }, "force": { "location": "query", "description": "Optional. If set to true, any child routes that belong to this PrivateConnection will also be deleted.", "type": "boolean" } }, "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}", "parameterOrder": [ "name" ], "id": "datastream.projects.locations.privateConnections.delete", "path": "v1/{+name}", "description": "Use this method to delete a private connectivity configuration.", "response": { "$ref": "Operation" }, "httpMethod": "DELETE" } } }, "connectionProfiles": { "methods": { "list": { "description": "Use this method to list connection profiles created in a project and location.", "path": "v1/{+parent}/connectionProfiles", "httpMethod": "GET", "parameters": { "pageSize": { "format": "int32", "type": "integer", "location": "query", "description": "Maximum number of connection profiles to return. If unspecified, at most 50 connection profiles will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000." }, "parent": { "description": "Required. The parent that owns the collection of connection profiles.", "location": "path", "required": true, "pattern": "^projects/[^/]+/locations/[^/]+$", "type": "string" }, "filter": { "location": "query", "type": "string", "description": "Filter request." }, "pageToken": { "location": "query", "type": "string", "description": "Page token received from a previous `ListConnectionProfiles` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListConnectionProfiles` must match the call that provided the page token." }, "orderBy": { "location": "query", "type": "string", "description": "Order by fields for the result." } }, "id": "datastream.projects.locations.connectionProfiles.list", "response": { "$ref": "ListConnectionProfilesResponse" }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles", "parameterOrder": [ "parent" ] }, "create": { "id": "datastream.projects.locations.connectionProfiles.create", "description": "Use this method to create a connection profile in a project and location.", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "request": { "$ref": "ConnectionProfile" }, "parameters": { "connectionProfileId": { "location": "query", "description": "Required. The connection profile identifier.", "type": "string" }, "validateOnly": { "location": "query", "description": "Optional. Only validate the connection profile, but don't create any resources. The default is false.", "type": "boolean" }, "parent": { "description": "Required. The parent that owns the collection of ConnectionProfiles.", "pattern": "^projects/[^/]+/locations/[^/]+$", "location": "path", "type": "string", "required": true }, "force": { "description": "Optional. Create the connection profile without validating it.", "location": "query", "type": "boolean" }, "requestId": { "type": "string", "location": "query", "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)." } }, "parameterOrder": [ "parent" ], "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles", "path": "v1/{+parent}/connectionProfiles", "response": { "$ref": "Operation" }, "httpMethod": "POST" }, "patch": { "parameters": { "force": { "location": "query", "description": "Optional. Update the connection profile without validating it.", "type": "boolean" }, "name": { "location": "path", "required": true, "type": "string", "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$", "description": "Output only. The resource's name." }, "requestId": { "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).", "type": "string", "location": "query" }, "updateMask": { "description": "Optional. Field mask is used to specify the fields to be overwritten in the ConnectionProfile resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.", "type": "string", "location": "query", "format": "google-fieldmask" }, "validateOnly": { "location": "query", "type": "boolean", "description": "Optional. Only validate the connection profile, but don't update any resources. The default is false." } }, "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}", "path": "v1/{+name}", "parameterOrder": [ "name" ], "id": "datastream.projects.locations.connectionProfiles.patch", "httpMethod": "PATCH", "description": "Use this method to update the parameters of a connection profile.", "response": { "$ref": "Operation" }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "request": { "$ref": "ConnectionProfile" } }, "discover": { "request": { "$ref": "DiscoverConnectionProfileRequest" }, "parameterOrder": [ "parent" ], "parameters": { "parent": { "location": "path", "pattern": "^projects/[^/]+/locations/[^/]+$", "type": "string", "required": true, "description": "Required. The parent resource of the connection profile type. Must be in the format `projects/*/locations/*`." } }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "httpMethod": "POST", "path": "v1/{+parent}/connectionProfiles:discover", "response": { "$ref": "DiscoverConnectionProfileResponse" }, "id": "datastream.projects.locations.connectionProfiles.discover", "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles:discover", "description": "Use this method to discover a connection profile. The discover API call exposes the data objects and metadata belonging to the profile. Typically, a request returns children data objects of a parent data object that's optionally supplied in the request." }, "get": { "httpMethod": "GET", "parameterOrder": [ "name" ], "parameters": { "name": { "type": "string", "description": "Required. The name of the connection profile resource to get.", "location": "path", "required": true, "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$" } }, "description": "Use this method to get details about a connection profile.", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "path": "v1/{+name}", "id": "datastream.projects.locations.connectionProfiles.get", "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}", "response": { "$ref": "ConnectionProfile" } }, "delete": { "parameterOrder": [ "name" ], "httpMethod": "DELETE", "id": "datastream.projects.locations.connectionProfiles.delete", "description": "Use this method to delete a connection profile.", "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}", "response": { "$ref": "Operation" }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "path": "v1/{+name}", "parameters": { "name": { "required": true, "type": "string", "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$", "location": "path", "description": "Required. The name of the connection profile resource to delete." }, "requestId": { "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).", "location": "query", "type": "string" } } } } } }, "methods": { "get": { "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "description": "Gets information about a location.", "parameterOrder": [ "name" ], "parameters": { "name": { "required": true, "pattern": "^projects/[^/]+/locations/[^/]+$", "type": "string", "location": "path", "description": "Resource name for the location." } }, "path": "v1/{+name}", "response": { "$ref": "Location" }, "flatPath": "v1/projects/{projectsId}/locations/{locationsId}", "id": "datastream.projects.locations.get", "httpMethod": "GET" }, "list": { "id": "datastream.projects.locations.list", "parameterOrder": [ "name" ], "parameters": { "pageSize": { "description": "The maximum number of results to return. If not set, the service selects a default.", "type": "integer", "format": "int32", "location": "query" }, "pageToken": { "location": "query", "type": "string", "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page." }, "filter": { "type": "string", "location": "query", "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160)." }, "name": { "required": true, "pattern": "^projects/[^/]+$", "type": "string", "description": "The resource that owns the locations collection, if applicable.", "location": "path" } }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "description": "Lists information about the supported locations for this service.", "flatPath": "v1/projects/{projectsId}/locations", "response": { "$ref": "ListLocationsResponse" }, "httpMethod": "GET", "path": "v1/{+name}/locations" }, "fetchStaticIps": { "parameterOrder": [ "name" ], "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "id": "datastream.projects.locations.fetchStaticIps", "path": "v1/{+name}:fetchStaticIps", "flatPath": "v1/projects/{projectsId}/locations/{locationsId}:fetchStaticIps", "response": { "$ref": "FetchStaticIpsResponse" }, "description": "The FetchStaticIps API call exposes the static IP addresses used by Datastream.", "parameters": { "pageToken": { "description": "A page token, received from a previous `ListStaticIps` call. will likely not be specified.", "type": "string", "location": "query" }, "name": { "required": true, "pattern": "^projects/[^/]+/locations/[^/]+$", "type": "string", "description": "Required. The resource name for the location for which static IPs should be returned. Must be in the format `projects/*/locations/*`.", "location": "path" }, "pageSize": { "location": "query", "type": "integer", "format": "int32", "description": "Maximum number of Ips to return, will likely not be specified." } }, "httpMethod": "GET" } } } } } }, "rootUrl": "https://datastream.googleapis.com/", "kind": "discovery#restDescription", "icons": { "x32": "http://www.google.com/images/icons/product/search-32.gif", "x16": "http://www.google.com/images/icons/product/search-16.gif" }, "id": "datastream:v1", "description": "", "version": "v1", "protocol": "rest", "documentationLink": "https://cloud.google.com/datastream/", "baseUrl": "https://datastream.googleapis.com/", "fullyEncodeReservedExpansion": true, "title": "Datastream API" }
]===]))
