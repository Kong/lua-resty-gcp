local decode = require("cjson").new().decode
return assert(decode([===[
{ "discoveryVersion": "v1", "kind": "discovery#restDescription", "ownerDomain": "google.com", "version": "v2", "auth": { "oauth2": { "scopes": { "https://www.googleapis.com/auth/cloud-translation": { "description": "Translate text from one language to another using Google Translate" }, "https://www.googleapis.com/auth/cloud-platform": { "description": "View and manage your data across Google Cloud Platform services" } } } }, "rootUrl": "https://translation.googleapis.com/", "revision": "20170525", "documentationLink": "https://code.google.com/apis/language/translate/v2/getting_started.html", "description": "The Google Cloud Translation API lets websites and programs integrate with\n Google Translate programmatically.", "resources": { "translations": { "methods": { "list": { "description": "Translates input text, returning translated text.", "scopes": [ "https://www.googleapis.com/auth/cloud-translation", "https://www.googleapis.com/auth/cloud-platform" ], "id": "language.translations.list", "parameters": { "cid": { "description": "The customization id for translate", "repeated": true, "type": "string", "location": "query" }, "source": { "description": "The language of the source text, set to one of the language codes listed in\nLanguage Support. If the source language is not specified, the API will\nattempt to identify the source language automatically and return it within\nthe response.", "location": "query", "type": "string" }, "format": { "enumDescriptions": [ "Specifies the input is in HTML", "Specifies the input is in plain textual format" ], "enum": [ "html", "text" ], "location": "query", "type": "string", "description": "The format of the source text, in either HTML (default) or plain-text. A\nvalue of \"html\" indicates HTML and a value of \"text\" indicates plain-text." }, "target": { "description": "The language to use for translation of the input text, set to one of the\nlanguage codes listed in Language Support.", "location": "query", "type": "string", "required": true }, "q": { "type": "string", "location": "query", "repeated": true, "required": true, "description": "The input text to translate. Repeat this parameter to perform translation\noperations on multiple text inputs." }, "model": { "location": "query", "type": "string", "description": "The `model` type requested for this translation. Valid values are\nlisted in public documentation." } }, "httpMethod": "GET", "path": "v2", "response": { "$ref": "TranslationsListResponse" }, "parameterOrder": [ "q", "target" ] }, "translate": { "id": "language.translations.translate", "description": "Translates input text, returning translated text.", "response": { "$ref": "TranslationsListResponse" }, "parameters": {}, "request": { "$ref": "TranslateTextRequest" }, "path": "v2", "scopes": [ "https://www.googleapis.com/auth/cloud-translation", "https://www.googleapis.com/auth/cloud-platform" ], "parameterOrder": [], "httpMethod": "POST" } } }, "languages": { "methods": { "list": { "scopes": [ "https://www.googleapis.com/auth/cloud-translation", "https://www.googleapis.com/auth/cloud-platform" ], "id": "language.languages.list", "httpMethod": "GET", "parameters": { "target": { "type": "string", "location": "query", "description": "The language to use to return localized, human readable names of supported\nlanguages." }, "model": { "description": "The model type for which supported languages should be returned.", "location": "query", "type": "string" } }, "description": "Returns a list of supported languages for translation.", "response": { "$ref": "LanguagesListResponse" }, "path": "v2/languages" } } }, "detections": { "methods": { "detect": { "request": { "$ref": "DetectLanguageRequest" }, "description": "Detects the language of text within a request.", "response": { "$ref": "DetectionsListResponse" }, "id": "language.detections.detect", "httpMethod": "POST", "scopes": [ "https://www.googleapis.com/auth/cloud-translation", "https://www.googleapis.com/auth/cloud-platform" ], "parameters": {}, "parameterOrder": [], "path": "v2/detect" }, "list": { "id": "language.detections.list", "parameterOrder": [ "q" ], "path": "v2/detect", "scopes": [ "https://www.googleapis.com/auth/cloud-translation", "https://www.googleapis.com/auth/cloud-platform" ], "parameters": { "q": { "required": true, "type": "string", "location": "query", "description": "The input text upon which to perform language detection. Repeat this\nparameter to perform language detection on multiple text inputs.", "repeated": true } }, "httpMethod": "GET", "response": { "$ref": "DetectionsListResponse" }, "description": "Detects the language of text within a request." } } } }, "baseUrl": "https://translation.googleapis.com/language/translate/", "servicePath": "language/translate/", "icons": { "x16": "https://www.google.com/images/icons/product/translate-16.png", "x32": "https://www.google.com/images/icons/product/translate-32.png" }, "parameters": { "fields": { "type": "string", "location": "query", "description": "Selector specifying which fields to include in a partial response." }, "uploadType": { "type": "string", "location": "query", "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")." }, "alt": { "enum": [ "json", "media", "proto" ], "default": "json", "enumDescriptions": [ "Responses with Content-Type of application/json", "Media download with context-dependent Content-Type", "Responses with Content-Type of application/x-protobuf" ], "type": "string", "description": "Data format for response.", "location": "query" }, "quotaUser": { "type": "string", "location": "query", "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided." }, "upload_protocol": { "type": "string", "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").", "location": "query" }, "$.xgafv": { "enum": [ "1", "2" ], "description": "V1 error format.", "enumDescriptions": [ "v1 error format", "v2 error format" ], "type": "string", "location": "query" }, "key": { "location": "query", "type": "string", "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token." }, "prettyPrint": { "default": "true", "description": "Returns response with indentations and line breaks.", "location": "query", "type": "boolean" }, "pp": { "location": "query", "type": "boolean", "description": "Pretty-print response.", "default": "true" }, "bearer_token": { "location": "query", "description": "OAuth bearer token.", "type": "string" }, "oauth_token": { "type": "string", "description": "OAuth 2.0 token for the current user.", "location": "query" }, "access_token": { "type": "string", "location": "query", "description": "OAuth access token." }, "callback": { "location": "query", "type": "string", "description": "JSONP" } }, "ownerName": "Google", "title": "Google Cloud Translation API", "id": "translate:v2", "name": "translate", "batchPath": "batch/translate", "features": [ "dataWrapper" ], "protocol": "rest", "canonicalName": "Translate", "basePath": "/language/translate/", "schemas": { "LanguagesResource": { "id": "LanguagesResource", "type": "object", "properties": { "language": { "description": "Supported language code, generally consisting of its ISO 639-1\nidentifier. (E.g. 'en', 'ja'). In certain cases, BCP-47 codes including\nlanguage + region identifiers are returned (e.g. 'zh-TW' and 'zh-CH')", "type": "string" }, "name": { "description": "Human readable name of the language localized to the target language.", "type": "string" } } }, "TranslationsListResponse": { "type": "object", "properties": { "translations": { "type": "array", "items": { "$ref": "TranslationsResource" }, "description": "Translations contains list of translation results of given text" } }, "id": "TranslationsListResponse", "description": "The main language translation response message." }, "LanguagesListResponse": { "type": "object", "properties": { "languages": { "type": "array", "items": { "$ref": "LanguagesResource" }, "description": "List of source/target languages supported by the translation API. If target parameter is unspecified, the list is sorted by the ASCII code point order of the language code. If target parameter is specified, the list is sorted by the collation order of the language name in the target language." } }, "id": "LanguagesListResponse" }, "DetectionsResource": { "id": "DetectionsResource", "items": { "type": "object", "properties": { "confidence": { "description": "The confidence of the detection result of this language.", "format": "float", "type": "number" }, "isReliable": { "type": "boolean", "description": "A boolean to indicate is the language detection result reliable." }, "language": { "description": "The language we detected.", "type": "string" } } }, "type": "array", "description": "An array of languages which we detect for the given text The most likely language list first." }, "TranslateTextRequest": { "id": "TranslateTextRequest", "description": "The main translation request message for the Cloud Translation API.", "properties": { "target": { "type": "string", "description": "The language to use for translation of the input text, set to one of the\nlanguage codes listed in Language Support." }, "model": { "type": "string", "description": "The `model` type requested for this translation. Valid values are\nlisted in public documentation." }, "source": { "description": "The language of the source text, set to one of the language codes listed in\nLanguage Support. If the source language is not specified, the API will\nattempt to identify the source language automatically and return it within\nthe response.", "type": "string" }, "format": { "description": "The format of the source text, in either HTML (default) or plain-text. A\nvalue of \"html\" indicates HTML and a value of \"text\" indicates plain-text.", "type": "string" }, "q": { "items": { "type": "string" }, "description": "The input text to translate. Repeat this parameter to perform translation\noperations on multiple text inputs.", "type": "array" } }, "type": "object" }, "DetectionsListResponse": { "properties": { "detections": { "type": "array", "items": { "$ref": "DetectionsResource" }, "description": "A detections contains detection results of several text" } }, "type": "object", "id": "DetectionsListResponse" }, "DetectLanguageRequest": { "properties": { "q": { "type": "array", "description": "The input text upon which to perform language detection. Repeat this\nparameter to perform language detection on multiple text inputs.", "items": { "type": "string" } } }, "description": "The request message for language detection.", "type": "object", "id": "DetectLanguageRequest" }, "GetSupportedLanguagesRequest": { "type": "object", "id": "GetSupportedLanguagesRequest", "description": "The request message for discovering supported languages.", "properties": { "target": { "description": "The language to use to return localized, human readable names of supported\nlanguages.", "type": "string" } } }, "TranslationsResource": { "type": "object", "properties": { "translatedText": { "type": "string", "description": "Text translated into the target language." }, "model": { "type": "string", "description": "The `model` type used for this translation. Valid values are\nlisted in public documentation. Can be different from requested `model`.\nPresent only if specific model type was explicitly requested." }, "detectedSourceLanguage": { "type": "string", "description": "The source language of the initial request, detected automatically, if\nno source language was passed within the initial request. If the\nsource language was passed, auto-detection of the language will not\noccur and this field will be empty." } }, "id": "TranslationsResource" } } }
]===]))
