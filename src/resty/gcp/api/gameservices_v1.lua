local decode = require("cjson").new().decode
return assert(decode([===[
{ "mtlsRootUrl": "https://gameservices.mtls.googleapis.com/", "canonicalName": "Game Services", "revision": "20220623", "ownerName": "Google", "version_module": true, "icons": { "x16": "http://www.google.com/images/icons/product/search-16.gif", "x32": "http://www.google.com/images/icons/product/search-32.gif" }, "protocol": "rest", "rootUrl": "https://gameservices.googleapis.com/", "name": "gameservices", "resources": { "projects": { "resources": { "locations": { "resources": { "gameServerDeployments": { "methods": { "get": { "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "response": { "$ref": "GameServerDeployment" }, "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}", "parameters": { "name": { "location": "path", "description": "Required. The name of the game server deployment to retrieve, in the following form: `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}`.", "type": "string", "pattern": "^projects/[^/]+/locations/[^/]+/gameServerDeployments/[^/]+$", "required": true } }, "path": "v1/{+name}", "parameterOrder": [ "name" ], "httpMethod": "GET", "description": "Gets details of a single game server deployment.", "id": "gameservices.projects.locations.gameServerDeployments.get" }, "getIamPolicy": { "path": "v1/{+resource}:getIamPolicy", "response": { "$ref": "Policy" }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "parameterOrder": [ "resource" ], "parameters": { "resource": { "type": "string", "location": "path", "required": true, "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.", "pattern": "^projects/[^/]+/locations/[^/]+/gameServerDeployments/[^/]+$" }, "options.requestedPolicyVersion": { "format": "int32", "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).", "location": "query", "type": "integer" } }, "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}:getIamPolicy", "httpMethod": "GET", "id": "gameservices.projects.locations.gameServerDeployments.getIamPolicy", "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set." }, "list": { "description": "Lists game server deployments in a given project and location.", "response": { "$ref": "ListGameServerDeploymentsResponse" }, "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/gameServerDeployments", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "path": "v1/{+parent}/gameServerDeployments", "parameters": { "filter": { "type": "string", "location": "query", "description": "Optional. The filter to apply to list results (see [Filtering](https://google.aip.dev/160))." }, "parent": { "required": true, "location": "path", "description": "Required. The parent resource name, in the following form: `projects/{project}/locations/{locationId}`.", "pattern": "^projects/[^/]+/locations/[^/]+$", "type": "string" }, "pageToken": { "type": "string", "location": "query", "description": "Optional. The next_page_token value returned from a previous list request, if any." }, "orderBy": { "location": "query", "description": "Optional. Specifies the ordering of results following [Cloud API syntax](https://cloud.google.com/apis/design/design_patterns#sorting_order).", "type": "string" }, "pageSize": { "format": "int32", "location": "query", "type": "integer", "description": "Optional. The maximum number of items to return. If unspecified, the server picks an appropriate default. The server may return fewer items than requested. A caller should only rely on the response's next_page_token to determine if there are more GameServerDeployments left to be queried." } }, "httpMethod": "GET", "id": "gameservices.projects.locations.gameServerDeployments.list", "parameterOrder": [ "parent" ] }, "getRollout": { "path": "v1/{+name}/rollout", "response": { "$ref": "GameServerDeploymentRollout" }, "parameters": { "name": { "location": "path", "pattern": "^projects/[^/]+/locations/[^/]+/gameServerDeployments/[^/]+$", "required": true, "type": "string", "description": "Required. The name of the game server deployment rollout to retrieve, in the following form: `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}/rollout`." } }, "description": "Gets details of a single game server deployment rollout.", "httpMethod": "GET", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}/rollout", "parameterOrder": [ "name" ], "id": "gameservices.projects.locations.gameServerDeployments.getRollout" }, "create": { "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "description": "Creates a new game server deployment in a given project and location.", "parameterOrder": [ "parent" ], "id": "gameservices.projects.locations.gameServerDeployments.create", "parameters": { "deploymentId": { "type": "string", "description": "Required. The ID of the game server deployment resource to create.", "location": "query" }, "parent": { "location": "path", "type": "string", "required": true, "pattern": "^projects/[^/]+/locations/[^/]+$", "description": "Required. The parent resource name, in the following form: `projects/{project}/locations/{locationId}`." } }, "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/gameServerDeployments", "request": { "$ref": "GameServerDeployment" }, "response": { "$ref": "Operation" }, "httpMethod": "POST", "path": "v1/{+parent}/gameServerDeployments" }, "previewRollout": { "id": "gameservices.projects.locations.gameServerDeployments.previewRollout", "httpMethod": "PATCH", "response": { "$ref": "PreviewGameServerDeploymentRolloutResponse" }, "request": { "$ref": "GameServerDeploymentRollout" }, "parameterOrder": [ "name" ], "description": "Previews the game server deployment rollout. This API does not mutate the rollout resource.", "path": "v1/{+name}/rollout:preview", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}/rollout:preview", "parameters": { "previewTime": { "format": "google-datetime", "description": "Optional. The target timestamp to compute the preview. Defaults to the immediately after the proposed rollout completes.", "type": "string", "location": "query" }, "updateMask": { "description": "Optional. The update mask to apply to the resource. At least one path must be supplied in this field. For more information, see the [`FieldMask` definition](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask).", "format": "google-fieldmask", "location": "query", "type": "string" }, "name": { "location": "path", "pattern": "^projects/[^/]+/locations/[^/]+/gameServerDeployments/[^/]+$", "required": true, "description": "The resource name of the game server deployment rollout, in the following form: `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}/rollout`. For example, `projects/my-project/locations/global/gameServerDeployments/my-deployment/rollout`.", "type": "string" } } }, "delete": { "httpMethod": "DELETE", "response": { "$ref": "Operation" }, "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}", "description": "Deletes a single game server deployment.", "id": "gameservices.projects.locations.gameServerDeployments.delete", "parameterOrder": [ "name" ], "path": "v1/{+name}", "parameters": { "name": { "description": "Required. The name of the game server deployment to delete, in the following form: `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}`.", "type": "string", "required": true, "location": "path", "pattern": "^projects/[^/]+/locations/[^/]+/gameServerDeployments/[^/]+$" } }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ] }, "setIamPolicy": { "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}:setIamPolicy", "parameters": { "resource": { "location": "path", "pattern": "^projects/[^/]+/locations/[^/]+/gameServerDeployments/[^/]+$", "required": true, "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.", "type": "string" } }, "parameterOrder": [ "resource" ], "path": "v1/{+resource}:setIamPolicy", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.", "httpMethod": "POST", "response": { "$ref": "Policy" }, "id": "gameservices.projects.locations.gameServerDeployments.setIamPolicy", "request": { "$ref": "SetIamPolicyRequest" } }, "patch": { "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "id": "gameservices.projects.locations.gameServerDeployments.patch", "parameterOrder": [ "name" ], "path": "v1/{+name}", "description": "Patches a game server deployment.", "parameters": { "name": { "type": "string", "required": true, "location": "path", "description": "The resource name of the game server deployment, in the following form: `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}`. For example, `projects/my-project/locations/global/gameServerDeployments/my-deployment`.", "pattern": "^projects/[^/]+/locations/[^/]+/gameServerDeployments/[^/]+$" }, "updateMask": { "format": "google-fieldmask", "description": "Required. The update mask to apply to the resource. At least one path must be supplied in this field. For more information, see the [`FieldMask` definition](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask).", "type": "string", "location": "query" } }, "response": { "$ref": "Operation" }, "request": { "$ref": "GameServerDeployment" }, "httpMethod": "PATCH" }, "fetchDeploymentState": { "request": { "$ref": "FetchDeploymentStateRequest" }, "description": "Retrieves information about the current state of the game server deployment. Gathers all the Agones fleets and Agones autoscalers, including fleets running an older version of the game server deployment.", "id": "gameservices.projects.locations.gameServerDeployments.fetchDeploymentState", "parameterOrder": [ "name" ], "httpMethod": "POST", "parameters": { "name": { "description": "Required. The name of the game server deployment, in the following form: `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}`.", "location": "path", "type": "string", "pattern": "^projects/[^/]+/locations/[^/]+/gameServerDeployments/[^/]+$", "required": true } }, "path": "v1/{+name}:fetchDeploymentState", "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}:fetchDeploymentState", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "response": { "$ref": "FetchDeploymentStateResponse" } }, "testIamPermissions": { "parameters": { "resource": { "pattern": "^projects/[^/]+/locations/[^/]+/gameServerDeployments/[^/]+$", "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.", "required": true, "location": "path", "type": "string" } }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "httpMethod": "POST", "parameterOrder": [ "resource" ], "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}:testIamPermissions", "id": "gameservices.projects.locations.gameServerDeployments.testIamPermissions", "request": { "$ref": "TestIamPermissionsRequest" }, "path": "v1/{+resource}:testIamPermissions", "response": { "$ref": "TestIamPermissionsResponse" }, "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning." }, "updateRollout": { "id": "gameservices.projects.locations.gameServerDeployments.updateRollout", "path": "v1/{+name}/rollout", "response": { "$ref": "Operation" }, "httpMethod": "PATCH", "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}/rollout", "parameterOrder": [ "name" ], "parameters": { "updateMask": { "description": "Required. The update mask to apply to the resource. At least one path must be supplied in this field. For more information, see the [`FieldMask` definition](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask).", "format": "google-fieldmask", "type": "string", "location": "query" }, "name": { "type": "string", "description": "The resource name of the game server deployment rollout, in the following form: `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}/rollout`. For example, `projects/my-project/locations/global/gameServerDeployments/my-deployment/rollout`.", "location": "path", "required": true, "pattern": "^projects/[^/]+/locations/[^/]+/gameServerDeployments/[^/]+$" } }, "description": "Patches a single game server deployment rollout. The method will not return an error if the update does not affect any existing realms. For example, the following cases will not return an error: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh The default_game_server_config is changed but all existing realms use the override. LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh A non-existing realm is explicitly called out in the game_server_config_overrides field.", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "request": { "$ref": "GameServerDeploymentRollout" } } }, "resources": { "configs": { "methods": { "create": { "request": { "$ref": "GameServerConfig" }, "id": "gameservices.projects.locations.gameServerDeployments.configs.create", "httpMethod": "POST", "response": { "$ref": "Operation" }, "description": "Creates a new game server config in a given project, location, and game server deployment. Game server configs are immutable, and are not applied until referenced in the game server deployment rollout resource.", "path": "v1/{+parent}/configs", "parameters": { "parent": { "type": "string", "pattern": "^projects/[^/]+/locations/[^/]+/gameServerDeployments/[^/]+$", "description": "Required. The parent resource name, in the following form: `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}/`.", "required": true, "location": "path" }, "configId": { "location": "query", "type": "string", "description": "Required. The ID of the game server config resource to create." } }, "parameterOrder": [ "parent" ], "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}/configs" }, "list": { "parameters": { "orderBy": { "description": "Optional. Specifies the ordering of results following [Cloud API syntax](https://cloud.google.com/apis/design/design_patterns#sorting_order).", "type": "string", "location": "query" }, "filter": { "type": "string", "location": "query", "description": "Optional. The filter to apply to list results (see [Filtering](https://google.aip.dev/160))." }, "pageToken": { "type": "string", "location": "query", "description": "Optional. The next_page_token value returned from a previous list request, if any." }, "parent": { "required": true, "type": "string", "location": "path", "description": "Required. The parent resource name, in the following form: `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}/configs/*`.", "pattern": "^projects/[^/]+/locations/[^/]+/gameServerDeployments/[^/]+$" }, "pageSize": { "type": "integer", "description": "Optional. The maximum number of items to return. If unspecified, the server picks an appropriate default. The server may return fewer items than requested. A caller should only rely on response's next_page_token to determine if there are more GameServerConfigs left to be queried.", "format": "int32", "location": "query" } }, "description": "Lists game server configs in a given project, location, and game server deployment.", "httpMethod": "GET", "parameterOrder": [ "parent" ], "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}/configs", "path": "v1/{+parent}/configs", "id": "gameservices.projects.locations.gameServerDeployments.configs.list", "response": { "$ref": "ListGameServerConfigsResponse" }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ] }, "get": { "description": "Gets details of a single game server config.", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "response": { "$ref": "GameServerConfig" }, "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}/configs/{configsId}", "parameterOrder": [ "name" ], "parameters": { "name": { "type": "string", "required": true, "pattern": "^projects/[^/]+/locations/[^/]+/gameServerDeployments/[^/]+/configs/[^/]+$", "description": "Required. The name of the game server config to retrieve, in the following form: `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}/configs/{configId}`.", "location": "path" } }, "httpMethod": "GET", "path": "v1/{+name}", "id": "gameservices.projects.locations.gameServerDeployments.configs.get" }, "delete": { "path": "v1/{+name}", "response": { "$ref": "Operation" }, "id": "gameservices.projects.locations.gameServerDeployments.configs.delete", "description": "Deletes a single game server config. The deletion fails if the game server config is referenced in a game server deployment rollout.", "parameters": { "name": { "location": "path", "required": true, "description": "Required. The name of the game server config to delete, in the following form: `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}/configs/{configId}`.", "pattern": "^projects/[^/]+/locations/[^/]+/gameServerDeployments/[^/]+/configs/[^/]+$", "type": "string" } }, "parameterOrder": [ "name" ], "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}/configs/{configsId}", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "httpMethod": "DELETE" } } } } }, "realms": { "methods": { "create": { "id": "gameservices.projects.locations.realms.create", "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/realms", "httpMethod": "POST", "request": { "$ref": "Realm" }, "path": "v1/{+parent}/realms", "response": { "$ref": "Operation" }, "parameterOrder": [ "parent" ], "description": "Creates a new realm in a given project and location.", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "parameters": { "realmId": { "type": "string", "description": "Required. The ID of the realm resource to create.", "location": "query" }, "parent": { "description": "Required. The parent resource name, in the following form: `projects/{project}/locations/{locationId}`.", "pattern": "^projects/[^/]+/locations/[^/]+$", "type": "string", "required": true, "location": "path" } } }, "delete": { "parameterOrder": [ "name" ], "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}", "response": { "$ref": "Operation" }, "httpMethod": "DELETE", "path": "v1/{+name}", "description": "Deletes a single realm.", "parameters": { "name": { "type": "string", "location": "path", "pattern": "^projects/[^/]+/locations/[^/]+/realms/[^/]+$", "description": "Required. The name of the realm to delete, in the following form: `projects/{project}/locations/{locationId}/realms/{realmId}`.", "required": true } }, "id": "gameservices.projects.locations.realms.delete", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ] }, "get": { "parameters": { "name": { "required": true, "location": "path", "description": "Required. The name of the realm to retrieve, in the following form: `projects/{project}/locations/{locationId}/realms/{realmId}`.", "pattern": "^projects/[^/]+/locations/[^/]+/realms/[^/]+$", "type": "string" } }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "httpMethod": "GET", "path": "v1/{+name}", "id": "gameservices.projects.locations.realms.get", "parameterOrder": [ "name" ], "description": "Gets details of a single realm.", "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}", "response": { "$ref": "Realm" } }, "previewUpdate": { "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "request": { "$ref": "Realm" }, "description": "Previews patches to a single realm.", "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}:previewUpdate", "httpMethod": "PATCH", "parameterOrder": [ "name" ], "id": "gameservices.projects.locations.realms.previewUpdate", "path": "v1/{+name}:previewUpdate", "parameters": { "name": { "pattern": "^projects/[^/]+/locations/[^/]+/realms/[^/]+$", "location": "path", "type": "string", "required": true, "description": "The resource name of the realm, in the following form: `projects/{project}/locations/{locationId}/realms/{realmId}`. For example, `projects/my-project/locations/global/realms/my-realm`." }, "updateMask": { "description": "Required. The update mask to apply to the resource. For more information, see the [`FieldMask` definition](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask).", "type": "string", "format": "google-fieldmask", "location": "query" }, "previewTime": { "type": "string", "format": "google-datetime", "description": "Optional. The target timestamp to compute the preview.", "location": "query" } }, "response": { "$ref": "PreviewRealmUpdateResponse" } }, "patch": { "description": "Patches a single realm.", "response": { "$ref": "Operation" }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "id": "gameservices.projects.locations.realms.patch", "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}", "path": "v1/{+name}", "parameters": { "updateMask": { "location": "query", "format": "google-fieldmask", "description": "Required. The update mask to apply to the resource. For more information, see the [`FieldMask` definition](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask).", "type": "string" }, "name": { "pattern": "^projects/[^/]+/locations/[^/]+/realms/[^/]+$", "description": "The resource name of the realm, in the following form: `projects/{project}/locations/{locationId}/realms/{realmId}`. For example, `projects/my-project/locations/global/realms/my-realm`.", "type": "string", "location": "path", "required": true } }, "request": { "$ref": "Realm" }, "parameterOrder": [ "name" ], "httpMethod": "PATCH" }, "list": { "parameters": { "pageSize": { "type": "integer", "description": "Optional. The maximum number of items to return. If unspecified, the server picks an appropriate default. The server may return fewer items than requested. A caller should only rely on the response's next_page_token to determine if there are more realms left to be queried.", "format": "int32", "location": "query" }, "pageToken": { "type": "string", "description": "Optional. The next_page_token value returned from a previous list request, if any.", "location": "query" }, "orderBy": { "type": "string", "description": "Optional. Specifies the ordering of results following [Cloud API syntax](https://cloud.google.com/apis/design/design_patterns#sorting_order).", "location": "query" }, "filter": { "type": "string", "description": "Optional. The filter to apply to list results (see [Filtering](https://google.aip.dev/160)).", "location": "query" }, "parent": { "required": true, "description": "Required. The parent resource name, in the following form: `projects/{project}/locations/{locationId}`.", "location": "path", "type": "string", "pattern": "^projects/[^/]+/locations/[^/]+$" } }, "path": "v1/{+parent}/realms", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "response": { "$ref": "ListRealmsResponse" }, "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/realms", "description": "Lists realms in a given project and location.", "id": "gameservices.projects.locations.realms.list", "httpMethod": "GET", "parameterOrder": [ "parent" ] } }, "resources": { "gameServerClusters": { "methods": { "delete": { "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}/gameServerClusters/{gameServerClustersId}", "response": { "$ref": "Operation" }, "path": "v1/{+name}", "parameters": { "name": { "type": "string", "pattern": "^projects/[^/]+/locations/[^/]+/realms/[^/]+/gameServerClusters/[^/]+$", "required": true, "location": "path", "description": "Required. The name of the game server cluster to delete, in the following form: `projects/{project}/locations/{locationId}/gameServerClusters/{gameServerClusterId}`." } }, "parameterOrder": [ "name" ], "httpMethod": "DELETE", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "id": "gameservices.projects.locations.realms.gameServerClusters.delete", "description": "Deletes a single game server cluster." }, "previewCreate": { "parameterOrder": [ "parent" ], "description": "Previews creation of a new game server cluster in a given project and location.", "request": { "$ref": "GameServerCluster" }, "path": "v1/{+parent}/gameServerClusters:previewCreate", "parameters": { "gameServerClusterId": { "location": "query", "description": "Required. The ID of the game server cluster resource to create.", "type": "string" }, "previewTime": { "description": "Optional. The target timestamp to compute the preview.", "location": "query", "format": "google-datetime", "type": "string" }, "view": { "enum": [ "GAME_SERVER_CLUSTER_VIEW_UNSPECIFIED", "BASIC", "FULL" ], "enumDescriptions": [ "If the value is not set, Google Cloud Game Servers defaults to the `BASIC` view.", "Includes basic information of a GameServerCluster resource and omits `cluster_state`. This is the default value (for methods ListGameServerClusters, GetGameServerCluster, and PreviewCreateGameServerCluster).", "Include basic information of a GameServerCluster resource as well as `cluster_state`." ], "description": "Optional. This field is deprecated. Preview will always return KubernetesClusterState.", "location": "query", "type": "string" }, "parent": { "type": "string", "required": true, "pattern": "^projects/[^/]+/locations/[^/]+/realms/[^/]+$", "description": "Required. The parent resource name, in the following form: `projects/{project}/locations/{locationId}/realms/{realmId}`.", "location": "path" } }, "response": { "$ref": "PreviewCreateGameServerClusterResponse" }, "httpMethod": "POST", "id": "gameservices.projects.locations.realms.gameServerClusters.previewCreate", "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}/gameServerClusters:previewCreate", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ] }, "patch": { "parameters": { "name": { "description": "Required. The resource name of the game server cluster, in the following form: `projects/{project}/locations/{locationId}/realms/{realmId}/gameServerClusters/{gameServerClusterId}`. For example, `projects/my-project/locations/global/realms/zanzibar/gameServerClusters/my-gke-cluster`.", "pattern": "^projects/[^/]+/locations/[^/]+/realms/[^/]+/gameServerClusters/[^/]+$", "type": "string", "required": true, "location": "path" }, "updateMask": { "type": "string", "format": "google-fieldmask", "location": "query", "description": "Required. The update mask to apply to the resource. At least one path must be supplied in this field. For more information, see the [`FieldMask` definition](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask)." } }, "response": { "$ref": "Operation" }, "id": "gameservices.projects.locations.realms.gameServerClusters.patch", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "parameterOrder": [ "name" ], "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}/gameServerClusters/{gameServerClustersId}", "path": "v1/{+name}", "request": { "$ref": "GameServerCluster" }, "description": "Patches a single game server cluster.", "httpMethod": "PATCH" }, "previewDelete": { "response": { "$ref": "PreviewDeleteGameServerClusterResponse" }, "id": "gameservices.projects.locations.realms.gameServerClusters.previewDelete", "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}/gameServerClusters/{gameServerClustersId}:previewDelete", "path": "v1/{+name}:previewDelete", "parameterOrder": [ "name" ], "description": "Previews deletion of a single game server cluster.", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "httpMethod": "DELETE", "parameters": { "name": { "description": "Required. The name of the game server cluster to delete, in the following form: `projects/{project}/locations/{locationId}/gameServerClusters/{gameServerClusterId}`.", "required": true, "type": "string", "pattern": "^projects/[^/]+/locations/[^/]+/realms/[^/]+/gameServerClusters/[^/]+$", "location": "path" }, "previewTime": { "format": "google-datetime", "description": "Optional. The target timestamp to compute the preview.", "location": "query", "type": "string" } } }, "list": { "parameters": { "pageToken": { "description": "Optional. The next_page_token value returned from a previous list request, if any.", "location": "query", "type": "string" }, "orderBy": { "description": "Optional. Specifies the ordering of results following [Cloud API syntax](https://cloud.google.com/apis/design/design_patterns#sorting_order).", "type": "string", "location": "query" }, "parent": { "type": "string", "location": "path", "required": true, "description": "Required. The parent resource name, in the following form: `projects/{project}/locations/{locationId}/realms/{realmId}`.", "pattern": "^projects/[^/]+/locations/[^/]+/realms/[^/]+$" }, "filter": { "description": "Optional. The filter to apply to list results (see [Filtering](https://google.aip.dev/160)).", "type": "string", "location": "query" }, "pageSize": { "location": "query", "description": "Optional. The maximum number of items to return. If unspecified, the server picks an appropriate default. The server may return fewer items than requested. A caller should only rely on response's next_page_token to determine if there are more GameServerClusters left to be queried.", "format": "int32", "type": "integer" }, "view": { "description": "Optional. View for the returned GameServerCluster objects. When `FULL` is specified, the `cluster_state` field is also returned in the GameServerCluster object, which includes the state of the referenced Kubernetes cluster such as versions and provider info. The default/unset value is `GAME_SERVER_CLUSTER_VIEW_UNSPECIFIED`, the same as `BASIC`, which does not return the `cluster_state` field.", "enum": [ "GAME_SERVER_CLUSTER_VIEW_UNSPECIFIED", "BASIC", "FULL" ], "type": "string", "location": "query", "enumDescriptions": [ "If the value is not set, Google Cloud Game Servers defaults to the `BASIC` view.", "Includes basic information of a GameServerCluster resource and omits `cluster_state`. This is the default value (for methods ListGameServerClusters, GetGameServerCluster, and PreviewCreateGameServerCluster).", "Include basic information of a GameServerCluster resource as well as `cluster_state`." ] } }, "response": { "$ref": "ListGameServerClustersResponse" }, "httpMethod": "GET", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "id": "gameservices.projects.locations.realms.gameServerClusters.list", "parameterOrder": [ "parent" ], "description": "Lists game server clusters in a given project and location.", "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}/gameServerClusters", "path": "v1/{+parent}/gameServerClusters" }, "get": { "id": "gameservices.projects.locations.realms.gameServerClusters.get", "path": "v1/{+name}", "response": { "$ref": "GameServerCluster" }, "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}/gameServerClusters/{gameServerClustersId}", "parameterOrder": [ "name" ], "httpMethod": "GET", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "parameters": { "view": { "description": "Optional. View for the returned GameServerCluster objects. When `FULL` is specified, the `cluster_state` field is also returned in the GameServerCluster object, which includes the state of the referenced Kubernetes cluster such as versions and provider info. The default/unset value is `GAME_SERVER_CLUSTER_VIEW_UNSPECIFIED`, the same as `BASIC`, which does not return the `cluster_state` field.", "enum": [ "GAME_SERVER_CLUSTER_VIEW_UNSPECIFIED", "BASIC", "FULL" ], "type": "string", "enumDescriptions": [ "If the value is not set, Google Cloud Game Servers defaults to the `BASIC` view.", "Includes basic information of a GameServerCluster resource and omits `cluster_state`. This is the default value (for methods ListGameServerClusters, GetGameServerCluster, and PreviewCreateGameServerCluster).", "Include basic information of a GameServerCluster resource as well as `cluster_state`." ], "location": "query" }, "name": { "location": "path", "pattern": "^projects/[^/]+/locations/[^/]+/realms/[^/]+/gameServerClusters/[^/]+$", "required": true, "description": "Required. The name of the game server cluster to retrieve, in the following form: `projects/{project}/locations/{locationId}/realms/{realmId}/gameServerClusters/{gameServerClusterId}`.", "type": "string" } }, "description": "Gets details of a single game server cluster." }, "previewUpdate": { "httpMethod": "PATCH", "request": { "$ref": "GameServerCluster" }, "parameterOrder": [ "name" ], "description": "Previews updating a GameServerCluster.", "response": { "$ref": "PreviewUpdateGameServerClusterResponse" }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "path": "v1/{+name}:previewUpdate", "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}/gameServerClusters/{gameServerClustersId}:previewUpdate", "id": "gameservices.projects.locations.realms.gameServerClusters.previewUpdate", "parameters": { "previewTime": { "type": "string", "description": "Optional. The target timestamp to compute the preview.", "location": "query", "format": "google-datetime" }, "updateMask": { "format": "google-fieldmask", "location": "query", "description": "Required. Mask of fields to update. At least one path must be supplied in this field. For more information, see the [`FieldMask` definition](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask).", "type": "string" }, "name": { "type": "string", "required": true, "pattern": "^projects/[^/]+/locations/[^/]+/realms/[^/]+/gameServerClusters/[^/]+$", "description": "Required. The resource name of the game server cluster, in the following form: `projects/{project}/locations/{locationId}/realms/{realmId}/gameServerClusters/{gameServerClusterId}`. For example, `projects/my-project/locations/global/realms/zanzibar/gameServerClusters/my-gke-cluster`.", "location": "path" } } }, "create": { "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}/gameServerClusters", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "id": "gameservices.projects.locations.realms.gameServerClusters.create", "parameterOrder": [ "parent" ], "request": { "$ref": "GameServerCluster" }, "httpMethod": "POST", "path": "v1/{+parent}/gameServerClusters", "response": { "$ref": "Operation" }, "description": "Creates a new game server cluster in a given project and location.", "parameters": { "gameServerClusterId": { "location": "query", "description": "Required. The ID of the game server cluster resource to create.", "type": "string" }, "parent": { "required": true, "type": "string", "description": "Required. The parent resource name, in the following form: `projects/{project}/locations/{locationId}/realms/{realmId}`.", "location": "path", "pattern": "^projects/[^/]+/locations/[^/]+/realms/[^/]+$" } } } } } } }, "operations": { "methods": { "delete": { "parameters": { "name": { "type": "string", "required": true, "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$", "location": "path", "description": "The name of the operation resource to be deleted." } }, "id": "gameservices.projects.locations.operations.delete", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "parameterOrder": [ "name" ], "path": "v1/{+name}", "httpMethod": "DELETE", "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.", "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}", "response": { "$ref": "Empty" } }, "get": { "id": "gameservices.projects.locations.operations.get", "parameterOrder": [ "name" ], "response": { "$ref": "Operation" }, "path": "v1/{+name}", "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}", "httpMethod": "GET", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "parameters": { "name": { "type": "string", "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$", "required": true, "location": "path", "description": "The name of the operation resource." } }, "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service." }, "cancel": { "id": "gameservices.projects.locations.operations.cancel", "path": "v1/{+name}:cancel", "parameterOrder": [ "name" ], "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel", "httpMethod": "POST", "parameters": { "name": { "type": "string", "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$", "required": true, "location": "path", "description": "The name of the operation resource to be cancelled." } }, "response": { "$ref": "Empty" }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.", "request": { "$ref": "CancelOperationRequest" } }, "list": { "httpMethod": "GET", "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.", "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations", "path": "v1/{+name}/operations", "response": { "$ref": "ListOperationsResponse" }, "parameters": { "pageToken": { "location": "query", "description": "The standard list page token.", "type": "string" }, "name": { "location": "path", "required": true, "type": "string", "description": "The name of the operation's parent resource.", "pattern": "^projects/[^/]+/locations/[^/]+$" }, "filter": { "location": "query", "type": "string", "description": "The standard list filter." }, "pageSize": { "description": "The standard list page size.", "format": "int32", "type": "integer", "location": "query" } }, "id": "gameservices.projects.locations.operations.list", "parameterOrder": [ "name" ], "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ] } } } }, "methods": { "get": { "id": "gameservices.projects.locations.get", "flatPath": "v1/projects/{projectsId}/locations/{locationsId}", "parameterOrder": [ "name" ], "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "path": "v1/{+name}", "httpMethod": "GET", "parameters": { "name": { "required": true, "type": "string", "location": "path", "pattern": "^projects/[^/]+/locations/[^/]+$", "description": "Resource name for the location." } }, "description": "Gets information about a location.", "response": { "$ref": "Location" } }, "list": { "id": "gameservices.projects.locations.list", "parameterOrder": [ "name" ], "path": "v1/{+name}/locations", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "httpMethod": "GET", "response": { "$ref": "ListLocationsResponse" }, "description": "Lists information about the supported locations for this service.", "parameters": { "filter": { "type": "string", "location": "query", "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160)." }, "name": { "type": "string", "location": "path", "pattern": "^projects/[^/]+$", "description": "The resource that owns the locations collection, if applicable.", "required": true }, "pageSize": { "description": "The maximum number of results to return. If not set, the service selects a default.", "type": "integer", "format": "int32", "location": "query" }, "pageToken": { "type": "string", "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.", "location": "query" }, "includeUnrevealedLocations": { "description": "If true, the returned list will include locations which are not yet revealed.", "type": "boolean", "location": "query" } }, "flatPath": "v1/projects/{projectsId}/locations" } } } } } }, "discoveryVersion": "v1", "baseUrl": "https://gameservices.googleapis.com/", "ownerDomain": "google.com", "version": "v1", "description": "Deploy and manage infrastructure for global multiplayer gaming experiences.", "title": "Game Services API", "parameters": { "quotaUser": { "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", "type": "string", "location": "query" }, "alt": { "enum": [ "json", "media", "proto" ], "enumDescriptions": [ "Responses with Content-Type of application/json", "Media download with context-dependent Content-Type", "Responses with Content-Type of application/x-protobuf" ], "description": "Data format for response.", "default": "json", "type": "string", "location": "query" }, "oauth_token": { "description": "OAuth 2.0 token for the current user.", "type": "string", "location": "query" }, "callback": { "type": "string", "description": "JSONP", "location": "query" }, "$.xgafv": { "enum": [ "1", "2" ], "enumDescriptions": [ "v1 error format", "v2 error format" ], "type": "string", "description": "V1 error format.", "location": "query" }, "uploadType": { "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", "type": "string", "location": "query" }, "fields": { "location": "query", "description": "Selector specifying which fields to include in a partial response.", "type": "string" }, "upload_protocol": { "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").", "type": "string", "location": "query" }, "prettyPrint": { "location": "query", "default": "true", "description": "Returns response with indentations and line breaks.", "type": "boolean" }, "access_token": { "location": "query", "description": "OAuth access token.", "type": "string" }, "key": { "location": "query", "type": "string", "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token." } }, "basePath": "", "schemas": { "PreviewUpdateGameServerClusterResponse": { "id": "PreviewUpdateGameServerClusterResponse", "type": "object", "description": "Response message for GameServerClustersService.PreviewUpdateGameServerCluster", "properties": { "etag": { "type": "string", "description": "The ETag of the game server cluster." }, "targetState": { "description": "The target state.", "$ref": "TargetState" } } }, "OperationStatus": { "id": "OperationStatus", "type": "object", "properties": { "done": { "readOnly": true, "description": "Output only. Whether the operation is done or still in progress.", "type": "boolean" }, "errorMessage": { "description": "The human-readable error message.", "type": "string" }, "errorCode": { "description": "The error code in case of failures.", "type": "string", "enum": [ "ERROR_CODE_UNSPECIFIED", "INTERNAL_ERROR", "PERMISSION_DENIED", "CLUSTER_CONNECTION" ], "enumDescriptions": [ "", "", "", "" ] } } }, "LabelSelector": { "id": "LabelSelector", "description": "The label selector, used to group labels on the resources.", "properties": { "labels": { "type": "object", "additionalProperties": { "type": "string" }, "description": "Resource labels for this selector." } }, "type": "object" }, "GameServerDeployment": { "description": "A game server deployment resource.", "id": "GameServerDeployment", "properties": { "createTime": { "readOnly": true, "format": "google-datetime", "type": "string", "description": "Output only. The creation time." }, "updateTime": { "format": "google-datetime", "readOnly": true, "type": "string", "description": "Output only. The last-modified time." }, "name": { "type": "string", "description": "The resource name of the game server deployment, in the following form: `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}`. For example, `projects/my-project/locations/global/gameServerDeployments/my-deployment`." }, "etag": { "description": "Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.", "type": "string" }, "description": { "description": "Human readable description of the game server deployment.", "type": "string" }, "labels": { "type": "object", "additionalProperties": { "type": "string" }, "description": "The labels associated with this game server deployment. Each label is a key-value pair." } }, "type": "object" }, "ScalingConfig": { "id": "ScalingConfig", "properties": { "selectors": { "items": { "$ref": "LabelSelector" }, "type": "array", "description": "Labels used to identify the game server clusters to which this Agones scaling config applies. A game server cluster is subject to this Agones scaling config if its labels match any of the selector entries." }, "schedules": { "type": "array", "description": "The schedules to which this scaling config applies.", "items": { "$ref": "Schedule" } }, "fleetAutoscalerSpec": { "type": "string", "description": "Required. Agones fleet autoscaler spec (see [example spec](https://agones.dev/site/docs/reference/fleetautoscaler/))." }, "name": { "description": "Required. The name of the scaling config.", "type": "string" } }, "description": "Autoscaling config for an Agones fleet.", "type": "object" }, "ListGameServerDeploymentsResponse": { "properties": { "nextPageToken": { "type": "string", "description": "Token to retrieve the next page of results, or empty if there are no more results in the list." }, "unreachable": { "items": { "type": "string" }, "description": "List of locations that could not be reached.", "type": "array" }, "gameServerDeployments": { "items": { "$ref": "GameServerDeployment" }, "description": "The list of game server deployments.", "type": "array" } }, "description": "Response message for GameServerDeploymentsService.ListGameServerDeployments.", "id": "ListGameServerDeploymentsResponse", "type": "object" }, "Status": { "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).", "type": "object", "properties": { "message": { "type": "string", "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client." }, "code": { "format": "int32", "description": "The status code, which should be an enum value of google.rpc.Code.", "type": "integer" }, "details": { "items": { "additionalProperties": { "description": "Properties of the object. Contains field @type with type URL.", "type": "any" }, "type": "object" }, "type": "array", "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use." } }, "id": "Status" }, "Policy": { "id": "Policy", "type": "object", "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).", "properties": { "etag": { "format": "byte", "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.", "type": "string" }, "bindings": { "type": "array", "items": { "$ref": "Binding" }, "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`." }, "version": { "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh Getting a policy that includes a conditional role binding LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh Adding a conditional role binding to a policy LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh Changing a conditional role binding in a policy LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).", "format": "int32", "type": "integer" }, "auditConfigs": { "description": "Specifies cloud audit logging configuration for this policy.", "items": { "$ref": "AuditConfig" }, "type": "array" }, "rules": { "type": "array", "items": { "$ref": "Rule" }, "description": "If more than one rule is specified, the rules are applied in the following manner: - All matching LOG rules are always applied. - If any DENY/DENY_WITH_LOG rule matches, permission is denied. Logging will be applied if one or more matching rule requires logging. - Otherwise, if any ALLOW/ALLOW_WITH_LOG rule matches, permission is granted. Logging will be applied if one or more matching rule requires logging. - Otherwise, if no rule applies, permission is denied." } } }, "Schedule": { "properties": { "cronJobDuration": { "description": "The duration for the cron job event. The duration of the event is effective after the cron job's start time.", "type": "string", "format": "google-duration" }, "cronSpec": { "type": "string", "description": "The cron definition of the scheduled event. See https://en.wikipedia.org/wiki/Cron. The cron spec specifies the local time as defined by the realm." }, "endTime": { "type": "string", "format": "google-datetime", "description": "The end time of the event." }, "startTime": { "format": "google-datetime", "type": "string", "description": "The start time of the event." } }, "type": "object", "description": "The schedule of a recurring or one time event. The event's time span is specified by start_time and end_time. If the scheduled event's timespan is larger than cron_spec added with cron_job_duration, the event is recurring. If only cron_spec and cron_job_duration are specified, the event starts at the local time specified by cron_spec, and is recurring. ``` start_time|-------[cron job]-------[cron job]-------[cron job]---|end_time cron job: cron spec start time + duration ```", "id": "Schedule" }, "TargetFleet": { "type": "object", "description": "Target Agones fleet specification.", "properties": { "name": { "description": "The name of the Agones fleet.", "type": "string" }, "specSource": { "$ref": "SpecSource", "description": "Encapsulates the source of the Agones fleet spec. The Agones fleet spec source." } }, "id": "TargetFleet" }, "TargetFleetDetails": { "id": "TargetFleetDetails", "description": "Details of the target Agones fleet.", "type": "object", "properties": { "fleet": { "description": "Reference to target Agones fleet.", "$ref": "TargetFleet" }, "autoscaler": { "$ref": "TargetFleetAutoscaler", "description": "Reference to target Agones fleet autoscaling policy." } } }, "GameServerDeploymentRollout": { "id": "GameServerDeploymentRollout", "properties": { "updateTime": { "readOnly": true, "format": "google-datetime", "type": "string", "description": "Output only. The last-modified time." }, "etag": { "type": "string", "description": "ETag of the resource." }, "createTime": { "format": "google-datetime", "description": "Output only. The creation time.", "readOnly": true, "type": "string" }, "name": { "type": "string", "description": "The resource name of the game server deployment rollout, in the following form: `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}/rollout`. For example, `projects/my-project/locations/global/gameServerDeployments/my-deployment/rollout`." }, "defaultGameServerConfig": { "description": "The default game server config is applied to all realms unless overridden in the rollout. For example, `projects/my-project/locations/global/gameServerDeployments/my-game/configs/my-config`.", "type": "string" }, "gameServerConfigOverrides": { "description": "Contains the game server config rollout overrides. Overrides are processed in the order they are listed. Once a match is found for a realm, the rest of the list is not processed.", "items": { "$ref": "GameServerConfigOverride" }, "type": "array" } }, "description": "The game server deployment rollout which represents the desired rollout state.", "type": "object" }, "TargetState": { "id": "TargetState", "properties": { "details": { "items": { "$ref": "TargetDetails" }, "description": "Details about Agones fleets.", "type": "array" } }, "type": "object", "description": "Encapsulates the Target state." }, "GameServerConfig": { "type": "object", "id": "GameServerConfig", "properties": { "createTime": { "format": "google-datetime", "type": "string", "description": "Output only. The creation time.", "readOnly": true }, "fleetConfigs": { "description": "FleetConfig contains a list of Agones fleet specs. Only one FleetConfig is allowed.", "type": "array", "items": { "$ref": "FleetConfig" } }, "name": { "description": "The resource name of the game server config, in the following form: `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}/configs/{configId}`. For example, `projects/my-project/locations/global/gameServerDeployments/my-game/configs/my-config`.", "type": "string" }, "description": { "type": "string", "description": "The description of the game server config." }, "labels": { "additionalProperties": { "type": "string" }, "type": "object", "description": "The labels associated with this game server config. Each label is a key-value pair." }, "scalingConfigs": { "items": { "$ref": "ScalingConfig" }, "description": "The autoscaling settings.", "type": "array" }, "updateTime": { "type": "string", "description": "Output only. The last-modified time.", "format": "google-datetime", "readOnly": true } }, "description": "A game server config resource." }, "DeployedFleetAutoscaler": { "properties": { "specSource": { "$ref": "SpecSource", "description": "The source spec that is used to create the autoscaler. The GameServerConfig resource may no longer exist in the system." }, "autoscaler": { "type": "string", "description": "The name of the Agones autoscaler." }, "fleetAutoscalerSpec": { "description": "The autoscaler spec retrieved from Agones.", "type": "string" } }, "description": "Details about the Agones autoscaler.", "type": "object", "id": "DeployedFleetAutoscaler" }, "FetchDeploymentStateRequest": { "properties": {}, "type": "object", "description": "Request message for GameServerDeploymentsService.FetchDeploymentState.", "id": "FetchDeploymentStateRequest" }, "CloudAuditOptions": { "description": "Write a Cloud Audit log", "properties": { "authorizationLoggingOptions": { "description": "Information used by the Cloud Audit Logging pipeline.", "$ref": "AuthorizationLoggingOptions" }, "logName": { "description": "The log_name to populate in the Cloud Audit Record.", "type": "string", "enum": [ "UNSPECIFIED_LOG_NAME", "ADMIN_ACTIVITY", "DATA_ACCESS" ], "enumDescriptions": [ "Default. Should not be used.", "Corresponds to \"cloudaudit.googleapis.com/activity\"", "Corresponds to \"cloudaudit.googleapis.com/data_access\"" ] } }, "id": "CloudAuditOptions", "type": "object" }, "AuditLogConfig": { "properties": { "logType": { "enumDescriptions": [ "Default case. Should never be this.", "Admin reads. Example: CloudIAM getIamPolicy", "Data writes. Example: CloudSQL Users create", "Data reads. Example: CloudSQL Users list" ], "enum": [ "LOG_TYPE_UNSPECIFIED", "ADMIN_READ", "DATA_WRITE", "DATA_READ" ], "description": "The log type that this config enables.", "type": "string" }, "exemptedMembers": { "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.", "type": "array", "items": { "type": "string" } }, "ignoreChildExemptions": { "type": "boolean" } }, "type": "object", "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.", "id": "AuditLogConfig" }, "TargetFleetAutoscaler": { "description": "Target Agones autoscaler policy reference.", "id": "TargetFleetAutoscaler", "properties": { "name": { "description": "The name of the Agones autoscaler.", "type": "string" }, "specSource": { "$ref": "SpecSource", "description": "Encapsulates the source of the Agones fleet spec. Details about the Agones autoscaler spec." } }, "type": "object" }, "PreviewCreateGameServerClusterResponse": { "type": "object", "properties": { "targetState": { "$ref": "TargetState", "description": "The target state." }, "clusterState": { "readOnly": true, "description": "Output only. The state of the Kubernetes cluster in preview. This will be available if view is set to FULL in the relevant list/get/preview request.", "$ref": "KubernetesClusterState" }, "etag": { "type": "string", "description": "The ETag of the game server cluster." } }, "id": "PreviewCreateGameServerClusterResponse", "description": "Response message for GameServerClustersService.PreviewCreateGameServerCluster." }, "RealmSelector": { "id": "RealmSelector", "description": "The realm selector, used to match realm resources.", "properties": { "realms": { "description": "List of realms to match.", "items": { "type": "string" }, "type": "array" } }, "type": "object" }, "Rule": { "type": "object", "id": "Rule", "properties": { "action": { "description": "Required", "enumDescriptions": [ "Default no action.", "Matching 'Entries' grant access.", "Matching 'Entries' grant access and the caller promises to log the request per the returned log_configs.", "Matching 'Entries' deny access.", "Matching 'Entries' deny access and the caller promises to log the request per the returned log_configs.", "Matching 'Entries' tell IAM.Check callers to generate logs." ], "type": "string", "enum": [ "NO_ACTION", "ALLOW", "ALLOW_WITH_LOG", "DENY", "DENY_WITH_LOG", "LOG" ] }, "description": { "description": "Human-readable description of the rule.", "type": "string" }, "conditions": { "type": "array", "items": { "$ref": "Condition" }, "description": "Additional restrictions that must be met. All conditions must pass for the rule to match." }, "logConfig": { "description": "The config returned to callers of CheckPolicy for any entries that match the LOG action.", "type": "array", "items": { "$ref": "LogConfig" } }, "notIn": { "type": "array", "items": { "type": "string" }, "description": "If one or more 'not_in' clauses are specified, the rule matches if the PRINCIPAL/AUTHORITY_SELECTOR is in none of the entries. The format for in and not_in entries can be found at in the Local IAM documentation (see go/local-iam#features)." }, "permissions": { "items": { "type": "string" }, "type": "array", "description": "A permission is a string of form '..' (e.g., 'storage.buckets.list'). A value of '*' matches all permissions, and a verb part of '*' (e.g., 'storage.buckets.*') matches all verbs." }, "in": { "type": "array", "items": { "type": "string" }, "description": "If one or more 'in' clauses are specified, the rule matches if the PRINCIPAL/AUTHORITY_SELECTOR is in at least one of these entries." } }, "description": "A rule to be applied in a Policy." }, "DeployedFleet": { "properties": { "fleetSpec": { "type": "string", "description": "The fleet spec retrieved from the Agones fleet." }, "specSource": { "$ref": "SpecSource", "description": "The source spec that is used to create the Agones fleet. The GameServerConfig resource may no longer exist in the system." }, "fleet": { "type": "string", "description": "The name of the Agones fleet." }, "status": { "description": "The current status of the Agones fleet. Includes count of game servers in various states.", "$ref": "DeployedFleetStatus" } }, "id": "DeployedFleet", "type": "object", "description": "Agones fleet specification and details." }, "Location": { "id": "Location", "properties": { "displayName": { "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".", "type": "string" }, "locationId": { "type": "string", "description": "The canonical id for this location. For example: `\"us-east1\"`." }, "name": { "type": "string", "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`" }, "metadata": { "description": "Service-specific metadata. For example the available capacity at the given location.", "additionalProperties": { "description": "Properties of the object. Contains field @type with type URL.", "type": "any" }, "type": "object" }, "labels": { "additionalProperties": { "type": "string" }, "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}", "type": "object" } }, "description": "A resource that represents Google Cloud Platform location.", "type": "object" }, "AuthorizationLoggingOptions": { "properties": { "permissionType": { "description": "The type of the permission that was checked.", "type": "string", "enumDescriptions": [ "Default. Should not be used.", "A read of admin (meta) data.", "A write of admin (meta) data.", "A read of standard data.", "A write of standard data." ], "enum": [ "PERMISSION_TYPE_UNSPECIFIED", "ADMIN_READ", "ADMIN_WRITE", "DATA_READ", "DATA_WRITE" ] } }, "id": "AuthorizationLoggingOptions", "type": "object", "description": "Authorization-related information used by Cloud Audit Logging." }, "TargetDetails": { "type": "object", "description": "Details about the Agones resources.", "properties": { "fleetDetails": { "description": "Agones fleet details for game server clusters and game server deployments.", "type": "array", "items": { "$ref": "TargetFleetDetails" } }, "gameServerClusterName": { "description": "The game server cluster name. Uses the form: `projects/{project}/locations/{locationId}/realms/{realmId}/gameServerClusters/{gameServerClusterId}`.", "type": "string" }, "gameServerDeploymentName": { "type": "string", "description": "The game server deployment name. Uses the form: `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}`." } }, "id": "TargetDetails" }, "DeployedFleetDetails": { "properties": { "deployedAutoscaler": { "description": "Information about the Agones autoscaler for that fleet.", "$ref": "DeployedFleetAutoscaler" }, "deployedFleet": { "$ref": "DeployedFleet", "description": "Information about the Agones fleet." } }, "type": "object", "id": "DeployedFleetDetails", "description": "Details of the deployed Agones fleet." }, "CustomField": { "properties": { "value": { "description": "Value is the field value. It is important that in contrast to the CounterOptions.field, the value here is a constant that is not derived from the IAMContext.", "type": "string" }, "name": { "type": "string", "description": "Name is the field name." } }, "type": "object", "id": "CustomField", "description": "Custom fields. These can be used to create a counter with arbitrary field/value pairs. See: go/rpcsp-custom-fields." }, "DeployedFleetStatus": { "description": "DeployedFleetStatus has details about the Agones fleets, such as how many are running, how many are allocated, and so on.", "properties": { "readyReplicas": { "format": "int64", "description": "The number of GameServer replicas in the READY state in this fleet.", "type": "string" }, "replicas": { "description": "The total number of current GameServer replicas in this fleet.", "format": "int64", "type": "string" }, "allocatedReplicas": { "format": "int64", "description": "The number of GameServer replicas in the ALLOCATED state in this fleet.", "type": "string" }, "reservedReplicas": { "description": "The number of GameServer replicas in the RESERVED state in this fleet. Reserved instances won't be deleted on scale down, but won't cause an autoscaler to scale up.", "type": "string", "format": "int64" } }, "type": "object", "id": "DeployedFleetStatus" }, "AuditConfig": { "id": "AuditConfig", "type": "object", "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.", "properties": { "auditLogConfigs": { "description": "The configuration for logging of each type of permission.", "type": "array", "items": { "$ref": "AuditLogConfig" } }, "service": { "type": "string", "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services." } } }, "Empty": { "type": "object", "id": "Empty", "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }", "properties": {} }, "Binding": { "type": "object", "id": "Binding", "description": "Associates `members`, or principals, with a `role`.", "properties": { "condition": { "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).", "$ref": "Expr" }, "bindingId": { "type": "string" }, "members": { "items": { "type": "string" }, "type": "array", "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. " }, "role": { "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.", "type": "string" } } }, "CancelOperationRequest": { "description": "The request message for Operations.CancelOperation.", "id": "CancelOperationRequest", "properties": {}, "type": "object" }, "FetchDeploymentStateResponse": { "properties": { "clusterState": { "description": "The state of the game server deployment in each game server cluster.", "type": "array", "items": { "$ref": "DeployedClusterState" } }, "unavailable": { "description": "List of locations that could not be reached.", "items": { "type": "string" }, "type": "array" } }, "description": "Response message for GameServerDeploymentsService.FetchDeploymentState.", "id": "FetchDeploymentStateResponse", "type": "object" }, "PreviewDeleteGameServerClusterResponse": { "id": "PreviewDeleteGameServerClusterResponse", "description": "Response message for GameServerClustersService.PreviewDeleteGameServerCluster.", "type": "object", "properties": { "etag": { "type": "string", "description": "The ETag of the game server cluster." }, "targetState": { "description": "The target state.", "$ref": "TargetState" } } }, "Operation": { "properties": { "metadata": { "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.", "type": "object", "additionalProperties": { "description": "Properties of the object. Contains field @type with type URL.", "type": "any" } }, "error": { "description": "The error result of the operation in case of failure or cancellation.", "$ref": "Status" }, "response": { "additionalProperties": { "type": "any", "description": "Properties of the object. Contains field @type with type URL." }, "type": "object", "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`." }, "name": { "type": "string", "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`." }, "done": { "type": "boolean", "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available." } }, "type": "object", "description": "This resource represents a long-running operation that is the result of a network API call.", "id": "Operation" }, "GameServerCluster": { "type": "object", "description": "A game server cluster resource.", "properties": { "labels": { "type": "object", "description": "The labels associated with this game server cluster. Each label is a key-value pair.", "additionalProperties": { "type": "string" } }, "clusterState": { "$ref": "KubernetesClusterState", "description": "Output only. The state of the Kubernetes cluster in preview. This will be available if view is set to FULL in the relevant list/get/preview request.", "readOnly": true }, "name": { "description": "Required. The resource name of the game server cluster, in the following form: `projects/{project}/locations/{locationId}/realms/{realmId}/gameServerClusters/{gameServerClusterId}`. For example, `projects/my-project/locations/global/realms/zanzibar/gameServerClusters/my-gke-cluster`.", "type": "string" }, "connectionInfo": { "description": "The game server cluster connection information. This information is used to manage game server clusters.", "$ref": "GameServerClusterConnectionInfo" }, "etag": { "type": "string", "description": "Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens." }, "updateTime": { "type": "string", "readOnly": true, "description": "Output only. The last-modified time.", "format": "google-datetime" }, "description": { "description": "Human readable description of the cluster.", "type": "string" }, "createTime": { "format": "google-datetime", "description": "Output only. The creation time.", "type": "string", "readOnly": true } }, "id": "GameServerCluster" }, "ListRealmsResponse": { "properties": { "realms": { "description": "The list of realms.", "items": { "$ref": "Realm" }, "type": "array" }, "nextPageToken": { "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.", "type": "string" }, "unreachable": { "items": { "type": "string" }, "type": "array", "description": "List of locations that could not be reached." } }, "id": "ListRealmsResponse", "description": "Response message for RealmsService.ListRealms.", "type": "object" }, "ListOperationsResponse": { "properties": { "nextPageToken": { "type": "string", "description": "The standard List next-page token." }, "operations": { "items": { "$ref": "Operation" }, "description": "A list of operations that matches the specified filter in the request.", "type": "array" } }, "id": "ListOperationsResponse", "description": "The response message for Operations.ListOperations.", "type": "object" }, "PreviewRealmUpdateResponse": { "type": "object", "description": "Response message for RealmsService.PreviewRealmUpdate.", "properties": { "etag": { "type": "string", "description": "ETag of the realm." }, "targetState": { "description": "The target state.", "$ref": "TargetState" } }, "id": "PreviewRealmUpdateResponse" }, "OperationMetadata": { "id": "OperationMetadata", "description": "Represents the metadata of the long-running operation.", "type": "object", "properties": { "unreachable": { "readOnly": true, "description": "Output only. List of Locations that could not be reached.", "type": "array", "items": { "type": "string" } }, "endTime": { "description": "Output only. The time the operation finished running.", "format": "google-datetime", "readOnly": true, "type": "string" }, "verb": { "description": "Output only. Name of the verb executed by the operation.", "readOnly": true, "type": "string" }, "statusMessage": { "readOnly": true, "type": "string", "description": "Output only. Human-readable status of the operation, if any." }, "requestedCancellation": { "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.", "readOnly": true, "type": "boolean" }, "operationStatus": { "readOnly": true, "description": "Output only. Operation status for Game Services API operations. Operation status is in the form of key-value pairs where keys are resource IDs and the values show the status of the operation. In case of failures, the value includes an error code and error message.", "additionalProperties": { "$ref": "OperationStatus" }, "type": "object" }, "target": { "description": "Output only. Server-defined resource path for the target of the operation.", "readOnly": true, "type": "string" }, "createTime": { "format": "google-datetime", "type": "string", "readOnly": true, "description": "Output only. The time the operation was created." }, "apiVersion": { "readOnly": true, "description": "Output only. API version used to start the operation.", "type": "string" } } }, "LogConfig": { "type": "object", "id": "LogConfig", "properties": { "cloudAudit": { "$ref": "CloudAuditOptions", "description": "Cloud audit options." }, "counter": { "description": "Counter options.", "$ref": "CounterOptions" }, "dataAccess": { "description": "Data access options.", "$ref": "DataAccessOptions" } }, "description": "Specifies what kind of log the caller must write" }, "KubernetesClusterState": { "properties": { "provider": { "type": "string", "description": "Output only. The cloud provider type reported by the first node's `providerID` in the list of nodes on the Kubernetes endpoint. On Kubernetes platforms that support zero-node clusters (like GKE-on-GCP), the provider type will be empty.", "readOnly": true }, "versionInstalledErrorMessage": { "type": "string", "readOnly": true, "description": "Output only. The detailed error message for the installed versions of Agones/Kubernetes." }, "kubernetesVersionInstalled": { "type": "string", "description": "Output only. The version of Kubernetes that is currently used in the registered Kubernetes cluster (as detected by the Cloud Game Servers service).", "readOnly": true }, "installationState": { "description": "Output only. The state for the installed versions of Agones/Kubernetes.", "enumDescriptions": [ "The default installation state. This value is used if the state is omitted.", "Both the Agones and Kubernetes versions are supported by Google Cloud Game Servers and Agones and Kubernetes versions are compatible.", "The installed version of Agones is not supported by Google Cloud Game Servers.", "The installed version of Agones is supported by Google Cloud Game Servers, but the installed version of Kubernetes is not recommended or supported by the version of Agones.", "The installed version of Agones is not recognized because the Agones controller's image name does not have a version string reported as {major}.{minor}(.{patch}).", "The server version of Kubernetes cluster is not recognized because the API server didn't return parsable version info on path/version.", "Failed to read or verify the version of Agones or Kubernetes. See `version_installed_error_message` for details.", "Agones is not installed." ], "type": "string", "readOnly": true, "enum": [ "INSTALLATION_STATE_UNSPECIFIED", "AGONES_KUBERNETES_VERSION_SUPPORTED", "AGONES_VERSION_UNSUPPORTED", "AGONES_KUBERNETES_VERSION_UNSUPPORTED", "AGONES_VERSION_UNRECOGNIZED", "KUBERNETES_VERSION_UNRECOGNIZED", "VERSION_VERIFICATION_FAILED", "AGONES_NOT_INSTALLED" ] }, "agonesVersionInstalled": { "description": "Output only. The version of Agones currently installed in the registered Kubernetes cluster.", "readOnly": true, "type": "string" }, "agonesVersionTargeted": { "description": "Output only. The version of Agones that is targeted to be installed in the cluster.", "readOnly": true, "type": "string" } }, "id": "KubernetesClusterState", "description": "The state of the Kubernetes cluster.", "type": "object" }, "TestIamPermissionsRequest": { "description": "Request message for `TestIamPermissions` method.", "type": "object", "id": "TestIamPermissionsRequest", "properties": { "permissions": { "items": { "type": "string" }, "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).", "type": "array" } } }, "FleetConfig": { "type": "object", "properties": { "name": { "type": "string", "description": "The name of the FleetConfig." }, "fleetSpec": { "type": "string", "description": "Agones fleet spec (see [example spec](https://agones.dev/site/docs/reference/fleet/))." } }, "id": "FleetConfig", "description": "Fleet configs for Agones." }, "TestIamPermissionsResponse": { "properties": { "permissions": { "type": "array", "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.", "items": { "type": "string" } } }, "type": "object", "description": "Response message for `TestIamPermissions` method.", "id": "TestIamPermissionsResponse" }, "CounterOptions": { "description": "Increment a streamz counter with the specified metric and field names. Metric names should start with a '/', generally be lowercase-only, and end in \"_count\". Field names should not contain an initial slash. The actual exported metric names will have \"/iam/policy\" prepended. Field names correspond to IAM request parameters and field values are their respective values. Supported field names: - \"authority\", which is \"[token]\" if IAMContext.token is present, otherwise the value of IAMContext.authority_selector if present, and otherwise a representation of IAMContext.principal; or - \"iam_principal\", a representation of IAMContext.principal even if a token or authority selector is present; or - \"\" (empty string), resulting in a counter with no fields. Examples: counter { metric: \"/debug_access_count\" field: \"iam_principal\" } ==\u003e increment counter /iam/policy/debug_access_count {iam_principal=[value of IAMContext.principal]}", "properties": { "metric": { "type": "string", "description": "The metric to update." }, "field": { "type": "string", "description": "The field value to attribute." }, "customFields": { "description": "Custom fields.", "type": "array", "items": { "$ref": "CustomField" } } }, "type": "object", "id": "CounterOptions" }, "Expr": { "properties": { "location": { "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.", "type": "string" }, "description": { "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.", "type": "string" }, "expression": { "type": "string", "description": "Textual representation of an expression in Common Expression Language syntax." }, "title": { "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.", "type": "string" } }, "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.", "id": "Expr", "type": "object" }, "SetIamPolicyRequest": { "id": "SetIamPolicyRequest", "type": "object", "description": "Request message for `SetIamPolicy` method.", "properties": { "policy": { "$ref": "Policy", "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them." }, "updateMask": { "format": "google-fieldmask", "type": "string", "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`" } } }, "SpecSource": { "id": "SpecSource", "type": "object", "description": "Encapsulates Agones fleet spec and Agones autoscaler spec sources.", "properties": { "name": { "description": "The name of the Agones fleet config or Agones scaling config used to derive the Agones fleet or Agones autoscaler spec.", "type": "string" }, "gameServerConfigName": { "description": "The game server config resource. Uses the form: `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}/configs/{configId}`.", "type": "string" } } }, "GameServerConfigOverride": { "type": "object", "id": "GameServerConfigOverride", "properties": { "configVersion": { "type": "string", "description": "The game server config for this override." }, "realmsSelector": { "$ref": "RealmSelector", "description": "Selector for choosing applicable realms." } }, "description": "A game server config override." }, "GkeClusterReference": { "properties": { "cluster": { "description": "The full or partial name of a GKE cluster, using one of the following forms: LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `projects/{project}/locations/{locationId}/clusters/{cluster}` LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `locations/{locationId}/clusters/{cluster}` LICENSE Makefile README.md gsa_key.json lua-resty-gcp-dev-1.rockspec lua-resty-gcp-scm-1.rockspec.original lua-resty-gcp-scm-1.rockspec.template spec src upload.sh `{cluster}` If project and location are not specified, the project and location of the GameServerCluster resource are used to generate the full name of the GKE cluster.", "type": "string" } }, "description": "A reference to a GKE cluster.", "id": "GkeClusterReference", "type": "object" }, "ListLocationsResponse": { "description": "The response message for Locations.ListLocations.", "id": "ListLocationsResponse", "properties": { "nextPageToken": { "type": "string", "description": "The standard List next-page token." }, "locations": { "items": { "$ref": "Location" }, "description": "A list of locations that matches the specified filter in the request.", "type": "array" } }, "type": "object" }, "ListGameServerClustersResponse": { "description": "Response message for GameServerClustersService.ListGameServerClusters.", "properties": { "gameServerClusters": { "items": { "$ref": "GameServerCluster" }, "type": "array", "description": "The list of game server clusters." }, "unreachable": { "description": "List of locations that could not be reached.", "type": "array", "items": { "type": "string" } }, "nextPageToken": { "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.", "type": "string" } }, "id": "ListGameServerClustersResponse", "type": "object" }, "DeployedClusterState": { "description": "The game server cluster changes made by the game server deployment.", "properties": { "fleetDetails": { "type": "array", "items": { "$ref": "DeployedFleetDetails" }, "description": "The details about the Agones fleets and autoscalers created in the game server cluster." }, "cluster": { "description": "The name of the cluster.", "type": "string" } }, "type": "object", "id": "DeployedClusterState" }, "PreviewGameServerDeploymentRolloutResponse": { "properties": { "targetState": { "$ref": "TargetState", "description": "The target state." }, "etag": { "description": "ETag of the game server deployment.", "type": "string" }, "unavailable": { "type": "array", "description": "Locations that could not be reached on this request.", "items": { "type": "string" } } }, "description": "Response message for PreviewGameServerDeploymentRollout. This has details about the Agones fleet and autoscaler to be actuated.", "type": "object", "id": "PreviewGameServerDeploymentRolloutResponse" }, "GameServerClusterConnectionInfo": { "properties": { "gkeClusterReference": { "$ref": "GkeClusterReference", "description": "Reference to the GKE cluster where the game servers are installed." }, "namespace": { "type": "string", "description": "Namespace designated on the game server cluster where the Agones game server instances will be created. Existence of the namespace will be validated during creation." } }, "type": "object", "description": "The game server cluster connection information.", "id": "GameServerClusterConnectionInfo" }, "Condition": { "type": "object", "id": "Condition", "description": "A condition to be met.", "properties": { "iam": { "type": "string", "enumDescriptions": [ "Default non-attribute.", "Either principal or (if present) authority selector.", "The principal (even if an authority selector is present), which must only be used for attribution, not authorization.", "Any of the security realms in the IAMContext (go/security-realms). When used with IN, the condition indicates \"any of the request's realms match one of the given values; with NOT_IN, \"none of the realms match any of the given values\". Note that a value can be: - 'self:campus' (i.e., clients that are in the same campus) - 'self:metro' (i.e., clients that are in the same metro) - 'self:cloud-region' (i.e., allow connections from clients that are in the same cloud region) - 'self:prod-region' (i.e., allow connections from clients that are in the same prod region) - 'guardians' (i.e., allow connections from its guardian realms. See go/security-realms-glossary#guardian for more information.) - 'self' [DEPRECATED] (i.e., allow connections from clients that are in the same security realm, which is currently but not guaranteed to be campus-sized) - a realm (e.g., 'campus-abc') - a realm group (e.g., 'realms-for-borg-cell-xx', see: go/realm-groups) A match is determined by a realm group membership check performed by a RealmAclRep object (go/realm-acl-howto). It is not permitted to grant access based on the *absence* of a realm, so realm conditions can only be used in a \"positive\" context (e.g., ALLOW/IN or DENY/NOT_IN).", "An approver (distinct from the requester) that has authorized this request. When used with IN, the condition indicates that one of the approvers associated with the request matches the specified principal, or is a member of the specified group. Approvers can only grant additional access, and are thus only used in a strictly positive context (e.g. ALLOW/IN or DENY/NOT_IN).", "What types of justifications have been supplied with this request. String values should match enum names from security.credentials.JustificationType, e.g. \"MANUAL_STRING\". It is not permitted to grant access based on the *absence* of a justification, so justification conditions can only be used in a \"positive\" context (e.g., ALLOW/IN or DENY/NOT_IN). Multiple justifications, e.g., a Buganizer ID and a manually-entered reason, are normal and supported.", "What type of credentials have been supplied with this request. String values should match enum names from security_loas_l2.CredentialsType - currently, only CREDS_TYPE_EMERGENCY is supported. It is not permitted to grant access based on the *absence* of a credentials type, so the conditions can only be used in a \"positive\" context (e.g., ALLOW/IN or DENY/NOT_IN).", "EXPERIMENTAL -- DO NOT USE. The conditions can only be used in a \"positive\" context (e.g., ALLOW/IN or DENY/NOT_IN)." ], "enum": [ "NO_ATTR", "AUTHORITY", "ATTRIBUTION", "SECURITY_REALM", "APPROVER", "JUSTIFICATION_TYPE", "CREDENTIALS_TYPE", "CREDS_ASSERTION" ], "description": "Trusted attributes supplied by the IAM system." }, "op": { "type": "string", "enum": [ "NO_OP", "EQUALS", "NOT_EQUALS", "IN", "NOT_IN", "DISCHARGED" ], "enumDescriptions": [ "Default no-op.", "DEPRECATED. Use IN instead.", "DEPRECATED. Use NOT_IN instead.", "The condition is true if the subject (or any element of it if it is a set) matches any of the supplied values.", "The condition is true if the subject (or every element of it if it is a set) matches none of the supplied values.", "Subject is discharged" ], "description": "An operator to apply the subject with." }, "sys": { "enumDescriptions": [ "Default non-attribute type", "Region of the resource", "Service name", "Resource name", "IP address of the caller" ], "type": "string", "description": "Trusted attributes supplied by any service that owns resources and uses the IAM system for access control.", "enum": [ "NO_ATTR", "REGION", "SERVICE", "NAME", "IP" ] }, "values": { "items": { "type": "string" }, "type": "array", "description": "The objects of the condition." }, "svc": { "description": "Trusted attributes discharged by the service.", "type": "string" } } }, "DataAccessOptions": { "type": "object", "id": "DataAccessOptions", "properties": { "logMode": { "enumDescriptions": [ "Client is not required to write a partial Gin log immediately after the authorization check. If client chooses to write one and it fails, client may either fail open (allow the operation to continue) or fail closed (handle as a DENY outcome).", "The application's operation in the context of which this authorization check is being made may only be performed if it is successfully logged to Gin. For instance, the authorization library may satisfy this obligation by emitting a partial log entry at authorization check time and only returning ALLOW to the application if it succeeds. If a matching Rule has this directive, but the client has not indicated that it will honor such requirements, then the IAM check will result in authorization failure by setting CheckPolicyResponse.success=false." ], "type": "string", "enum": [ "LOG_MODE_UNSPECIFIED", "LOG_FAIL_CLOSED" ] } }, "description": "Write a Data Access (Gin) log" }, "Realm": { "id": "Realm", "type": "object", "properties": { "labels": { "description": "The labels associated with this realm. Each label is a key-value pair.", "type": "object", "additionalProperties": { "type": "string" } }, "timeZone": { "description": "Required. Time zone where all policies targeting this realm are evaluated. The value of this field must be from the [IANA time zone database](https://www.iana.org/time-zones).", "type": "string" }, "etag": { "description": "Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.", "type": "string" }, "description": { "description": "Human readable description of the realm.", "type": "string" }, "createTime": { "readOnly": true, "format": "google-datetime", "description": "Output only. The creation time.", "type": "string" }, "updateTime": { "readOnly": true, "description": "Output only. The last-modified time.", "type": "string", "format": "google-datetime" }, "name": { "description": "The resource name of the realm, in the following form: `projects/{project}/locations/{locationId}/realms/{realmId}`. For example, `projects/my-project/locations/global/realms/my-realm`.", "type": "string" } }, "description": "A realm resource." }, "ListGameServerConfigsResponse": { "properties": { "nextPageToken": { "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.", "type": "string" }, "unreachable": { "type": "array", "description": "List of locations that could not be reached.", "items": { "type": "string" } }, "gameServerConfigs": { "description": "The list of game server configs.", "type": "array", "items": { "$ref": "GameServerConfig" } } }, "type": "object", "description": "Response message for GameServerConfigsService.ListGameServerConfigs.", "id": "ListGameServerConfigsResponse" } }, "id": "gameservices:v1", "batchPath": "batch", "auth": { "oauth2": { "scopes": { "https://www.googleapis.com/auth/cloud-platform": { "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account." } } } }, "kind": "discovery#restDescription", "documentationLink": "https://cloud.google.com/solutions/gaming/", "servicePath": "", "fullyEncodeReservedExpansion": true }
]===]))
