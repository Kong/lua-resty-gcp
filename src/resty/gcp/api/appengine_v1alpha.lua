local decode = require("cjson").new().decode
return assert(decode([===[
{ "mtlsRootUrl": "https://appengine.mtls.googleapis.com/", "fullyEncodeReservedExpansion": true, "baseUrl": "https://appengine.googleapis.com/", "parameters": { "$.xgafv": { "enumDescriptions": [ "v1 error format", "v2 error format" ], "description": "V1 error format.", "type": "string", "location": "query", "enum": [ "1", "2" ] }, "prettyPrint": { "type": "boolean", "description": "Returns response with indentations and line breaks.", "default": "true", "location": "query" }, "access_token": { "description": "OAuth access token.", "location": "query", "type": "string" }, "quotaUser": { "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", "type": "string", "location": "query" }, "upload_protocol": { "location": "query", "type": "string", "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")." }, "uploadType": { "type": "string", "location": "query", "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")." }, "key": { "type": "string", "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "location": "query" }, "oauth_token": { "type": "string", "location": "query", "description": "OAuth 2.0 token for the current user." }, "alt": { "description": "Data format for response.", "enumDescriptions": [ "Responses with Content-Type of application/json", "Media download with context-dependent Content-Type", "Responses with Content-Type of application/x-protobuf" ], "default": "json", "location": "query", "enum": [ "json", "media", "proto" ], "type": "string" }, "fields": { "location": "query", "type": "string", "description": "Selector specifying which fields to include in a partial response." }, "callback": { "location": "query", "type": "string", "description": "JSONP" } }, "basePath": "", "documentationLink": "https://cloud.google.com/appengine/docs/admin-api/", "id": "appengine:v1alpha", "description": "Provisions and manages developers' App Engine applications.", "ownerDomain": "google.com", "discoveryVersion": "v1", "schemas": { "ListAuthorizedCertificatesResponse": { "type": "object", "properties": { "nextPageToken": { "description": "Continuation token for fetching the next page of results.", "type": "string" }, "certificates": { "items": { "$ref": "AuthorizedCertificate" }, "type": "array", "description": "The SSL certificates the user is authorized to administer." } }, "description": "Response message for AuthorizedCertificates.ListAuthorizedCertificates.", "id": "ListAuthorizedCertificatesResponse" }, "Location": { "id": "Location", "type": "object", "description": "A resource that represents Google Cloud Platform location.", "properties": { "labels": { "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"} ", "type": "object", "additionalProperties": { "type": "string" } }, "locationId": { "description": "The canonical id for this location. For example: \"us-east1\".", "type": "string" }, "displayName": { "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".", "type": "string" }, "name": { "type": "string", "description": "Resource name for the location, which may vary between implementations. For example: \"projects/example-project/locations/us-east1\"" }, "metadata": { "description": "Service-specific metadata. For example the available capacity at the given location.", "type": "object", "additionalProperties": { "type": "any", "description": "Properties of the object. Contains field @type with type URL." } } } }, "ListDomainMappingsResponse": { "description": "Response message for DomainMappings.ListDomainMappings.", "properties": { "domainMappings": { "type": "array", "items": { "$ref": "DomainMapping" }, "description": "The domain mappings for the application." }, "nextPageToken": { "type": "string", "description": "Continuation token for fetching the next page of results." } }, "id": "ListDomainMappingsResponse", "type": "object" }, "CertificateRawData": { "id": "CertificateRawData", "description": "An SSL certificate obtained from a certificate authority.", "type": "object", "properties": { "publicCertificate": { "type": "string", "description": "PEM encoded x.509 public key certificate. This field is set once on certificate creation. Must include the header and footer. Example: -----BEGIN CERTIFICATE----- -----END CERTIFICATE----- " }, "privateKey": { "type": "string", "description": "Unencrypted PEM encoded RSA private key. This field is set once on certificate creation and then encrypted. The key size must be 2048 bits or fewer. Must include the header and footer. Example: -----BEGIN RSA PRIVATE KEY----- -----END RSA PRIVATE KEY----- @InputOnly" } } }, "Operation": { "type": "object", "description": "This resource represents a long-running operation that is the result of a network API call.", "id": "Operation", "properties": { "metadata": { "type": "object", "additionalProperties": { "type": "any", "description": "Properties of the object. Contains field @type with type URL." }, "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any." }, "error": { "description": "The error result of the operation in case of failure or cancellation.", "$ref": "Status" }, "response": { "type": "object", "additionalProperties": { "description": "Properties of the object. Contains field @type with type URL.", "type": "any" }, "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as Delete, the response is google.protobuf.Empty. If the original method is standard Get/Create/Update, the response should be the resource. For other methods, the response should have the type XxxResponse, where Xxx is the original method name. For example, if the original method name is TakeSnapshot(), the inferred response type is TakeSnapshotResponse." }, "name": { "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the name should be a resource name ending with operations/{unique_id}.", "type": "string" }, "done": { "description": "If the value is false, it means the operation is still in progress. If true, the operation is completed, and either error or response is available.", "type": "boolean" } } }, "OperationMetadataV1Beta": { "id": "OperationMetadataV1Beta", "type": "object", "description": "Metadata for the given google.longrunning.Operation.", "properties": { "ephemeralMessage": { "type": "string", "description": "Ephemeral message that may change every time the operation is polled. @OutputOnly" }, "createVersionMetadata": { "$ref": "CreateVersionMetadataV1Beta" }, "user": { "description": "User who requested this operation.@OutputOnly", "type": "string" }, "endTime": { "type": "string", "description": "Time that this operation completed.@OutputOnly", "format": "google-datetime" }, "target": { "description": "Name of the resource that this operation is acting on. Example: apps/myapp/services/default.@OutputOnly", "type": "string" }, "method": { "type": "string", "description": "API method that initiated this operation. Example: google.appengine.v1beta.Versions.CreateVersion.@OutputOnly" }, "warning": { "items": { "type": "string" }, "type": "array", "description": "Durable messages that persist on every operation poll. @OutputOnly" }, "insertTime": { "format": "google-datetime", "description": "Time that this operation was created.@OutputOnly", "type": "string" } } }, "ListOperationsResponse": { "properties": { "nextPageToken": { "description": "The standard List next-page token.", "type": "string" }, "operations": { "description": "A list of operations that matches the specified filter in the request.", "type": "array", "items": { "$ref": "Operation" } } }, "id": "ListOperationsResponse", "description": "The response message for Operations.ListOperations.", "type": "object" }, "ListAuthorizedDomainsResponse": { "type": "object", "properties": { "nextPageToken": { "type": "string", "description": "Continuation token for fetching the next page of results." }, "domains": { "description": "The authorized domains belonging to the user.", "type": "array", "items": { "$ref": "AuthorizedDomain" } } }, "id": "ListAuthorizedDomainsResponse", "description": "Response message for AuthorizedDomains.ListAuthorizedDomains." }, "Status": { "id": "Status", "description": "The Status type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC (https://github.com/grpc). Each Status message contains three pieces of data: error code, error message, and error details.You can find out more about this error model and how to work with it in the API Design Guide (https://cloud.google.com/apis/design/errors).", "properties": { "details": { "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.", "items": { "additionalProperties": { "type": "any", "description": "Properties of the object. Contains field @type with type URL." }, "type": "object" }, "type": "array" }, "message": { "type": "string", "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client." }, "code": { "description": "The status code, which should be an enum value of google.rpc.Code.", "format": "int32", "type": "integer" } }, "type": "object" }, "Empty": { "properties": {}, "id": "Empty", "type": "object", "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } " }, "ResourceRecord": { "description": "A DNS resource record.", "type": "object", "id": "ResourceRecord", "properties": { "rrdata": { "description": "Data for this record. Values vary by record type, as defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1).", "type": "string" }, "name": { "description": "Relative name of the object affected by this record. Only applicable for CNAME records. Example: 'www'.", "type": "string" }, "type": { "enumDescriptions": [ "An A resource record. Data is an IPv4 address.", "An AAAA resource record. Data is an IPv6 address.", "A CNAME resource record. Data is a domain name to be aliased." ], "description": "Resource record type. Example: AAAA.", "enum": [ "A", "AAAA", "CNAME" ], "type": "string" } } }, "AuthorizedDomain": { "description": "A domain that a user has been authorized to administer. To authorize use of a domain, verify ownership via Webmaster Central (https://www.google.com/webmasters/verification/home).", "type": "object", "properties": { "name": { "type": "string", "description": "Full path to the AuthorizedDomain resource in the API. Example: apps/myapp/authorizedDomains/example.com.@OutputOnly" }, "id": { "type": "string", "description": "Fully qualified domain name of the domain authorized for use. Example: example.com." } }, "id": "AuthorizedDomain" }, "OperationMetadataV1Alpha": { "id": "OperationMetadataV1Alpha", "type": "object", "description": "Metadata for the given google.longrunning.Operation.", "properties": { "endTime": { "description": "Time that this operation completed.@OutputOnly", "format": "google-datetime", "type": "string" }, "target": { "description": "Name of the resource that this operation is acting on. Example: apps/myapp/services/default.@OutputOnly", "type": "string" }, "insertTime": { "description": "Time that this operation was created.@OutputOnly", "format": "google-datetime", "type": "string" }, "warning": { "type": "array", "description": "Durable messages that persist on every operation poll. @OutputOnly", "items": { "type": "string" } }, "method": { "description": "API method that initiated this operation. Example: google.appengine.v1alpha.Versions.CreateVersion.@OutputOnly", "type": "string" }, "ephemeralMessage": { "description": "Ephemeral message that may change every time the operation is polled. @OutputOnly", "type": "string" }, "createVersionMetadata": { "$ref": "CreateVersionMetadataV1Alpha" }, "user": { "type": "string", "description": "User who requested this operation.@OutputOnly" } } }, "SslSettings": { "description": "SSL configuration for a DomainMapping resource.", "type": "object", "properties": { "certificateId": { "type": "string", "description": "ID of the AuthorizedCertificate resource configuring SSL for the application. Clearing this field will remove SSL support.By default, a managed certificate is automatically created for every domain mapping. To omit SSL support or to configure SSL manually, specify no_managed_certificate on a CREATE or UPDATE request. You must be authorized to administer the AuthorizedCertificate resource to manually map it to a DomainMapping resource. Example: 12345." }, "isManagedCertificate": { "description": "Whether the mapped certificate is an App Engine managed certificate. Managed certificates are created by default with a domain mapping. To opt out, specify no_managed_certificate on a CREATE or UPDATE request.@OutputOnly", "type": "boolean" } }, "id": "SslSettings" }, "ManagedCertificate": { "description": "A certificate managed by App Engine.", "id": "ManagedCertificate", "type": "object", "properties": { "lastRenewalTime": { "description": "Time at which the certificate was last renewed. The renewal process is fully managed. Certificate renewal will automatically occur before the certificate expires. Renewal errors can be tracked via ManagementStatus.@OutputOnly", "format": "google-datetime", "type": "string" }, "status": { "description": "Status of certificate management. Refers to the most recent certificate acquisition or renewal attempt.@OutputOnly", "type": "string", "enum": [ "UNSPECIFIED_STATUS", "OK", "PENDING", "FAILED_RETRYING_INTERNAL", "FAILED_RETRYING_NOT_VISIBLE", "FAILED_PERMANENTLY_NOT_VISIBLE", "FAILED_RETRYING_CAA_FORBIDDEN", "FAILED_RETRYING_CAA_CHECKING" ], "enumDescriptions": [ "", "Certificate was successfully obtained and inserted into the serving system.", "Certificate is under active attempts to acquire or renew.", "Most recent renewal failed due to a system failure and will be retried. System failure is likely transient, and subsequent renewal attempts may succeed. The last successfully provisioned certificate may still be serving.", "Most recent renewal failed due to an invalid DNS setup and will be retried. Renewal attempts will continue to fail until the certificate domain's DNS configuration is fixed. The last successfully provisioned certificate may still be serving.", "All renewal attempts have been exhausted. Most recent renewal failed due to an invalid DNS setup and will not be retried. The last successfully provisioned certificate may still be serving.", "Most recent renewal failed due to an explicit CAA record that does not include one of the in-use CAs (Google CA and Let's Encrypt). Renewals will continue to fail until the CAA is reconfigured. The last successfully provisioned certificate may still be serving.", "Most recent renewal failed due to a CAA retrieval failure. This means that the domain's DNS provider does not properly handle CAA records, failing requests for CAA records when no CAA records are defined. Renewals will continue to fail until the DNS provider is changed or a CAA record is added for the given domain. The last successfully provisioned certificate may still be serving." ] } } }, "LocationMetadata": { "type": "object", "description": "Metadata for the given google.cloud.location.Location.", "properties": { "standardEnvironmentAvailable": { "description": "App Engine standard environment is available in the given location.@OutputOnly", "type": "boolean" }, "searchApiAvailable": { "type": "boolean", "description": "Output only. Search API (https://cloud.google.com/appengine/docs/standard/python/search) is available in the given location.", "readOnly": true }, "flexibleEnvironmentAvailable": { "type": "boolean", "description": "App Engine flexible environment is available in the given location.@OutputOnly" } }, "id": "LocationMetadata" }, "GoogleAppengineV1betaLocationMetadata": { "type": "object", "description": "Metadata for the given google.cloud.location.Location.", "properties": { "searchApiAvailable": { "type": "boolean", "description": "Output only. Search API (https://cloud.google.com/appengine/docs/standard/python/search) is available in the given location.", "readOnly": true }, "flexibleEnvironmentAvailable": { "description": "App Engine flexible environment is available in the given location.@OutputOnly", "type": "boolean" }, "standardEnvironmentAvailable": { "description": "App Engine standard environment is available in the given location.@OutputOnly", "type": "boolean" } }, "id": "GoogleAppengineV1betaLocationMetadata" }, "DomainMapping": { "description": "A domain serving an App Engine application.", "id": "DomainMapping", "properties": { "id": { "type": "string", "description": "Relative name of the domain serving the application. Example: example.com." }, "sslSettings": { "description": "SSL configuration for this domain. If unconfigured, this domain will not serve with SSL.", "$ref": "SslSettings" }, "resourceRecords": { "items": { "$ref": "ResourceRecord" }, "description": "The resource records required to configure this domain mapping. These records must be added to the domain's DNS configuration in order to serve the application via this domain mapping.@OutputOnly", "type": "array" }, "name": { "type": "string", "description": "Full path to the DomainMapping resource in the API. Example: apps/myapp/domainMapping/example.com.@OutputOnly" } }, "type": "object" }, "CreateVersionMetadataV1Alpha": { "id": "CreateVersionMetadataV1Alpha", "properties": { "cloudBuildId": { "type": "string", "description": "The Cloud Build ID if one was created as part of the version create. @OutputOnly" } }, "type": "object", "description": "Metadata for the given google.longrunning.Operation during a google.appengine.v1alpha.CreateVersionRequest." }, "OperationMetadataV1": { "description": "Metadata for the given google.longrunning.Operation.", "properties": { "user": { "description": "User who requested this operation.@OutputOnly", "type": "string" }, "createVersionMetadata": { "$ref": "CreateVersionMetadataV1" }, "endTime": { "type": "string", "format": "google-datetime", "description": "Time that this operation completed.@OutputOnly" }, "target": { "type": "string", "description": "Name of the resource that this operation is acting on. Example: apps/myapp/services/default.@OutputOnly" }, "insertTime": { "description": "Time that this operation was created.@OutputOnly", "format": "google-datetime", "type": "string" }, "ephemeralMessage": { "type": "string", "description": "Ephemeral message that may change every time the operation is polled. @OutputOnly" }, "method": { "type": "string", "description": "API method that initiated this operation. Example: google.appengine.v1.Versions.CreateVersion.@OutputOnly" }, "warning": { "type": "array", "items": { "type": "string" }, "description": "Durable messages that persist on every operation poll. @OutputOnly" } }, "type": "object", "id": "OperationMetadataV1" }, "CreateVersionMetadataV1Beta": { "id": "CreateVersionMetadataV1Beta", "properties": { "cloudBuildId": { "type": "string", "description": "The Cloud Build ID if one was created as part of the version create. @OutputOnly" } }, "description": "Metadata for the given google.longrunning.Operation during a google.appengine.v1beta.CreateVersionRequest.", "type": "object" }, "CreateVersionMetadataV1": { "description": "Metadata for the given google.longrunning.Operation during a google.appengine.v1.CreateVersionRequest.", "id": "CreateVersionMetadataV1", "properties": { "cloudBuildId": { "type": "string", "description": "The Cloud Build ID if one was created as part of the version create. @OutputOnly" } }, "type": "object" }, "AuthorizedCertificate": { "description": "An SSL certificate that a user has been authorized to administer. A user is authorized to administer any certificate that applies to one of their authorized domains.", "id": "AuthorizedCertificate", "type": "object", "properties": { "certificateRawData": { "description": "The SSL certificate serving the AuthorizedCertificate resource. This must be obtained independently from a certificate authority.", "$ref": "CertificateRawData" }, "domainNames": { "description": "Topmost applicable domains of this certificate. This certificate applies to these domains and their subdomains. Example: example.com.@OutputOnly", "type": "array", "items": { "type": "string" } }, "displayName": { "description": "The user-specified display name of the certificate. This is not guaranteed to be unique. Example: My Certificate.", "type": "string" }, "visibleDomainMappings": { "description": "The full paths to user visible Domain Mapping resources that have this certificate mapped. Example: apps/myapp/domainMappings/example.com.This may not represent the full list of mapped domain mappings if the user does not have VIEWER permissions on all of the applications that have this certificate mapped. See domain_mappings_count for a complete count.Only returned by GET or LIST requests when specifically requested by the view=FULL_CERTIFICATE option.@OutputOnly", "type": "array", "items": { "type": "string" } }, "expireTime": { "type": "string", "description": "The time when this certificate expires. To update the renewal time on this certificate, upload an SSL certificate with a different expiration time using AuthorizedCertificates.UpdateAuthorizedCertificate.@OutputOnly", "format": "google-datetime" }, "managedCertificate": { "$ref": "ManagedCertificate", "description": "Only applicable if this certificate is managed by App Engine. Managed certificates are tied to the lifecycle of a DomainMapping and cannot be updated or deleted via the AuthorizedCertificates API. If this certificate is manually administered by the user, this field will be empty.@OutputOnly" }, "name": { "type": "string", "description": "Full path to the AuthorizedCertificate resource in the API. Example: apps/myapp/authorizedCertificates/12345.@OutputOnly" }, "domainMappingsCount": { "format": "int32", "type": "integer", "description": "Aggregate count of the domain mappings with this certificate mapped. This count includes domain mappings on applications for which the user does not have VIEWER permissions.Only returned by GET or LIST requests when specifically requested by the view=FULL_CERTIFICATE option.@OutputOnly" }, "id": { "description": "Relative name of the certificate. This is a unique value autogenerated on AuthorizedCertificate resource creation. Example: 12345.@OutputOnly", "type": "string" } } }, "ListLocationsResponse": { "properties": { "locations": { "description": "A list of locations that matches the specified filter in the request.", "type": "array", "items": { "$ref": "Location" } }, "nextPageToken": { "type": "string", "description": "The standard List next-page token." } }, "description": "The response message for Locations.ListLocations.", "id": "ListLocationsResponse", "type": "object" } }, "servicePath": "", "kind": "discovery#restDescription", "ownerName": "Google", "version": "v1alpha", "resources": { "projects": { "resources": { "locations": { "resources": { "operations": { "methods": { "get": { "parameters": { "locationsId": { "type": "string", "required": true, "description": "Part of `name`. See documentation of `projectsId`.", "location": "path" }, "operationsId": { "location": "path", "description": "Part of `name`. See documentation of `projectsId`.", "type": "string", "required": true }, "projectsId": { "description": "Part of `name`. The name of the operation resource.", "location": "path", "type": "string", "required": true } }, "scopes": [ "https://www.googleapis.com/auth/appengine.admin", "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/cloud-platform.read-only" ], "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.", "httpMethod": "GET", "id": "appengine.projects.locations.operations.get", "path": "v1alpha/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}", "parameterOrder": [ "projectsId", "locationsId", "operationsId" ], "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}", "response": { "$ref": "Operation" } }, "list": { "httpMethod": "GET", "response": { "$ref": "ListOperationsResponse" }, "path": "v1alpha/projects/{projectsId}/locations/{locationsId}/operations", "scopes": [ "https://www.googleapis.com/auth/appengine.admin", "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/cloud-platform.read-only" ], "parameterOrder": [ "projectsId", "locationsId" ], "id": "appengine.projects.locations.operations.list", "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns UNIMPLEMENTED.NOTE: the name binding allows API services to override the binding to use different resource name schemes, such as users/*/operations. To override the binding, API services can add a binding such as \"/v1/{name=users/*}/operations\" to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.", "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/operations", "parameters": { "locationsId": { "type": "string", "required": true, "description": "Part of `name`. See documentation of `projectsId`.", "location": "path" }, "pageToken": { "description": "The standard list page token.", "type": "string", "location": "query" }, "pageSize": { "format": "int32", "type": "integer", "description": "The standard list page size.", "location": "query" }, "projectsId": { "description": "Part of `name`. The name of the operation's parent resource.", "type": "string", "location": "path", "required": true }, "filter": { "type": "string", "description": "The standard list filter.", "location": "query" } } } } } }, "methods": { "list": { "parameters": { "pageSize": { "location": "query", "description": "The maximum number of results to return. If not set, the service selects a default.", "type": "integer", "format": "int32" }, "projectsId": { "location": "path", "description": "Part of `name`. The resource that owns the locations collection, if applicable.", "required": true, "type": "string" }, "pageToken": { "type": "string", "description": "A page token received from the next_page_token field in the response. Send that page token to receive the subsequent page.", "location": "query" }, "filter": { "location": "query", "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like \"displayName=tokyo\", and is documented in more detail in AIP-160 (https://google.aip.dev/160).", "type": "string" } }, "parameterOrder": [ "projectsId" ], "httpMethod": "GET", "description": "Lists information about the supported locations for this service.", "id": "appengine.projects.locations.list", "response": { "$ref": "ListLocationsResponse" }, "path": "v1alpha/projects/{projectsId}/locations", "flatPath": "v1alpha/projects/{projectsId}/locations", "scopes": [ "https://www.googleapis.com/auth/appengine.admin", "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/cloud-platform.read-only" ] }, "get": { "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}", "scopes": [ "https://www.googleapis.com/auth/appengine.admin", "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/cloud-platform.read-only" ], "id": "appengine.projects.locations.get", "description": "Gets information about a location.", "response": { "$ref": "Location" }, "parameterOrder": [ "projectsId", "locationsId" ], "parameters": { "projectsId": { "required": true, "description": "Part of `name`. Resource name for the location.", "type": "string", "location": "path" }, "locationsId": { "type": "string", "description": "Part of `name`. See documentation of `projectsId`.", "location": "path", "required": true } }, "path": "v1alpha/projects/{projectsId}/locations/{locationsId}", "httpMethod": "GET" } } } } }, "apps": { "resources": { "authorizedDomains": { "methods": { "list": { "flatPath": "v1alpha/apps/{appsId}/authorizedDomains", "scopes": [ "https://www.googleapis.com/auth/appengine.admin", "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/cloud-platform.read-only" ], "path": "v1alpha/apps/{appsId}/authorizedDomains", "parameters": { "pageToken": { "description": "Continuation token for fetching the next page of results.", "location": "query", "type": "string" }, "pageSize": { "format": "int32", "description": "Maximum results to return per page.", "location": "query", "type": "integer" }, "appsId": { "description": "Part of `parent`. Name of the parent Application resource. Example: apps/myapp.", "type": "string", "location": "path", "required": true } }, "parameterOrder": [ "appsId" ], "id": "appengine.apps.authorizedDomains.list", "description": "Lists all domains the user is authorized to administer.", "httpMethod": "GET", "response": { "$ref": "ListAuthorizedDomainsResponse" } } } }, "domainMappings": { "methods": { "get": { "response": { "$ref": "DomainMapping" }, "httpMethod": "GET", "parameters": { "domainMappingsId": { "type": "string", "description": "Part of `name`. See documentation of `appsId`.", "location": "path", "required": true }, "appsId": { "description": "Part of `name`. Name of the resource requested. Example: apps/myapp/domainMappings/example.com.", "required": true, "location": "path", "type": "string" } }, "id": "appengine.apps.domainMappings.get", "path": "v1alpha/apps/{appsId}/domainMappings/{domainMappingsId}", "description": "Gets the specified domain mapping.", "scopes": [ "https://www.googleapis.com/auth/appengine.admin", "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/cloud-platform.read-only" ], "flatPath": "v1alpha/apps/{appsId}/domainMappings/{domainMappingsId}", "parameterOrder": [ "appsId", "domainMappingsId" ] }, "patch": { "response": { "$ref": "Operation" }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "id": "appengine.apps.domainMappings.patch", "flatPath": "v1alpha/apps/{appsId}/domainMappings/{domainMappingsId}", "parameterOrder": [ "appsId", "domainMappingsId" ], "httpMethod": "PATCH", "path": "v1alpha/apps/{appsId}/domainMappings/{domainMappingsId}", "description": "Updates the specified domain mapping. To map an SSL certificate to a domain mapping, update certificate_id to point to an AuthorizedCertificate resource. A user must be authorized to administer the associated domain in order to update a DomainMapping resource.", "parameters": { "updateMask": { "type": "string", "format": "google-fieldmask", "location": "query", "description": "Required. Standard field mask for the set of fields to be updated." }, "domainMappingsId": { "required": true, "description": "Part of `name`. See documentation of `appsId`.", "type": "string", "location": "path" }, "appsId": { "type": "string", "description": "Part of `name`. Name of the resource to update. Example: apps/myapp/domainMappings/example.com.", "location": "path", "required": true }, "noManagedCertificate": { "location": "query", "description": "Whether a managed certificate should be provided by App Engine. If true, a certificate ID must be manually set in the DomainMapping resource to configure SSL for this domain. If false, a managed certificate will be provisioned and a certificate ID will be automatically populated. Only applicable if ssl_settings.certificate_id is specified in the update mask.", "type": "boolean" } }, "request": { "$ref": "DomainMapping" } }, "list": { "parameters": { "pageSize": { "description": "Maximum results to return per page.", "type": "integer", "format": "int32", "location": "query" }, "appsId": { "type": "string", "description": "Part of `parent`. Name of the parent Application resource. Example: apps/myapp.", "location": "path", "required": true }, "pageToken": { "type": "string", "location": "query", "description": "Continuation token for fetching the next page of results." } }, "flatPath": "v1alpha/apps/{appsId}/domainMappings", "id": "appengine.apps.domainMappings.list", "parameterOrder": [ "appsId" ], "description": "Lists the domain mappings on an application.", "scopes": [ "https://www.googleapis.com/auth/appengine.admin", "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/cloud-platform.read-only" ], "httpMethod": "GET", "path": "v1alpha/apps/{appsId}/domainMappings", "response": { "$ref": "ListDomainMappingsResponse" } }, "create": { "response": { "$ref": "Operation" }, "path": "v1alpha/apps/{appsId}/domainMappings", "parameters": { "noManagedCertificate": { "description": "Whether a managed certificate should be provided by App Engine. If true, a certificate ID must be manaually set in the DomainMapping resource to configure SSL for this domain. If false, a managed certificate will be provisioned and a certificate ID will be automatically populated.", "location": "query", "type": "boolean" }, "appsId": { "location": "path", "type": "string", "required": true, "description": "Part of `parent`. Name of the parent Application resource. Example: apps/myapp." }, "overrideStrategy": { "enumDescriptions": [ "Strategy unspecified. Defaults to STRICT.", "Overrides not allowed. If a mapping already exists for the specified domain, the request will return an ALREADY_EXISTS (409).", "Overrides allowed. If a mapping already exists for the specified domain, the request will overwrite it. Note that this might stop another Google product from serving. For example, if the domain is mapped to another App Engine application, that app will no longer serve from that domain." ], "enum": [ "UNSPECIFIED_DOMAIN_OVERRIDE_STRATEGY", "STRICT", "OVERRIDE" ], "description": "Whether the domain creation should override any existing mappings for this domain. By default, overrides are rejected.", "type": "string", "location": "query" } }, "parameterOrder": [ "appsId" ], "flatPath": "v1alpha/apps/{appsId}/domainMappings", "request": { "$ref": "DomainMapping" }, "description": "Maps a domain to an application. A user must be authorized to administer a domain in order to map it to an application. For a list of available authorized domains, see AuthorizedDomains.ListAuthorizedDomains.", "httpMethod": "POST", "id": "appengine.apps.domainMappings.create", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ] }, "delete": { "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "parameterOrder": [ "appsId", "domainMappingsId" ], "flatPath": "v1alpha/apps/{appsId}/domainMappings/{domainMappingsId}", "description": "Deletes the specified domain mapping. A user must be authorized to administer the associated domain in order to delete a DomainMapping resource.", "path": "v1alpha/apps/{appsId}/domainMappings/{domainMappingsId}", "httpMethod": "DELETE", "response": { "$ref": "Operation" }, "id": "appengine.apps.domainMappings.delete", "parameters": { "appsId": { "type": "string", "location": "path", "description": "Part of `name`. Name of the resource to delete. Example: apps/myapp/domainMappings/example.com.", "required": true }, "domainMappingsId": { "type": "string", "required": true, "location": "path", "description": "Part of `name`. See documentation of `appsId`." } } } } }, "locations": { "methods": { "list": { "flatPath": "v1alpha/apps/{appsId}/locations", "parameters": { "pageToken": { "description": "A page token received from the next_page_token field in the response. Send that page token to receive the subsequent page.", "type": "string", "location": "query" }, "appsId": { "type": "string", "location": "path", "required": true, "description": "Part of `name`. The resource that owns the locations collection, if applicable." }, "pageSize": { "location": "query", "description": "The maximum number of results to return. If not set, the service selects a default.", "type": "integer", "format": "int32" }, "filter": { "type": "string", "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like \"displayName=tokyo\", and is documented in more detail in AIP-160 (https://google.aip.dev/160).", "location": "query" } }, "httpMethod": "GET", "response": { "$ref": "ListLocationsResponse" }, "description": "Lists information about the supported locations for this service.", "scopes": [ "https://www.googleapis.com/auth/appengine.admin", "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/cloud-platform.read-only" ], "path": "v1alpha/apps/{appsId}/locations", "id": "appengine.apps.locations.list", "parameterOrder": [ "appsId" ] }, "get": { "scopes": [ "https://www.googleapis.com/auth/appengine.admin", "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/cloud-platform.read-only" ], "flatPath": "v1alpha/apps/{appsId}/locations/{locationsId}", "parameters": { "locationsId": { "location": "path", "required": true, "type": "string", "description": "Part of `name`. See documentation of `appsId`." }, "appsId": { "type": "string", "required": true, "location": "path", "description": "Part of `name`. Resource name for the location." } }, "path": "v1alpha/apps/{appsId}/locations/{locationsId}", "httpMethod": "GET", "description": "Gets information about a location.", "response": { "$ref": "Location" }, "parameterOrder": [ "appsId", "locationsId" ], "id": "appengine.apps.locations.get" } } }, "authorizedCertificates": { "methods": { "patch": { "parameters": { "updateMask": { "location": "query", "description": "Standard field mask for the set of fields to be updated. Updates are only supported on the certificate_raw_data and display_name fields.", "format": "google-fieldmask", "type": "string" }, "authorizedCertificatesId": { "location": "path", "type": "string", "description": "Part of `name`. See documentation of `appsId`.", "required": true }, "appsId": { "location": "path", "type": "string", "required": true, "description": "Part of `name`. Name of the resource to update. Example: apps/myapp/authorizedCertificates/12345." } }, "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "description": "Updates the specified SSL certificate. To renew a certificate and maintain its existing domain mappings, update certificate_data with a new certificate. The new certificate must be applicable to the same domains as the original certificate. The certificate display_name may also be updated.", "request": { "$ref": "AuthorizedCertificate" }, "id": "appengine.apps.authorizedCertificates.patch", "path": "v1alpha/apps/{appsId}/authorizedCertificates/{authorizedCertificatesId}", "parameterOrder": [ "appsId", "authorizedCertificatesId" ], "httpMethod": "PATCH", "response": { "$ref": "AuthorizedCertificate" }, "flatPath": "v1alpha/apps/{appsId}/authorizedCertificates/{authorizedCertificatesId}" }, "get": { "scopes": [ "https://www.googleapis.com/auth/appengine.admin", "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/cloud-platform.read-only" ], "response": { "$ref": "AuthorizedCertificate" }, "parameterOrder": [ "appsId", "authorizedCertificatesId" ], "description": "Gets the specified SSL certificate.", "flatPath": "v1alpha/apps/{appsId}/authorizedCertificates/{authorizedCertificatesId}", "path": "v1alpha/apps/{appsId}/authorizedCertificates/{authorizedCertificatesId}", "httpMethod": "GET", "id": "appengine.apps.authorizedCertificates.get", "parameters": { "view": { "enumDescriptions": [ "Basic certificate information, including applicable domains and expiration date.", "The information from BASIC_CERTIFICATE, plus detailed information on the domain mappings that have this certificate mapped." ], "description": "Controls the set of fields returned in the GET response.", "location": "query", "type": "string", "enum": [ "BASIC_CERTIFICATE", "FULL_CERTIFICATE" ] }, "appsId": { "type": "string", "required": true, "description": "Part of `name`. Name of the resource requested. Example: apps/myapp/authorizedCertificates/12345.", "location": "path" }, "authorizedCertificatesId": { "location": "path", "description": "Part of `name`. See documentation of `appsId`.", "type": "string", "required": true } } }, "list": { "response": { "$ref": "ListAuthorizedCertificatesResponse" }, "httpMethod": "GET", "description": "Lists all SSL certificates the user is authorized to administer.", "parameters": { "appsId": { "location": "path", "type": "string", "required": true, "description": "Part of `parent`. Name of the parent Application resource. Example: apps/myapp." }, "pageToken": { "type": "string", "description": "Continuation token for fetching the next page of results.", "location": "query" }, "view": { "enum": [ "BASIC_CERTIFICATE", "FULL_CERTIFICATE" ], "location": "query", "enumDescriptions": [ "Basic certificate information, including applicable domains and expiration date.", "The information from BASIC_CERTIFICATE, plus detailed information on the domain mappings that have this certificate mapped." ], "type": "string", "description": "Controls the set of fields returned in the LIST response." }, "pageSize": { "description": "Maximum results to return per page.", "location": "query", "format": "int32", "type": "integer" } }, "scopes": [ "https://www.googleapis.com/auth/appengine.admin", "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/cloud-platform.read-only" ], "parameterOrder": [ "appsId" ], "flatPath": "v1alpha/apps/{appsId}/authorizedCertificates", "path": "v1alpha/apps/{appsId}/authorizedCertificates", "id": "appengine.apps.authorizedCertificates.list" }, "create": { "parameterOrder": [ "appsId" ], "description": "Uploads the specified SSL certificate.", "path": "v1alpha/apps/{appsId}/authorizedCertificates", "flatPath": "v1alpha/apps/{appsId}/authorizedCertificates", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "id": "appengine.apps.authorizedCertificates.create", "request": { "$ref": "AuthorizedCertificate" }, "response": { "$ref": "AuthorizedCertificate" }, "httpMethod": "POST", "parameters": { "appsId": { "type": "string", "required": true, "description": "Part of `parent`. Name of the parent Application resource. Example: apps/myapp.", "location": "path" } } }, "delete": { "description": "Deletes the specified SSL certificate.", "scopes": [ "https://www.googleapis.com/auth/cloud-platform" ], "id": "appengine.apps.authorizedCertificates.delete", "httpMethod": "DELETE", "parameters": { "authorizedCertificatesId": { "description": "Part of `name`. See documentation of `appsId`.", "location": "path", "required": true, "type": "string" }, "appsId": { "required": true, "type": "string", "location": "path", "description": "Part of `name`. Name of the resource to delete. Example: apps/myapp/authorizedCertificates/12345." } }, "flatPath": "v1alpha/apps/{appsId}/authorizedCertificates/{authorizedCertificatesId}", "path": "v1alpha/apps/{appsId}/authorizedCertificates/{authorizedCertificatesId}", "response": { "$ref": "Empty" }, "parameterOrder": [ "appsId", "authorizedCertificatesId" ] } } }, "operations": { "methods": { "get": { "flatPath": "v1alpha/apps/{appsId}/operations/{operationsId}", "httpMethod": "GET", "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.", "response": { "$ref": "Operation" }, "parameters": { "operationsId": { "description": "Part of `name`. See documentation of `appsId`.", "location": "path", "type": "string", "required": true }, "appsId": { "location": "path", "required": true, "description": "Part of `name`. The name of the operation resource.", "type": "string" } }, "path": "v1alpha/apps/{appsId}/operations/{operationsId}", "id": "appengine.apps.operations.get", "parameterOrder": [ "appsId", "operationsId" ], "scopes": [ "https://www.googleapis.com/auth/appengine.admin", "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/cloud-platform.read-only" ] }, "list": { "response": { "$ref": "ListOperationsResponse" }, "parameters": { "pageToken": { "location": "query", "type": "string", "description": "The standard list page token." }, "pageSize": { "location": "query", "type": "integer", "format": "int32", "description": "The standard list page size." }, "filter": { "type": "string", "description": "The standard list filter.", "location": "query" }, "appsId": { "location": "path", "description": "Part of `name`. The name of the operation's parent resource.", "required": true, "type": "string" } }, "scopes": [ "https://www.googleapis.com/auth/appengine.admin", "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/cloud-platform.read-only" ], "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns UNIMPLEMENTED.NOTE: the name binding allows API services to override the binding to use different resource name schemes, such as users/*/operations. To override the binding, API services can add a binding such as \"/v1/{name=users/*}/operations\" to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.", "flatPath": "v1alpha/apps/{appsId}/operations", "httpMethod": "GET", "id": "appengine.apps.operations.list", "parameterOrder": [ "appsId" ], "path": "v1alpha/apps/{appsId}/operations" } } } } } }, "protocol": "rest", "rootUrl": "https://appengine.googleapis.com/", "auth": { "oauth2": { "scopes": { "https://www.googleapis.com/auth/cloud-platform": { "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account." }, "https://www.googleapis.com/auth/appengine.admin": { "description": "View and manage your applications deployed on Google App Engine" }, "https://www.googleapis.com/auth/cloud-platform.read-only": { "description": "View your data across Google Cloud services and see the email address of your Google Account" } } } }, "batchPath": "batch", "revision": "20220625", "name": "appengine", "title": "App Engine Admin API", "icons": { "x16": "http://www.google.com/images/icons/product/search-16.gif", "x32": "http://www.google.com/images/icons/product/search-32.gif" } }
]===]))
